{"ast":null,"code":"//This file when ran opens up a page in the browser where user can remotely control Misty\nimport './index.css'; // import { withWaveHeader, appendBuffer } from './wave-heard';\n//imports the socket.io client\n\nconst io = require(\"socket.io-client\"),\n      //Creates a client that connects ot server at the specified address\nclient = io.connect(\"http://192.168.0.14:5507\"); // var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n// var count = 0;\n// var startTime;\n//The following buttons change the color of Misty when clicked on in the browser\n\n\nvar greenButton = document.getElementById(\"greenButton\");\nvar blueButton = document.getElementById(\"blueButton\");\nvar redButton = document.getElementById(\"redButton\"); //left arm motion\n\nvar raiseLeftArm = document.getElementById(\"raiseLeftArm\");\nvar pointLeftArm = document.getElementById(\"pointLeftArm\");\nvar lowerLeftArm = document.getElementById(\"lowerLeftArm\"); //right arm motion\n\nvar raiseRightArm = document.getElementById(\"raiseRightArm\");\nvar pointRightArm = document.getElementById(\"pointRightArm\");\nvar lowerRightArm = document.getElementById(\"lowerRightArm\"); //head motion\n\nvar lookUp = document.getElementById(\"lookUp\");\nvar lookLeft = document.getElementById(\"lookLeft\");\nvar lookRight = document.getElementById(\"lookRight\");\nvar lookDown = document.getElementById(\"lookDown\");\nvar currentPitch = 0;\nvar currentYaw = 0; //Checks if pitch value is in between bounds\n\nfunction checkPitch() {\n  var bool;\n\n  if (currentPitch > 26) {\n    bool = false;\n    console.log(\"Maximum pitch reached\");\n  } else if (currentPitch < -40) {\n    bool = false;\n    console.log(\"Minimum pitch reached.\");\n  } else {\n    bool = true;\n  }\n\n  return bool;\n} //Checks if yaw value is in between bounds\n\n\nfunction checkYaw() {\n  var bool;\n\n  if (currentYaw > 70) {\n    bool = false;\n    console.log(\"Maximum yaw reached\");\n  } else if (currentYaw < -70) {\n    bool = false;\n    console.log(\"Minimum yaw reached.\");\n  } else {\n    bool = true;\n  }\n\n  return bool;\n} //Head Movements\n//Up arrow\n// lookUp.onmousedown = function(){\n//   currentPitch = currentPitch - 5;\n//   if(checkPitch()){\n//     client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\n//   }\n//   else{\n//     currentPitch = currentPitch + 5;\n//   }\n// }\n\n\nvar timeout = null;\nlookUp.addEventListener(\"mousedown\", mouseDownHandler);\nlookUp.addEventListener(\"mouseup\", mouseUpHandler);\nlookUp.onclick = lookUpFunc();\nlookDown.addEventListener(\"mousedown\", mouseDownHandler1);\nlookDown.addEventListener(\"mouseup\", mouseUpHandler);\nlookDown.onclick = lookDownFunc();\nlookLeft.addEventListener(\"mousedown\", mouseDownHandler2);\nlookLeft.addEventListener(\"mouseup\", mouseUpHandler);\nlookLeft = lookLeftFunc();\nlookRight.addEventListener(\"mousedown\", mouseDownHandler3);\nlookRight.addEventListener(\"mouseup\", mouseUpHandler);\nlookRight.onclick = lookRightFunc();\n\nfunction mouseUpHandler(event) {\n  clearInterval(timeout);\n}\n\nfunction mouseDownHandler(event) {\n  lookUpFunc();\n  timeout = setInterval(lookUpFunc, 100);\n}\n\nfunction mouseDownHandler1(event) {\n  lookDownFunc();\n  timeout = setInterval(lookDownFunc, 100);\n}\n\nfunction mouseDownHandler2(event) {\n  lookLeftFunc();\n  timeout = setInterval(lookLeftFunc, 100);\n}\n\nfunction mouseDownHandler3(event) {\n  lookRightFunc();\n  timeout = setInterval(lookRightFunc, 100);\n}\n\nfunction lookUpFunc() {\n  currentPitch = currentPitch - 1;\n\n  if (checkPitch()) {\n    client.emit(\"moveHead\", {\n      \"Pitch\": currentPitch,\n      \"Roll\": 0,\n      \"Yaw\": currentYaw,\n      \"Velocity\": 100\n    });\n  } else {\n    currentPitch = currentPitch + 1;\n  }\n}\n\nfunction lookDownFunc() {\n  currentPitch = currentPitch + 5;\n\n  if (checkPitch()) {\n    client.emit(\"moveHead\", {\n      \"Pitch\": currentPitch,\n      \"Roll\": 0,\n      \"Yaw\": currentYaw,\n      \"Velocity\": 100\n    });\n  } else {\n    currentPitch = currentPitch - 5;\n  }\n}\n\nfunction lookRightFunc() {\n  currentYaw = currentYaw - 5;\n\n  if (checkYaw()) {\n    client.emit(\"moveHead\", {\n      \"Pitch\": currentPitch,\n      \"Roll\": 0,\n      \"Yaw\": currentYaw,\n      \"Velocity\": 100\n    });\n  } else {\n    currentYaw = currentYaw + 5;\n  }\n}\n\nfunction lookLeftFunc() {\n  currentYaw = currentYaw + 5;\n\n  if (checkYaw()) {\n    client.emit(\"moveHead\", {\n      \"Pitch\": currentPitch,\n      \"Roll\": 0,\n      \"Yaw\": currentYaw,\n      \"Velocity\": 100\n    });\n  } else {\n    currentYaw = currentYaw - 5;\n  }\n} //Change color to green\n\n\ngreenButton.onclick = function () {\n  client.emit(\"color\", {\n    \"red\": 0,\n    \"green\": 255,\n    \"blue\": 0\n  });\n}; //Change color to blue\n\n\nblueButton.onclick = function () {\n  client.emit(\"color\", {\n    \"red\": 0,\n    \"green\": 0,\n    \"blue\": 255\n  });\n}; //Change color to red\n\n\nredButton.onclick = function () {\n  client.emit(\"color\", {\n    \"red\": 255,\n    \"green\": 0,\n    \"blue\": 0\n  });\n};\n\nraiseLeftArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"left\",\n    \"Position\": -90,\n    \"Velocity\": 100\n  });\n};\n\npointLeftArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"left\",\n    \"Position\": 0,\n    \"Velocity\": 100\n  });\n};\n\nlowerLeftArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"left\",\n    \"Position\": 90,\n    \"Velocity\": 100\n  });\n};\n\nraiseRightArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"right\",\n    \"Position\": -90,\n    \"Velocity\": 100\n  });\n};\n\npointRightArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"right\",\n    \"Position\": 0,\n    \"Velocity\": 100\n  });\n};\n\nlowerRightArm.onclick = function () {\n  client.emit(\"arm\", {\n    \"Arm\": \"right\",\n    \"Position\": 90,\n    \"Velocity\": 100\n  });\n};\n\nvar streamVideo = document.getElementById(\"streamVideo\");\nvar buf;\nvar context = new AudioContext();\n\nfunction playByteArray(byteArray) {\n  var arrayBuffer = new ArrayBuffer(byteArray.length);\n  var bufferView = new Uint8Array(arrayBuffer);\n\n  for (var i = 0; i < byteArray.length; i++) {\n    bufferView[i] = byteArray[i];\n  }\n\n  context.decodeAudioData(arrayBuffer, function (buffer) {\n    buf = buffer;\n    play();\n  });\n}\n\nfunction play() {\n  var source = context.createBufferSource();\n  source.buffer = buf;\n  source.connect(context.destination);\n  source.start(0);\n}\n\nstreamVideo.onclick = function () {\n  if (document.getElementById(\"streamVideo\").innerText === \"Start Video Stream\") {\n    document.getElementById(\"streamVideo\").innerText = \"Stop Video Stream\";\n    client.emit(\"requestVideo\", {\n      \"Bool\": \"True\"\n    }); // client.emit(\"requestAudio\");\n\n    client.on(\"getVideo\", function streamvid(data) {\n      // var img = new Image();\n      // img.src = data;\n      var arrayBufferView = new Uint8Array(data);\n      var blob = new Blob([arrayBufferView], {\n        type: \"image/jpeg\"\n      });\n      var urlCreator = window.URL || window.webkitURL;\n      var imageUrl = urlCreator.createObjectURL(blob);\n      document.getElementById(\"videoSpot\").setAttribute(\"src\", imageUrl);\n    });\n    client.on(\"getAudio\", function getAudio(data) {\n      // var array = Array.from(data);\n      // var arrayBufferView2 = new Uint8Array(array);\n      // var blob2 = new Blob( [arrayBufferView2], {type: \"audio/mp3\" })\n      // document.getElementById(\"audioSpot\").setAttribute(\"src\",window.URL.createObjectURL(blob2));\n      // console.log(\"audiooooo\");\n      var audioArray = new Uint8Array(data.buffer); // console.log(String.fromCharCode.apply(null, new Uint8Array(data)))\n      // console.log(typeof audioArray)\n\n      playByteArray(audioArray.buffer); // console.log(\"Pleaaseeee Playyyyy\");\n      // console.log(data)\n      // var data1 = data.split('base64,')[1];\n      // console.log(typeof(data1));\n      // var decodedData = atou(data1);\n      // var snd = Sound(\"data:audio/wav;base64,\", + decodedData);\n      // snd.play()\n    });\n  } else {\n    document.getElementById(\"streamVideo\").innerText = \"Start Video Stream\";\n    client.emit(\"requestVideo\", {\n      \"Bool\": \"False\"\n    });\n  }\n};\n\nfunction atou(b64) {\n  return decodeURIComponent(escape(atob(b64)));\n}\n\nvar Sound = function () {\n  var df = document.createDocumentFragment();\n  return function Sound(src) {\n    var snd = new Audio(src);\n    df.appendChild(snd); // keep in fragment until finished playing\n\n    snd.addEventListener('ended', function () {\n      df.removeChild(snd);\n    });\n    snd.play();\n    return snd;\n  };\n}(); // https://stackoverflow.com/questions/28440262/web-audio-api-for-live-streaming\n\n\nclass MasterOutput {\n  constructor(computeSamplesCallback) {\n    this.computeSamplesCallback = computeSamplesCallback.bind(this);\n    this.onComputeTimeoutBound = this.onComputeTimeout.bind(this);\n    this.audioContext = new AudioContext();\n    this.sampleRate = this.audioContext.sampleRate;\n    this.channelCount = 2;\n    this.totalBufferDuration = 5;\n    this.computeDuration = 1;\n    this.bufferDelayDuration = 0.1;\n    this.totalSamplesCount = this.totalBufferDuration * this.sampleRate;\n    this.computeDurationMS = this.computeDuration * 1000.0;\n    this.computeSamplesCount = this.computeDuration * this.sampleRate;\n    this.buffersToKeep = Math.ceil((this.totalBufferDuration + 2.0 * this.bufferDelayDuration) / this.computeDuration);\n    this.audioBufferSources = [];\n    this.audioBufferDatas = [];\n    this.expiredAudioBuffers = [];\n    this.computeSamplesTimeout = null;\n  }\n\n  startPlaying() {\n    if (this.audioBufferSources.length > 0) {\n      this.stopPlaying();\n    } //Start computing indefinitely, from the beginning.\n\n\n    let audioContextTimestamp = this.audioContext.getOutputTimestamp();\n    this.audioContextStartOffset = audioContextTimestamp.contextTime;\n    this.lastTimeoutTime = audioContextTimestamp.performanceTime;\n\n    for (this.currentBufferTime = 0.0; this.currentBufferTime < this.totalBufferDuration; this.currentBufferTime += this.computeDuration) {\n      this.bufferNext();\n    }\n\n    this.onComputeTimeoutBound();\n  }\n\n  onComputeTimeout() {\n    this.bufferNext();\n    this.currentBufferTime += this.computeDuration; //Readjust the next timeout to have a consistent interval, regardless of computation time.\n\n    let nextTimeoutDuration = 2.0 * this.computeDurationMS - (performance.now() - this.lastTimeoutTime) - 1;\n    this.lastTimeoutTime = performance.now();\n    this.computeSamplesTimeout = setTimeout(this.onComputeTimeoutBound, nextTimeoutDuration);\n  }\n\n  bufferNext() {\n    this.currentSamplesOffset = this.currentBufferTime * this.sampleRate; //Create an audio buffer, which will contain the audio data.\n    //Create/Reuse an audio buffer, which will contain the audio data.\n\n    if (this.expiredAudioBuffers.length > 0) {\n      //console.log('Reuse');\n      this.audioBuffer = this.expiredAudioBuffers.shift();\n    } else {\n      //console.log('Create');\n      this.audioBuffer = this.audioContext.createBuffer(this.channelCount, this.computeSamplesCount, this.sampleRate);\n    } //Get the audio channels, which are float arrays representing each individual channel for the buffer.\n\n\n    this.channels = [];\n\n    for (let channelIndex = 0; channelIndex < this.channelCount; ++channelIndex) {\n      this.channels.push(this.audioBuffer.getChannelData(channelIndex));\n    } //Compute the samples.\n\n\n    this.computeSamplesCallback(); //Creates a lightweight audio buffer source which can be used to play the audio data. Note: This can only be\n    //started once...\n\n    let audioBufferSource = this.audioContext.createBufferSource(); //Set the audio buffer.\n\n    audioBufferSource.buffer = this.audioBuffer; //Connect it to the output.\n\n    audioBufferSource.connect(this.audioContext.destination); //Start playing when the audio buffer is due.\n\n    audioBufferSource.start(this.audioContextStartOffset + this.currentBufferTime + this.bufferDelayDuration);\n\n    while (this.audioBufferDatas.length >= this.buffersToKeep) {\n      this.expiredAudioBuffers.push(this.audioBufferDatas.shift().buffer);\n    }\n\n    this.audioBufferDatas.push({\n      source: audioBufferSource,\n      buffer: this.audioBuffer\n    });\n  }\n\n  stopPlaying() {\n    if (this.audioBufferDatas.length > 0) {\n      for (let audioBufferData of this.audioBufferDatas) {\n        audioBufferData.source.stop();\n        this.expiredAudioBuffers.push(audioBufferData.buffer);\n      }\n\n      this.audioBufferDatas = [];\n      clearInterval(this.computeSamplesTimeout);\n      this.computeSamplesTimeout = null;\n    }\n  }\n\n}\n\nvar streamAudio = document.getElementById(\"streamAudio\");\n\nstreamAudio.onclick = function () {\n  if (document.getElementById(\"streamAudio\").innerText === \"Start Audio Stream\") {\n    document.getElementById(\"streamAudio\").innerText = \"Stop Audio Stream\";\n    client.emit(\"requestAudio\", {\n      \"Bool\": \"True\"\n    });\n    let masterOutput = new MasterOutput(function () {\n      //Populate the audio buffer with audio data.\n      this.currentSeconds = 0;\n      this.frequency = 220.0;\n      this.sampleIndex = 0;\n    });\n    masterOutput.startPlaying();\n    client.on(\"getAudio\", function streamaud(data) {\n      while (masterOutput.sampleIndex <= masterOutput.computeSamplesCount) {\n        console.log(typeof data);\n        console.log(String.fromCharCode.apply(null, new Uint8Array(data)));\n        masterOutput.sampleIndex++;\n        masterOutput.currentSeconds = (masterOutput.sampleIndex + masterOutput.currentSamplesOffset) / masterOutput.sampleRate;\n        masterOutput.channels[0][masterOutput.sampleIndex] = new Uint8Array(data); //Copy the right channel from the left channel.\n\n        masterOutput.channels[1][masterOutput.sampleIndex] = masterOutput.channels[0][masterOutput.sampleIndex];\n      }\n    });\n  } else {\n    document.getElementById(\"streamAudio\").innerText = \"Start Audio Stream\";\n    client.emit(\"requestAudio\", {\n      \"Bool\": \"False\"\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/joshc/repos/mistyremotecontrol/JSclient/src/index.js"],"names":["io","require","client","connect","greenButton","document","getElementById","blueButton","redButton","raiseLeftArm","pointLeftArm","lowerLeftArm","raiseRightArm","pointRightArm","lowerRightArm","lookUp","lookLeft","lookRight","lookDown","currentPitch","currentYaw","checkPitch","bool","console","log","checkYaw","timeout","addEventListener","mouseDownHandler","mouseUpHandler","onclick","lookUpFunc","mouseDownHandler1","lookDownFunc","mouseDownHandler2","lookLeftFunc","mouseDownHandler3","lookRightFunc","event","clearInterval","setInterval","emit","streamVideo","buf","context","AudioContext","playByteArray","byteArray","arrayBuffer","ArrayBuffer","length","bufferView","Uint8Array","i","decodeAudioData","buffer","play","source","createBufferSource","destination","start","innerText","on","streamvid","data","arrayBufferView","blob","Blob","type","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","setAttribute","getAudio","audioArray","atou","b64","decodeURIComponent","escape","atob","Sound","df","createDocumentFragment","src","snd","Audio","appendChild","removeChild","MasterOutput","constructor","computeSamplesCallback","bind","onComputeTimeoutBound","onComputeTimeout","audioContext","sampleRate","channelCount","totalBufferDuration","computeDuration","bufferDelayDuration","totalSamplesCount","computeDurationMS","computeSamplesCount","buffersToKeep","Math","ceil","audioBufferSources","audioBufferDatas","expiredAudioBuffers","computeSamplesTimeout","startPlaying","stopPlaying","audioContextTimestamp","getOutputTimestamp","audioContextStartOffset","contextTime","lastTimeoutTime","performanceTime","currentBufferTime","bufferNext","nextTimeoutDuration","performance","now","setTimeout","currentSamplesOffset","audioBuffer","shift","createBuffer","channels","channelIndex","push","getChannelData","audioBufferSource","audioBufferData","stop","streamAudio","masterOutput","currentSeconds","frequency","sampleIndex","streamaud","String","fromCharCode","apply"],"mappings":"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","sourcesContent":["//This file when ran opens up a page in the browser where user can remotely control Misty\r\nimport './index.css'\r\n// import { withWaveHeader, appendBuffer } from './wave-heard';\r\n//imports the socket.io client\r\nconst io = require(\"socket.io-client\"),\r\n//Creates a client that connects ot server at the specified address\r\nclient = io.connect(\"http://192.168.0.14:5507\");\r\n\r\n// var audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n// var count = 0;\r\n// var startTime;\r\n\r\n//The following buttons change the color of Misty when clicked on in the browser\r\n\r\nvar greenButton = document.getElementById(\"greenButton\");\r\nvar blueButton = document.getElementById(\"blueButton\");\r\nvar redButton = document.getElementById(\"redButton\");\r\n//left arm motion\r\nvar raiseLeftArm = document.getElementById(\"raiseLeftArm\");\r\nvar pointLeftArm = document.getElementById(\"pointLeftArm\");\r\nvar lowerLeftArm = document.getElementById(\"lowerLeftArm\");\r\n//right arm motion\r\nvar raiseRightArm = document.getElementById(\"raiseRightArm\");\r\nvar pointRightArm = document.getElementById(\"pointRightArm\");\r\nvar lowerRightArm = document.getElementById(\"lowerRightArm\");\r\n\r\n//head motion\r\nvar lookUp = document.getElementById(\"lookUp\");\r\nvar lookLeft = document.getElementById(\"lookLeft\");\r\nvar lookRight = document.getElementById(\"lookRight\");\r\nvar lookDown = document.getElementById(\"lookDown\");\r\nvar currentPitch = 0;\r\nvar currentYaw = 0\r\n\r\n//Checks if pitch value is in between bounds\r\nfunction checkPitch(){\r\n  var bool;\r\n  if(currentPitch > 26){\r\n    bool = false;\r\n    console.log(\"Maximum pitch reached\")\r\n    \r\n  }\r\n  else if(currentPitch < -40){\r\n    bool = false\r\n    console.log(\"Minimum pitch reached.\")\r\n  }\r\n  else{\r\n    bool = true;\r\n  }\r\n  return bool;\r\n}\r\n\r\n//Checks if yaw value is in between bounds\r\nfunction checkYaw(){\r\n  var bool;\r\n  if(currentYaw > 70){\r\n    bool = false;\r\n    console.log(\"Maximum yaw reached\")\r\n    \r\n  }\r\n  else if(currentYaw < -70){\r\n    bool = false\r\n    console.log(\"Minimum yaw reached.\")\r\n  }\r\n  else{\r\n    bool = true;\r\n  }\r\n  return bool;\r\n}\r\n\r\n//Head Movements\r\n//Up arrow\r\n// lookUp.onmousedown = function(){\r\n//   currentPitch = currentPitch - 5;\r\n//   if(checkPitch()){\r\n//     client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\r\n//   }\r\n//   else{\r\n//     currentPitch = currentPitch + 5;\r\n//   }\r\n// }\r\nvar timeout = null;\r\nlookUp.addEventListener(\"mousedown\", mouseDownHandler);\r\nlookUp.addEventListener(\"mouseup\", mouseUpHandler);\r\nlookUp.onclick = lookUpFunc();\r\nlookDown.addEventListener(\"mousedown\", mouseDownHandler1);\r\nlookDown.addEventListener(\"mouseup\", mouseUpHandler);\r\nlookDown.onclick = lookDownFunc();\r\nlookLeft.addEventListener(\"mousedown\", mouseDownHandler2);\r\nlookLeft.addEventListener(\"mouseup\", mouseUpHandler);\r\nlookLeft = lookLeftFunc();\r\nlookRight.addEventListener(\"mousedown\", mouseDownHandler3);\r\nlookRight.addEventListener(\"mouseup\", mouseUpHandler);\r\nlookRight.onclick = lookRightFunc();\r\n\r\nfunction mouseUpHandler(event) {\r\n  clearInterval(timeout);\r\n}\r\n\r\nfunction mouseDownHandler(event) {\r\n  lookUpFunc();\r\n  timeout = setInterval(lookUpFunc, 100);\r\n  \r\n}\r\n\r\nfunction mouseDownHandler1(event) {\r\n  lookDownFunc();\r\n  timeout = setInterval(lookDownFunc, 100);\r\n  \r\n}function mouseDownHandler2(event) {\r\n  lookLeftFunc();\r\n  timeout = setInterval(lookLeftFunc, 100);\r\n  \r\n}function mouseDownHandler3(event) {\r\n  lookRightFunc();\r\n  timeout = setInterval(lookRightFunc, 100);\r\n  \r\n}\r\n\r\nfunction lookUpFunc() {\r\n  currentPitch = currentPitch - 1;\r\n  if(checkPitch()){\r\n    client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\r\n  }\r\n  else{\r\n    currentPitch = currentPitch + 1;\r\n  }\r\n}\r\n\r\nfunction lookDownFunc() {\r\n  currentPitch = currentPitch + 5;\r\n  if(checkPitch()){\r\n    client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\r\n  }\r\n  else{\r\n    currentPitch = currentPitch - 5;\r\n  }\r\n}\r\n\r\nfunction lookRightFunc() {\r\n  currentYaw = currentYaw - 5;\r\n  if(checkYaw()){\r\n    client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\r\n  }\r\n  else{\r\n    currentYaw = currentYaw + 5;\r\n  }\r\n}\r\n\r\nfunction lookLeftFunc() {\r\n  currentYaw = currentYaw + 5;\r\n  if(checkYaw()){\r\n    client.emit(\"moveHead\", {\"Pitch\": currentPitch, \"Roll\": 0, \"Yaw\": currentYaw, \"Velocity\": 100});\r\n  }\r\n  else{\r\n    currentYaw = currentYaw - 5;\r\n  }\r\n}\r\n\r\n\r\n//Change color to green\r\ngreenButton.onclick = function(){\r\n  client.emit(\"color\",{\"red\": 0,\"green\": 255,\"blue\": 0});\r\n}\r\n//Change color to blue\r\nblueButton.onclick = function(){\r\n  client.emit(\"color\",{\"red\": 0,\"green\": 0,\"blue\": 255});\r\n}\r\n//Change color to red\r\nredButton.onclick = function(){\r\n  client.emit(\"color\",{\"red\": 255,\"green\": 0,\"blue\": 0});\r\n}\r\n\r\n\r\n\r\nraiseLeftArm.onclick = function(){\r\n  client.emit(\"arm\",{\"Arm\": \"left\" , \"Position\": -90, \"Velocity\": 100});\r\n}\r\npointLeftArm.onclick =function(){\r\n  client.emit(\"arm\", {\"Arm\":\"left\", \"Position\": 0, \"Velocity\": 100});\r\n}\r\nlowerLeftArm.onclick =function(){\r\n  client.emit(\"arm\", {\"Arm\":\"left\", \"Position\": 90, \"Velocity\": 100});\r\n}\r\n\r\nraiseRightArm.onclick = function(){\r\n  client.emit(\"arm\",{\"Arm\": \"right\" , \"Position\": -90, \"Velocity\": 100});\r\n}\r\npointRightArm.onclick =function(){\r\n  client.emit(\"arm\", {\"Arm\":\"right\", \"Position\": 0, \"Velocity\": 100});\r\n}\r\nlowerRightArm.onclick =function(){\r\n  client.emit(\"arm\", {\"Arm\":\"right\", \"Position\": 90, \"Velocity\": 100});\r\n}\r\n\r\n\r\nvar streamVideo = document.getElementById(\"streamVideo\");\r\n\r\nvar buf;\r\nvar context = new AudioContext();\r\n\r\nfunction playByteArray(byteArray){\r\n  \r\n  var arrayBuffer = new ArrayBuffer(byteArray.length);\r\n  var bufferView = new Uint8Array(arrayBuffer);\r\n  for(var i = 0; i < byteArray.length; i++){\r\n\r\n    bufferView[i] = byteArray[i];\r\n  }\r\n  context.decodeAudioData(arrayBuffer, function(buffer){\r\n    buf = buffer;\r\n    play();\r\n  });\r\n}\r\n\r\nfunction play(){\r\n  var source = context.createBufferSource();\r\n  source.buffer = buf;\r\n  source.connect(context.destination);\r\n\r\n  source.start(0);\r\n}\r\n\r\nstreamVideo.onclick = function(){\r\n  if(document.getElementById(\"streamVideo\").innerText === \"Start Video Stream\"){\r\n    document.getElementById(\"streamVideo\").innerText = \"Stop Video Stream\";\r\n    client.emit(\"requestVideo\", {\"Bool\": \"True\"});\r\n    // client.emit(\"requestAudio\");\r\n  \r\n    client.on(\"getVideo\", function streamvid(data){   \r\n      // var img = new Image();\r\n      // img.src = data;\r\n      \r\n      var arrayBufferView = new Uint8Array( data );\r\n      var blob = new Blob( [ arrayBufferView ], { type: \"image/jpeg\" } );\r\n      var urlCreator = window.URL || window.webkitURL;\r\n      var imageUrl = urlCreator.createObjectURL( blob );\r\n    \r\n\r\n      document.getElementById(\"videoSpot\").setAttribute(\"src\", imageUrl);\r\n     \r\n    })\r\n\r\n    client.on(\"getAudio\", function getAudio(data){\r\n      // var array = Array.from(data);\r\n      // var arrayBufferView2 = new Uint8Array(array);\r\n      // var blob2 = new Blob( [arrayBufferView2], {type: \"audio/mp3\" })\r\n\r\n\r\n      // document.getElementById(\"audioSpot\").setAttribute(\"src\",window.URL.createObjectURL(blob2));\r\n      // console.log(\"audiooooo\");\r\n      var audioArray = new Uint8Array(data.buffer);\r\n      // console.log(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n      // console.log(typeof audioArray)\r\n      playByteArray(audioArray.buffer);\r\n      // console.log(\"Pleaaseeee Playyyyy\");\r\n      // console.log(data)\r\n\r\n      // var data1 = data.split('base64,')[1];\r\n      // console.log(typeof(data1));\r\n      // var decodedData = atou(data1);\r\n      // var snd = Sound(\"data:audio/wav;base64,\", + decodedData);\r\n      // snd.play()\r\n    })\r\n  }\r\n  else{\r\n    document.getElementById(\"streamVideo\").innerText = \"Start Video Stream\"\r\n    client.emit(\"requestVideo\", {\"Bool\": \"False\"})\r\n  }\r\n}\r\nfunction atou(b64) {\r\n  return decodeURIComponent(escape(atob(b64)));\r\n}\r\nvar Sound = (function () {\r\n    var df = document.createDocumentFragment();\r\n    return function Sound(src) {\r\n        var snd = new Audio(src);\r\n        df.appendChild(snd); // keep in fragment until finished playing\r\n        snd.addEventListener('ended', function () {df.removeChild(snd);});\r\n        snd.play();\r\n        return snd;\r\n    }\r\n}());\r\n// https://stackoverflow.com/questions/28440262/web-audio-api-for-live-streaming\r\nclass MasterOutput {\r\n  constructor(computeSamplesCallback) {\r\n    this.computeSamplesCallback = computeSamplesCallback.bind(this);\r\n    this.onComputeTimeoutBound = this.onComputeTimeout.bind(this);\r\n\r\n    this.audioContext = new AudioContext();\r\n    this.sampleRate = this.audioContext.sampleRate;\r\n    this.channelCount = 2;\r\n\r\n    this.totalBufferDuration = 5;\r\n    this.computeDuration = 1;\r\n    this.bufferDelayDuration = 0.1;\r\n\r\n    this.totalSamplesCount = this.totalBufferDuration * this.sampleRate;\r\n    this.computeDurationMS = this.computeDuration * 1000.0;\r\n    this.computeSamplesCount = this.computeDuration * this.sampleRate;\r\n    this.buffersToKeep = Math.ceil((this.totalBufferDuration + 2.0 * this.bufferDelayDuration) /\r\n      this.computeDuration);\r\n\r\n    this.audioBufferSources = [];\r\n    this.audioBufferDatas = [];\r\n    this.expiredAudioBuffers = [];\r\n    this.computeSamplesTimeout = null;\r\n  }\r\n\r\n  startPlaying() {\r\n    if (this.audioBufferSources.length > 0) {\r\n      this.stopPlaying();\r\n    }\r\n\r\n    //Start computing indefinitely, from the beginning.\r\n    let audioContextTimestamp = this.audioContext.getOutputTimestamp();\r\n    this.audioContextStartOffset = audioContextTimestamp.contextTime;\r\n    this.lastTimeoutTime = audioContextTimestamp.performanceTime;\r\n    for (this.currentBufferTime = 0.0; this.currentBufferTime < this.totalBufferDuration;\r\n      this.currentBufferTime += this.computeDuration) {\r\n      this.bufferNext();\r\n    }\r\n    this.onComputeTimeoutBound();\r\n  }\r\n\r\n  onComputeTimeout() {\r\n    this.bufferNext();\r\n    this.currentBufferTime += this.computeDuration;\r\n\r\n    //Readjust the next timeout to have a consistent interval, regardless of computation time.\r\n    let nextTimeoutDuration = 2.0 * this.computeDurationMS - (performance.now() - this.lastTimeoutTime) - 1;\r\n    this.lastTimeoutTime = performance.now();\r\n    this.computeSamplesTimeout = setTimeout(this.onComputeTimeoutBound, nextTimeoutDuration);\r\n  }\r\n\r\n  bufferNext() {\r\n    this.currentSamplesOffset = this.currentBufferTime * this.sampleRate;\r\n\r\n    //Create an audio buffer, which will contain the audio data.\r\n        //Create/Reuse an audio buffer, which will contain the audio data.\r\n      if (this.expiredAudioBuffers.length > 0) {\r\n          //console.log('Reuse');\r\n          this.audioBuffer = this.expiredAudioBuffers.shift();\r\n      } else {\r\n          //console.log('Create');\r\n          this.audioBuffer = this.audioContext.createBuffer(this.channelCount, this.computeSamplesCount,\r\n              this.sampleRate);\r\n      }\r\n\r\n    //Get the audio channels, which are float arrays representing each individual channel for the buffer.\r\n    this.channels = [];\r\n    for (let channelIndex = 0; channelIndex < this.channelCount; ++channelIndex) {\r\n      this.channels.push(this.audioBuffer.getChannelData(channelIndex));\r\n    }\r\n\r\n    //Compute the samples.\r\n    this.computeSamplesCallback();\r\n\r\n    //Creates a lightweight audio buffer source which can be used to play the audio data. Note: This can only be\r\n    //started once...\r\n    let audioBufferSource = this.audioContext.createBufferSource();\r\n    //Set the audio buffer.\r\n    audioBufferSource.buffer = this.audioBuffer;\r\n    //Connect it to the output.\r\n    audioBufferSource.connect(this.audioContext.destination);\r\n    //Start playing when the audio buffer is due.\r\n    audioBufferSource.start(this.audioContextStartOffset + this.currentBufferTime + this.bufferDelayDuration);\r\n    while (this.audioBufferDatas.length >= this.buffersToKeep) {\r\n      this.expiredAudioBuffers.push(this.audioBufferDatas.shift().buffer);\r\n    }\r\n    this.audioBufferDatas.push({\r\n        source: audioBufferSource,\r\n        buffer: this.audioBuffer\r\n    });\r\n  }\r\n\r\n  stopPlaying() {\r\n    if (this.audioBufferDatas.length > 0) {\r\n      for (let audioBufferData of this.audioBufferDatas) {\r\n          audioBufferData.source.stop();\r\n          this.expiredAudioBuffers.push(audioBufferData.buffer);\r\n      }\r\n      this.audioBufferDatas = [];\r\n      clearInterval(this.computeSamplesTimeout);\r\n      this.computeSamplesTimeout = null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n  var streamAudio = document.getElementById(\"streamAudio\");\r\n\r\n  streamAudio.onclick = function(){\r\n    if(document.getElementById(\"streamAudio\").innerText === \"Start Audio Stream\"){\r\n      document.getElementById(\"streamAudio\").innerText = \"Stop Audio Stream\";\r\n      client.emit(\"requestAudio\", {\"Bool\": \"True\"});\r\n\r\n        let masterOutput = new MasterOutput(function() {\r\n          //Populate the audio buffer with audio data.\r\n          this.currentSeconds = 0;\r\n          this.frequency = 220.0;\r\n          this.sampleIndex = 0\r\n\r\n        });\r\n\r\n        \r\n        masterOutput.startPlaying();\r\n\r\n        client.on(\"getAudio\", function streamaud(data) {   \r\n\r\n          while ( masterOutput.sampleIndex <= masterOutput.computeSamplesCount) {\r\n            console.log(typeof(data))\r\n            console.log(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n            masterOutput.sampleIndex++;\r\n            masterOutput.currentSeconds = (masterOutput.sampleIndex + masterOutput.currentSamplesOffset) / masterOutput.sampleRate;\r\n\r\n            masterOutput.channels[0][masterOutput.sampleIndex] =  new Uint8Array(data);\r\n  \r\n            //Copy the right channel from the left channel.\r\n            masterOutput.channels[1][masterOutput.sampleIndex] = masterOutput.channels[0][masterOutput.sampleIndex];\r\n\r\n   \r\n           }\r\n        });\r\n      \r\n    \r\n      }\r\n    else{\r\n      document.getElementById(\"streamAudio\").innerText = \"Start Audio Stream\"\r\n      client.emit(\"requestAudio\", {\"Bool\": \"False\"})\r\n    }\r\n\r\n\r\n}\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}