{"ast":null,"code":"#!/usr/bin/env node\n\n/**\n * @license r.js 2.3.6 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/r.js/LICENSE\n */\n\n/*\n * This is a bootstrap script to allow running RequireJS in the command line\n * in either a Java/Rhino or Node environment. It is modified by the top-level\n * dist.js file to inject other files to completely enable this file. It is\n * the shell of the r.js file.\n */\n\n/*jslint evil: true, nomen: true, sloppy: true */\n\n/*global readFile: true, process: false, Packages: false, print: false,\nconsole: false, java: false, module: false, requirejsVars, navigator,\ndocument, importScripts, self, location, Components, FileUtils */\n\nvar requirejs, require, define, xpcUtil;\n\n(function (console, args, readFileFunc) {\n  var fileName,\n      env,\n      fs,\n      vm,\n      path,\n      exec,\n      rhinoContext,\n      dir,\n      nodeRequire,\n      nodeDefine,\n      exists,\n      reqMain,\n      loadedOptimizedLib,\n      existsForNode,\n      Cc,\n      Ci,\n      version = '2.3.6',\n      jsSuffixRegExp = /\\.js$/,\n      commandOption = '',\n      useLibLoaded = {},\n      //Used by jslib/rhino/args.js\n  rhinoArgs = args,\n      //Used by jslib/xpconnect/args.js\n  xpconnectArgs = args,\n      readFile = typeof readFileFunc !== 'undefined' ? readFileFunc : null;\n\n  function showHelp() {\n    console.log('See https://github.com/requirejs/r.js for usage.');\n  }\n\n  if (typeof process !== 'undefined' && process.versions && !!process.versions.node) {\n    env = 'node'; //Get the fs module via Node's require before it\n    //gets replaced. Used in require/node.js\n\n    fs = require('fs');\n    vm = require('vm');\n    path = require('path'); //In Node 0.7+ existsSync is on fs.\n\n    existsForNode = fs.existsSync || path.existsSync;\n    nodeRequire = require;\n    nodeDefine = define;\n    reqMain = require.main; //Temporarily hide require and define to allow require.js to define\n    //them.\n\n    require = undefined;\n    define = undefined;\n\n    readFile = function (path) {\n      return fs.readFileSync(path, 'utf8');\n    };\n\n    exec = function (string, name) {\n      return vm.runInThisContext(this.requirejsVars.require.makeNodeWrapper(string), name ? fs.realpathSync(name) : '');\n    };\n\n    exists = function (fileName) {\n      return existsForNode(fileName);\n    };\n\n    fileName = process.argv[2];\n\n    if (fileName && fileName.indexOf('-') === 0) {\n      commandOption = fileName.substring(1);\n      fileName = process.argv[3];\n    }\n  } else if (typeof Packages !== 'undefined') {\n    env = 'rhino';\n    fileName = args[0];\n\n    if (fileName && fileName.indexOf('-') === 0) {\n      commandOption = fileName.substring(1);\n      fileName = args[1];\n    } //Exec/readFile differs between Rhino and Nashorn. Rhino has an\n    //importPackage where Nashorn does not, so branch on that. This is a\n    //coarser check -- detecting readFile existence might also be enough for\n    //this spot. However, sticking with importPackage to keep it the same\n    //as other Rhino/Nashorn detection branches.\n\n\n    if (typeof importPackage !== 'undefined') {\n      rhinoContext = Packages.org.mozilla.javascript.ContextFactory.getGlobal().enterContext();\n\n      exec = function (string, name) {\n        return rhinoContext.evaluateString(this, string, name, 0, null);\n      };\n    } else {\n      exec = function (string, name) {\n        load({\n          script: string,\n          name: name\n        });\n      };\n\n      readFile = readFully;\n    }\n\n    exists = function (fileName) {\n      return new java.io.File(fileName).exists();\n    }; //Define a console.log for easier logging. Don't\n    //get fancy though.\n\n\n    if (typeof console === 'undefined') {\n      console = {\n        log: function () {\n          print.apply(undefined, arguments);\n        }\n      };\n    }\n  } else if (typeof navigator !== 'undefined' && typeof document !== 'undefined' || typeof importScripts !== 'undefined' && typeof self !== 'undefined') {\n    env = 'browser';\n\n    readFile = function (path) {\n      return fs.readFileSync(path, 'utf8');\n    };\n\n    exec = function (string) {\n      return eval(string);\n    };\n\n    exists = function () {\n      console.log('x.js exists not applicable in browser env');\n      return false;\n    };\n  } else if (typeof Components !== 'undefined' && Components.classes && Components.interfaces) {\n    env = 'xpconnect';\n    Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n    Cc = Components.classes;\n    Ci = Components.interfaces;\n    fileName = args[0];\n\n    if (fileName && fileName.indexOf('-') === 0) {\n      commandOption = fileName.substring(1);\n      fileName = args[1];\n    }\n\n    xpcUtil = {\n      isWindows: '@mozilla.org/windows-registry-key;1' in Cc,\n      cwd: function () {\n        return FileUtils.getFile(\"CurWorkD\", []).path;\n      },\n      //Remove . and .. from paths, normalize on front slashes\n      normalize: function (path) {\n        //There has to be an easier way to do this.\n        var i,\n            part,\n            ary,\n            firstChar = path.charAt(0);\n\n        if (firstChar !== '/' && firstChar !== '\\\\' && path.indexOf(':') === -1) {\n          //A relative path. Use the current working directory.\n          path = xpcUtil.cwd() + '/' + path;\n        }\n\n        ary = path.replace(/\\\\/g, '/').split('/');\n\n        for (i = 0; i < ary.length; i += 1) {\n          part = ary[i];\n\n          if (part === '.') {\n            ary.splice(i, 1);\n            i -= 1;\n          } else if (part === '..') {\n            ary.splice(i - 1, 2);\n            i -= 2;\n          }\n        }\n\n        return ary.join('/');\n      },\n      xpfile: function (path) {\n        var fullPath;\n\n        try {\n          fullPath = xpcUtil.normalize(path);\n\n          if (xpcUtil.isWindows) {\n            fullPath = fullPath.replace(/\\//g, '\\\\');\n          }\n\n          return new FileUtils.File(fullPath);\n        } catch (e) {\n          throw new Error((fullPath || path) + ' failed: ' + e);\n        }\n      },\n      readFile: function (\n      /*String*/\n      path,\n      /*String?*/\n      encoding) {\n        //A file read function that can deal with BOMs\n        encoding = encoding || \"utf-8\";\n        var inStream,\n            convertStream,\n            readData = {},\n            fileObj = xpcUtil.xpfile(path); //XPCOM, you so crazy\n\n        try {\n          inStream = Cc['@mozilla.org/network/file-input-stream;1'].createInstance(Ci.nsIFileInputStream);\n          inStream.init(fileObj, 1, 0, false);\n          convertStream = Cc['@mozilla.org/intl/converter-input-stream;1'].createInstance(Ci.nsIConverterInputStream);\n          convertStream.init(inStream, encoding, inStream.available(), Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n          convertStream.readString(inStream.available(), readData);\n          return readData.value;\n        } catch (e) {\n          throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n        } finally {\n          if (convertStream) {\n            convertStream.close();\n          }\n\n          if (inStream) {\n            inStream.close();\n          }\n        }\n      }\n    };\n    readFile = xpcUtil.readFile;\n\n    exec = function (string) {\n      return eval(string);\n    };\n\n    exists = function (fileName) {\n      return xpcUtil.xpfile(fileName).exists();\n    }; //Define a console.log for easier logging. Don't\n    //get fancy though.\n\n\n    if (typeof console === 'undefined') {\n      console = {\n        log: function () {\n          print.apply(undefined, arguments);\n        }\n      };\n    }\n  }\n  /** vim: et:ts=4:sw=4:sts=4\n  * @license RequireJS 2.3.6 Copyright jQuery Foundation and other contributors.\n  * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\n  */\n  //Not using strict: uneven strict support in browsers, #392, and causes\n  //problems with requirejs.exec()/transpiler plugins that may not be strict.\n\n  /*jslint regexp: true, nomen: true, sloppy: true */\n\n  /*global window, navigator, document, importScripts, setTimeout, opera */\n\n\n  (function (global, setTimeout) {\n    var req,\n        s,\n        head,\n        baseElement,\n        dataMain,\n        src,\n        interactiveScript,\n        currentlyAddingScript,\n        mainScript,\n        subPath,\n        version = '2.3.6',\n        commentRegExp = /\\/\\*[\\s\\S]*?\\*\\/|([^:\"'=]|^)\\/\\/.*$/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n    //specifically. Sequence is 'loading', 'loaded', execution,\n    // then 'complete'. The UA check is unfortunate, but not sure how\n    //to feature test w/o causing perf issues.\n    readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ? /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n    isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false; //Could match something like ')//comment', do not lose the prefix to comment.\n\n    function commentReplace(match, singlePrefix) {\n      return singlePrefix || '';\n    }\n\n    function isFunction(it) {\n      return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n      return ostring.call(it) === '[object Array]';\n    }\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n\n\n    function each(ary, func) {\n      if (ary) {\n        var i;\n\n        for (i = 0; i < ary.length; i += 1) {\n          if (ary[i] && func(ary[i], i, ary)) {\n            break;\n          }\n        }\n      }\n    }\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n\n\n    function eachReverse(ary, func) {\n      if (ary) {\n        var i;\n\n        for (i = ary.length - 1; i > -1; i -= 1) {\n          if (ary[i] && func(ary[i], i, ary)) {\n            break;\n          }\n        }\n      }\n    }\n\n    function hasProp(obj, prop) {\n      return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n      return hasProp(obj, prop) && obj[prop];\n    }\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n\n\n    function eachProp(obj, func) {\n      var prop;\n\n      for (prop in obj) {\n        if (hasProp(obj, prop)) {\n          if (func(obj[prop], prop)) {\n            break;\n          }\n        }\n      }\n    }\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n\n\n    function mixin(target, source, force, deepStringMixin) {\n      if (source) {\n        eachProp(source, function (value, prop) {\n          if (force || !hasProp(target, prop)) {\n            if (deepStringMixin && typeof value === 'object' && value && !isArray(value) && !isFunction(value) && !(value instanceof RegExp)) {\n              if (!target[prop]) {\n                target[prop] = {};\n              }\n\n              mixin(target[prop], value, force, deepStringMixin);\n            } else {\n              target[prop] = value;\n            }\n          }\n        });\n      }\n\n      return target;\n    } //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n\n\n    function bind(obj, fn) {\n      return function () {\n        return fn.apply(obj, arguments);\n      };\n    }\n\n    function scripts() {\n      return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n      throw err;\n    } //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n\n\n    function getGlobal(value) {\n      if (!value) {\n        return value;\n      }\n\n      var g = global;\n      each(value.split('.'), function (part) {\n        g = g[part];\n      });\n      return g;\n    }\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n\n\n    function makeError(id, msg, err, requireModules) {\n      var e = new Error(msg + '\\nhttps://requirejs.org/docs/errors.html#' + id);\n      e.requireType = id;\n      e.requireModules = requireModules;\n\n      if (err) {\n        e.originalError = err;\n      }\n\n      return e;\n    }\n\n    if (typeof define !== 'undefined') {\n      //If a define is already in play via another AMD loader,\n      //do not overwrite.\n      return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n      if (isFunction(requirejs)) {\n        //Do not overwrite an existing requirejs instance.\n        return;\n      }\n\n      cfg = requirejs;\n      requirejs = undefined;\n    } //Allow for a require config object\n\n\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n      //assume it is a config object.\n      cfg = require;\n      require = undefined;\n    }\n\n    function newContext(contextName) {\n      var inCheckLoaded,\n          Module,\n          context,\n          handlers,\n          checkLoadedTimeoutId,\n          config = {\n        //Defaults. Do not set a default for map\n        //config to speed up normalize(), which\n        //will run faster if there is no default.\n        waitSeconds: 7,\n        baseUrl: './',\n        paths: {},\n        bundles: {},\n        pkgs: {},\n        shim: {},\n        config: {}\n      },\n          registry = {},\n          //registry of just enabled modules, to speed\n      //cycle breaking code when lots of modules\n      //are registered, but not activated.\n      enabledRegistry = {},\n          undefEvents = {},\n          defQueue = [],\n          defined = {},\n          urlFetched = {},\n          bundlesMap = {},\n          requireCounter = 1,\n          unnormalizedCounter = 1;\n      /**\n       * Trims the . and .. from an array of path segments.\n       * It will keep a leading path segment if a .. will become\n       * the first path segment, to help with module name lookups,\n       * which act like paths, but can be remapped. But the end result,\n       * all paths that use this function should look normalized.\n       * NOTE: this method MODIFIES the input array.\n       * @param {Array} ary the array of path segments.\n       */\n\n      function trimDots(ary) {\n        var i, part;\n\n        for (i = 0; i < ary.length; i++) {\n          part = ary[i];\n\n          if (part === '.') {\n            ary.splice(i, 1);\n            i -= 1;\n          } else if (part === '..') {\n            // If at the start, or previous value is still ..,\n            // keep them so that when converted to a path it may\n            // still work when converted to a path, even though\n            // as an ID it is less than ideal. In larger point\n            // releases, may be better to just kick out an error.\n            if (i === 0 || i === 1 && ary[2] === '..' || ary[i - 1] === '..') {\n              continue;\n            } else if (i > 0) {\n              ary.splice(i - 1, 2);\n              i -= 2;\n            }\n          }\n        }\n      }\n      /**\n       * Given a relative module name, like ./something, normalize it to\n       * a real name that can be mapped to a path.\n       * @param {String} name the relative name\n       * @param {String} baseName a real name that the name arg is relative\n       * to.\n       * @param {Boolean} applyMap apply the map config to the value. Should\n       * only be done if this normalization is for a dependency ID.\n       * @returns {String} normalized name\n       */\n\n\n      function normalize(name, baseName, applyMap) {\n        var pkgMain,\n            mapValue,\n            nameParts,\n            i,\n            j,\n            nameSegment,\n            lastIndex,\n            foundMap,\n            foundI,\n            foundStarMap,\n            starI,\n            normalizedBaseParts,\n            baseParts = baseName && baseName.split('/'),\n            map = config.map,\n            starMap = map && map['*']; //Adjust any relative paths.\n\n        if (name) {\n          name = name.split('/');\n          lastIndex = name.length - 1; // If wanting node ID compatibility, strip .js from end\n          // of IDs. Have to do this here, and not in nameToUrl\n          // because node allows either .js or non .js to map\n          // to same file.\n\n          if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n            name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n          } // Starts with a '.' so need the baseName\n\n\n          if (name[0].charAt(0) === '.' && baseParts) {\n            //Convert baseName to array, and lop off the last part,\n            //so that . matches that 'directory' and not name of the baseName's\n            //module. For instance, baseName of 'one/two/three', maps to\n            //'one/two/three.js', but we want the directory, 'one/two' for\n            //this normalization.\n            normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n            name = normalizedBaseParts.concat(name);\n          }\n\n          trimDots(name);\n          name = name.join('/');\n        } //Apply map config if available.\n\n\n        if (applyMap && map && (baseParts || starMap)) {\n          nameParts = name.split('/');\n\n          outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n            nameSegment = nameParts.slice(0, i).join('/');\n\n            if (baseParts) {\n              //Find the longest baseName segment match in the config.\n              //So, do joins on the biggest to smallest lengths of baseParts.\n              for (j = baseParts.length; j > 0; j -= 1) {\n                mapValue = getOwn(map, baseParts.slice(0, j).join('/')); //baseName segment has config, find if it has one for\n                //this name.\n\n                if (mapValue) {\n                  mapValue = getOwn(mapValue, nameSegment);\n\n                  if (mapValue) {\n                    //Match, update name to the new value.\n                    foundMap = mapValue;\n                    foundI = i;\n                    break outerLoop;\n                  }\n                }\n              }\n            } //Check for a star map match, but just hold on to it,\n            //if there is a shorter segment match later in a matching\n            //config, then favor over this star map.\n\n\n            if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n              foundStarMap = getOwn(starMap, nameSegment);\n              starI = i;\n            }\n          }\n\n          if (!foundMap && foundStarMap) {\n            foundMap = foundStarMap;\n            foundI = starI;\n          }\n\n          if (foundMap) {\n            nameParts.splice(0, foundI, foundMap);\n            name = nameParts.join('/');\n          }\n        } // If the name points to a package's name, use\n        // the package main instead.\n\n\n        pkgMain = getOwn(config.pkgs, name);\n        return pkgMain ? pkgMain : name;\n      }\n\n      function removeScript(name) {\n        if (isBrowser) {\n          each(scripts(), function (scriptNode) {\n            if (scriptNode.getAttribute('data-requiremodule') === name && scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n              scriptNode.parentNode.removeChild(scriptNode);\n              return true;\n            }\n          });\n        }\n      }\n\n      function hasPathFallback(id) {\n        var pathConfig = getOwn(config.paths, id);\n\n        if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n          //Pop off the first array value, since it failed, and\n          //retry\n          pathConfig.shift();\n\n          context.require.undef(id); //Custom require that does not do map translation, since\n          //ID is \"absolute\", already mapped/resolved.\n\n\n          context.makeRequire(null, {\n            skipMap: true\n          })([id]);\n          return true;\n        }\n      } //Turns a plugin!resource to [plugin, resource]\n      //with the plugin being undefined if the name\n      //did not have a plugin prefix.\n\n\n      function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n\n        if (index > -1) {\n          prefix = name.substring(0, index);\n          name = name.substring(index + 1, name.length);\n        }\n\n        return [prefix, name];\n      }\n      /**\n       * Creates a module mapping that includes plugin prefix, module\n       * name, and path. If parentModuleMap is provided it will\n       * also normalize the name via require.normalize()\n       *\n       * @param {String} name the module name\n       * @param {String} [parentModuleMap] parent module map\n       * for the module name, used to resolve relative names.\n       * @param {Boolean} isNormalized: is the ID already normalized.\n       * This is true if this call is done for a define() module ID.\n       * @param {Boolean} applyMap: apply the map config to the ID.\n       * Should only be true if this map is for a dependency.\n       *\n       * @returns {Object}\n       */\n\n\n      function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n        var url,\n            pluginModule,\n            suffix,\n            nameParts,\n            prefix = null,\n            parentName = parentModuleMap ? parentModuleMap.name : null,\n            originalName = name,\n            isDefine = true,\n            normalizedName = ''; //If no name, then it means it is a require call, generate an\n        //internal name.\n\n        if (!name) {\n          isDefine = false;\n          name = '_@r' + (requireCounter += 1);\n        }\n\n        nameParts = splitPrefix(name);\n        prefix = nameParts[0];\n        name = nameParts[1];\n\n        if (prefix) {\n          prefix = normalize(prefix, parentName, applyMap);\n          pluginModule = getOwn(defined, prefix);\n        } //Account for relative paths if there is a base name.\n\n\n        if (name) {\n          if (prefix) {\n            if (isNormalized) {\n              normalizedName = name;\n            } else if (pluginModule && pluginModule.normalize) {\n              //Plugin is loaded, use its normalize method.\n              normalizedName = pluginModule.normalize(name, function (name) {\n                return normalize(name, parentName, applyMap);\n              });\n            } else {\n              // If nested plugin references, then do not try to\n              // normalize, as it will not normalize correctly. This\n              // places a restriction on resourceIds, and the longer\n              // term solution is not to normalize until plugins are\n              // loaded and all normalizations to allow for async\n              // loading of a loader plugin. But for now, fixes the\n              // common uses. Details in #1131\n              normalizedName = name.indexOf('!') === -1 ? normalize(name, parentName, applyMap) : name;\n            }\n          } else {\n            //A regular module.\n            normalizedName = normalize(name, parentName, applyMap); //Normalized name may be a plugin ID due to map config\n            //application in normalize. The map config values must\n            //already be normalized, so do not need to redo that part.\n\n            nameParts = splitPrefix(normalizedName);\n            prefix = nameParts[0];\n            normalizedName = nameParts[1];\n            isNormalized = true;\n            url = context.nameToUrl(normalizedName);\n          }\n        } //If the id is a plugin id that cannot be determined if it needs\n        //normalization, stamp it with a unique ID so two matching relative\n        //ids that may conflict can be separate.\n\n\n        suffix = prefix && !pluginModule && !isNormalized ? '_unnormalized' + (unnormalizedCounter += 1) : '';\n        return {\n          prefix: prefix,\n          name: normalizedName,\n          parentMap: parentModuleMap,\n          unnormalized: !!suffix,\n          url: url,\n          originalName: originalName,\n          isDefine: isDefine,\n          id: (prefix ? prefix + '!' + normalizedName : normalizedName) + suffix\n        };\n      }\n\n      function getModule(depMap) {\n        var id = depMap.id,\n            mod = getOwn(registry, id);\n\n        if (!mod) {\n          mod = registry[id] = new context.Module(depMap);\n        }\n\n        return mod;\n      }\n\n      function on(depMap, name, fn) {\n        var id = depMap.id,\n            mod = getOwn(registry, id);\n\n        if (hasProp(defined, id) && (!mod || mod.defineEmitComplete)) {\n          if (name === 'defined') {\n            fn(defined[id]);\n          }\n        } else {\n          mod = getModule(depMap);\n\n          if (mod.error && name === 'error') {\n            fn(mod.error);\n          } else {\n            mod.on(name, fn);\n          }\n        }\n      }\n\n      function onError(err, errback) {\n        var ids = err.requireModules,\n            notified = false;\n\n        if (errback) {\n          errback(err);\n        } else {\n          each(ids, function (id) {\n            var mod = getOwn(registry, id);\n\n            if (mod) {\n              //Set error on module, so it skips timeout checks.\n              mod.error = err;\n\n              if (mod.events.error) {\n                notified = true;\n                mod.emit('error', err);\n              }\n            }\n          });\n\n          if (!notified) {\n            req.onError(err);\n          }\n        }\n      }\n      /**\n       * Internal method to transfer globalQueue items to this context's\n       * defQueue.\n       */\n\n\n      function takeGlobalQueue() {\n        //Push all the globalDefQueue items into the context's defQueue\n        if (globalDefQueue.length) {\n          each(globalDefQueue, function (queueItem) {\n            var id = queueItem[0];\n\n            if (typeof id === 'string') {\n              context.defQueueMap[id] = true;\n            }\n\n            defQueue.push(queueItem);\n          });\n          globalDefQueue = [];\n        }\n      }\n\n      handlers = {\n        'require': function (mod) {\n          if (mod.require) {\n            return mod.require;\n          } else {\n            return mod.require = context.makeRequire(mod.map);\n          }\n        },\n        'exports': function (mod) {\n          mod.usingExports = true;\n\n          if (mod.map.isDefine) {\n            if (mod.exports) {\n              return defined[mod.map.id] = mod.exports;\n            } else {\n              return mod.exports = defined[mod.map.id] = {};\n            }\n          }\n        },\n        'module': function (mod) {\n          if (mod.module) {\n            return mod.module;\n          } else {\n            return mod.module = {\n              id: mod.map.id,\n              uri: mod.map.url,\n              config: function () {\n                return getOwn(config.config, mod.map.id) || {};\n              },\n              exports: mod.exports || (mod.exports = {})\n            };\n          }\n        }\n      };\n\n      function cleanRegistry(id) {\n        //Clean up machinery used for waiting modules.\n        delete registry[id];\n        delete enabledRegistry[id];\n      }\n\n      function breakCycle(mod, traced, processed) {\n        var id = mod.map.id;\n\n        if (mod.error) {\n          mod.emit('error', mod.error);\n        } else {\n          traced[id] = true;\n          each(mod.depMaps, function (depMap, i) {\n            var depId = depMap.id,\n                dep = getOwn(registry, depId); //Only force things that have not completed\n            //being defined, so still in the registry,\n            //and only if it has not been matched up\n            //in the module already.\n\n            if (dep && !mod.depMatched[i] && !processed[depId]) {\n              if (getOwn(traced, depId)) {\n                mod.defineDep(i, defined[depId]);\n                mod.check(); //pass false?\n              } else {\n                breakCycle(dep, traced, processed);\n              }\n            }\n          });\n          processed[id] = true;\n        }\n      }\n\n      function checkLoaded() {\n        var err,\n            usingPathFallback,\n            waitInterval = config.waitSeconds * 1000,\n            //It is possible to disable the wait interval by using waitSeconds of 0.\n        expired = waitInterval && context.startTime + waitInterval < new Date().getTime(),\n            noLoads = [],\n            reqCalls = [],\n            stillLoading = false,\n            needCycleCheck = true; //Do not bother if this call was a result of a cycle break.\n\n        if (inCheckLoaded) {\n          return;\n        }\n\n        inCheckLoaded = true; //Figure out the state of all the modules.\n\n        eachProp(enabledRegistry, function (mod) {\n          var map = mod.map,\n              modId = map.id; //Skip things that are not enabled or in error state.\n\n          if (!mod.enabled) {\n            return;\n          }\n\n          if (!map.isDefine) {\n            reqCalls.push(mod);\n          }\n\n          if (!mod.error) {\n            //If the module should be executed, and it has not\n            //been inited and time is up, remember it.\n            if (!mod.inited && expired) {\n              if (hasPathFallback(modId)) {\n                usingPathFallback = true;\n                stillLoading = true;\n              } else {\n                noLoads.push(modId);\n                removeScript(modId);\n              }\n            } else if (!mod.inited && mod.fetched && map.isDefine) {\n              stillLoading = true;\n\n              if (!map.prefix) {\n                //No reason to keep looking for unfinished\n                //loading. If the only stillLoading is a\n                //plugin resource though, keep going,\n                //because it may be that a plugin resource\n                //is waiting on a non-plugin cycle.\n                return needCycleCheck = false;\n              }\n            }\n          }\n        });\n\n        if (expired && noLoads.length) {\n          //If wait time expired, throw error of unloaded modules.\n          err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n          err.contextName = context.contextName;\n          return onError(err);\n        } //Not expired, check for a cycle.\n\n\n        if (needCycleCheck) {\n          each(reqCalls, function (mod) {\n            breakCycle(mod, {}, {});\n          });\n        } //If still waiting on loads, and the waiting load is something\n        //other than a plugin resource, or there are still outstanding\n        //scripts, then just try back later.\n\n\n        if ((!expired || usingPathFallback) && stillLoading) {\n          //Something is still waiting to load. Wait for it, but only\n          //if a timeout is not already in effect.\n          if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n            checkLoadedTimeoutId = setTimeout(function () {\n              checkLoadedTimeoutId = 0;\n              checkLoaded();\n            }, 50);\n          }\n        }\n\n        inCheckLoaded = false;\n      }\n\n      Module = function (map) {\n        this.events = getOwn(undefEvents, map.id) || {};\n        this.map = map;\n        this.shim = getOwn(config.shim, map.id);\n        this.depExports = [];\n        this.depMaps = [];\n        this.depMatched = [];\n        this.pluginMaps = {};\n        this.depCount = 0;\n        /* this.exports this.factory\n           this.depMaps = [],\n           this.enabled, this.fetched\n        */\n      };\n\n      Module.prototype = {\n        init: function (depMaps, factory, errback, options) {\n          options = options || {}; //Do not do more inits if already done. Can happen if there\n          //are multiple define calls for the same module. That is not\n          //a normal, common case, but it is also not unexpected.\n\n          if (this.inited) {\n            return;\n          }\n\n          this.factory = factory;\n\n          if (errback) {\n            //Register for errors on this module.\n            this.on('error', errback);\n          } else if (this.events.error) {\n            //If no errback already, but there are error listeners\n            //on this module, set up an errback to pass to the deps.\n            errback = bind(this, function (err) {\n              this.emit('error', err);\n            });\n          } //Do a copy of the dependency array, so that\n          //source inputs are not modified. For example\n          //\"shim\" deps are passed in here directly, and\n          //doing a direct modification of the depMaps array\n          //would affect that config.\n\n\n          this.depMaps = depMaps && depMaps.slice(0);\n          this.errback = errback; //Indicate this module has be initialized\n\n          this.inited = true;\n          this.ignore = options.ignore; //Could have option to init this module in enabled mode,\n          //or could have been previously marked as enabled. However,\n          //the dependencies are not known until init is called. So\n          //if enabled previously, now trigger dependencies as enabled.\n\n          if (options.enabled || this.enabled) {\n            //Enable this module and dependencies.\n            //Will call this.check()\n            this.enable();\n          } else {\n            this.check();\n          }\n        },\n        defineDep: function (i, depExports) {\n          //Because of cycles, defined callback for a given\n          //export can be called more than once.\n          if (!this.depMatched[i]) {\n            this.depMatched[i] = true;\n            this.depCount -= 1;\n            this.depExports[i] = depExports;\n          }\n        },\n        fetch: function () {\n          if (this.fetched) {\n            return;\n          }\n\n          this.fetched = true;\n          context.startTime = new Date().getTime();\n          var map = this.map; //If the manager is for a plugin managed resource,\n          //ask the plugin to load it now.\n\n          if (this.shim) {\n            context.makeRequire(this.map, {\n              enableBuildCallback: true\n            })(this.shim.deps || [], bind(this, function () {\n              return map.prefix ? this.callPlugin() : this.load();\n            }));\n          } else {\n            //Regular dependency.\n            return map.prefix ? this.callPlugin() : this.load();\n          }\n        },\n        load: function () {\n          var url = this.map.url; //Regular dependency.\n\n          if (!urlFetched[url]) {\n            urlFetched[url] = true;\n            context.load(this.map.id, url);\n          }\n        },\n\n        /**\n         * Checks if the module is ready to define itself, and if so,\n         * define it.\n         */\n        check: function () {\n          if (!this.enabled || this.enabling) {\n            return;\n          }\n\n          var err,\n              cjsModule,\n              id = this.map.id,\n              depExports = this.depExports,\n              exports = this.exports,\n              factory = this.factory;\n\n          if (!this.inited) {\n            // Only fetch if not already in the defQueue.\n            if (!hasProp(context.defQueueMap, id)) {\n              this.fetch();\n            }\n          } else if (this.error) {\n            this.emit('error', this.error);\n          } else if (!this.defining) {\n            //The factory could trigger another require call\n            //that would result in checking this module to\n            //define itself again. If already in the process\n            //of doing that, skip this work.\n            this.defining = true;\n\n            if (this.depCount < 1 && !this.defined) {\n              if (isFunction(factory)) {\n                //If there is an error listener, favor passing\n                //to that instead of throwing an error. However,\n                //only do it for define()'d  modules. require\n                //errbacks should not be called for failures in\n                //their callbacks (#699). However if a global\n                //onError is set, use that.\n                if (this.events.error && this.map.isDefine || req.onError !== defaultOnError) {\n                  try {\n                    exports = context.execCb(id, factory, depExports, exports);\n                  } catch (e) {\n                    err = e;\n                  }\n                } else {\n                  exports = context.execCb(id, factory, depExports, exports);\n                } // Favor return value over exports. If node/cjs in play,\n                // then will not have a return value anyway. Favor\n                // module.exports assignment over exports object.\n\n\n                if (this.map.isDefine && exports === undefined) {\n                  cjsModule = this.module;\n\n                  if (cjsModule) {\n                    exports = cjsModule.exports;\n                  } else if (this.usingExports) {\n                    //exports already set the defined value.\n                    exports = this.exports;\n                  }\n                }\n\n                if (err) {\n                  err.requireMap = this.map;\n                  err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                  err.requireType = this.map.isDefine ? 'define' : 'require';\n                  return onError(this.error = err);\n                }\n              } else {\n                //Just a literal value\n                exports = factory;\n              }\n\n              this.exports = exports;\n\n              if (this.map.isDefine && !this.ignore) {\n                defined[id] = exports;\n\n                if (req.onResourceLoad) {\n                  var resLoadMaps = [];\n                  each(this.depMaps, function (depMap) {\n                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                  });\n                  req.onResourceLoad(context, this.map, resLoadMaps);\n                }\n              } //Clean up\n\n\n              cleanRegistry(id);\n              this.defined = true;\n            } //Finished the define stage. Allow calling check again\n            //to allow define notifications below in the case of a\n            //cycle.\n\n\n            this.defining = false;\n\n            if (this.defined && !this.defineEmitted) {\n              this.defineEmitted = true;\n              this.emit('defined', this.exports);\n              this.defineEmitComplete = true;\n            }\n          }\n        },\n        callPlugin: function () {\n          var map = this.map,\n              id = map.id,\n              //Map already normalized the prefix.\n          pluginMap = makeModuleMap(map.prefix); //Mark this as a dependency for this plugin, so it\n          //can be traced for cycles.\n\n          this.depMaps.push(pluginMap);\n          on(pluginMap, 'defined', bind(this, function (plugin) {\n            var load,\n                normalizedMap,\n                normalizedMod,\n                bundleId = getOwn(bundlesMap, this.map.id),\n                name = this.map.name,\n                parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                localRequire = context.makeRequire(map.parentMap, {\n              enableBuildCallback: true\n            }); //If current map is not normalized, wait for that\n            //normalized name to load instead of continuing.\n\n            if (this.map.unnormalized) {\n              //Normalize the ID if the plugin allows it.\n              if (plugin.normalize) {\n                name = plugin.normalize(name, function (name) {\n                  return normalize(name, parentName, true);\n                }) || '';\n              } //prefix and name should already be normalized, no need\n              //for applying map config again either.\n\n\n              normalizedMap = makeModuleMap(map.prefix + '!' + name, this.map.parentMap, true);\n              on(normalizedMap, 'defined', bind(this, function (value) {\n                this.map.normalizedMap = normalizedMap;\n                this.init([], function () {\n                  return value;\n                }, null, {\n                  enabled: true,\n                  ignore: true\n                });\n              }));\n              normalizedMod = getOwn(registry, normalizedMap.id);\n\n              if (normalizedMod) {\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(normalizedMap);\n\n                if (this.events.error) {\n                  normalizedMod.on('error', bind(this, function (err) {\n                    this.emit('error', err);\n                  }));\n                }\n\n                normalizedMod.enable();\n              }\n\n              return;\n            } //If a paths config, then just load that file instead to\n            //resolve the plugin, as it is built into that paths layer.\n\n\n            if (bundleId) {\n              this.map.url = context.nameToUrl(bundleId);\n              this.load();\n              return;\n            }\n\n            load = bind(this, function (value) {\n              this.init([], function () {\n                return value;\n              }, null, {\n                enabled: true\n              });\n            });\n            load.error = bind(this, function (err) {\n              this.inited = true;\n              this.error = err;\n              err.requireModules = [id]; //Remove temp unnormalized modules for this module,\n              //since they will never be resolved otherwise now.\n\n              eachProp(registry, function (mod) {\n                if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                  cleanRegistry(mod.map.id);\n                }\n              });\n              onError(err);\n            }); //Allow plugins to load other code without having to know the\n            //context or how to 'complete' the load.\n\n            load.fromText = bind(this, function (text, textAlt) {\n              /*jslint evil: true */\n              var moduleName = map.name,\n                  moduleMap = makeModuleMap(moduleName),\n                  hasInteractive = useInteractive; //As of 2.1.0, support just passing the text, to reinforce\n              //fromText only being called once per resource. Still\n              //support old style of passing moduleName but discard\n              //that moduleName in favor of the internal ref.\n\n              if (textAlt) {\n                text = textAlt;\n              } //Turn off interactive script matching for IE for any define\n              //calls in the text, then turn it back on at the end.\n\n\n              if (hasInteractive) {\n                useInteractive = false;\n              } //Prime the system by creating a module instance for\n              //it.\n\n\n              getModule(moduleMap); //Transfer any config to this other module.\n\n              if (hasProp(config.config, id)) {\n                config.config[moduleName] = config.config[id];\n              }\n\n              try {\n                req.exec(text);\n              } catch (e) {\n                return onError(makeError('fromtexteval', 'fromText eval for ' + id + ' failed: ' + e, e, [id]));\n              }\n\n              if (hasInteractive) {\n                useInteractive = true;\n              } //Mark this as a dependency for the plugin\n              //resource\n\n\n              this.depMaps.push(moduleMap); //Support anonymous modules.\n\n              context.completeLoad(moduleName); //Bind the value of that module to the value for this\n              //resource ID.\n\n              localRequire([moduleName], load);\n            }); //Use parentName here since the plugin's name is not reliable,\n            //could be some weird string with no path that actually wants to\n            //reference the parentName's path.\n\n            plugin.load(map.name, localRequire, load, config);\n          }));\n          context.enable(pluginMap, this);\n          this.pluginMaps[pluginMap.id] = pluginMap;\n        },\n        enable: function () {\n          enabledRegistry[this.map.id] = this;\n          this.enabled = true; //Set flag mentioning that the module is enabling,\n          //so that immediate calls to the defined callbacks\n          //for dependencies do not trigger inadvertent load\n          //with the depCount still being zero.\n\n          this.enabling = true; //Enable each dependency\n\n          each(this.depMaps, bind(this, function (depMap, i) {\n            var id, mod, handler;\n\n            if (typeof depMap === 'string') {\n              //Dependency needs to be converted to a depMap\n              //and wired up to this module.\n              depMap = makeModuleMap(depMap, this.map.isDefine ? this.map : this.map.parentMap, false, !this.skipMap);\n              this.depMaps[i] = depMap;\n              handler = getOwn(handlers, depMap.id);\n\n              if (handler) {\n                this.depExports[i] = handler(this);\n                return;\n              }\n\n              this.depCount += 1;\n              on(depMap, 'defined', bind(this, function (depExports) {\n                if (this.undefed) {\n                  return;\n                }\n\n                this.defineDep(i, depExports);\n                this.check();\n              }));\n\n              if (this.errback) {\n                on(depMap, 'error', bind(this, this.errback));\n              } else if (this.events.error) {\n                // No direct errback on this module, but something\n                // else is listening for errors, so be sure to\n                // propagate the error correctly.\n                on(depMap, 'error', bind(this, function (err) {\n                  this.emit('error', err);\n                }));\n              }\n            }\n\n            id = depMap.id;\n            mod = registry[id]; //Skip special modules like 'require', 'exports', 'module'\n            //Also, don't call enable if it is already enabled,\n            //important in circular dependency cases.\n\n            if (!hasProp(handlers, id) && mod && !mod.enabled) {\n              context.enable(depMap, this);\n            }\n          })); //Enable each plugin that is used in\n          //a dependency\n\n          eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n            var mod = getOwn(registry, pluginMap.id);\n\n            if (mod && !mod.enabled) {\n              context.enable(pluginMap, this);\n            }\n          }));\n          this.enabling = false;\n          this.check();\n        },\n        on: function (name, cb) {\n          var cbs = this.events[name];\n\n          if (!cbs) {\n            cbs = this.events[name] = [];\n          }\n\n          cbs.push(cb);\n        },\n        emit: function (name, evt) {\n          each(this.events[name], function (cb) {\n            cb(evt);\n          });\n\n          if (name === 'error') {\n            //Now that the error handler was triggered, remove\n            //the listeners, since this broken Module instance\n            //can stay around for a while in the registry.\n            delete this.events[name];\n          }\n        }\n      };\n\n      function callGetModule(args) {\n        //Skip modules already defined.\n        if (!hasProp(defined, args[0])) {\n          getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n        }\n      }\n\n      function removeListener(node, func, name, ieName) {\n        //Favor detachEvent because of IE9\n        //issue, see attachEvent/addEventListener comment elsewhere\n        //in this file.\n        if (node.detachEvent && !isOpera) {\n          //Probably IE. If not it will throw an error, which will be\n          //useful to know.\n          if (ieName) {\n            node.detachEvent(ieName, func);\n          }\n        } else {\n          node.removeEventListener(name, func, false);\n        }\n      }\n      /**\n       * Given an event from a script node, get the requirejs info from it,\n       * and then removes the event listeners on the node.\n       * @param {Event} evt\n       * @returns {Object}\n       */\n\n\n      function getScriptData(evt) {\n        //Using currentTarget instead of target for Firefox 2.0's sake. Not\n        //all old browsers will be supported, but this one was easy enough\n        //to support and still makes sense.\n        var node = evt.currentTarget || evt.srcElement; //Remove the listeners once here.\n\n        removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n        removeListener(node, context.onScriptError, 'error');\n        return {\n          node: node,\n          id: node && node.getAttribute('data-requiremodule')\n        };\n      }\n\n      function intakeDefines() {\n        var args; //Any defined modules in the global queue, intake them now.\n\n        takeGlobalQueue(); //Make sure any remaining defQueue items get properly processed.\n\n        while (defQueue.length) {\n          args = defQueue.shift();\n\n          if (args[0] === null) {\n            return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));\n          } else {\n            //args are id, deps, factory. Should be normalized by the\n            //define() function.\n            callGetModule(args);\n          }\n        }\n\n        context.defQueueMap = {};\n      }\n\n      context = {\n        config: config,\n        contextName: contextName,\n        registry: registry,\n        defined: defined,\n        urlFetched: urlFetched,\n        defQueue: defQueue,\n        defQueueMap: {},\n        Module: Module,\n        makeModuleMap: makeModuleMap,\n        nextTick: req.nextTick,\n        onError: onError,\n\n        /**\n         * Set a configuration for the context.\n         * @param {Object} cfg config object to integrate.\n         */\n        configure: function (cfg) {\n          //Make sure the baseUrl ends in a slash.\n          if (cfg.baseUrl) {\n            if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n              cfg.baseUrl += '/';\n            }\n          } // Convert old style urlArgs string to a function.\n\n\n          if (typeof cfg.urlArgs === 'string') {\n            var urlArgs = cfg.urlArgs;\n\n            cfg.urlArgs = function (id, url) {\n              return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\n            };\n          } //Save off the paths since they require special processing,\n          //they are additive.\n\n\n          var shim = config.shim,\n              objs = {\n            paths: true,\n            bundles: true,\n            config: true,\n            map: true\n          };\n          eachProp(cfg, function (value, prop) {\n            if (objs[prop]) {\n              if (!config[prop]) {\n                config[prop] = {};\n              }\n\n              mixin(config[prop], value, true, true);\n            } else {\n              config[prop] = value;\n            }\n          }); //Reverse map the bundles\n\n          if (cfg.bundles) {\n            eachProp(cfg.bundles, function (value, prop) {\n              each(value, function (v) {\n                if (v !== prop) {\n                  bundlesMap[v] = prop;\n                }\n              });\n            });\n          } //Merge shim\n\n\n          if (cfg.shim) {\n            eachProp(cfg.shim, function (value, id) {\n              //Normalize the structure\n              if (isArray(value)) {\n                value = {\n                  deps: value\n                };\n              }\n\n              if ((value.exports || value.init) && !value.exportsFn) {\n                value.exportsFn = context.makeShimExports(value);\n              }\n\n              shim[id] = value;\n            });\n            config.shim = shim;\n          } //Adjust packages if necessary.\n\n\n          if (cfg.packages) {\n            each(cfg.packages, function (pkgObj) {\n              var location, name;\n              pkgObj = typeof pkgObj === 'string' ? {\n                name: pkgObj\n              } : pkgObj;\n              name = pkgObj.name;\n              location = pkgObj.location;\n\n              if (location) {\n                config.paths[name] = pkgObj.location;\n              } //Save pointer to main module ID for pkg name.\n              //Remove leading dot in main, so main paths are normalized,\n              //and remove any trailing .js, since different package\n              //envs have different conventions: some use a module name,\n              //some use a file name.\n\n\n              config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main').replace(currDirRegExp, '').replace(jsSuffixRegExp, '');\n            });\n          } //If there are any \"waiting to execute\" modules in the registry,\n          //update the maps for them, since their info, like URLs to load,\n          //may have changed.\n\n\n          eachProp(registry, function (mod, id) {\n            //If module already has init called, since it is too\n            //late to modify them, and ignore unnormalized ones\n            //since they are transient.\n            if (!mod.inited && !mod.map.unnormalized) {\n              mod.map = makeModuleMap(id, null, true);\n            }\n          }); //If a deps array or a config callback is specified, then call\n          //require with those args. This is useful when require is defined as a\n          //config object before require.js is loaded.\n\n          if (cfg.deps || cfg.callback) {\n            context.require(cfg.deps || [], cfg.callback);\n          }\n        },\n        makeShimExports: function (value) {\n          function fn() {\n            var ret;\n\n            if (value.init) {\n              ret = value.init.apply(global, arguments);\n            }\n\n            return ret || value.exports && getGlobal(value.exports);\n          }\n\n          return fn;\n        },\n        makeRequire: function (relMap, options) {\n          options = options || {};\n\n          function localRequire(deps, callback, errback) {\n            var id, map, requireMod;\n\n            if (options.enableBuildCallback && callback && isFunction(callback)) {\n              callback.__requireJsBuild = true;\n            }\n\n            if (typeof deps === 'string') {\n              if (isFunction(callback)) {\n                //Invalid call\n                return onError(makeError('requireargs', 'Invalid require call'), errback);\n              } //If require|exports|module are requested, get the\n              //value for them from the special handlers. Caveat:\n              //this only works while module is being defined.\n\n\n              if (relMap && hasProp(handlers, deps)) {\n                return handlers[deps](registry[relMap.id]);\n              } //Synchronous access to one module. If require.get is\n              //available (as in the Node adapter), prefer that.\n\n\n              if (req.get) {\n                return req.get(context, deps, relMap, localRequire);\n              } //Normalize module name, if it contains . or ..\n\n\n              map = makeModuleMap(deps, relMap, false, true);\n              id = map.id;\n\n              if (!hasProp(defined, id)) {\n                return onError(makeError('notloaded', 'Module name \"' + id + '\" has not been loaded yet for context: ' + contextName + (relMap ? '' : '. Use require([])')));\n              }\n\n              return defined[id];\n            } //Grab defines waiting in the global queue.\n\n\n            intakeDefines(); //Mark all the dependencies as needing to be loaded.\n\n            context.nextTick(function () {\n              //Some defines could have been added since the\n              //require call, collect them.\n              intakeDefines();\n              requireMod = getModule(makeModuleMap(null, relMap)); //Store if map config should be applied to this require\n              //call for dependencies.\n\n              requireMod.skipMap = options.skipMap;\n              requireMod.init(deps, callback, errback, {\n                enabled: true\n              });\n              checkLoaded();\n            });\n            return localRequire;\n          }\n\n          mixin(localRequire, {\n            isBrowser: isBrowser,\n\n            /**\n             * Converts a module name + .extension into an URL path.\n             * *Requires* the use of a module name. It does not support using\n             * plain URLs like nameToUrl.\n             */\n            toUrl: function (moduleNamePlusExt) {\n              var ext,\n                  index = moduleNamePlusExt.lastIndexOf('.'),\n                  segment = moduleNamePlusExt.split('/')[0],\n                  isRelative = segment === '.' || segment === '..'; //Have a file extension alias, and it is not the\n              //dots from a relative path.\n\n              if (index !== -1 && (!isRelative || index > 1)) {\n                ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n              }\n\n              return context.nameToUrl(normalize(moduleNamePlusExt, relMap && relMap.id, true), ext, true);\n            },\n            defined: function (id) {\n              return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n            },\n            specified: function (id) {\n              id = makeModuleMap(id, relMap, false, true).id;\n              return hasProp(defined, id) || hasProp(registry, id);\n            }\n          }); //Only allow undef on top level require calls\n\n          if (!relMap) {\n            localRequire.undef = function (id) {\n              //Bind any waiting define() calls to this context,\n              //fix for #408\n              takeGlobalQueue();\n              var map = makeModuleMap(id, relMap, true),\n                  mod = getOwn(registry, id);\n              mod.undefed = true;\n              removeScript(id);\n              delete defined[id];\n              delete urlFetched[map.url];\n              delete undefEvents[id]; //Clean queued defines too. Go backwards\n              //in array so that the splices do not\n              //mess up the iteration.\n\n              eachReverse(defQueue, function (args, i) {\n                if (args[0] === id) {\n                  defQueue.splice(i, 1);\n                }\n              });\n              delete context.defQueueMap[id];\n\n              if (mod) {\n                //Hold on to listeners in case the\n                //module will be attempted to be reloaded\n                //using a different config.\n                if (mod.events.defined) {\n                  undefEvents[id] = mod.events;\n                }\n\n                cleanRegistry(id);\n              }\n            };\n          }\n\n          return localRequire;\n        },\n\n        /**\n         * Called to enable a module if it is still in the registry\n         * awaiting enablement. A second arg, parent, the parent module,\n         * is passed in for context, when this method is overridden by\n         * the optimizer. Not shown here to keep code compact.\n         */\n        enable: function (depMap) {\n          var mod = getOwn(registry, depMap.id);\n\n          if (mod) {\n            getModule(depMap).enable();\n          }\n        },\n\n        /**\n         * Internal method used by environment adapters to complete a load event.\n         * A load event could be a script load or just a load pass from a synchronous\n         * load call.\n         * @param {String} moduleName the name of the module to potentially complete.\n         */\n        completeLoad: function (moduleName) {\n          var found,\n              args,\n              mod,\n              shim = getOwn(config.shim, moduleName) || {},\n              shExports = shim.exports;\n          takeGlobalQueue();\n\n          while (defQueue.length) {\n            args = defQueue.shift();\n\n            if (args[0] === null) {\n              args[0] = moduleName; //If already found an anonymous module and bound it\n              //to this name, then this is some other anon module\n              //waiting for its completeLoad to fire.\n\n              if (found) {\n                break;\n              }\n\n              found = true;\n            } else if (args[0] === moduleName) {\n              //Found matching define call for this script!\n              found = true;\n            }\n\n            callGetModule(args);\n          }\n\n          context.defQueueMap = {}; //Do this after the cycle of callGetModule in case the result\n          //of those calls/init calls changes the registry.\n\n          mod = getOwn(registry, moduleName);\n\n          if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n            if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n              if (hasPathFallback(moduleName)) {\n                return;\n              } else {\n                return onError(makeError('nodefine', 'No define call for ' + moduleName, null, [moduleName]));\n              }\n            } else {\n              //A script that does not call define(), so just simulate\n              //the call for it.\n              callGetModule([moduleName, shim.deps || [], shim.exportsFn]);\n            }\n          }\n\n          checkLoaded();\n        },\n\n        /**\n         * Converts a module name to a file path. Supports cases where\n         * moduleName may actually be just an URL.\n         * Note that it **does not** call normalize on the moduleName,\n         * it is assumed to have already been normalized. This is an\n         * internal API, not a public one. Use toUrl for the public API.\n         */\n        nameToUrl: function (moduleName, ext, skipExt) {\n          var paths,\n              syms,\n              i,\n              parentModule,\n              url,\n              parentPath,\n              bundleId,\n              pkgMain = getOwn(config.pkgs, moduleName);\n\n          if (pkgMain) {\n            moduleName = pkgMain;\n          }\n\n          bundleId = getOwn(bundlesMap, moduleName);\n\n          if (bundleId) {\n            return context.nameToUrl(bundleId, ext, skipExt);\n          } //If a colon is in the URL, it indicates a protocol is used and it is just\n          //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n          //or ends with .js, then assume the user meant to use an url and not a module id.\n          //The slash is important for protocol-less URLs as well as full paths.\n\n\n          if (req.jsExtRegExp.test(moduleName)) {\n            //Just a plain path, not module name lookup, so just return it.\n            //Add extension if it is included. This is a bit wonky, only non-.js things pass\n            //an extension, this method probably needs to be reworked.\n            url = moduleName + (ext || '');\n          } else {\n            //A module that needs to be converted to a path.\n            paths = config.paths;\n            syms = moduleName.split('/'); //For each module name segment, see if there is a path\n            //registered for it. Start with most specific name\n            //and work up from it.\n\n            for (i = syms.length; i > 0; i -= 1) {\n              parentModule = syms.slice(0, i).join('/');\n              parentPath = getOwn(paths, parentModule);\n\n              if (parentPath) {\n                //If an array, it means there are a few choices,\n                //Choose the one that is desired\n                if (isArray(parentPath)) {\n                  parentPath = parentPath[0];\n                }\n\n                syms.splice(0, i, parentPath);\n                break;\n              }\n            } //Join the path parts together, then figure out if baseUrl is needed.\n\n\n            url = syms.join('/');\n            url += ext || (/^data\\:|^blob\\:|\\?/.test(url) || skipExt ? '' : '.js');\n            url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n          }\n\n          return config.urlArgs && !/^blob\\:/.test(url) ? url + config.urlArgs(moduleName, url) : url;\n        },\n        //Delegates to req.load. Broken out as a separate function to\n        //allow overriding in the optimizer.\n        load: function (id, url) {\n          req.load(context, id, url);\n        },\n\n        /**\n         * Executes a module callback function. Broken out as a separate function\n         * solely to allow the build system to sequence the files in the built\n         * layer in the right sequence.\n         *\n         * @private\n         */\n        execCb: function (name, callback, args, exports) {\n          return callback.apply(exports, args);\n        },\n\n        /**\n         * callback for script loads, used to check status of loading.\n         *\n         * @param {Event} evt the event from the browser for the script\n         * that was loaded.\n         */\n        onScriptLoad: function (evt) {\n          //Using currentTarget instead of target for Firefox 2.0's sake. Not\n          //all old browsers will be supported, but this one was easy enough\n          //to support and still makes sense.\n          if (evt.type === 'load' || readyRegExp.test((evt.currentTarget || evt.srcElement).readyState)) {\n            //Reset interactive script so a script node is not held onto for\n            //to long.\n            interactiveScript = null; //Pull out the name of the module and the context.\n\n            var data = getScriptData(evt);\n            context.completeLoad(data.id);\n          }\n        },\n\n        /**\n         * Callback for script errors.\n         */\n        onScriptError: function (evt) {\n          var data = getScriptData(evt);\n\n          if (!hasPathFallback(data.id)) {\n            var parents = [];\n            eachProp(registry, function (value, key) {\n              if (key.indexOf('_@r') !== 0) {\n                each(value.depMaps, function (depMap) {\n                  if (depMap.id === data.id) {\n                    parents.push(key);\n                    return true;\n                  }\n                });\n              }\n            });\n            return onError(makeError('scripterror', 'Script error for \"' + data.id + (parents.length ? '\", needed by: ' + parents.join(', ') : '\"'), evt, [data.id]));\n          }\n        }\n      };\n      context.require = context.makeRequire();\n      return context;\n    }\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n\n\n    req = requirejs = function (deps, callback, errback, optional) {\n      //Find the right context, use default\n      var context,\n          config,\n          contextName = defContextName; // Determine if have config object in the call.\n\n      if (!isArray(deps) && typeof deps !== 'string') {\n        // deps is a config object\n        config = deps;\n\n        if (isArray(callback)) {\n          // Adjust args if there are dependencies\n          deps = callback;\n          callback = errback;\n          errback = optional;\n        } else {\n          deps = [];\n        }\n      }\n\n      if (config && config.context) {\n        contextName = config.context;\n      }\n\n      context = getOwn(contexts, contextName);\n\n      if (!context) {\n        context = contexts[contextName] = req.s.newContext(contextName);\n      }\n\n      if (config) {\n        context.configure(config);\n      }\n\n      return context.require(deps, callback, errback);\n    };\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n\n\n    req.config = function (config) {\n      return req(config);\n    };\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n\n\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n      setTimeout(fn, 4);\n    } : function (fn) {\n      fn();\n    };\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n\n    if (!require) {\n      require = req;\n    }\n\n    req.version = version; //Used to filter out dependencies that are already paths.\n\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n      contexts: contexts,\n      newContext: newContext\n    }; //Create default context.\n\n    req({}); //Exports some context-sensitive methods on global require.\n\n    each(['toUrl', 'undef', 'defined', 'specified'], function (prop) {\n      //Reference from contexts instead of early binding to default context,\n      //so that during builds, the latest instance of the default context\n      //with its config gets used.\n      req[prop] = function () {\n        var ctx = contexts[defContextName];\n        return ctx.require[prop].apply(ctx, arguments);\n      };\n    });\n\n    if (isBrowser) {\n      head = s.head = document.getElementsByTagName('head')[0]; //If BASE tag is in play, using appendChild is a problem for IE6.\n      //When that browser dies, this can be removed. Details in this jQuery bug:\n      //http://dev.jquery.com/ticket/2709\n\n      baseElement = document.getElementsByTagName('base')[0];\n\n      if (baseElement) {\n        head = s.head = baseElement.parentNode;\n      }\n    }\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n\n\n    req.onError = defaultOnError;\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n\n    req.createNode = function (config, moduleName, url) {\n      var node = config.xhtml ? document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') : document.createElement('script');\n      node.type = config.scriptType || 'text/javascript';\n      node.charset = 'utf-8';\n      node.async = true;\n      return node;\n    };\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n\n\n    req.load = function (context, moduleName, url) {\n      var config = context && context.config || {},\n          node;\n\n      if (isBrowser) {\n        //In the browser so use a script tag\n        node = req.createNode(config, moduleName, url);\n        node.setAttribute('data-requirecontext', context.contextName);\n        node.setAttribute('data-requiremodule', moduleName); //Set up load listener. Test attachEvent first because IE9 has\n        //a subtle issue in its addEventListener and script onload firings\n        //that do not match the behavior of all other browsers with\n        //addEventListener support, which fire the onload event for a\n        //script right after the script execution. See:\n        //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n        //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n        //script execution mode.\n\n        if (node.attachEvent && //Check if node.attachEvent is artificially added by custom script or\n        //natively supported by browser\n        //read https://github.com/requirejs/requirejs/issues/187\n        //if we can NOT find [native code] then it must NOT natively supported.\n        //in IE8, node.attachEvent does not have toString()\n        //Note the test for \"[native code\" with no closing brace, see:\n        //https://github.com/requirejs/requirejs/issues/273\n        !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) && !isOpera) {\n          //Probably IE. IE (at least 6-8) do not fire\n          //script onload right after executing the script, so\n          //we cannot tie the anonymous define call to a name.\n          //However, IE reports the script as being in 'interactive'\n          //readyState at the time of the define call.\n          useInteractive = true;\n          node.attachEvent('onreadystatechange', context.onScriptLoad); //It would be great to add an error handler here to catch\n          //404s in IE9+. However, onreadystatechange will fire before\n          //the error handler, so that does not help. If addEventListener\n          //is used, then IE will fire error before load, but we cannot\n          //use that pathway given the connect.microsoft.com issue\n          //mentioned above about not doing the 'script execute,\n          //then fire the script load event listener before execute\n          //next script' that other browsers do.\n          //Best hope: IE10 fixes the issues,\n          //and then destroys all installs of IE 6-9.\n          //node.attachEvent('onerror', context.onScriptError);\n        } else {\n          node.addEventListener('load', context.onScriptLoad, false);\n          node.addEventListener('error', context.onScriptError, false);\n        }\n\n        node.src = url; //Calling onNodeCreated after all properties on the node have been\n        //set, but before it is placed in the DOM.\n\n        if (config.onNodeCreated) {\n          config.onNodeCreated(node, config, moduleName, url);\n        } //For some cache cases in IE 6-8, the script executes before the end\n        //of the appendChild execution, so to tie an anonymous define\n        //call to the module name (which is stored on the node), hold on\n        //to a reference to this node, but clear after the DOM insertion.\n\n\n        currentlyAddingScript = node;\n\n        if (baseElement) {\n          head.insertBefore(node, baseElement);\n        } else {\n          head.appendChild(node);\n        }\n\n        currentlyAddingScript = null;\n        return node;\n      } else if (isWebWorker) {\n        try {\n          //In a web worker, use importScripts. This is not a very\n          //efficient use of importScripts, importScripts will block until\n          //its script is downloaded and evaluated. However, if web workers\n          //are in play, the expectation is that a build has been done so\n          //that only one script needs to be loaded anyway. This may need\n          //to be reevaluated if other use cases become common.\n          // Post a task to the event loop to work around a bug in WebKit\n          // where the worker gets garbage-collected after calling\n          // importScripts(): https://webkit.org/b/153317\n          setTimeout(function () {}, 0);\n          importScripts(url); //Account for anonymous modules\n\n          context.completeLoad(moduleName);\n        } catch (e) {\n          context.onError(makeError('importscripts', 'importScripts failed for ' + moduleName + ' at ' + url, e, [moduleName]));\n        }\n      }\n    };\n\n    function getInteractiveScript() {\n      if (interactiveScript && interactiveScript.readyState === 'interactive') {\n        return interactiveScript;\n      }\n\n      eachReverse(scripts(), function (script) {\n        if (script.readyState === 'interactive') {\n          return interactiveScript = script;\n        }\n      });\n      return interactiveScript;\n    } //Look for a data-main script attribute, which could also adjust the baseUrl.\n\n\n    if (isBrowser && !cfg.skipDataMain) {\n      //Figure out baseUrl. Get it from the script tag with require.js in it.\n      eachReverse(scripts(), function (script) {\n        //Set the 'head' where we can append children by\n        //using the script's parent.\n        if (!head) {\n          head = script.parentNode;\n        } //Look for a data-main attribute to set main script for the page\n        //to load. If it is there, the path to data main becomes the\n        //baseUrl, if it is not already set.\n\n\n        dataMain = script.getAttribute('data-main');\n\n        if (dataMain) {\n          //Preserve dataMain in case it is a path (i.e. contains '?')\n          mainScript = dataMain; //Set final baseUrl if there is not already an explicit one,\n          //but only do so if the data-main value is not a loader plugin\n          //module ID.\n\n          if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\n            //Pull off the directory of data-main for use as the\n            //baseUrl.\n            src = mainScript.split('/');\n            mainScript = src.pop();\n            subPath = src.length ? src.join('/') + '/' : './';\n            cfg.baseUrl = subPath;\n          } //Strip off any trailing .js since mainScript is now\n          //like a module name.\n\n\n          mainScript = mainScript.replace(jsSuffixRegExp, ''); //If mainScript is still a path, fall back to dataMain\n\n          if (req.jsExtRegExp.test(mainScript)) {\n            mainScript = dataMain;\n          } //Put the data-main script in the files to load.\n\n\n          cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n          return true;\n        }\n      });\n    }\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n\n\n    define = function (name, deps, callback) {\n      var node, context; //Allow for anonymous modules\n\n      if (typeof name !== 'string') {\n        //Adjust args appropriately\n        callback = deps;\n        deps = name;\n        name = null;\n      } //This module may not have dependencies\n\n\n      if (!isArray(deps)) {\n        callback = deps;\n        deps = null;\n      } //If no name, and callback is a function, then figure out if it a\n      //CommonJS thing with dependencies.\n\n\n      if (!deps && isFunction(callback)) {\n        deps = []; //Remove comments from the callback string,\n        //look for require calls, and pull them into the dependencies,\n        //but only if there are function args.\n\n        if (callback.length) {\n          callback.toString().replace(commentRegExp, commentReplace).replace(cjsRequireRegExp, function (match, dep) {\n            deps.push(dep);\n          }); //May be a CommonJS thing even without require calls, but still\n          //could use exports, and module. Avoid doing exports and module\n          //work though if it just needs require.\n          //REQUIRES the function to expect the CommonJS variables in the\n          //order listed below.\n\n          deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n        }\n      } //If in IE 6-8 and hit an anonymous define() call, do the interactive\n      //work.\n\n\n      if (useInteractive) {\n        node = currentlyAddingScript || getInteractiveScript();\n\n        if (node) {\n          if (!name) {\n            name = node.getAttribute('data-requiremodule');\n          }\n\n          context = contexts[node.getAttribute('data-requirecontext')];\n        }\n      } //Always save off evaluating the def call until the script onload handler.\n      //This allows multiple modules to be in a file without prematurely\n      //tracing dependencies, and allows for anonymous module support,\n      //where the module name is not known until the script onload event\n      //occurs. If no context, use the global queue, and get it processed\n      //in the onscript load callback.\n\n\n      if (context) {\n        context.defQueue.push([name, deps, callback]);\n        context.defQueueMap[name] = true;\n      } else {\n        globalDefQueue.push([name, deps, callback]);\n      }\n    };\n\n    define.amd = {\n      jQuery: true\n    };\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n\n    req.exec = function (text) {\n      /*jslint evil: true */\n      return eval(text);\n    }; //Set up with config info.\n\n\n    req(cfg);\n  })(this, typeof setTimeout === 'undefined' ? undefined : setTimeout);\n\n  this.requirejsVars = {\n    require: require,\n    requirejs: require,\n    define: define\n  };\n\n  if (env === 'browser') {\n    //sloppy since eval enclosed with use strict causes problems if the source\n    //text is not strict-compliant.\n\n    /*jslint sloppy: true, evil: true */\n\n    /*global require, XMLHttpRequest */\n    (function () {\n      // Separate function to avoid eval pollution, same with arguments use.\n      function exec() {\n        eval(arguments[0]);\n      }\n\n      require.load = function (context, moduleName, url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.send();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            exec(xhr.responseText); //Support anonymous modules.\n\n            context.completeLoad(moduleName);\n          }\n        };\n      };\n    })();\n  } else if (env === 'rhino') {\n    /*global require: false, java: false, load: false */\n    (function () {\n      'use strict';\n\n      require.load = function (context, moduleName, url) {\n        load(url); //Support anonymous modules.\n\n        context.completeLoad(moduleName);\n      };\n    })();\n  } else if (env === 'node') {\n    this.requirejsVars.nodeRequire = nodeRequire;\n    require.nodeRequire = nodeRequire; //Explicity not strict since this file contains an eval call, and do not want\n    //to enforce strict on code evaluated that way. See\n    //https://github.com/requirejs/r.js/issues/774\n\n    /*jslint regexp: false, sloppy: true*/\n\n    /*global require: false, define: false, requirejsVars: false, process: false */\n\n    /**\n     * This adapter assumes that x.js has loaded it and set up\n     * some variables. This adapter just allows limited RequireJS\n     * usage from within the requirejs directory. The general\n     * node adapater is r.js.\n     */\n\n    (function () {\n      var nodeReq = requirejsVars.nodeRequire,\n          req = requirejsVars.require,\n          def = requirejsVars.define,\n          fs = nodeReq('fs'),\n          path = nodeReq('path'),\n          vm = nodeReq('vm'),\n          //In Node 0.7+ existsSync is on fs.\n      exists = fs.existsSync || path.existsSync,\n          hasOwn = Object.prototype.hasOwnProperty;\n\n      function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n      }\n\n      function syncTick(fn) {\n        fn();\n      }\n\n      function makeError(message, moduleName) {\n        var err = new Error(message);\n        err.requireModules = [moduleName];\n        return err;\n      } //Supply an implementation that allows synchronous get of a module.\n\n\n      req.get = function (context, moduleName, relModuleMap, localRequire) {\n        if (moduleName === \"require\" || moduleName === \"exports\" || moduleName === \"module\") {\n          context.onError(makeError(\"Explicit require of \" + moduleName + \" is not allowed.\", moduleName));\n        }\n\n        var ret,\n            oldTick,\n            moduleMap = context.makeModuleMap(moduleName, relModuleMap, false, true); //Normalize module name, if it contains . or ..\n\n        moduleName = moduleMap.id;\n\n        if (hasProp(context.defined, moduleName)) {\n          ret = context.defined[moduleName];\n        } else {\n          if (ret === undefined) {\n            //Make sure nextTick for this type of call is sync-based.\n            oldTick = context.nextTick;\n            context.nextTick = syncTick;\n\n            try {\n              if (moduleMap.prefix) {\n                //A plugin, call requirejs to handle it. Now that\n                //nextTick is syncTick, the require will complete\n                //synchronously.\n                localRequire([moduleMap.originalName]); //Now that plugin is loaded, can regenerate the moduleMap\n                //to get the final, normalized ID.\n\n                moduleMap = context.makeModuleMap(moduleMap.originalName, relModuleMap, false, true);\n                moduleName = moduleMap.id;\n              } else {\n                //Try to dynamically fetch it.\n                req.load(context, moduleName, moduleMap.url); //Enable the module\n\n                context.enable(moduleMap, relModuleMap);\n              } //Break any cycles by requiring it normally, but this will\n              //finish synchronously\n\n\n              context.require([moduleName]); //The above calls are sync, so can do the next thing safely.\n\n\n              ret = context.defined[moduleName];\n            } finally {\n              context.nextTick = oldTick;\n            }\n          }\n        }\n\n        return ret;\n      };\n\n      req.nextTick = function (fn) {\n        process.nextTick(fn);\n      }; //Add wrapper around the code so that it gets the requirejs\n      //API instead of the Node API, and it is done lexically so\n      //that it survives later execution.\n\n\n      req.makeNodeWrapper = function (contents) {\n        return '(function (require, requirejs, define) { ' + contents + '\\n}(requirejsVars.require, requirejsVars.requirejs, requirejsVars.define));';\n      };\n\n      req.load = function (context, moduleName, url) {\n        var contents,\n            err,\n            config = context.config;\n\n        if (config.shim[moduleName] && (!config.suppress || !config.suppress.nodeShim)) {\n          console.warn('Shim config not supported in Node, may or may not work. Detected ' + 'for module: ' + moduleName);\n        }\n\n        if (exists(url)) {\n          contents = fs.readFileSync(url, 'utf8');\n          contents = req.makeNodeWrapper(contents);\n\n          try {\n            vm.runInThisContext(contents, fs.realpathSync(url));\n          } catch (e) {\n            err = new Error('Evaluating ' + url + ' as module \"' + moduleName + '\" failed with error: ' + e);\n            err.originalError = e;\n            err.moduleName = moduleName;\n            err.requireModules = [moduleName];\n            err.fileName = url;\n            return context.onError(err);\n          }\n        } else {\n          def(moduleName, function () {\n            //Get the original name, since relative requires may be\n            //resolved differently in node (issue #202). Also, if relative,\n            //make it relative to the URL of the item requesting it\n            //(issue #393)\n            var dirName,\n                map = hasProp(context.registry, moduleName) && context.registry[moduleName].map,\n                parentMap = map && map.parentMap,\n                originalName = map && map.originalName;\n\n            if (originalName.charAt(0) === '.' && parentMap) {\n              dirName = parentMap.url.split('/');\n              dirName.pop();\n              originalName = dirName.join('/') + '/' + originalName;\n            }\n\n            try {\n              return (context.config.nodeRequire || req.nodeRequire)(originalName);\n            } catch (e) {\n              err = new Error('Tried loading \"' + moduleName + '\" at ' + url + ' then tried node\\'s require(\"' + originalName + '\") and it failed ' + 'with error: ' + e);\n              err.originalError = e;\n              err.moduleName = originalName;\n              err.requireModules = [moduleName];\n              throw err;\n            }\n          });\n        } //Support anonymous modules.\n\n\n        context.completeLoad(moduleName);\n      }; //Override to provide the function wrapper for define/require.\n\n\n      req.exec = function (text) {\n        /*jslint evil: true */\n        text = req.makeNodeWrapper(text);\n        return eval(text);\n      };\n    })();\n  } else if (env === 'xpconnect') {\n    /*jslint */\n\n    /*global require, load */\n    (function () {\n      'use strict';\n\n      require.load = function (context, moduleName, url) {\n        load(url); //Support anonymous modules.\n\n        context.completeLoad(moduleName);\n      };\n    })();\n  } //Support a default file name to execute. Useful for hosted envs\n  //like Joyent where it defaults to a server.js as the only executed\n  //script. But only do it if this is not an optimization run.\n\n\n  if (commandOption !== 'o' && (!fileName || !jsSuffixRegExp.test(fileName))) {\n    fileName = 'main.js';\n  }\n  /**\n   * Loads the library files that can be used for the optimizer, or for other\n   * tasks.\n   */\n\n\n  function loadLib() {\n    /*jslint strict: false */\n\n    /*global Packages: false, process: false, window: false, navigator: false,\n      document: false, define: false */\n\n    /**\n     * A plugin that modifies any /env/ path to be the right path based on\n     * the host environment. Right now only works for Node, Rhino and browser.\n     */\n    (function () {\n      var pathRegExp = /(\\/|^)env\\/|\\{env\\}/,\n          env = 'unknown';\n\n      if (typeof process !== 'undefined' && process.versions && !!process.versions.node) {\n        env = 'node';\n      } else if (typeof Packages !== 'undefined') {\n        env = 'rhino';\n      } else if (typeof navigator !== 'undefined' && typeof document !== 'undefined' || typeof importScripts !== 'undefined' && typeof self !== 'undefined') {\n        env = 'browser';\n      } else if (typeof Components !== 'undefined' && Components.classes && Components.interfaces) {\n        env = 'xpconnect';\n      }\n\n      define('env', {\n        get: function () {\n          return env;\n        },\n        load: function (name, req, load, config) {\n          //Allow override in the config.\n          if (config.env) {\n            env = config.env;\n          }\n\n          name = name.replace(pathRegExp, function (match, prefix) {\n            if (match.indexOf('{') === -1) {\n              return prefix + env + '/';\n            } else {\n              return env;\n            }\n          });\n          req([name], function (mod) {\n            load(mod);\n          });\n        }\n      });\n    })();\n    /*jslint plusplus: true */\n\n    /*global define, java */\n\n\n    define('lang', function () {\n      'use strict';\n\n      var lang,\n          isJavaObj,\n          hasOwn = Object.prototype.hasOwnProperty;\n\n      function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n      }\n\n      isJavaObj = function () {\n        return false;\n      }; //Rhino, but not Nashorn (detected by importPackage not existing)\n      //Can have some strange foreign objects.\n\n\n      if (typeof java !== 'undefined' && java.lang && java.lang.Object && typeof importPackage !== 'undefined') {\n        isJavaObj = function (obj) {\n          return obj instanceof java.lang.Object;\n        };\n      }\n\n      lang = {\n        backSlashRegExp: /\\\\/g,\n        ostring: Object.prototype.toString,\n        isArray: Array.isArray || function (it) {\n          return lang.ostring.call(it) === \"[object Array]\";\n        },\n        isFunction: function (it) {\n          return lang.ostring.call(it) === \"[object Function]\";\n        },\n        isRegExp: function (it) {\n          return it && it instanceof RegExp;\n        },\n        hasProp: hasProp,\n        //returns true if the object does not have an own property prop,\n        //or if it does, it is a falsy value.\n        falseProp: function (obj, prop) {\n          return !hasProp(obj, prop) || !obj[prop];\n        },\n        //gets own property value for given prop on object\n        getOwn: function (obj, prop) {\n          return hasProp(obj, prop) && obj[prop];\n        },\n        _mixin: function (dest, source, override) {\n          var name;\n\n          for (name in source) {\n            if (source.hasOwnProperty(name) && (override || !dest.hasOwnProperty(name))) {\n              dest[name] = source[name];\n            }\n          }\n\n          return dest; // Object\n        },\n\n        /**\n         * mixin({}, obj1, obj2) is allowed. If the last argument is a boolean,\n         * then the source objects properties are force copied over to dest.\n         */\n        mixin: function (dest) {\n          var parameters = Array.prototype.slice.call(arguments),\n              override,\n              i,\n              l;\n\n          if (!dest) {\n            dest = {};\n          }\n\n          if (parameters.length > 2 && typeof arguments[parameters.length - 1] === 'boolean') {\n            override = parameters.pop();\n          }\n\n          for (i = 1, l = parameters.length; i < l; i++) {\n            lang._mixin(dest, parameters[i], override);\n          }\n\n          return dest; // Object\n        },\n\n        /**\n         * Does a deep mix of source into dest, where source values override\n         * dest values if a winner is needed.\n         * @param  {Object} dest destination object that receives the mixed\n         * values.\n         * @param  {Object} source source object contributing properties to mix\n         * in.\n         * @return {[Object]} returns dest object with the modification.\n         */\n        deepMix: function (dest, source) {\n          lang.eachProp(source, function (value, prop) {\n            if (typeof value === 'object' && value && !lang.isArray(value) && !lang.isFunction(value) && !(value instanceof RegExp)) {\n              if (!dest[prop]) {\n                dest[prop] = {};\n              }\n\n              lang.deepMix(dest[prop], value);\n            } else {\n              dest[prop] = value;\n            }\n          });\n          return dest;\n        },\n\n        /**\n         * Does a type of deep copy. Do not give it anything fancy, best\n         * for basic object copies of objects that also work well as\n         * JSON-serialized things, or has properties pointing to functions.\n         * For non-array/object values, just returns the same object.\n         * @param  {Object} obj      copy properties from this object\n         * @param  {Object} [ignoredProps] optional object whose own properties\n         * are keys that should be ignored.\n         * @return {Object}\n         */\n        deeplikeCopy: function (obj, ignoredProps) {\n          var type, result;\n\n          if (lang.isArray(obj)) {\n            result = [];\n            obj.forEach(function (value) {\n              result.push(lang.deeplikeCopy(value, ignoredProps));\n            });\n            return result;\n          }\n\n          type = typeof obj;\n\n          if (obj === null || obj === undefined || type === 'boolean' || type === 'string' || type === 'number' || lang.isFunction(obj) || lang.isRegExp(obj) || isJavaObj(obj)) {\n            return obj;\n          } //Anything else is an object, hopefully.\n\n\n          result = {};\n          lang.eachProp(obj, function (value, key) {\n            if (!ignoredProps || !hasProp(ignoredProps, key)) {\n              result[key] = lang.deeplikeCopy(value, ignoredProps);\n            }\n          });\n          return result;\n        },\n        delegate: function () {\n          // boodman/crockford delegation w/ cornford optimization\n          function TMP() {}\n\n          return function (obj, props) {\n            TMP.prototype = obj;\n            var tmp = new TMP();\n            TMP.prototype = null;\n\n            if (props) {\n              lang.mixin(tmp, props);\n            }\n\n            return tmp; // Object\n          };\n        }(),\n\n        /**\n         * Helper function for iterating over an array. If the func returns\n         * a true value, it will break out of the loop.\n         */\n        each: function each(ary, func) {\n          if (ary) {\n            var i;\n\n            for (i = 0; i < ary.length; i += 1) {\n              if (func(ary[i], i, ary)) {\n                break;\n              }\n            }\n          }\n        },\n\n        /**\n         * Cycles over properties in an object and calls a function for each\n         * property value. If the function returns a truthy value, then the\n         * iteration is stopped.\n         */\n        eachProp: function eachProp(obj, func) {\n          var prop;\n\n          for (prop in obj) {\n            if (hasProp(obj, prop)) {\n              if (func(obj[prop], prop)) {\n                break;\n              }\n            }\n          }\n        },\n        //Similar to Function.prototype.bind, but the \"this\" object is specified\n        //first, since it is easier to read/figure out what \"this\" will be.\n        bind: function bind(obj, fn) {\n          return function () {\n            return fn.apply(obj, arguments);\n          };\n        },\n        //Escapes a content string to be be a string that has characters escaped\n        //for inclusion as part of a JS string.\n        jsEscape: function (content) {\n          return content.replace(/([\"'\\\\])/g, '\\\\$1').replace(/[\\f]/g, \"\\\\f\").replace(/[\\b]/g, \"\\\\b\").replace(/[\\n]/g, \"\\\\n\").replace(/[\\t]/g, \"\\\\t\").replace(/[\\r]/g, \"\\\\r\");\n        }\n      };\n      return lang;\n    });\n    /**\n     * prim 0.0.1 Copyright (c) 2012-2014, The Dojo Foundation All Rights Reserved.\n     * Available via the MIT or new BSD license.\n     * see: http://github.com/requirejs/prim for details\n     */\n\n    /*global setImmediate, process, setTimeout, define, module */\n    //Set prime.hideResolutionConflict = true to allow \"resolution-races\"\n    //in promise-tests to pass.\n    //Since the goal of prim is to be a small impl for trusted code, it is\n    //more important to normally throw in this case so that we can find\n    //logic errors quicker.\n\n    var prim;\n\n    (function () {\n      'use strict';\n\n      var op = Object.prototype,\n          hasOwn = op.hasOwnProperty;\n\n      function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n      }\n      /**\n       * Helper function for iterating over an array. If the func returns\n       * a true value, it will break out of the loop.\n       */\n\n\n      function each(ary, func) {\n        if (ary) {\n          var i;\n\n          for (i = 0; i < ary.length; i += 1) {\n            if (ary[i]) {\n              func(ary[i], i, ary);\n            }\n          }\n        }\n      }\n\n      function check(p) {\n        if (hasProp(p, 'e') || hasProp(p, 'v')) {\n          if (!prim.hideResolutionConflict) {\n            throw new Error('Prim promise already resolved: ' + JSON.stringify(p));\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n      function notify(ary, value) {\n        prim.nextTick(function () {\n          each(ary, function (item) {\n            item(value);\n          });\n        });\n      }\n\n      prim = function prim() {\n        var p,\n            ok = [],\n            fail = [];\n        return p = {\n          callback: function (yes, no) {\n            if (no) {\n              p.errback(no);\n            }\n\n            if (hasProp(p, 'v')) {\n              prim.nextTick(function () {\n                yes(p.v);\n              });\n            } else {\n              ok.push(yes);\n            }\n          },\n          errback: function (no) {\n            if (hasProp(p, 'e')) {\n              prim.nextTick(function () {\n                no(p.e);\n              });\n            } else {\n              fail.push(no);\n            }\n          },\n          finished: function () {\n            return hasProp(p, 'e') || hasProp(p, 'v');\n          },\n          rejected: function () {\n            return hasProp(p, 'e');\n          },\n          resolve: function (v) {\n            if (check(p)) {\n              p.v = v;\n              notify(ok, v);\n            }\n\n            return p;\n          },\n          reject: function (e) {\n            if (check(p)) {\n              p.e = e;\n              notify(fail, e);\n            }\n\n            return p;\n          },\n          start: function (fn) {\n            p.resolve();\n            return p.promise.then(fn);\n          },\n          promise: {\n            then: function (yes, no) {\n              var next = prim();\n              p.callback(function (v) {\n                try {\n                  if (yes && typeof yes === 'function') {\n                    v = yes(v);\n                  }\n\n                  if (v && v.then) {\n                    v.then(next.resolve, next.reject);\n                  } else {\n                    next.resolve(v);\n                  }\n                } catch (e) {\n                  next.reject(e);\n                }\n              }, function (e) {\n                var err;\n\n                try {\n                  if (!no || typeof no !== 'function') {\n                    next.reject(e);\n                  } else {\n                    err = no(e);\n\n                    if (err && err.then) {\n                      err.then(next.resolve, next.reject);\n                    } else {\n                      next.resolve(err);\n                    }\n                  }\n                } catch (e2) {\n                  next.reject(e2);\n                }\n              });\n              return next.promise;\n            },\n            fail: function (no) {\n              return p.promise.then(null, no);\n            },\n            end: function () {\n              p.errback(function (e) {\n                throw e;\n              });\n            }\n          }\n        };\n      };\n\n      prim.serial = function (ary) {\n        var result = prim().resolve().promise;\n        each(ary, function (item) {\n          result = result.then(function () {\n            return item();\n          });\n        });\n        return result;\n      };\n\n      prim.nextTick = typeof setImmediate === 'function' ? setImmediate : typeof process !== 'undefined' && process.nextTick ? process.nextTick : typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 0);\n      } : function (fn) {\n        fn();\n      };\n\n      if (typeof define === 'function' && define.amd) {\n        define('prim', function () {\n          return prim;\n        });\n      } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = prim;\n      }\n    })();\n\n    if (env === 'browser') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      //Just a stub for use with uglify's consolidator.js\n      define('browser/assert', function () {\n        return {};\n      });\n    }\n\n    if (env === 'node') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      //Needed so that rhino/assert can return a stub for uglify's consolidator.js\n      define('node/assert', ['assert'], function (assert) {\n        return assert;\n      });\n    }\n\n    if (env === 'rhino') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      //Just a stub for use with uglify's consolidator.js\n      define('rhino/assert', function () {\n        return {};\n      });\n    }\n\n    if (env === 'xpconnect') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      //Just a stub for use with uglify's consolidator.js\n      define('xpconnect/assert', function () {\n        return {};\n      });\n    }\n\n    if (env === 'browser') {\n      /*jslint strict: false */\n\n      /*global define: false, process: false */\n      define('browser/args', function () {\n        //Always expect config via an API call\n        return [];\n      });\n    }\n\n    if (env === 'node') {\n      /*jslint strict: false */\n\n      /*global define: false, process: false */\n      define('node/args', function () {\n        //Do not return the \"node\" or \"r.js\" arguments\n        var args = process.argv.slice(2); //Ignore any command option used for main x.js branching\n\n        if (args[0] && args[0].indexOf('-') === 0) {\n          args = args.slice(1);\n        }\n\n        return args;\n      });\n    }\n\n    if (env === 'rhino') {\n      /*jslint strict: false */\n\n      /*global define: false, process: false */\n      var jsLibRhinoArgs = typeof rhinoArgs !== 'undefined' && rhinoArgs || [].concat(Array.prototype.slice.call(arguments, 0));\n      define('rhino/args', function () {\n        var args = jsLibRhinoArgs; //Ignore any command option used for main x.js branching\n\n        if (args[0] && args[0].indexOf('-') === 0) {\n          args = args.slice(1);\n        }\n\n        return args;\n      });\n    }\n\n    if (env === 'xpconnect') {\n      /*jslint strict: false */\n\n      /*global define, xpconnectArgs */\n      var jsLibXpConnectArgs = typeof xpconnectArgs !== 'undefined' && xpconnectArgs || [].concat(Array.prototype.slice.call(arguments, 0));\n      define('xpconnect/args', function () {\n        var args = jsLibXpConnectArgs; //Ignore any command option used for main x.js branching\n\n        if (args[0] && args[0].indexOf('-') === 0) {\n          args = args.slice(1);\n        }\n\n        return args;\n      });\n    }\n\n    if (env === 'browser') {\n      /*jslint strict: false */\n\n      /*global define: false, console: false */\n      define('browser/load', ['./file'], function (file) {\n        function load(fileName) {\n          eval(file.readFile(fileName));\n        }\n\n        return load;\n      });\n    }\n\n    if (env === 'node') {\n      /*jslint strict: false */\n\n      /*global define: false, console: false */\n      define('node/load', ['fs'], function (fs) {\n        function load(fileName) {\n          var contents = fs.readFileSync(fileName, 'utf8');\n          process.compile(contents, fileName);\n        }\n\n        return load;\n      });\n    }\n\n    if (env === 'rhino') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      define('rhino/load', function () {\n        return load;\n      });\n    }\n\n    if (env === 'xpconnect') {\n      /*jslint strict: false */\n\n      /*global define: false, load: false */\n      define('xpconnect/load', function () {\n        return load;\n      });\n    }\n\n    if (env === 'browser') {\n      /*jslint sloppy: true, nomen: true */\n\n      /*global require, define, console, XMLHttpRequest, requirejs, location */\n      define('browser/file', ['prim'], function (prim) {\n        var file,\n            currDirRegExp = /^\\.(\\/|$)/;\n\n        function frontSlash(path) {\n          return path.replace(/\\\\/g, '/');\n        }\n\n        function exists(path) {\n          var status,\n              xhr = new XMLHttpRequest(); //Oh yeah, that is right SYNC IO. Behold its glory\n          //and horrible blocking behavior.\n\n          xhr.open('HEAD', path, false);\n          xhr.send();\n          status = xhr.status;\n          return status === 200 || status === 304;\n        }\n\n        function mkDir(dir) {\n          console.log('mkDir is no-op in browser');\n        }\n\n        function mkFullDir(dir) {\n          console.log('mkFullDir is no-op in browser');\n        }\n\n        file = {\n          backSlashRegExp: /\\\\/g,\n          exclusionRegExp: /^\\./,\n          getLineSeparator: function () {\n            return '/';\n          },\n          exists: function (fileName) {\n            return exists(fileName);\n          },\n          parent: function (fileName) {\n            var parts = fileName.split('/');\n            parts.pop();\n            return parts.join('/');\n          },\n\n          /**\n           * Gets the absolute file path as a string, normalized\n           * to using front slashes for path separators.\n           * @param {String} fileName\n           */\n          absPath: function (fileName) {\n            var dir;\n\n            if (currDirRegExp.test(fileName)) {\n              dir = frontSlash(location.href);\n\n              if (dir.indexOf('/') !== -1) {\n                dir = dir.split('/'); //Pull off protocol and host, just want\n                //to allow paths (other build parts, like\n                //require._isSupportedBuildUrl do not support\n                //full URLs), but a full path from\n                //the root.\n\n                dir.splice(0, 3);\n                dir.pop();\n                dir = '/' + dir.join('/');\n              }\n\n              fileName = dir + fileName.substring(1);\n            }\n\n            return fileName;\n          },\n          normalize: function (fileName) {\n            return fileName;\n          },\n          isFile: function (path) {\n            return true;\n          },\n          isDirectory: function (path) {\n            return false;\n          },\n          getFilteredFileList: function (startDir, regExpFilters, makeUnixPaths) {\n            console.log('file.getFilteredFileList is no-op in browser');\n          },\n          copyDir: function (srcDir, destDir, regExpFilter, onlyCopyNew) {\n            console.log('file.copyDir is no-op in browser');\n          },\n          copyFile: function (srcFileName, destFileName, onlyCopyNew) {\n            console.log('file.copyFile is no-op in browser');\n          },\n\n          /**\n           * Renames a file. May fail if \"to\" already exists or is on another drive.\n           */\n          renameFile: function (from, to) {\n            console.log('file.renameFile is no-op in browser');\n          },\n\n          /**\n           * Reads a *text* file.\n           */\n          readFile: function (path, encoding) {\n            var xhr = new XMLHttpRequest(); //Oh yeah, that is right SYNC IO. Behold its glory\n            //and horrible blocking behavior.\n\n            xhr.open('GET', path, false);\n            xhr.send();\n            return xhr.responseText;\n          },\n          readFileAsync: function (path, encoding) {\n            var xhr = new XMLHttpRequest(),\n                d = prim();\n            xhr.open('GET', path, true);\n            xhr.send();\n\n            xhr.onreadystatechange = function () {\n              if (xhr.readyState === 4) {\n                if (xhr.status > 400) {\n                  d.reject(new Error('Status: ' + xhr.status + ': ' + xhr.statusText));\n                } else {\n                  d.resolve(xhr.responseText);\n                }\n              }\n            };\n\n            return d.promise;\n          },\n          saveUtf8File: function (fileName, fileContents) {\n            //summary: saves a *text* file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf8\");\n          },\n          saveFile: function (fileName, fileContents, encoding) {\n            requirejs.browser.saveFile(fileName, fileContents, encoding);\n          },\n          deleteFile: function (fileName) {\n            console.log('file.deleteFile is no-op in browser');\n          },\n\n          /**\n           * Deletes any empty directories under the given directory.\n           */\n          deleteEmptyDirs: function (startDir) {\n            console.log('file.deleteEmptyDirs is no-op in browser');\n          }\n        };\n        return file;\n      });\n    }\n\n    if (env === 'node') {\n      /*jslint plusplus: false, octal:false, strict: false */\n\n      /*global define: false, process: false */\n      define('node/file', ['fs', 'path', 'prim'], function (fs, path, prim) {\n        var isWindows = process.platform === 'win32',\n            windowsDriveRegExp = /^[a-zA-Z]\\:\\/$/,\n            file;\n\n        function frontSlash(path) {\n          return path.replace(/\\\\/g, '/');\n        }\n\n        function exists(path) {\n          if (isWindows && path.charAt(path.length - 1) === '/' && path.charAt(path.length - 2) !== ':') {\n            path = path.substring(0, path.length - 1);\n          }\n\n          try {\n            fs.statSync(path);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n\n        function mkDir(dir) {\n          if (!exists(dir) && (!isWindows || !windowsDriveRegExp.test(dir))) {\n            fs.mkdirSync(dir, 511);\n          }\n        }\n\n        function mkFullDir(dir) {\n          var parts = dir.split('/'),\n              currDir = '',\n              first = true;\n          parts.forEach(function (part) {\n            //First part may be empty string if path starts with a slash.\n            currDir += part + '/';\n            first = false;\n\n            if (part) {\n              mkDir(currDir);\n            }\n          });\n        }\n\n        file = {\n          backSlashRegExp: /\\\\/g,\n          exclusionRegExp: /^\\./,\n          getLineSeparator: function () {\n            return '/';\n          },\n          exists: function (fileName) {\n            return exists(fileName);\n          },\n          parent: function (fileName) {\n            var parts = fileName.split('/');\n            parts.pop();\n            return parts.join('/');\n          },\n\n          /**\n           * Gets the absolute file path as a string, normalized\n           * to using front slashes for path separators.\n           * @param {String} fileName\n           */\n          absPath: function (fileName) {\n            return frontSlash(path.normalize(frontSlash(fs.realpathSync(fileName))));\n          },\n          normalize: function (fileName) {\n            return frontSlash(path.normalize(fileName));\n          },\n          isFile: function (path) {\n            return fs.statSync(path).isFile();\n          },\n          isDirectory: function (path) {\n            return fs.statSync(path).isDirectory();\n          },\n          getFilteredFileList: function (\n          /*String*/\n          startDir,\n          /*RegExp*/\n          regExpFilters,\n          /*boolean?*/\n          makeUnixPaths) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [],\n                topDir,\n                regExpInclude,\n                regExpExclude,\n                dirFileArray,\n                i,\n                stat,\n                filePath,\n                ok,\n                dirFiles,\n                fileName;\n            topDir = startDir;\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (file.exists(topDir)) {\n              dirFileArray = fs.readdirSync(topDir);\n\n              for (i = 0; i < dirFileArray.length; i++) {\n                fileName = dirFileArray[i];\n                filePath = path.join(topDir, fileName);\n                stat = fs.statSync(filePath);\n\n                if (stat.isFile()) {\n                  if (makeUnixPaths) {\n                    //Make sure we have a JS string.\n                    if (filePath.indexOf(\"/\") === -1) {\n                      filePath = frontSlash(filePath);\n                    }\n                  }\n\n                  ok = true;\n\n                  if (regExpInclude) {\n                    ok = filePath.match(regExpInclude);\n                  }\n\n                  if (ok && regExpExclude) {\n                    ok = !filePath.match(regExpExclude);\n                  }\n\n                  if (ok && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileName))) {\n                    files.push(filePath);\n                  }\n                } else if (stat.isDirectory() && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileName))) {\n                  dirFiles = this.getFilteredFileList(filePath, regExpFilters, makeUnixPaths); //Do not use push.apply for dir listings, can hit limit of max number\n                  //of arguments to a function call, #921.\n\n                  dirFiles.forEach(function (dirFile) {\n                    files.push(dirFile);\n                  });\n                }\n              }\n            }\n\n            return files; //Array\n          },\n          copyDir: function (\n          /*String*/\n          srcDir,\n          /*String*/\n          destDir,\n          /*RegExp?*/\n          regExpFilter,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/; //Normalize th directory names, but keep front slashes.\n            //path module on windows now returns backslashed paths.\n\n            srcDir = frontSlash(path.normalize(srcDir));\n            destDir = frontSlash(path.normalize(destDir));\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n                copiedFiles = [],\n                i,\n                srcFileName,\n                destFileName;\n\n            for (i = 0; i < fileNames.length; i++) {\n              srcFileName = fileNames[i];\n              destFileName = srcFileName.replace(srcDir, destDir);\n\n              if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                copiedFiles.push(destFileName);\n              }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n          },\n          copyFile: function (\n          /*String*/\n          srcFileName,\n          /*String*/\n          destFileName,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var parentDir; //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n\n            if (onlyCopyNew) {\n              if (file.exists(destFileName) && fs.statSync(destFileName).mtime.getTime() >= fs.statSync(srcFileName).mtime.getTime()) {\n                return false; //Boolean\n              }\n            } //Make sure destination dir exists.\n\n\n            parentDir = path.dirname(destFileName);\n\n            if (!file.exists(parentDir)) {\n              mkFullDir(parentDir);\n            }\n\n            fs.writeFileSync(destFileName, fs.readFileSync(srcFileName, 'binary'), 'binary');\n            return true; //Boolean\n          },\n\n          /**\n           * Renames a file. May fail if \"to\" already exists or is on another drive.\n           */\n          renameFile: function (from, to) {\n            return fs.renameSync(from, to);\n          },\n\n          /**\n           * Reads a *text* file.\n           */\n          readFile: function (\n          /*String*/\n          path,\n          /*String?*/\n          encoding) {\n            if (encoding === 'utf-8') {\n              encoding = 'utf8';\n            }\n\n            if (!encoding) {\n              encoding = 'utf8';\n            }\n\n            var text = fs.readFileSync(path, encoding); //Hmm, would not expect to get A BOM, but it seems to happen,\n            //remove it just in case.\n\n            if (text.indexOf('\\uFEFF') === 0) {\n              text = text.substring(1, text.length);\n            }\n\n            return text;\n          },\n          readFileAsync: function (path, encoding) {\n            var d = prim();\n\n            try {\n              d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n              d.reject(e);\n            }\n\n            return d.promise;\n          },\n          saveUtf8File: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents) {\n            //summary: saves a *text* file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf8\");\n          },\n          saveFile: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents,\n          /*String?*/\n          encoding) {\n            //summary: saves a *text* file.\n            var parentDir;\n\n            if (encoding === 'utf-8') {\n              encoding = 'utf8';\n            }\n\n            if (!encoding) {\n              encoding = 'utf8';\n            } //Make sure destination directories exist.\n\n\n            parentDir = path.dirname(fileName);\n\n            if (!file.exists(parentDir)) {\n              mkFullDir(parentDir);\n            }\n\n            fs.writeFileSync(fileName, fileContents, encoding);\n          },\n          deleteFile: function (\n          /*String*/\n          fileName) {\n            //summary: deletes a file or directory if it exists.\n            var files, i, stat;\n\n            if (file.exists(fileName)) {\n              stat = fs.lstatSync(fileName);\n\n              if (stat.isDirectory()) {\n                files = fs.readdirSync(fileName);\n\n                for (i = 0; i < files.length; i++) {\n                  this.deleteFile(path.join(fileName, files[i]));\n                }\n\n                fs.rmdirSync(fileName);\n              } else {\n                fs.unlinkSync(fileName);\n              }\n            }\n          },\n\n          /**\n           * Deletes any empty directories under the given directory.\n           */\n          deleteEmptyDirs: function (startDir) {\n            var dirFileArray, i, fileName, filePath, stat;\n\n            if (file.exists(startDir)) {\n              dirFileArray = fs.readdirSync(startDir);\n\n              for (i = 0; i < dirFileArray.length; i++) {\n                fileName = dirFileArray[i];\n                filePath = path.join(startDir, fileName);\n                stat = fs.lstatSync(filePath);\n\n                if (stat.isDirectory()) {\n                  file.deleteEmptyDirs(filePath);\n                }\n              } //If directory is now empty, remove it.\n\n\n              if (fs.readdirSync(startDir).length === 0) {\n                file.deleteFile(startDir);\n              }\n            }\n          }\n        };\n        return file;\n      });\n    }\n\n    if (env === 'rhino') {\n      //Helper functions to deal with file I/O.\n\n      /*jslint plusplus: false */\n\n      /*global java: false, define: false */\n      define('rhino/file', ['prim'], function (prim) {\n        var file = {\n          backSlashRegExp: /\\\\/g,\n          exclusionRegExp: /^\\./,\n          getLineSeparator: function () {\n            return file.lineSeparator;\n          },\n          lineSeparator: java.lang.System.getProperty(\"line.separator\"),\n          //Java String\n          exists: function (fileName) {\n            return new java.io.File(fileName).exists();\n          },\n          parent: function (fileName) {\n            return file.absPath(new java.io.File(fileName).getParentFile());\n          },\n          normalize: function (fileName) {\n            return file.absPath(fileName);\n          },\n          isFile: function (path) {\n            return new java.io.File(path).isFile();\n          },\n          isDirectory: function (path) {\n            return new java.io.File(path).isDirectory();\n          },\n\n          /**\n           * Gets the absolute file path as a string, normalized\n           * to using front slashes for path separators.\n           * @param {java.io.File||String} file\n           */\n          absPath: function (fileObj) {\n            if (typeof fileObj === \"string\") {\n              fileObj = new java.io.File(fileObj);\n            }\n\n            return (fileObj.getCanonicalPath() + \"\").replace(file.backSlashRegExp, \"/\");\n          },\n          getFilteredFileList: function (\n          /*String*/\n          startDir,\n          /*RegExp*/\n          regExpFilters,\n          /*boolean?*/\n          makeUnixPaths,\n          /*boolean?*/\n          startDirIsJavaObject) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [],\n                topDir,\n                regExpInclude,\n                regExpExclude,\n                dirFileArray,\n                i,\n                fileObj,\n                filePath,\n                ok,\n                dirFiles;\n            topDir = startDir;\n\n            if (!startDirIsJavaObject) {\n              topDir = new java.io.File(startDir);\n            }\n\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (topDir.exists()) {\n              dirFileArray = topDir.listFiles();\n\n              for (i = 0; i < dirFileArray.length; i++) {\n                fileObj = dirFileArray[i];\n\n                if (fileObj.isFile()) {\n                  filePath = fileObj.getPath();\n\n                  if (makeUnixPaths) {\n                    //Make sure we have a JS string.\n                    filePath = String(filePath);\n\n                    if (filePath.indexOf(\"/\") === -1) {\n                      filePath = filePath.replace(/\\\\/g, \"/\");\n                    }\n                  }\n\n                  ok = true;\n\n                  if (regExpInclude) {\n                    ok = filePath.match(regExpInclude);\n                  }\n\n                  if (ok && regExpExclude) {\n                    ok = !filePath.match(regExpExclude);\n                  }\n\n                  if (ok && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.getName()))) {\n                    files.push(filePath);\n                  }\n                } else if (fileObj.isDirectory() && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.getName()))) {\n                  dirFiles = this.getFilteredFileList(fileObj, regExpFilters, makeUnixPaths, true); //Do not use push.apply for dir listings, can hit limit of max number\n                  //of arguments to a function call, #921.\n\n                  dirFiles.forEach(function (dirFile) {\n                    files.push(dirFile);\n                  });\n                }\n              }\n            }\n\n            return files; //Array\n          },\n          copyDir: function (\n          /*String*/\n          srcDir,\n          /*String*/\n          destDir,\n          /*RegExp?*/\n          regExpFilter,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/;\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n                copiedFiles = [],\n                i,\n                srcFileName,\n                destFileName;\n\n            for (i = 0; i < fileNames.length; i++) {\n              srcFileName = fileNames[i];\n              destFileName = srcFileName.replace(srcDir, destDir);\n\n              if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                copiedFiles.push(destFileName);\n              }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n          },\n          copyFile: function (\n          /*String*/\n          srcFileName,\n          /*String*/\n          destFileName,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var destFile = new java.io.File(destFileName),\n                srcFile,\n                parentDir,\n                srcChannel,\n                destChannel; //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n\n            if (onlyCopyNew) {\n              srcFile = new java.io.File(srcFileName);\n\n              if (destFile.exists() && destFile.lastModified() >= srcFile.lastModified()) {\n                return false; //Boolean\n              }\n            } //Make sure destination dir exists.\n\n\n            parentDir = destFile.getParentFile();\n\n            if (!parentDir.exists()) {\n              if (!parentDir.mkdirs()) {\n                throw \"Could not create directory: \" + parentDir.getCanonicalPath();\n              }\n            } //Java's version of copy file.\n\n\n            srcChannel = new java.io.FileInputStream(srcFileName).getChannel();\n            destChannel = new java.io.FileOutputStream(destFileName).getChannel();\n            destChannel.transferFrom(srcChannel, 0, srcChannel.size());\n            srcChannel.close();\n            destChannel.close();\n            return true; //Boolean\n          },\n\n          /**\n           * Renames a file. May fail if \"to\" already exists or is on another drive.\n           */\n          renameFile: function (from, to) {\n            return new java.io.File(from).renameTo(new java.io.File(to));\n          },\n          readFile: function (\n          /*String*/\n          path,\n          /*String?*/\n          encoding) {\n            //A file read function that can deal with BOMs\n            encoding = encoding || \"utf-8\";\n            var fileObj = new java.io.File(path),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(fileObj), encoding)),\n                stringBuffer,\n                line;\n\n            try {\n              stringBuffer = new java.lang.StringBuffer();\n              line = input.readLine(); // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n              // http://www.unicode.org/faq/utf_bom.html\n              // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n              // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n\n              if (line && line.length() && line.charAt(0) === 0xfeff) {\n                // Eat the BOM, since we've already found the encoding on this file,\n                // and we plan to concatenating this buffer with others; the BOM should\n                // only appear at the top of a file.\n                line = line.substring(1);\n              }\n\n              while (line !== null) {\n                stringBuffer.append(line);\n                stringBuffer.append(file.lineSeparator);\n                line = input.readLine();\n              } //Make sure we return a JavaScript string and not a Java string.\n\n\n              return String(stringBuffer.toString()); //String\n            } finally {\n              input.close();\n            }\n          },\n          readFileAsync: function (path, encoding) {\n            var d = prim();\n\n            try {\n              d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n              d.reject(e);\n            }\n\n            return d.promise;\n          },\n          saveUtf8File: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents) {\n            //summary: saves a file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf-8\");\n          },\n          saveFile: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents,\n          /*String?*/\n          encoding) {\n            //summary: saves a file.\n            var outFile = new java.io.File(fileName),\n                outWriter,\n                parentDir,\n                os;\n            parentDir = outFile.getAbsoluteFile().getParentFile();\n\n            if (!parentDir.exists()) {\n              if (!parentDir.mkdirs()) {\n                throw \"Could not create directory: \" + parentDir.getAbsolutePath();\n              }\n            }\n\n            if (encoding) {\n              outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile), encoding);\n            } else {\n              outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile));\n            }\n\n            os = new java.io.BufferedWriter(outWriter);\n\n            try {\n              //If in Nashorn, need to coerce the JS string to a Java string so that\n              //writer.write method dispatch correctly detects the type.\n              if (typeof importPackage !== 'undefined') {\n                os.write(fileContents);\n              } else {\n                os.write(new java.lang.String(fileContents));\n              }\n            } finally {\n              os.close();\n            }\n          },\n          deleteFile: function (\n          /*String*/\n          fileName) {\n            //summary: deletes a file or directory if it exists.\n            var fileObj = new java.io.File(fileName),\n                files,\n                i;\n\n            if (fileObj.exists()) {\n              if (fileObj.isDirectory()) {\n                files = fileObj.listFiles();\n\n                for (i = 0; i < files.length; i++) {\n                  this.deleteFile(files[i]);\n                }\n              }\n\n              fileObj[\"delete\"]();\n            }\n          },\n\n          /**\n           * Deletes any empty directories under the given directory.\n           * The startDirIsJavaObject is private to this implementation's\n           * recursion needs.\n           */\n          deleteEmptyDirs: function (startDir, startDirIsJavaObject) {\n            var topDir = startDir,\n                dirFileArray,\n                i,\n                fileObj;\n\n            if (!startDirIsJavaObject) {\n              topDir = new java.io.File(startDir);\n            }\n\n            if (topDir.exists()) {\n              dirFileArray = topDir.listFiles();\n\n              for (i = 0; i < dirFileArray.length; i++) {\n                fileObj = dirFileArray[i];\n\n                if (fileObj.isDirectory()) {\n                  file.deleteEmptyDirs(fileObj, true);\n                }\n              } //If the directory is empty now, delete it.\n\n\n              if (topDir.listFiles().length === 0) {\n                file.deleteFile(String(topDir.getPath()));\n              }\n            }\n          }\n        };\n        return file;\n      });\n    }\n\n    if (env === 'xpconnect') {\n      //Helper functions to deal with file I/O.\n\n      /*jslint plusplus: false */\n\n      /*global define, Components, xpcUtil */\n      define('xpconnect/file', ['prim'], function (prim) {\n        var file,\n            Cc = Components.classes,\n            Ci = Components.interfaces,\n            //Depends on xpcUtil which is set up in x.js\n        xpfile = xpcUtil.xpfile;\n\n        function mkFullDir(dirObj) {\n          //1 is DIRECTORY_TYPE, 511 is 0777 permissions\n          if (!dirObj.exists()) {\n            dirObj.create(1, 511);\n          }\n        }\n\n        file = {\n          backSlashRegExp: /\\\\/g,\n          exclusionRegExp: /^\\./,\n          getLineSeparator: function () {\n            return file.lineSeparator;\n          },\n          lineSeparator: '@mozilla.org/windows-registry-key;1' in Cc ? '\\r\\n' : '\\n',\n          exists: function (fileName) {\n            return xpfile(fileName).exists();\n          },\n          parent: function (fileName) {\n            return xpfile(fileName).parent;\n          },\n          normalize: function (fileName) {\n            return file.absPath(fileName);\n          },\n          isFile: function (path) {\n            return xpfile(path).isFile();\n          },\n          isDirectory: function (path) {\n            return xpfile(path).isDirectory();\n          },\n\n          /**\n           * Gets the absolute file path as a string, normalized\n           * to using front slashes for path separators.\n           * @param {java.io.File||String} file\n           */\n          absPath: function (fileObj) {\n            if (typeof fileObj === \"string\") {\n              fileObj = xpfile(fileObj);\n            }\n\n            return fileObj.path;\n          },\n          getFilteredFileList: function (\n          /*String*/\n          startDir,\n          /*RegExp*/\n          regExpFilters,\n          /*boolean?*/\n          makeUnixPaths,\n          /*boolean?*/\n          startDirIsObject) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [],\n                topDir,\n                regExpInclude,\n                regExpExclude,\n                dirFileArray,\n                fileObj,\n                filePath,\n                ok,\n                dirFiles;\n            topDir = startDir;\n\n            if (!startDirIsObject) {\n              topDir = xpfile(startDir);\n            }\n\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (topDir.exists()) {\n              dirFileArray = topDir.directoryEntries;\n\n              while (dirFileArray.hasMoreElements()) {\n                fileObj = dirFileArray.getNext().QueryInterface(Ci.nsILocalFile);\n\n                if (fileObj.isFile()) {\n                  filePath = fileObj.path;\n\n                  if (makeUnixPaths) {\n                    if (filePath.indexOf(\"/\") === -1) {\n                      filePath = filePath.replace(/\\\\/g, \"/\");\n                    }\n                  }\n\n                  ok = true;\n\n                  if (regExpInclude) {\n                    ok = filePath.match(regExpInclude);\n                  }\n\n                  if (ok && regExpExclude) {\n                    ok = !filePath.match(regExpExclude);\n                  }\n\n                  if (ok && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.leafName))) {\n                    files.push(filePath);\n                  }\n                } else if (fileObj.isDirectory() && (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.leafName))) {\n                  dirFiles = this.getFilteredFileList(fileObj, regExpFilters, makeUnixPaths, true); //Do not use push.apply for dir listings, can hit limit of max number\n                  //of arguments to a function call, #921.\n\n                  dirFiles.forEach(function (dirFile) {\n                    files.push(dirFile);\n                  });\n                }\n              }\n            }\n\n            return files; //Array\n          },\n          copyDir: function (\n          /*String*/\n          srcDir,\n          /*String*/\n          destDir,\n          /*RegExp?*/\n          regExpFilter,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/;\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n                copiedFiles = [],\n                i,\n                srcFileName,\n                destFileName;\n\n            for (i = 0; i < fileNames.length; i += 1) {\n              srcFileName = fileNames[i];\n              destFileName = srcFileName.replace(srcDir, destDir);\n\n              if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                copiedFiles.push(destFileName);\n              }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n          },\n          copyFile: function (\n          /*String*/\n          srcFileName,\n          /*String*/\n          destFileName,\n          /*boolean?*/\n          onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var destFile = xpfile(destFileName),\n                srcFile = xpfile(srcFileName); //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n\n            if (onlyCopyNew) {\n              if (destFile.exists() && destFile.lastModifiedTime >= srcFile.lastModifiedTime) {\n                return false; //Boolean\n              }\n            }\n\n            srcFile.copyTo(destFile.parent, destFile.leafName);\n            return true; //Boolean\n          },\n\n          /**\n           * Renames a file. May fail if \"to\" already exists or is on another drive.\n           */\n          renameFile: function (from, to) {\n            var toFile = xpfile(to);\n            return xpfile(from).moveTo(toFile.parent, toFile.leafName);\n          },\n          readFile: xpcUtil.readFile,\n          readFileAsync: function (path, encoding) {\n            var d = prim();\n\n            try {\n              d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n              d.reject(e);\n            }\n\n            return d.promise;\n          },\n          saveUtf8File: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents) {\n            //summary: saves a file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf-8\");\n          },\n          saveFile: function (\n          /*String*/\n          fileName,\n          /*String*/\n          fileContents,\n          /*String?*/\n          encoding) {\n            var outStream,\n                convertStream,\n                fileObj = xpfile(fileName);\n            mkFullDir(fileObj.parent);\n\n            try {\n              outStream = Cc['@mozilla.org/network/file-output-stream;1'].createInstance(Ci.nsIFileOutputStream); //438 is decimal for 0777\n\n              outStream.init(fileObj, 0x02 | 0x08 | 0x20, 511, 0);\n              convertStream = Cc['@mozilla.org/intl/converter-output-stream;1'].createInstance(Ci.nsIConverterOutputStream);\n              convertStream.init(outStream, encoding, 0, 0);\n              convertStream.writeString(fileContents);\n            } catch (e) {\n              throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            } finally {\n              if (convertStream) {\n                convertStream.close();\n              }\n\n              if (outStream) {\n                outStream.close();\n              }\n            }\n          },\n          deleteFile: function (\n          /*String*/\n          fileName) {\n            //summary: deletes a file or directory if it exists.\n            var fileObj = xpfile(fileName);\n\n            if (fileObj.exists()) {\n              fileObj.remove(true);\n            }\n          },\n\n          /**\n           * Deletes any empty directories under the given directory.\n           * The startDirIsJavaObject is private to this implementation's\n           * recursion needs.\n           */\n          deleteEmptyDirs: function (startDir, startDirIsObject) {\n            var topDir = startDir,\n                dirFileArray,\n                fileObj;\n\n            if (!startDirIsObject) {\n              topDir = xpfile(startDir);\n            }\n\n            if (topDir.exists()) {\n              dirFileArray = topDir.directoryEntries;\n\n              while (dirFileArray.hasMoreElements()) {\n                fileObj = dirFileArray.getNext().QueryInterface(Ci.nsILocalFile);\n\n                if (fileObj.isDirectory()) {\n                  file.deleteEmptyDirs(fileObj, true);\n                }\n              } //If the directory is empty now, delete it.\n\n\n              dirFileArray = topDir.directoryEntries;\n\n              if (!dirFileArray.hasMoreElements()) {\n                file.deleteFile(topDir.path);\n              }\n            }\n          }\n        };\n        return file;\n      });\n    }\n\n    if (env === 'browser') {\n      /*global process */\n      define('browser/quit', function () {\n        'use strict';\n\n        return function (code) {};\n      });\n    }\n\n    if (env === 'node') {\n      /*global process */\n      define('node/quit', function () {\n        'use strict';\n\n        return function (code) {\n          var draining = 0;\n\n          var exit = function () {\n            if (draining === 0) {\n              process.exit(code);\n            } else {\n              draining -= 1;\n            }\n          };\n\n          if (process.stdout.bufferSize) {\n            draining += 1;\n            process.stdout.once('drain', exit);\n          }\n\n          if (process.stderr.bufferSize) {\n            draining += 1;\n            process.stderr.once('drain', exit);\n          }\n\n          exit();\n        };\n      });\n    }\n\n    if (env === 'rhino') {\n      /*global quit */\n      define('rhino/quit', function () {\n        'use strict';\n\n        return function (code) {\n          return quit(code);\n        };\n      });\n    }\n\n    if (env === 'xpconnect') {\n      /*global quit */\n      define('xpconnect/quit', function () {\n        'use strict';\n\n        return function (code) {\n          return quit(code);\n        };\n      });\n    }\n\n    if (env === 'browser') {\n      /*jslint strict: false */\n\n      /*global define: false, console: false */\n      define('browser/print', function () {\n        function print(msg) {\n          console.log(msg);\n        }\n\n        return print;\n      });\n    }\n\n    if (env === 'node') {\n      /*jslint strict: false */\n\n      /*global define: false, console: false */\n      define('node/print', function () {\n        function print(msg) {\n          console.log(msg);\n        }\n\n        return print;\n      });\n    }\n\n    if (env === 'rhino') {\n      /*jslint strict: false */\n\n      /*global define: false, print: false */\n      define('rhino/print', function () {\n        return print;\n      });\n    }\n\n    if (env === 'xpconnect') {\n      /*jslint strict: false */\n\n      /*global define: false, print: false */\n      define('xpconnect/print', function () {\n        return print;\n      });\n    }\n    /*jslint nomen: false, strict: false */\n\n    /*global define: false */\n\n\n    define('logger', ['env!env/print'], function (print) {\n      var logger = {\n        TRACE: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        SILENT: 4,\n        level: 0,\n        logPrefix: \"\",\n        logLevel: function (level) {\n          this.level = level;\n        },\n        trace: function (message) {\n          if (this.level <= this.TRACE) {\n            this._print(message);\n          }\n        },\n        info: function (message) {\n          if (this.level <= this.INFO) {\n            this._print(message);\n          }\n        },\n        warn: function (message) {\n          if (this.level <= this.WARN) {\n            this._print(message);\n          }\n        },\n        error: function (message) {\n          if (this.level <= this.ERROR) {\n            this._print(message);\n          }\n        },\n        _print: function (message) {\n          this._sysPrint((this.logPrefix ? this.logPrefix + \" \" : \"\") + message);\n        },\n        _sysPrint: function (message) {\n          print(message);\n        }\n      };\n      return logger;\n    }); //Just a blank file to use when building the optimizer with the optimizer,\n    //so that the build does not attempt to inline some env modules,\n    //like Node's fs and path.\n\n    (function webpackUniversalModuleDefinition(root, factory) {\n      /* istanbul ignore next */\n      if (typeof define === 'function' && define.amd) define('esprima', [], factory);else if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();\n      /* istanbul ignore next */\n      else if (typeof exports === 'object') exports[\"esprima\"] = factory();else root[\"esprima\"] = factory();\n    })(this, function () {\n      return (\n        /******/\n        function (modules) {\n          // webpackBootstrap\n\n          /******/\n          // The module cache\n\n          /******/\n          var installedModules = {};\n          /******/\n          // The require function\n\n          /******/\n\n          function __webpack_require__(moduleId) {\n            /******/\n            // Check if module is in cache\n\n            /* istanbul ignore if */\n\n            /******/\n            if (installedModules[moduleId])\n              /******/\n              return installedModules[moduleId].exports;\n            /******/\n            // Create a new module (and put it into the cache)\n\n            /******/\n\n            var module = installedModules[moduleId] = {\n              /******/\n              exports: {},\n\n              /******/\n              id: moduleId,\n\n              /******/\n              loaded: false\n              /******/\n\n            };\n            /******/\n            // Execute the module function\n\n            /******/\n\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            /******/\n            // Flag the module as loaded\n\n            /******/\n\n            module.loaded = true;\n            /******/\n            // Return the exports of the module\n\n            /******/\n\n            return module.exports;\n            /******/\n          }\n          /******/\n          // expose the modules object (__webpack_modules__)\n\n          /******/\n\n\n          __webpack_require__.m = modules;\n          /******/\n          // expose the module cache\n\n          /******/\n\n          __webpack_require__.c = installedModules;\n          /******/\n          // __webpack_public_path__\n\n          /******/\n\n          __webpack_require__.p = \"\";\n          /******/\n          // Load entry module and return exports\n\n          /******/\n\n          return __webpack_require__(0);\n          /******/\n        }(\n        /************************************************************************/\n\n        /******/\n        [\n        /* 0 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n          /*\n            Copyright JS Foundation and other contributors, https://js.foundation/\n          \t  Redistribution and use in source and binary forms, with or without\n            modification, are permitted provided that the following conditions are met:\n          \t    * Redistributions of source code must retain the above copyright\n                notice, this list of conditions and the following disclaimer.\n              * Redistributions in binary form must reproduce the above copyright\n                notice, this list of conditions and the following disclaimer in the\n                documentation and/or other materials provided with the distribution.\n          \t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n            AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n            IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n            ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n            DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n            (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n            ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n            (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n            THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          */\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var comment_handler_1 = __webpack_require__(1);\n\n          var jsx_parser_1 = __webpack_require__(3);\n\n          var parser_1 = __webpack_require__(8);\n\n          var tokenizer_1 = __webpack_require__(15);\n\n          function parse(code, options, delegate) {\n            var commentHandler = null;\n\n            var proxyDelegate = function (node, metadata) {\n              if (delegate) {\n                delegate(node, metadata);\n              }\n\n              if (commentHandler) {\n                commentHandler.visit(node, metadata);\n              }\n            };\n\n            var parserDelegate = typeof delegate === 'function' ? proxyDelegate : null;\n            var collectComment = false;\n\n            if (options) {\n              collectComment = typeof options.comment === 'boolean' && options.comment;\n              var attachComment = typeof options.attachComment === 'boolean' && options.attachComment;\n\n              if (collectComment || attachComment) {\n                commentHandler = new comment_handler_1.CommentHandler();\n                commentHandler.attach = attachComment;\n                options.comment = true;\n                parserDelegate = proxyDelegate;\n              }\n            }\n\n            var isModule = false;\n\n            if (options && typeof options.sourceType === 'string') {\n              isModule = options.sourceType === 'module';\n            }\n\n            var parser;\n\n            if (options && typeof options.jsx === 'boolean' && options.jsx) {\n              parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n            } else {\n              parser = new parser_1.Parser(code, options, parserDelegate);\n            }\n\n            var program = isModule ? parser.parseModule() : parser.parseScript();\n            var ast = program;\n\n            if (collectComment && commentHandler) {\n              ast.comments = commentHandler.comments;\n            }\n\n            if (parser.config.tokens) {\n              ast.tokens = parser.tokens;\n            }\n\n            if (parser.config.tolerant) {\n              ast.errors = parser.errorHandler.errors;\n            }\n\n            return ast;\n          }\n\n          exports.parse = parse;\n\n          function parseModule(code, options, delegate) {\n            var parsingOptions = options || {};\n            parsingOptions.sourceType = 'module';\n            return parse(code, parsingOptions, delegate);\n          }\n\n          exports.parseModule = parseModule;\n\n          function parseScript(code, options, delegate) {\n            var parsingOptions = options || {};\n            parsingOptions.sourceType = 'script';\n            return parse(code, parsingOptions, delegate);\n          }\n\n          exports.parseScript = parseScript;\n\n          function tokenize(code, options, delegate) {\n            var tokenizer = new tokenizer_1.Tokenizer(code, options);\n            var tokens;\n            tokens = [];\n\n            try {\n              while (true) {\n                var token = tokenizer.getNextToken();\n\n                if (!token) {\n                  break;\n                }\n\n                if (delegate) {\n                  token = delegate(token);\n                }\n\n                tokens.push(token);\n              }\n            } catch (e) {\n              tokenizer.errorHandler.tolerate(e);\n            }\n\n            if (tokenizer.errorHandler.tolerant) {\n              tokens.errors = tokenizer.errors();\n            }\n\n            return tokens;\n          }\n\n          exports.tokenize = tokenize;\n\n          var syntax_1 = __webpack_require__(2);\n\n          exports.Syntax = syntax_1.Syntax; // Sync with *.json manifests.\n\n          exports.version = '4.0.1';\n          /***/\n        },\n        /* 1 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var syntax_1 = __webpack_require__(2);\n\n          var CommentHandler = function () {\n            function CommentHandler() {\n              this.attach = false;\n              this.comments = [];\n              this.stack = [];\n              this.leading = [];\n              this.trailing = [];\n            }\n\n            CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n              //  innnerComments for properties empty block\n              //  `function a() {/** comments **\\/}`\n              if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n                var innerComments = [];\n\n                for (var i = this.leading.length - 1; i >= 0; --i) {\n                  var entry = this.leading[i];\n\n                  if (metadata.end.offset >= entry.start) {\n                    innerComments.unshift(entry.comment);\n                    this.leading.splice(i, 1);\n                    this.trailing.splice(i, 1);\n                  }\n                }\n\n                if (innerComments.length) {\n                  node.innerComments = innerComments;\n                }\n              }\n            };\n\n            CommentHandler.prototype.findTrailingComments = function (metadata) {\n              var trailingComments = [];\n\n              if (this.trailing.length > 0) {\n                for (var i = this.trailing.length - 1; i >= 0; --i) {\n                  var entry_1 = this.trailing[i];\n\n                  if (entry_1.start >= metadata.end.offset) {\n                    trailingComments.unshift(entry_1.comment);\n                  }\n                }\n\n                this.trailing.length = 0;\n                return trailingComments;\n              }\n\n              var entry = this.stack[this.stack.length - 1];\n\n              if (entry && entry.node.trailingComments) {\n                var firstComment = entry.node.trailingComments[0];\n\n                if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n                  trailingComments = entry.node.trailingComments;\n                  delete entry.node.trailingComments;\n                }\n              }\n\n              return trailingComments;\n            };\n\n            CommentHandler.prototype.findLeadingComments = function (metadata) {\n              var leadingComments = [];\n              var target;\n\n              while (this.stack.length > 0) {\n                var entry = this.stack[this.stack.length - 1];\n\n                if (entry && entry.start >= metadata.start.offset) {\n                  target = entry.node;\n                  this.stack.pop();\n                } else {\n                  break;\n                }\n              }\n\n              if (target) {\n                var count = target.leadingComments ? target.leadingComments.length : 0;\n\n                for (var i = count - 1; i >= 0; --i) {\n                  var comment = target.leadingComments[i];\n\n                  if (comment.range[1] <= metadata.start.offset) {\n                    leadingComments.unshift(comment);\n                    target.leadingComments.splice(i, 1);\n                  }\n                }\n\n                if (target.leadingComments && target.leadingComments.length === 0) {\n                  delete target.leadingComments;\n                }\n\n                return leadingComments;\n              }\n\n              for (var i = this.leading.length - 1; i >= 0; --i) {\n                var entry = this.leading[i];\n\n                if (entry.start <= metadata.start.offset) {\n                  leadingComments.unshift(entry.comment);\n                  this.leading.splice(i, 1);\n                }\n              }\n\n              return leadingComments;\n            };\n\n            CommentHandler.prototype.visitNode = function (node, metadata) {\n              if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n                return;\n              }\n\n              this.insertInnerComments(node, metadata);\n              var trailingComments = this.findTrailingComments(metadata);\n              var leadingComments = this.findLeadingComments(metadata);\n\n              if (leadingComments.length > 0) {\n                node.leadingComments = leadingComments;\n              }\n\n              if (trailingComments.length > 0) {\n                node.trailingComments = trailingComments;\n              }\n\n              this.stack.push({\n                node: node,\n                start: metadata.start.offset\n              });\n            };\n\n            CommentHandler.prototype.visitComment = function (node, metadata) {\n              var type = node.type[0] === 'L' ? 'Line' : 'Block';\n              var comment = {\n                type: type,\n                value: node.value\n              };\n\n              if (node.range) {\n                comment.range = node.range;\n              }\n\n              if (node.loc) {\n                comment.loc = node.loc;\n              }\n\n              this.comments.push(comment);\n\n              if (this.attach) {\n                var entry = {\n                  comment: {\n                    type: type,\n                    value: node.value,\n                    range: [metadata.start.offset, metadata.end.offset]\n                  },\n                  start: metadata.start.offset\n                };\n\n                if (node.loc) {\n                  entry.comment.loc = node.loc;\n                }\n\n                node.type = type;\n                this.leading.push(entry);\n                this.trailing.push(entry);\n              }\n            };\n\n            CommentHandler.prototype.visit = function (node, metadata) {\n              if (node.type === 'LineComment') {\n                this.visitComment(node, metadata);\n              } else if (node.type === 'BlockComment') {\n                this.visitComment(node, metadata);\n              } else if (this.attach) {\n                this.visitNode(node, metadata);\n              }\n            };\n\n            return CommentHandler;\n          }();\n\n          exports.CommentHandler = CommentHandler;\n          /***/\n        },\n        /* 2 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.Syntax = {\n            AssignmentExpression: 'AssignmentExpression',\n            AssignmentPattern: 'AssignmentPattern',\n            ArrayExpression: 'ArrayExpression',\n            ArrayPattern: 'ArrayPattern',\n            ArrowFunctionExpression: 'ArrowFunctionExpression',\n            AwaitExpression: 'AwaitExpression',\n            BlockStatement: 'BlockStatement',\n            BinaryExpression: 'BinaryExpression',\n            BreakStatement: 'BreakStatement',\n            CallExpression: 'CallExpression',\n            CatchClause: 'CatchClause',\n            ClassBody: 'ClassBody',\n            ClassDeclaration: 'ClassDeclaration',\n            ClassExpression: 'ClassExpression',\n            ConditionalExpression: 'ConditionalExpression',\n            ContinueStatement: 'ContinueStatement',\n            DoWhileStatement: 'DoWhileStatement',\n            DebuggerStatement: 'DebuggerStatement',\n            EmptyStatement: 'EmptyStatement',\n            ExportAllDeclaration: 'ExportAllDeclaration',\n            ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n            ExportNamedDeclaration: 'ExportNamedDeclaration',\n            ExportSpecifier: 'ExportSpecifier',\n            ExpressionStatement: 'ExpressionStatement',\n            ForStatement: 'ForStatement',\n            ForOfStatement: 'ForOfStatement',\n            ForInStatement: 'ForInStatement',\n            FunctionDeclaration: 'FunctionDeclaration',\n            FunctionExpression: 'FunctionExpression',\n            Identifier: 'Identifier',\n            IfStatement: 'IfStatement',\n            ImportDeclaration: 'ImportDeclaration',\n            ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n            ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n            ImportSpecifier: 'ImportSpecifier',\n            Literal: 'Literal',\n            LabeledStatement: 'LabeledStatement',\n            LogicalExpression: 'LogicalExpression',\n            MemberExpression: 'MemberExpression',\n            MetaProperty: 'MetaProperty',\n            MethodDefinition: 'MethodDefinition',\n            NewExpression: 'NewExpression',\n            ObjectExpression: 'ObjectExpression',\n            ObjectPattern: 'ObjectPattern',\n            Program: 'Program',\n            Property: 'Property',\n            RestElement: 'RestElement',\n            ReturnStatement: 'ReturnStatement',\n            SequenceExpression: 'SequenceExpression',\n            SpreadElement: 'SpreadElement',\n            Super: 'Super',\n            SwitchCase: 'SwitchCase',\n            SwitchStatement: 'SwitchStatement',\n            TaggedTemplateExpression: 'TaggedTemplateExpression',\n            TemplateElement: 'TemplateElement',\n            TemplateLiteral: 'TemplateLiteral',\n            ThisExpression: 'ThisExpression',\n            ThrowStatement: 'ThrowStatement',\n            TryStatement: 'TryStatement',\n            UnaryExpression: 'UnaryExpression',\n            UpdateExpression: 'UpdateExpression',\n            VariableDeclaration: 'VariableDeclaration',\n            VariableDeclarator: 'VariableDeclarator',\n            WhileStatement: 'WhileStatement',\n            WithStatement: 'WithStatement',\n            YieldExpression: 'YieldExpression'\n          };\n          /***/\n        },\n        /* 3 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n          /* istanbul ignore next */\n\n          var __extends = this && this.__extends || function () {\n            var extendStatics = Object.setPrototypeOf || {\n              __proto__: []\n            } instanceof Array && function (d, b) {\n              d.__proto__ = b;\n            } || function (d, b) {\n              for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            };\n\n            return function (d, b) {\n              extendStatics(d, b);\n\n              function __() {\n                this.constructor = d;\n              }\n\n              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n          }();\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var character_1 = __webpack_require__(4);\n\n          var JSXNode = __webpack_require__(5);\n\n          var jsx_syntax_1 = __webpack_require__(6);\n\n          var Node = __webpack_require__(7);\n\n          var parser_1 = __webpack_require__(8);\n\n          var token_1 = __webpack_require__(13);\n\n          var xhtml_entities_1 = __webpack_require__(14);\n\n          token_1.TokenName[100\n          /* Identifier */\n          ] = 'JSXIdentifier';\n          token_1.TokenName[101\n          /* Text */\n          ] = 'JSXText'; // Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\n          function getQualifiedElementName(elementName) {\n            var qualifiedName;\n\n            switch (elementName.type) {\n              case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n                var id = elementName;\n                qualifiedName = id.name;\n                break;\n\n              case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n                var ns = elementName;\n                qualifiedName = getQualifiedElementName(ns.namespace) + ':' + getQualifiedElementName(ns.name);\n                break;\n\n              case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n                var expr = elementName;\n                qualifiedName = getQualifiedElementName(expr.object) + '.' + getQualifiedElementName(expr.property);\n                break;\n\n              /* istanbul ignore next */\n\n              default:\n                break;\n            }\n\n            return qualifiedName;\n          }\n\n          var JSXParser = function (_super) {\n            __extends(JSXParser, _super);\n\n            function JSXParser(code, options, delegate) {\n              return _super.call(this, code, options, delegate) || this;\n            }\n\n            JSXParser.prototype.parsePrimaryExpression = function () {\n              return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n            };\n\n            JSXParser.prototype.startJSX = function () {\n              // Unwind the scanner before the lookahead token.\n              this.scanner.index = this.startMarker.index;\n              this.scanner.lineNumber = this.startMarker.line;\n              this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n            };\n\n            JSXParser.prototype.finishJSX = function () {\n              // Prime the next lookahead.\n              this.nextToken();\n            };\n\n            JSXParser.prototype.reenterJSX = function () {\n              this.startJSX();\n              this.expectJSX('}'); // Pop the closing '}' added from the lookahead.\n\n              if (this.config.tokens) {\n                this.tokens.pop();\n              }\n            };\n\n            JSXParser.prototype.createJSXNode = function () {\n              this.collectComments();\n              return {\n                index: this.scanner.index,\n                line: this.scanner.lineNumber,\n                column: this.scanner.index - this.scanner.lineStart\n              };\n            };\n\n            JSXParser.prototype.createJSXChildNode = function () {\n              return {\n                index: this.scanner.index,\n                line: this.scanner.lineNumber,\n                column: this.scanner.index - this.scanner.lineStart\n              };\n            };\n\n            JSXParser.prototype.scanXHTMLEntity = function (quote) {\n              var result = '&';\n              var valid = true;\n              var terminated = false;\n              var numeric = false;\n              var hex = false;\n\n              while (!this.scanner.eof() && valid && !terminated) {\n                var ch = this.scanner.source[this.scanner.index];\n\n                if (ch === quote) {\n                  break;\n                }\n\n                terminated = ch === ';';\n                result += ch;\n                ++this.scanner.index;\n\n                if (!terminated) {\n                  switch (result.length) {\n                    case 2:\n                      // e.g. '&#123;'\n                      numeric = ch === '#';\n                      break;\n\n                    case 3:\n                      if (numeric) {\n                        // e.g. '&#x41;'\n                        hex = ch === 'x';\n                        valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n                        numeric = numeric && !hex;\n                      }\n\n                      break;\n\n                    default:\n                      valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n                      valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n                      break;\n                  }\n                }\n              }\n\n              if (valid && terminated && result.length > 2) {\n                // e.g. '&#x41;' becomes just '#x41'\n                var str = result.substr(1, result.length - 2);\n\n                if (numeric && str.length > 1) {\n                  result = String.fromCharCode(parseInt(str.substr(1), 10));\n                } else if (hex && str.length > 2) {\n                  result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n                } else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n                  result = xhtml_entities_1.XHTMLEntities[str];\n                }\n              }\n\n              return result;\n            }; // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\n\n            JSXParser.prototype.lexJSX = function () {\n              var cp = this.scanner.source.charCodeAt(this.scanner.index); // < > / : = { }\n\n              if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n                var value = this.scanner.source[this.scanner.index++];\n                return {\n                  type: 7\n                  /* Punctuator */\n                  ,\n                  value: value,\n                  lineNumber: this.scanner.lineNumber,\n                  lineStart: this.scanner.lineStart,\n                  start: this.scanner.index - 1,\n                  end: this.scanner.index\n                };\n              } // \" '\n\n\n              if (cp === 34 || cp === 39) {\n                var start = this.scanner.index;\n                var quote = this.scanner.source[this.scanner.index++];\n                var str = '';\n\n                while (!this.scanner.eof()) {\n                  var ch = this.scanner.source[this.scanner.index++];\n\n                  if (ch === quote) {\n                    break;\n                  } else if (ch === '&') {\n                    str += this.scanXHTMLEntity(quote);\n                  } else {\n                    str += ch;\n                  }\n                }\n\n                return {\n                  type: 8\n                  /* StringLiteral */\n                  ,\n                  value: str,\n                  lineNumber: this.scanner.lineNumber,\n                  lineStart: this.scanner.lineStart,\n                  start: start,\n                  end: this.scanner.index\n                };\n              } // ... or .\n\n\n              if (cp === 46) {\n                var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n                var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n                var value = n1 === 46 && n2 === 46 ? '...' : '.';\n                var start = this.scanner.index;\n                this.scanner.index += value.length;\n                return {\n                  type: 7\n                  /* Punctuator */\n                  ,\n                  value: value,\n                  lineNumber: this.scanner.lineNumber,\n                  lineStart: this.scanner.lineStart,\n                  start: start,\n                  end: this.scanner.index\n                };\n              } // `\n\n\n              if (cp === 96) {\n                // Only placeholder, since it will be rescanned as a real assignment expression.\n                return {\n                  type: 10\n                  /* Template */\n                  ,\n                  value: '',\n                  lineNumber: this.scanner.lineNumber,\n                  lineStart: this.scanner.lineStart,\n                  start: this.scanner.index,\n                  end: this.scanner.index\n                };\n              } // Identifer can not contain backslash (char code 92).\n\n\n              if (character_1.Character.isIdentifierStart(cp) && cp !== 92) {\n                var start = this.scanner.index;\n                ++this.scanner.index;\n\n                while (!this.scanner.eof()) {\n                  var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\n                  if (character_1.Character.isIdentifierPart(ch) && ch !== 92) {\n                    ++this.scanner.index;\n                  } else if (ch === 45) {\n                    // Hyphen (char code 45) can be part of an identifier.\n                    ++this.scanner.index;\n                  } else {\n                    break;\n                  }\n                }\n\n                var id = this.scanner.source.slice(start, this.scanner.index);\n                return {\n                  type: 100\n                  /* Identifier */\n                  ,\n                  value: id,\n                  lineNumber: this.scanner.lineNumber,\n                  lineStart: this.scanner.lineStart,\n                  start: start,\n                  end: this.scanner.index\n                };\n              }\n\n              return this.scanner.lex();\n            };\n\n            JSXParser.prototype.nextJSXToken = function () {\n              this.collectComments();\n              this.startMarker.index = this.scanner.index;\n              this.startMarker.line = this.scanner.lineNumber;\n              this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n              var token = this.lexJSX();\n              this.lastMarker.index = this.scanner.index;\n              this.lastMarker.line = this.scanner.lineNumber;\n              this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\n              if (this.config.tokens) {\n                this.tokens.push(this.convertToken(token));\n              }\n\n              return token;\n            };\n\n            JSXParser.prototype.nextJSXText = function () {\n              this.startMarker.index = this.scanner.index;\n              this.startMarker.line = this.scanner.lineNumber;\n              this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n              var start = this.scanner.index;\n              var text = '';\n\n              while (!this.scanner.eof()) {\n                var ch = this.scanner.source[this.scanner.index];\n\n                if (ch === '{' || ch === '<') {\n                  break;\n                }\n\n                ++this.scanner.index;\n                text += ch;\n\n                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                  ++this.scanner.lineNumber;\n\n                  if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n                    ++this.scanner.index;\n                  }\n\n                  this.scanner.lineStart = this.scanner.index;\n                }\n              }\n\n              this.lastMarker.index = this.scanner.index;\n              this.lastMarker.line = this.scanner.lineNumber;\n              this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n              var token = {\n                type: 101\n                /* Text */\n                ,\n                value: text,\n                lineNumber: this.scanner.lineNumber,\n                lineStart: this.scanner.lineStart,\n                start: start,\n                end: this.scanner.index\n              };\n\n              if (text.length > 0 && this.config.tokens) {\n                this.tokens.push(this.convertToken(token));\n              }\n\n              return token;\n            };\n\n            JSXParser.prototype.peekJSXToken = function () {\n              var state = this.scanner.saveState();\n              this.scanner.scanComments();\n              var next = this.lexJSX();\n              this.scanner.restoreState(state);\n              return next;\n            }; // Expect the next JSX token to match the specified punctuator.\n            // If not, an exception will be thrown.\n\n\n            JSXParser.prototype.expectJSX = function (value) {\n              var token = this.nextJSXToken();\n\n              if (token.type !== 7\n              /* Punctuator */\n              || token.value !== value) {\n                this.throwUnexpectedToken(token);\n              }\n            }; // Return true if the next JSX token matches the specified punctuator.\n\n\n            JSXParser.prototype.matchJSX = function (value) {\n              var next = this.peekJSXToken();\n              return next.type === 7\n              /* Punctuator */\n              && next.value === value;\n            };\n\n            JSXParser.prototype.parseJSXIdentifier = function () {\n              var node = this.createJSXNode();\n              var token = this.nextJSXToken();\n\n              if (token.type !== 100\n              /* Identifier */\n              ) {\n                  this.throwUnexpectedToken(token);\n                }\n\n              return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n            };\n\n            JSXParser.prototype.parseJSXElementName = function () {\n              var node = this.createJSXNode();\n              var elementName = this.parseJSXIdentifier();\n\n              if (this.matchJSX(':')) {\n                var namespace = elementName;\n                this.expectJSX(':');\n                var name_1 = this.parseJSXIdentifier();\n                elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n              } else if (this.matchJSX('.')) {\n                while (this.matchJSX('.')) {\n                  var object = elementName;\n                  this.expectJSX('.');\n                  var property = this.parseJSXIdentifier();\n                  elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n                }\n              }\n\n              return elementName;\n            };\n\n            JSXParser.prototype.parseJSXAttributeName = function () {\n              var node = this.createJSXNode();\n              var attributeName;\n              var identifier = this.parseJSXIdentifier();\n\n              if (this.matchJSX(':')) {\n                var namespace = identifier;\n                this.expectJSX(':');\n                var name_2 = this.parseJSXIdentifier();\n                attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n              } else {\n                attributeName = identifier;\n              }\n\n              return attributeName;\n            };\n\n            JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n              var node = this.createJSXNode();\n              var token = this.nextJSXToken();\n\n              if (token.type !== 8\n              /* StringLiteral */\n              ) {\n                  this.throwUnexpectedToken(token);\n                }\n\n              var raw = this.getTokenRaw(token);\n              return this.finalize(node, new Node.Literal(token.value, raw));\n            };\n\n            JSXParser.prototype.parseJSXExpressionAttribute = function () {\n              var node = this.createJSXNode();\n              this.expectJSX('{');\n              this.finishJSX();\n\n              if (this.match('}')) {\n                this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n              }\n\n              var expression = this.parseAssignmentExpression();\n              this.reenterJSX();\n              return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n            };\n\n            JSXParser.prototype.parseJSXAttributeValue = function () {\n              return this.matchJSX('{') ? this.parseJSXExpressionAttribute() : this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n            };\n\n            JSXParser.prototype.parseJSXNameValueAttribute = function () {\n              var node = this.createJSXNode();\n              var name = this.parseJSXAttributeName();\n              var value = null;\n\n              if (this.matchJSX('=')) {\n                this.expectJSX('=');\n                value = this.parseJSXAttributeValue();\n              }\n\n              return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n            };\n\n            JSXParser.prototype.parseJSXSpreadAttribute = function () {\n              var node = this.createJSXNode();\n              this.expectJSX('{');\n              this.expectJSX('...');\n              this.finishJSX();\n              var argument = this.parseAssignmentExpression();\n              this.reenterJSX();\n              return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n            };\n\n            JSXParser.prototype.parseJSXAttributes = function () {\n              var attributes = [];\n\n              while (!this.matchJSX('/') && !this.matchJSX('>')) {\n                var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() : this.parseJSXNameValueAttribute();\n                attributes.push(attribute);\n              }\n\n              return attributes;\n            };\n\n            JSXParser.prototype.parseJSXOpeningElement = function () {\n              var node = this.createJSXNode();\n              this.expectJSX('<');\n              var name = this.parseJSXElementName();\n              var attributes = this.parseJSXAttributes();\n              var selfClosing = this.matchJSX('/');\n\n              if (selfClosing) {\n                this.expectJSX('/');\n              }\n\n              this.expectJSX('>');\n              return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n            };\n\n            JSXParser.prototype.parseJSXBoundaryElement = function () {\n              var node = this.createJSXNode();\n              this.expectJSX('<');\n\n              if (this.matchJSX('/')) {\n                this.expectJSX('/');\n                var name_3 = this.parseJSXElementName();\n                this.expectJSX('>');\n                return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n              }\n\n              var name = this.parseJSXElementName();\n              var attributes = this.parseJSXAttributes();\n              var selfClosing = this.matchJSX('/');\n\n              if (selfClosing) {\n                this.expectJSX('/');\n              }\n\n              this.expectJSX('>');\n              return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n            };\n\n            JSXParser.prototype.parseJSXEmptyExpression = function () {\n              var node = this.createJSXChildNode();\n              this.collectComments();\n              this.lastMarker.index = this.scanner.index;\n              this.lastMarker.line = this.scanner.lineNumber;\n              this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n              return this.finalize(node, new JSXNode.JSXEmptyExpression());\n            };\n\n            JSXParser.prototype.parseJSXExpressionContainer = function () {\n              var node = this.createJSXNode();\n              this.expectJSX('{');\n              var expression;\n\n              if (this.matchJSX('}')) {\n                expression = this.parseJSXEmptyExpression();\n                this.expectJSX('}');\n              } else {\n                this.finishJSX();\n                expression = this.parseAssignmentExpression();\n                this.reenterJSX();\n              }\n\n              return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n            };\n\n            JSXParser.prototype.parseJSXChildren = function () {\n              var children = [];\n\n              while (!this.scanner.eof()) {\n                var node = this.createJSXChildNode();\n                var token = this.nextJSXText();\n\n                if (token.start < token.end) {\n                  var raw = this.getTokenRaw(token);\n                  var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n                  children.push(child);\n                }\n\n                if (this.scanner.source[this.scanner.index] === '{') {\n                  var container = this.parseJSXExpressionContainer();\n                  children.push(container);\n                } else {\n                  break;\n                }\n              }\n\n              return children;\n            };\n\n            JSXParser.prototype.parseComplexJSXElement = function (el) {\n              var stack = [];\n\n              while (!this.scanner.eof()) {\n                el.children = el.children.concat(this.parseJSXChildren());\n                var node = this.createJSXChildNode();\n                var element = this.parseJSXBoundaryElement();\n\n                if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n                  var opening = element;\n\n                  if (opening.selfClosing) {\n                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n                    el.children.push(child);\n                  } else {\n                    stack.push(el);\n                    el = {\n                      node: node,\n                      opening: opening,\n                      closing: null,\n                      children: []\n                    };\n                  }\n                }\n\n                if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n                  el.closing = element;\n                  var open_1 = getQualifiedElementName(el.opening.name);\n                  var close_1 = getQualifiedElementName(el.closing.name);\n\n                  if (open_1 !== close_1) {\n                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n                  }\n\n                  if (stack.length > 0) {\n                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n                    el = stack[stack.length - 1];\n                    el.children.push(child);\n                    stack.pop();\n                  } else {\n                    break;\n                  }\n                }\n              }\n\n              return el;\n            };\n\n            JSXParser.prototype.parseJSXElement = function () {\n              var node = this.createJSXNode();\n              var opening = this.parseJSXOpeningElement();\n              var children = [];\n              var closing = null;\n\n              if (!opening.selfClosing) {\n                var el = this.parseComplexJSXElement({\n                  node: node,\n                  opening: opening,\n                  closing: closing,\n                  children: children\n                });\n                children = el.children;\n                closing = el.closing;\n              }\n\n              return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n            };\n\n            JSXParser.prototype.parseJSXRoot = function () {\n              // Pop the opening '<' added from the lookahead.\n              if (this.config.tokens) {\n                this.tokens.pop();\n              }\n\n              this.startJSX();\n              var element = this.parseJSXElement();\n              this.finishJSX();\n              return element;\n            };\n\n            JSXParser.prototype.isStartOfExpression = function () {\n              return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n            };\n\n            return JSXParser;\n          }(parser_1.Parser);\n\n          exports.JSXParser = JSXParser;\n          /***/\n        },\n        /* 4 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          }); // See also tools/generate-unicode-regex.js.\n\n          var Regex = {\n            // Unicode v8.0.0 NonAsciiIdentifierStart:\n            NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n            // Unicode v8.0.0 NonAsciiIdentifierPart:\n            NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n          };\n          exports.Character = {\n            /* tslint:disable:no-bitwise */\n            fromCodePoint: function (cp) {\n              return cp < 0x10000 ? String.fromCharCode(cp) : String.fromCharCode(0xD800 + (cp - 0x10000 >> 10)) + String.fromCharCode(0xDC00 + (cp - 0x10000 & 1023));\n            },\n            // https://tc39.github.io/ecma262/#sec-white-space\n            isWhiteSpace: function (cp) {\n              return cp === 0x20 || cp === 0x09 || cp === 0x0B || cp === 0x0C || cp === 0xA0 || cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0;\n            },\n            // https://tc39.github.io/ecma262/#sec-line-terminators\n            isLineTerminator: function (cp) {\n              return cp === 0x0A || cp === 0x0D || cp === 0x2028 || cp === 0x2029;\n            },\n            // https://tc39.github.io/ecma262/#sec-names-and-keywords\n            isIdentifierStart: function (cp) {\n              return cp === 0x24 || cp === 0x5F || cp >= 0x41 && cp <= 0x5A || cp >= 0x61 && cp <= 0x7A || cp === 0x5C || cp >= 0x80 && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp));\n            },\n            isIdentifierPart: function (cp) {\n              return cp === 0x24 || cp === 0x5F || cp >= 0x41 && cp <= 0x5A || cp >= 0x61 && cp <= 0x7A || cp >= 0x30 && cp <= 0x39 || cp === 0x5C || cp >= 0x80 && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp));\n            },\n            // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n            isDecimalDigit: function (cp) {\n              return cp >= 0x30 && cp <= 0x39; // 0..9\n            },\n            isHexDigit: function (cp) {\n              return cp >= 0x30 && cp <= 0x39 || cp >= 0x41 && cp <= 0x46 || cp >= 0x61 && cp <= 0x66; // a..f\n            },\n            isOctalDigit: function (cp) {\n              return cp >= 0x30 && cp <= 0x37; // 0..7\n            }\n          };\n          /***/\n        },\n        /* 5 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var jsx_syntax_1 = __webpack_require__(6);\n          /* tslint:disable:max-classes-per-file */\n\n\n          var JSXClosingElement = function () {\n            function JSXClosingElement(name) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n              this.name = name;\n            }\n\n            return JSXClosingElement;\n          }();\n\n          exports.JSXClosingElement = JSXClosingElement;\n\n          var JSXElement = function () {\n            function JSXElement(openingElement, children, closingElement) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n              this.openingElement = openingElement;\n              this.children = children;\n              this.closingElement = closingElement;\n            }\n\n            return JSXElement;\n          }();\n\n          exports.JSXElement = JSXElement;\n\n          var JSXEmptyExpression = function () {\n            function JSXEmptyExpression() {\n              this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n            }\n\n            return JSXEmptyExpression;\n          }();\n\n          exports.JSXEmptyExpression = JSXEmptyExpression;\n\n          var JSXExpressionContainer = function () {\n            function JSXExpressionContainer(expression) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n              this.expression = expression;\n            }\n\n            return JSXExpressionContainer;\n          }();\n\n          exports.JSXExpressionContainer = JSXExpressionContainer;\n\n          var JSXIdentifier = function () {\n            function JSXIdentifier(name) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n              this.name = name;\n            }\n\n            return JSXIdentifier;\n          }();\n\n          exports.JSXIdentifier = JSXIdentifier;\n\n          var JSXMemberExpression = function () {\n            function JSXMemberExpression(object, property) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n              this.object = object;\n              this.property = property;\n            }\n\n            return JSXMemberExpression;\n          }();\n\n          exports.JSXMemberExpression = JSXMemberExpression;\n\n          var JSXAttribute = function () {\n            function JSXAttribute(name, value) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n              this.name = name;\n              this.value = value;\n            }\n\n            return JSXAttribute;\n          }();\n\n          exports.JSXAttribute = JSXAttribute;\n\n          var JSXNamespacedName = function () {\n            function JSXNamespacedName(namespace, name) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n              this.namespace = namespace;\n              this.name = name;\n            }\n\n            return JSXNamespacedName;\n          }();\n\n          exports.JSXNamespacedName = JSXNamespacedName;\n\n          var JSXOpeningElement = function () {\n            function JSXOpeningElement(name, selfClosing, attributes) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n              this.name = name;\n              this.selfClosing = selfClosing;\n              this.attributes = attributes;\n            }\n\n            return JSXOpeningElement;\n          }();\n\n          exports.JSXOpeningElement = JSXOpeningElement;\n\n          var JSXSpreadAttribute = function () {\n            function JSXSpreadAttribute(argument) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n              this.argument = argument;\n            }\n\n            return JSXSpreadAttribute;\n          }();\n\n          exports.JSXSpreadAttribute = JSXSpreadAttribute;\n\n          var JSXText = function () {\n            function JSXText(value, raw) {\n              this.type = jsx_syntax_1.JSXSyntax.JSXText;\n              this.value = value;\n              this.raw = raw;\n            }\n\n            return JSXText;\n          }();\n\n          exports.JSXText = JSXText;\n          /***/\n        },\n        /* 6 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.JSXSyntax = {\n            JSXAttribute: 'JSXAttribute',\n            JSXClosingElement: 'JSXClosingElement',\n            JSXElement: 'JSXElement',\n            JSXEmptyExpression: 'JSXEmptyExpression',\n            JSXExpressionContainer: 'JSXExpressionContainer',\n            JSXIdentifier: 'JSXIdentifier',\n            JSXMemberExpression: 'JSXMemberExpression',\n            JSXNamespacedName: 'JSXNamespacedName',\n            JSXOpeningElement: 'JSXOpeningElement',\n            JSXSpreadAttribute: 'JSXSpreadAttribute',\n            JSXText: 'JSXText'\n          };\n          /***/\n        },\n        /* 7 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var syntax_1 = __webpack_require__(2);\n          /* tslint:disable:max-classes-per-file */\n\n\n          var ArrayExpression = function () {\n            function ArrayExpression(elements) {\n              this.type = syntax_1.Syntax.ArrayExpression;\n              this.elements = elements;\n            }\n\n            return ArrayExpression;\n          }();\n\n          exports.ArrayExpression = ArrayExpression;\n\n          var ArrayPattern = function () {\n            function ArrayPattern(elements) {\n              this.type = syntax_1.Syntax.ArrayPattern;\n              this.elements = elements;\n            }\n\n            return ArrayPattern;\n          }();\n\n          exports.ArrayPattern = ArrayPattern;\n\n          var ArrowFunctionExpression = function () {\n            function ArrowFunctionExpression(params, body, expression) {\n              this.type = syntax_1.Syntax.ArrowFunctionExpression;\n              this.id = null;\n              this.params = params;\n              this.body = body;\n              this.generator = false;\n              this.expression = expression;\n              this.async = false;\n            }\n\n            return ArrowFunctionExpression;\n          }();\n\n          exports.ArrowFunctionExpression = ArrowFunctionExpression;\n\n          var AssignmentExpression = function () {\n            function AssignmentExpression(operator, left, right) {\n              this.type = syntax_1.Syntax.AssignmentExpression;\n              this.operator = operator;\n              this.left = left;\n              this.right = right;\n            }\n\n            return AssignmentExpression;\n          }();\n\n          exports.AssignmentExpression = AssignmentExpression;\n\n          var AssignmentPattern = function () {\n            function AssignmentPattern(left, right) {\n              this.type = syntax_1.Syntax.AssignmentPattern;\n              this.left = left;\n              this.right = right;\n            }\n\n            return AssignmentPattern;\n          }();\n\n          exports.AssignmentPattern = AssignmentPattern;\n\n          var AsyncArrowFunctionExpression = function () {\n            function AsyncArrowFunctionExpression(params, body, expression) {\n              this.type = syntax_1.Syntax.ArrowFunctionExpression;\n              this.id = null;\n              this.params = params;\n              this.body = body;\n              this.generator = false;\n              this.expression = expression;\n              this.async = true;\n            }\n\n            return AsyncArrowFunctionExpression;\n          }();\n\n          exports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\n          var AsyncFunctionDeclaration = function () {\n            function AsyncFunctionDeclaration(id, params, body) {\n              this.type = syntax_1.Syntax.FunctionDeclaration;\n              this.id = id;\n              this.params = params;\n              this.body = body;\n              this.generator = false;\n              this.expression = false;\n              this.async = true;\n            }\n\n            return AsyncFunctionDeclaration;\n          }();\n\n          exports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\n          var AsyncFunctionExpression = function () {\n            function AsyncFunctionExpression(id, params, body) {\n              this.type = syntax_1.Syntax.FunctionExpression;\n              this.id = id;\n              this.params = params;\n              this.body = body;\n              this.generator = false;\n              this.expression = false;\n              this.async = true;\n            }\n\n            return AsyncFunctionExpression;\n          }();\n\n          exports.AsyncFunctionExpression = AsyncFunctionExpression;\n\n          var AwaitExpression = function () {\n            function AwaitExpression(argument) {\n              this.type = syntax_1.Syntax.AwaitExpression;\n              this.argument = argument;\n            }\n\n            return AwaitExpression;\n          }();\n\n          exports.AwaitExpression = AwaitExpression;\n\n          var BinaryExpression = function () {\n            function BinaryExpression(operator, left, right) {\n              var logical = operator === '||' || operator === '&&';\n              this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n              this.operator = operator;\n              this.left = left;\n              this.right = right;\n            }\n\n            return BinaryExpression;\n          }();\n\n          exports.BinaryExpression = BinaryExpression;\n\n          var BlockStatement = function () {\n            function BlockStatement(body) {\n              this.type = syntax_1.Syntax.BlockStatement;\n              this.body = body;\n            }\n\n            return BlockStatement;\n          }();\n\n          exports.BlockStatement = BlockStatement;\n\n          var BreakStatement = function () {\n            function BreakStatement(label) {\n              this.type = syntax_1.Syntax.BreakStatement;\n              this.label = label;\n            }\n\n            return BreakStatement;\n          }();\n\n          exports.BreakStatement = BreakStatement;\n\n          var CallExpression = function () {\n            function CallExpression(callee, args) {\n              this.type = syntax_1.Syntax.CallExpression;\n              this.callee = callee;\n              this.arguments = args;\n            }\n\n            return CallExpression;\n          }();\n\n          exports.CallExpression = CallExpression;\n\n          var CatchClause = function () {\n            function CatchClause(param, body) {\n              this.type = syntax_1.Syntax.CatchClause;\n              this.param = param;\n              this.body = body;\n            }\n\n            return CatchClause;\n          }();\n\n          exports.CatchClause = CatchClause;\n\n          var ClassBody = function () {\n            function ClassBody(body) {\n              this.type = syntax_1.Syntax.ClassBody;\n              this.body = body;\n            }\n\n            return ClassBody;\n          }();\n\n          exports.ClassBody = ClassBody;\n\n          var ClassDeclaration = function () {\n            function ClassDeclaration(id, superClass, body) {\n              this.type = syntax_1.Syntax.ClassDeclaration;\n              this.id = id;\n              this.superClass = superClass;\n              this.body = body;\n            }\n\n            return ClassDeclaration;\n          }();\n\n          exports.ClassDeclaration = ClassDeclaration;\n\n          var ClassExpression = function () {\n            function ClassExpression(id, superClass, body) {\n              this.type = syntax_1.Syntax.ClassExpression;\n              this.id = id;\n              this.superClass = superClass;\n              this.body = body;\n            }\n\n            return ClassExpression;\n          }();\n\n          exports.ClassExpression = ClassExpression;\n\n          var ComputedMemberExpression = function () {\n            function ComputedMemberExpression(object, property) {\n              this.type = syntax_1.Syntax.MemberExpression;\n              this.computed = true;\n              this.object = object;\n              this.property = property;\n            }\n\n            return ComputedMemberExpression;\n          }();\n\n          exports.ComputedMemberExpression = ComputedMemberExpression;\n\n          var ConditionalExpression = function () {\n            function ConditionalExpression(test, consequent, alternate) {\n              this.type = syntax_1.Syntax.ConditionalExpression;\n              this.test = test;\n              this.consequent = consequent;\n              this.alternate = alternate;\n            }\n\n            return ConditionalExpression;\n          }();\n\n          exports.ConditionalExpression = ConditionalExpression;\n\n          var ContinueStatement = function () {\n            function ContinueStatement(label) {\n              this.type = syntax_1.Syntax.ContinueStatement;\n              this.label = label;\n            }\n\n            return ContinueStatement;\n          }();\n\n          exports.ContinueStatement = ContinueStatement;\n\n          var DebuggerStatement = function () {\n            function DebuggerStatement() {\n              this.type = syntax_1.Syntax.DebuggerStatement;\n            }\n\n            return DebuggerStatement;\n          }();\n\n          exports.DebuggerStatement = DebuggerStatement;\n\n          var Directive = function () {\n            function Directive(expression, directive) {\n              this.type = syntax_1.Syntax.ExpressionStatement;\n              this.expression = expression;\n              this.directive = directive;\n            }\n\n            return Directive;\n          }();\n\n          exports.Directive = Directive;\n\n          var DoWhileStatement = function () {\n            function DoWhileStatement(body, test) {\n              this.type = syntax_1.Syntax.DoWhileStatement;\n              this.body = body;\n              this.test = test;\n            }\n\n            return DoWhileStatement;\n          }();\n\n          exports.DoWhileStatement = DoWhileStatement;\n\n          var EmptyStatement = function () {\n            function EmptyStatement() {\n              this.type = syntax_1.Syntax.EmptyStatement;\n            }\n\n            return EmptyStatement;\n          }();\n\n          exports.EmptyStatement = EmptyStatement;\n\n          var ExportAllDeclaration = function () {\n            function ExportAllDeclaration(source) {\n              this.type = syntax_1.Syntax.ExportAllDeclaration;\n              this.source = source;\n            }\n\n            return ExportAllDeclaration;\n          }();\n\n          exports.ExportAllDeclaration = ExportAllDeclaration;\n\n          var ExportDefaultDeclaration = function () {\n            function ExportDefaultDeclaration(declaration) {\n              this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n              this.declaration = declaration;\n            }\n\n            return ExportDefaultDeclaration;\n          }();\n\n          exports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\n          var ExportNamedDeclaration = function () {\n            function ExportNamedDeclaration(declaration, specifiers, source) {\n              this.type = syntax_1.Syntax.ExportNamedDeclaration;\n              this.declaration = declaration;\n              this.specifiers = specifiers;\n              this.source = source;\n            }\n\n            return ExportNamedDeclaration;\n          }();\n\n          exports.ExportNamedDeclaration = ExportNamedDeclaration;\n\n          var ExportSpecifier = function () {\n            function ExportSpecifier(local, exported) {\n              this.type = syntax_1.Syntax.ExportSpecifier;\n              this.exported = exported;\n              this.local = local;\n            }\n\n            return ExportSpecifier;\n          }();\n\n          exports.ExportSpecifier = ExportSpecifier;\n\n          var ExpressionStatement = function () {\n            function ExpressionStatement(expression) {\n              this.type = syntax_1.Syntax.ExpressionStatement;\n              this.expression = expression;\n            }\n\n            return ExpressionStatement;\n          }();\n\n          exports.ExpressionStatement = ExpressionStatement;\n\n          var ForInStatement = function () {\n            function ForInStatement(left, right, body) {\n              this.type = syntax_1.Syntax.ForInStatement;\n              this.left = left;\n              this.right = right;\n              this.body = body;\n              this.each = false;\n            }\n\n            return ForInStatement;\n          }();\n\n          exports.ForInStatement = ForInStatement;\n\n          var ForOfStatement = function () {\n            function ForOfStatement(left, right, body) {\n              this.type = syntax_1.Syntax.ForOfStatement;\n              this.left = left;\n              this.right = right;\n              this.body = body;\n            }\n\n            return ForOfStatement;\n          }();\n\n          exports.ForOfStatement = ForOfStatement;\n\n          var ForStatement = function () {\n            function ForStatement(init, test, update, body) {\n              this.type = syntax_1.Syntax.ForStatement;\n              this.init = init;\n              this.test = test;\n              this.update = update;\n              this.body = body;\n            }\n\n            return ForStatement;\n          }();\n\n          exports.ForStatement = ForStatement;\n\n          var FunctionDeclaration = function () {\n            function FunctionDeclaration(id, params, body, generator) {\n              this.type = syntax_1.Syntax.FunctionDeclaration;\n              this.id = id;\n              this.params = params;\n              this.body = body;\n              this.generator = generator;\n              this.expression = false;\n              this.async = false;\n            }\n\n            return FunctionDeclaration;\n          }();\n\n          exports.FunctionDeclaration = FunctionDeclaration;\n\n          var FunctionExpression = function () {\n            function FunctionExpression(id, params, body, generator) {\n              this.type = syntax_1.Syntax.FunctionExpression;\n              this.id = id;\n              this.params = params;\n              this.body = body;\n              this.generator = generator;\n              this.expression = false;\n              this.async = false;\n            }\n\n            return FunctionExpression;\n          }();\n\n          exports.FunctionExpression = FunctionExpression;\n\n          var Identifier = function () {\n            function Identifier(name) {\n              this.type = syntax_1.Syntax.Identifier;\n              this.name = name;\n            }\n\n            return Identifier;\n          }();\n\n          exports.Identifier = Identifier;\n\n          var IfStatement = function () {\n            function IfStatement(test, consequent, alternate) {\n              this.type = syntax_1.Syntax.IfStatement;\n              this.test = test;\n              this.consequent = consequent;\n              this.alternate = alternate;\n            }\n\n            return IfStatement;\n          }();\n\n          exports.IfStatement = IfStatement;\n\n          var ImportDeclaration = function () {\n            function ImportDeclaration(specifiers, source) {\n              this.type = syntax_1.Syntax.ImportDeclaration;\n              this.specifiers = specifiers;\n              this.source = source;\n            }\n\n            return ImportDeclaration;\n          }();\n\n          exports.ImportDeclaration = ImportDeclaration;\n\n          var ImportDefaultSpecifier = function () {\n            function ImportDefaultSpecifier(local) {\n              this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n              this.local = local;\n            }\n\n            return ImportDefaultSpecifier;\n          }();\n\n          exports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\n          var ImportNamespaceSpecifier = function () {\n            function ImportNamespaceSpecifier(local) {\n              this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n              this.local = local;\n            }\n\n            return ImportNamespaceSpecifier;\n          }();\n\n          exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\n          var ImportSpecifier = function () {\n            function ImportSpecifier(local, imported) {\n              this.type = syntax_1.Syntax.ImportSpecifier;\n              this.local = local;\n              this.imported = imported;\n            }\n\n            return ImportSpecifier;\n          }();\n\n          exports.ImportSpecifier = ImportSpecifier;\n\n          var LabeledStatement = function () {\n            function LabeledStatement(label, body) {\n              this.type = syntax_1.Syntax.LabeledStatement;\n              this.label = label;\n              this.body = body;\n            }\n\n            return LabeledStatement;\n          }();\n\n          exports.LabeledStatement = LabeledStatement;\n\n          var Literal = function () {\n            function Literal(value, raw) {\n              this.type = syntax_1.Syntax.Literal;\n              this.value = value;\n              this.raw = raw;\n            }\n\n            return Literal;\n          }();\n\n          exports.Literal = Literal;\n\n          var MetaProperty = function () {\n            function MetaProperty(meta, property) {\n              this.type = syntax_1.Syntax.MetaProperty;\n              this.meta = meta;\n              this.property = property;\n            }\n\n            return MetaProperty;\n          }();\n\n          exports.MetaProperty = MetaProperty;\n\n          var MethodDefinition = function () {\n            function MethodDefinition(key, computed, value, kind, isStatic) {\n              this.type = syntax_1.Syntax.MethodDefinition;\n              this.key = key;\n              this.computed = computed;\n              this.value = value;\n              this.kind = kind;\n              this.static = isStatic;\n            }\n\n            return MethodDefinition;\n          }();\n\n          exports.MethodDefinition = MethodDefinition;\n\n          var Module = function () {\n            function Module(body) {\n              this.type = syntax_1.Syntax.Program;\n              this.body = body;\n              this.sourceType = 'module';\n            }\n\n            return Module;\n          }();\n\n          exports.Module = Module;\n\n          var NewExpression = function () {\n            function NewExpression(callee, args) {\n              this.type = syntax_1.Syntax.NewExpression;\n              this.callee = callee;\n              this.arguments = args;\n            }\n\n            return NewExpression;\n          }();\n\n          exports.NewExpression = NewExpression;\n\n          var ObjectExpression = function () {\n            function ObjectExpression(properties) {\n              this.type = syntax_1.Syntax.ObjectExpression;\n              this.properties = properties;\n            }\n\n            return ObjectExpression;\n          }();\n\n          exports.ObjectExpression = ObjectExpression;\n\n          var ObjectPattern = function () {\n            function ObjectPattern(properties) {\n              this.type = syntax_1.Syntax.ObjectPattern;\n              this.properties = properties;\n            }\n\n            return ObjectPattern;\n          }();\n\n          exports.ObjectPattern = ObjectPattern;\n\n          var Property = function () {\n            function Property(kind, key, computed, value, method, shorthand) {\n              this.type = syntax_1.Syntax.Property;\n              this.key = key;\n              this.computed = computed;\n              this.value = value;\n              this.kind = kind;\n              this.method = method;\n              this.shorthand = shorthand;\n            }\n\n            return Property;\n          }();\n\n          exports.Property = Property;\n\n          var RegexLiteral = function () {\n            function RegexLiteral(value, raw, pattern, flags) {\n              this.type = syntax_1.Syntax.Literal;\n              this.value = value;\n              this.raw = raw;\n              this.regex = {\n                pattern: pattern,\n                flags: flags\n              };\n            }\n\n            return RegexLiteral;\n          }();\n\n          exports.RegexLiteral = RegexLiteral;\n\n          var RestElement = function () {\n            function RestElement(argument) {\n              this.type = syntax_1.Syntax.RestElement;\n              this.argument = argument;\n            }\n\n            return RestElement;\n          }();\n\n          exports.RestElement = RestElement;\n\n          var ReturnStatement = function () {\n            function ReturnStatement(argument) {\n              this.type = syntax_1.Syntax.ReturnStatement;\n              this.argument = argument;\n            }\n\n            return ReturnStatement;\n          }();\n\n          exports.ReturnStatement = ReturnStatement;\n\n          var Script = function () {\n            function Script(body) {\n              this.type = syntax_1.Syntax.Program;\n              this.body = body;\n              this.sourceType = 'script';\n            }\n\n            return Script;\n          }();\n\n          exports.Script = Script;\n\n          var SequenceExpression = function () {\n            function SequenceExpression(expressions) {\n              this.type = syntax_1.Syntax.SequenceExpression;\n              this.expressions = expressions;\n            }\n\n            return SequenceExpression;\n          }();\n\n          exports.SequenceExpression = SequenceExpression;\n\n          var SpreadElement = function () {\n            function SpreadElement(argument) {\n              this.type = syntax_1.Syntax.SpreadElement;\n              this.argument = argument;\n            }\n\n            return SpreadElement;\n          }();\n\n          exports.SpreadElement = SpreadElement;\n\n          var StaticMemberExpression = function () {\n            function StaticMemberExpression(object, property) {\n              this.type = syntax_1.Syntax.MemberExpression;\n              this.computed = false;\n              this.object = object;\n              this.property = property;\n            }\n\n            return StaticMemberExpression;\n          }();\n\n          exports.StaticMemberExpression = StaticMemberExpression;\n\n          var Super = function () {\n            function Super() {\n              this.type = syntax_1.Syntax.Super;\n            }\n\n            return Super;\n          }();\n\n          exports.Super = Super;\n\n          var SwitchCase = function () {\n            function SwitchCase(test, consequent) {\n              this.type = syntax_1.Syntax.SwitchCase;\n              this.test = test;\n              this.consequent = consequent;\n            }\n\n            return SwitchCase;\n          }();\n\n          exports.SwitchCase = SwitchCase;\n\n          var SwitchStatement = function () {\n            function SwitchStatement(discriminant, cases) {\n              this.type = syntax_1.Syntax.SwitchStatement;\n              this.discriminant = discriminant;\n              this.cases = cases;\n            }\n\n            return SwitchStatement;\n          }();\n\n          exports.SwitchStatement = SwitchStatement;\n\n          var TaggedTemplateExpression = function () {\n            function TaggedTemplateExpression(tag, quasi) {\n              this.type = syntax_1.Syntax.TaggedTemplateExpression;\n              this.tag = tag;\n              this.quasi = quasi;\n            }\n\n            return TaggedTemplateExpression;\n          }();\n\n          exports.TaggedTemplateExpression = TaggedTemplateExpression;\n\n          var TemplateElement = function () {\n            function TemplateElement(value, tail) {\n              this.type = syntax_1.Syntax.TemplateElement;\n              this.value = value;\n              this.tail = tail;\n            }\n\n            return TemplateElement;\n          }();\n\n          exports.TemplateElement = TemplateElement;\n\n          var TemplateLiteral = function () {\n            function TemplateLiteral(quasis, expressions) {\n              this.type = syntax_1.Syntax.TemplateLiteral;\n              this.quasis = quasis;\n              this.expressions = expressions;\n            }\n\n            return TemplateLiteral;\n          }();\n\n          exports.TemplateLiteral = TemplateLiteral;\n\n          var ThisExpression = function () {\n            function ThisExpression() {\n              this.type = syntax_1.Syntax.ThisExpression;\n            }\n\n            return ThisExpression;\n          }();\n\n          exports.ThisExpression = ThisExpression;\n\n          var ThrowStatement = function () {\n            function ThrowStatement(argument) {\n              this.type = syntax_1.Syntax.ThrowStatement;\n              this.argument = argument;\n            }\n\n            return ThrowStatement;\n          }();\n\n          exports.ThrowStatement = ThrowStatement;\n\n          var TryStatement = function () {\n            function TryStatement(block, handler, finalizer) {\n              this.type = syntax_1.Syntax.TryStatement;\n              this.block = block;\n              this.handler = handler;\n              this.finalizer = finalizer;\n            }\n\n            return TryStatement;\n          }();\n\n          exports.TryStatement = TryStatement;\n\n          var UnaryExpression = function () {\n            function UnaryExpression(operator, argument) {\n              this.type = syntax_1.Syntax.UnaryExpression;\n              this.operator = operator;\n              this.argument = argument;\n              this.prefix = true;\n            }\n\n            return UnaryExpression;\n          }();\n\n          exports.UnaryExpression = UnaryExpression;\n\n          var UpdateExpression = function () {\n            function UpdateExpression(operator, argument, prefix) {\n              this.type = syntax_1.Syntax.UpdateExpression;\n              this.operator = operator;\n              this.argument = argument;\n              this.prefix = prefix;\n            }\n\n            return UpdateExpression;\n          }();\n\n          exports.UpdateExpression = UpdateExpression;\n\n          var VariableDeclaration = function () {\n            function VariableDeclaration(declarations, kind) {\n              this.type = syntax_1.Syntax.VariableDeclaration;\n              this.declarations = declarations;\n              this.kind = kind;\n            }\n\n            return VariableDeclaration;\n          }();\n\n          exports.VariableDeclaration = VariableDeclaration;\n\n          var VariableDeclarator = function () {\n            function VariableDeclarator(id, init) {\n              this.type = syntax_1.Syntax.VariableDeclarator;\n              this.id = id;\n              this.init = init;\n            }\n\n            return VariableDeclarator;\n          }();\n\n          exports.VariableDeclarator = VariableDeclarator;\n\n          var WhileStatement = function () {\n            function WhileStatement(test, body) {\n              this.type = syntax_1.Syntax.WhileStatement;\n              this.test = test;\n              this.body = body;\n            }\n\n            return WhileStatement;\n          }();\n\n          exports.WhileStatement = WhileStatement;\n\n          var WithStatement = function () {\n            function WithStatement(object, body) {\n              this.type = syntax_1.Syntax.WithStatement;\n              this.object = object;\n              this.body = body;\n            }\n\n            return WithStatement;\n          }();\n\n          exports.WithStatement = WithStatement;\n\n          var YieldExpression = function () {\n            function YieldExpression(argument, delegate) {\n              this.type = syntax_1.Syntax.YieldExpression;\n              this.argument = argument;\n              this.delegate = delegate;\n            }\n\n            return YieldExpression;\n          }();\n\n          exports.YieldExpression = YieldExpression;\n          /***/\n        },\n        /* 8 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var assert_1 = __webpack_require__(9);\n\n          var error_handler_1 = __webpack_require__(10);\n\n          var messages_1 = __webpack_require__(11);\n\n          var Node = __webpack_require__(7);\n\n          var scanner_1 = __webpack_require__(12);\n\n          var syntax_1 = __webpack_require__(2);\n\n          var token_1 = __webpack_require__(13);\n\n          var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\n          var Parser = function () {\n            function Parser(code, options, delegate) {\n              if (options === void 0) {\n                options = {};\n              }\n\n              this.config = {\n                range: typeof options.range === 'boolean' && options.range,\n                loc: typeof options.loc === 'boolean' && options.loc,\n                source: null,\n                tokens: typeof options.tokens === 'boolean' && options.tokens,\n                comment: typeof options.comment === 'boolean' && options.comment,\n                tolerant: typeof options.tolerant === 'boolean' && options.tolerant\n              };\n\n              if (this.config.loc && options.source && options.source !== null) {\n                this.config.source = String(options.source);\n              }\n\n              this.delegate = delegate;\n              this.errorHandler = new error_handler_1.ErrorHandler();\n              this.errorHandler.tolerant = this.config.tolerant;\n              this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n              this.scanner.trackComment = this.config.comment;\n              this.operatorPrecedence = {\n                ')': 0,\n                ';': 0,\n                ',': 0,\n                '=': 0,\n                ']': 0,\n                '||': 1,\n                '&&': 2,\n                '|': 3,\n                '^': 4,\n                '&': 5,\n                '==': 6,\n                '!=': 6,\n                '===': 6,\n                '!==': 6,\n                '<': 7,\n                '>': 7,\n                '<=': 7,\n                '>=': 7,\n                '<<': 8,\n                '>>': 8,\n                '>>>': 8,\n                '+': 9,\n                '-': 9,\n                '*': 11,\n                '/': 11,\n                '%': 11\n              };\n              this.lookahead = {\n                type: 2\n                /* EOF */\n                ,\n                value: '',\n                lineNumber: this.scanner.lineNumber,\n                lineStart: 0,\n                start: 0,\n                end: 0\n              };\n              this.hasLineTerminator = false;\n              this.context = {\n                isModule: false,\n                await: false,\n                allowIn: true,\n                allowStrictDirective: true,\n                allowYield: true,\n                firstCoverInitializedNameError: null,\n                isAssignmentTarget: false,\n                isBindingElement: false,\n                inFunctionBody: false,\n                inIteration: false,\n                inSwitch: false,\n                labelSet: {},\n                strict: false\n              };\n              this.tokens = [];\n              this.startMarker = {\n                index: 0,\n                line: this.scanner.lineNumber,\n                column: 0\n              };\n              this.lastMarker = {\n                index: 0,\n                line: this.scanner.lineNumber,\n                column: 0\n              };\n              this.nextToken();\n              this.lastMarker = {\n                index: this.scanner.index,\n                line: this.scanner.lineNumber,\n                column: this.scanner.index - this.scanner.lineStart\n              };\n            }\n\n            Parser.prototype.throwError = function (messageFormat) {\n              var values = [];\n\n              for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n              }\n\n              var args = Array.prototype.slice.call(arguments, 1);\n              var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n                assert_1.assert(idx < args.length, 'Message reference must be in range');\n                return args[idx];\n              });\n              var index = this.lastMarker.index;\n              var line = this.lastMarker.line;\n              var column = this.lastMarker.column + 1;\n              throw this.errorHandler.createError(index, line, column, msg);\n            };\n\n            Parser.prototype.tolerateError = function (messageFormat) {\n              var values = [];\n\n              for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n              }\n\n              var args = Array.prototype.slice.call(arguments, 1);\n              var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n                assert_1.assert(idx < args.length, 'Message reference must be in range');\n                return args[idx];\n              });\n              var index = this.lastMarker.index;\n              var line = this.scanner.lineNumber;\n              var column = this.lastMarker.column + 1;\n              this.errorHandler.tolerateError(index, line, column, msg);\n            }; // Throw an exception because of the token.\n\n\n            Parser.prototype.unexpectedTokenError = function (token, message) {\n              var msg = message || messages_1.Messages.UnexpectedToken;\n              var value;\n\n              if (token) {\n                if (!message) {\n                  msg = token.type === 2\n                  /* EOF */\n                  ? messages_1.Messages.UnexpectedEOS : token.type === 3\n                  /* Identifier */\n                  ? messages_1.Messages.UnexpectedIdentifier : token.type === 6\n                  /* NumericLiteral */\n                  ? messages_1.Messages.UnexpectedNumber : token.type === 8\n                  /* StringLiteral */\n                  ? messages_1.Messages.UnexpectedString : token.type === 10\n                  /* Template */\n                  ? messages_1.Messages.UnexpectedTemplate : messages_1.Messages.UnexpectedToken;\n\n                  if (token.type === 4\n                  /* Keyword */\n                  ) {\n                      if (this.scanner.isFutureReservedWord(token.value)) {\n                        msg = messages_1.Messages.UnexpectedReserved;\n                      } else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n                        msg = messages_1.Messages.StrictReservedWord;\n                      }\n                    }\n                }\n\n                value = token.value;\n              } else {\n                value = 'ILLEGAL';\n              }\n\n              msg = msg.replace('%0', value);\n\n              if (token && typeof token.lineNumber === 'number') {\n                var index = token.start;\n                var line = token.lineNumber;\n                var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n                var column = token.start - lastMarkerLineStart + 1;\n                return this.errorHandler.createError(index, line, column, msg);\n              } else {\n                var index = this.lastMarker.index;\n                var line = this.lastMarker.line;\n                var column = this.lastMarker.column + 1;\n                return this.errorHandler.createError(index, line, column, msg);\n              }\n            };\n\n            Parser.prototype.throwUnexpectedToken = function (token, message) {\n              throw this.unexpectedTokenError(token, message);\n            };\n\n            Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n              this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n            };\n\n            Parser.prototype.collectComments = function () {\n              if (!this.config.comment) {\n                this.scanner.scanComments();\n              } else {\n                var comments = this.scanner.scanComments();\n\n                if (comments.length > 0 && this.delegate) {\n                  for (var i = 0; i < comments.length; ++i) {\n                    var e = comments[i];\n                    var node = void 0;\n                    node = {\n                      type: e.multiLine ? 'BlockComment' : 'LineComment',\n                      value: this.scanner.source.slice(e.slice[0], e.slice[1])\n                    };\n\n                    if (this.config.range) {\n                      node.range = e.range;\n                    }\n\n                    if (this.config.loc) {\n                      node.loc = e.loc;\n                    }\n\n                    var metadata = {\n                      start: {\n                        line: e.loc.start.line,\n                        column: e.loc.start.column,\n                        offset: e.range[0]\n                      },\n                      end: {\n                        line: e.loc.end.line,\n                        column: e.loc.end.column,\n                        offset: e.range[1]\n                      }\n                    };\n                    this.delegate(node, metadata);\n                  }\n                }\n              }\n            }; // From internal representation to an external structure\n\n\n            Parser.prototype.getTokenRaw = function (token) {\n              return this.scanner.source.slice(token.start, token.end);\n            };\n\n            Parser.prototype.convertToken = function (token) {\n              var t = {\n                type: token_1.TokenName[token.type],\n                value: this.getTokenRaw(token)\n              };\n\n              if (this.config.range) {\n                t.range = [token.start, token.end];\n              }\n\n              if (this.config.loc) {\n                t.loc = {\n                  start: {\n                    line: this.startMarker.line,\n                    column: this.startMarker.column\n                  },\n                  end: {\n                    line: this.scanner.lineNumber,\n                    column: this.scanner.index - this.scanner.lineStart\n                  }\n                };\n              }\n\n              if (token.type === 9\n              /* RegularExpression */\n              ) {\n                  var pattern = token.pattern;\n                  var flags = token.flags;\n                  t.regex = {\n                    pattern: pattern,\n                    flags: flags\n                  };\n                }\n\n              return t;\n            };\n\n            Parser.prototype.nextToken = function () {\n              var token = this.lookahead;\n              this.lastMarker.index = this.scanner.index;\n              this.lastMarker.line = this.scanner.lineNumber;\n              this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n              this.collectComments();\n\n              if (this.scanner.index !== this.startMarker.index) {\n                this.startMarker.index = this.scanner.index;\n                this.startMarker.line = this.scanner.lineNumber;\n                this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n              }\n\n              var next = this.scanner.lex();\n              this.hasLineTerminator = token.lineNumber !== next.lineNumber;\n\n              if (next && this.context.strict && next.type === 3\n              /* Identifier */\n              ) {\n                  if (this.scanner.isStrictModeReservedWord(next.value)) {\n                    next.type = 4\n                    /* Keyword */\n                    ;\n                  }\n                }\n\n              this.lookahead = next;\n\n              if (this.config.tokens && next.type !== 2\n              /* EOF */\n              ) {\n                  this.tokens.push(this.convertToken(next));\n                }\n\n              return token;\n            };\n\n            Parser.prototype.nextRegexToken = function () {\n              this.collectComments();\n              var token = this.scanner.scanRegExp();\n\n              if (this.config.tokens) {\n                // Pop the previous token, '/' or '/='\n                // This is added from the lookahead token.\n                this.tokens.pop();\n                this.tokens.push(this.convertToken(token));\n              } // Prime the next lookahead.\n\n\n              this.lookahead = token;\n              this.nextToken();\n              return token;\n            };\n\n            Parser.prototype.createNode = function () {\n              return {\n                index: this.startMarker.index,\n                line: this.startMarker.line,\n                column: this.startMarker.column\n              };\n            };\n\n            Parser.prototype.startNode = function (token, lastLineStart) {\n              if (lastLineStart === void 0) {\n                lastLineStart = 0;\n              }\n\n              var column = token.start - token.lineStart;\n              var line = token.lineNumber;\n\n              if (column < 0) {\n                column += lastLineStart;\n                line--;\n              }\n\n              return {\n                index: token.start,\n                line: line,\n                column: column\n              };\n            };\n\n            Parser.prototype.finalize = function (marker, node) {\n              if (this.config.range) {\n                node.range = [marker.index, this.lastMarker.index];\n              }\n\n              if (this.config.loc) {\n                node.loc = {\n                  start: {\n                    line: marker.line,\n                    column: marker.column\n                  },\n                  end: {\n                    line: this.lastMarker.line,\n                    column: this.lastMarker.column\n                  }\n                };\n\n                if (this.config.source) {\n                  node.loc.source = this.config.source;\n                }\n              }\n\n              if (this.delegate) {\n                var metadata = {\n                  start: {\n                    line: marker.line,\n                    column: marker.column,\n                    offset: marker.index\n                  },\n                  end: {\n                    line: this.lastMarker.line,\n                    column: this.lastMarker.column,\n                    offset: this.lastMarker.index\n                  }\n                };\n                this.delegate(node, metadata);\n              }\n\n              return node;\n            }; // Expect the next token to match the specified punctuator.\n            // If not, an exception will be thrown.\n\n\n            Parser.prototype.expect = function (value) {\n              var token = this.nextToken();\n\n              if (token.type !== 7\n              /* Punctuator */\n              || token.value !== value) {\n                this.throwUnexpectedToken(token);\n              }\n            }; // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\n\n            Parser.prototype.expectCommaSeparator = function () {\n              if (this.config.tolerant) {\n                var token = this.lookahead;\n\n                if (token.type === 7\n                /* Punctuator */\n                && token.value === ',') {\n                  this.nextToken();\n                } else if (token.type === 7\n                /* Punctuator */\n                && token.value === ';') {\n                  this.nextToken();\n                  this.tolerateUnexpectedToken(token);\n                } else {\n                  this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n                }\n              } else {\n                this.expect(',');\n              }\n            }; // Expect the next token to match the specified keyword.\n            // If not, an exception will be thrown.\n\n\n            Parser.prototype.expectKeyword = function (keyword) {\n              var token = this.nextToken();\n\n              if (token.type !== 4\n              /* Keyword */\n              || token.value !== keyword) {\n                this.throwUnexpectedToken(token);\n              }\n            }; // Return true if the next token matches the specified punctuator.\n\n\n            Parser.prototype.match = function (value) {\n              return this.lookahead.type === 7\n              /* Punctuator */\n              && this.lookahead.value === value;\n            }; // Return true if the next token matches the specified keyword\n\n\n            Parser.prototype.matchKeyword = function (keyword) {\n              return this.lookahead.type === 4\n              /* Keyword */\n              && this.lookahead.value === keyword;\n            }; // Return true if the next token matches the specified contextual keyword\n            // (where an identifier is sometimes a keyword depending on the context)\n\n\n            Parser.prototype.matchContextualKeyword = function (keyword) {\n              return this.lookahead.type === 3\n              /* Identifier */\n              && this.lookahead.value === keyword;\n            }; // Return true if the next token is an assignment operator\n\n\n            Parser.prototype.matchAssign = function () {\n              if (this.lookahead.type !== 7\n              /* Punctuator */\n              ) {\n                  return false;\n                }\n\n              var op = this.lookahead.value;\n              return op === '=' || op === '*=' || op === '**=' || op === '/=' || op === '%=' || op === '+=' || op === '-=' || op === '<<=' || op === '>>=' || op === '>>>=' || op === '&=' || op === '^=' || op === '|=';\n            }; // Cover grammar support.\n            //\n            // When an assignment expression position starts with an left parenthesis, the determination of the type\n            // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n            // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n            //\n            // There are three productions that can be parsed in a parentheses pair that needs to be determined\n            // after the outermost pair is closed. They are:\n            //\n            //   1. AssignmentExpression\n            //   2. BindingElements\n            //   3. AssignmentTargets\n            //\n            // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n            // binding element or assignment target.\n            //\n            // The three productions have the relationship:\n            //\n            //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n            //\n            // with a single exception that CoverInitializedName when used directly in an Expression, generates\n            // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n            // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n            //\n            // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n            // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n            // the CoverInitializedName check is conducted.\n            //\n            // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n            // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n            // pattern. The CoverInitializedName check is deferred.\n\n\n            Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n              var previousIsBindingElement = this.context.isBindingElement;\n              var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n              var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n              this.context.isBindingElement = true;\n              this.context.isAssignmentTarget = true;\n              this.context.firstCoverInitializedNameError = null;\n              var result = parseFunction.call(this);\n\n              if (this.context.firstCoverInitializedNameError !== null) {\n                this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n              }\n\n              this.context.isBindingElement = previousIsBindingElement;\n              this.context.isAssignmentTarget = previousIsAssignmentTarget;\n              this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n              return result;\n            };\n\n            Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n              var previousIsBindingElement = this.context.isBindingElement;\n              var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n              var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n              this.context.isBindingElement = true;\n              this.context.isAssignmentTarget = true;\n              this.context.firstCoverInitializedNameError = null;\n              var result = parseFunction.call(this);\n              this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n              this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n              this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n              return result;\n            };\n\n            Parser.prototype.consumeSemicolon = function () {\n              if (this.match(';')) {\n                this.nextToken();\n              } else if (!this.hasLineTerminator) {\n                if (this.lookahead.type !== 2\n                /* EOF */\n                && !this.match('}')) {\n                  this.throwUnexpectedToken(this.lookahead);\n                }\n\n                this.lastMarker.index = this.startMarker.index;\n                this.lastMarker.line = this.startMarker.line;\n                this.lastMarker.column = this.startMarker.column;\n              }\n            }; // https://tc39.github.io/ecma262/#sec-primary-expression\n\n\n            Parser.prototype.parsePrimaryExpression = function () {\n              var node = this.createNode();\n              var expr;\n              var token, raw;\n\n              switch (this.lookahead.type) {\n                case 3\n                /* Identifier */\n                :\n                  if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n                    this.tolerateUnexpectedToken(this.lookahead);\n                  }\n\n                  expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n                  break;\n\n                case 6\n                /* NumericLiteral */\n                :\n                case 8\n                /* StringLiteral */\n                :\n                  if (this.context.strict && this.lookahead.octal) {\n                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n                  }\n\n                  this.context.isAssignmentTarget = false;\n                  this.context.isBindingElement = false;\n                  token = this.nextToken();\n                  raw = this.getTokenRaw(token);\n                  expr = this.finalize(node, new Node.Literal(token.value, raw));\n                  break;\n\n                case 1\n                /* BooleanLiteral */\n                :\n                  this.context.isAssignmentTarget = false;\n                  this.context.isBindingElement = false;\n                  token = this.nextToken();\n                  raw = this.getTokenRaw(token);\n                  expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n                  break;\n\n                case 5\n                /* NullLiteral */\n                :\n                  this.context.isAssignmentTarget = false;\n                  this.context.isBindingElement = false;\n                  token = this.nextToken();\n                  raw = this.getTokenRaw(token);\n                  expr = this.finalize(node, new Node.Literal(null, raw));\n                  break;\n\n                case 10\n                /* Template */\n                :\n                  expr = this.parseTemplateLiteral();\n                  break;\n\n                case 7\n                /* Punctuator */\n                :\n                  switch (this.lookahead.value) {\n                    case '(':\n                      this.context.isBindingElement = false;\n                      expr = this.inheritCoverGrammar(this.parseGroupExpression);\n                      break;\n\n                    case '[':\n                      expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n                      break;\n\n                    case '{':\n                      expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n                      break;\n\n                    case '/':\n                    case '/=':\n                      this.context.isAssignmentTarget = false;\n                      this.context.isBindingElement = false;\n                      this.scanner.index = this.startMarker.index;\n                      token = this.nextRegexToken();\n                      raw = this.getTokenRaw(token);\n                      expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n                      break;\n\n                    default:\n                      expr = this.throwUnexpectedToken(this.nextToken());\n                  }\n\n                  break;\n\n                case 4\n                /* Keyword */\n                :\n                  if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n                    expr = this.parseIdentifierName();\n                  } else if (!this.context.strict && this.matchKeyword('let')) {\n                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n                  } else {\n                    this.context.isAssignmentTarget = false;\n                    this.context.isBindingElement = false;\n\n                    if (this.matchKeyword('function')) {\n                      expr = this.parseFunctionExpression();\n                    } else if (this.matchKeyword('this')) {\n                      this.nextToken();\n                      expr = this.finalize(node, new Node.ThisExpression());\n                    } else if (this.matchKeyword('class')) {\n                      expr = this.parseClassExpression();\n                    } else {\n                      expr = this.throwUnexpectedToken(this.nextToken());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  expr = this.throwUnexpectedToken(this.nextToken());\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-array-initializer\n\n\n            Parser.prototype.parseSpreadElement = function () {\n              var node = this.createNode();\n              this.expect('...');\n              var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n              return this.finalize(node, new Node.SpreadElement(arg));\n            };\n\n            Parser.prototype.parseArrayInitializer = function () {\n              var node = this.createNode();\n              var elements = [];\n              this.expect('[');\n\n              while (!this.match(']')) {\n                if (this.match(',')) {\n                  this.nextToken();\n                  elements.push(null);\n                } else if (this.match('...')) {\n                  var element = this.parseSpreadElement();\n\n                  if (!this.match(']')) {\n                    this.context.isAssignmentTarget = false;\n                    this.context.isBindingElement = false;\n                    this.expect(',');\n                  }\n\n                  elements.push(element);\n                } else {\n                  elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\n                  if (!this.match(']')) {\n                    this.expect(',');\n                  }\n                }\n              }\n\n              this.expect(']');\n              return this.finalize(node, new Node.ArrayExpression(elements));\n            }; // https://tc39.github.io/ecma262/#sec-object-initializer\n\n\n            Parser.prototype.parsePropertyMethod = function (params) {\n              this.context.isAssignmentTarget = false;\n              this.context.isBindingElement = false;\n              var previousStrict = this.context.strict;\n              var previousAllowStrictDirective = this.context.allowStrictDirective;\n              this.context.allowStrictDirective = params.simple;\n              var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\n              if (this.context.strict && params.firstRestricted) {\n                this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n              }\n\n              if (this.context.strict && params.stricted) {\n                this.tolerateUnexpectedToken(params.stricted, params.message);\n              }\n\n              this.context.strict = previousStrict;\n              this.context.allowStrictDirective = previousAllowStrictDirective;\n              return body;\n            };\n\n            Parser.prototype.parsePropertyMethodFunction = function () {\n              var isGenerator = false;\n              var node = this.createNode();\n              var previousAllowYield = this.context.allowYield;\n              this.context.allowYield = true;\n              var params = this.parseFormalParameters();\n              var method = this.parsePropertyMethod(params);\n              this.context.allowYield = previousAllowYield;\n              return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n            };\n\n            Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n              var node = this.createNode();\n              var previousAllowYield = this.context.allowYield;\n              var previousAwait = this.context.await;\n              this.context.allowYield = false;\n              this.context.await = true;\n              var params = this.parseFormalParameters();\n              var method = this.parsePropertyMethod(params);\n              this.context.allowYield = previousAllowYield;\n              this.context.await = previousAwait;\n              return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n            };\n\n            Parser.prototype.parseObjectPropertyKey = function () {\n              var node = this.createNode();\n              var token = this.nextToken();\n              var key;\n\n              switch (token.type) {\n                case 8\n                /* StringLiteral */\n                :\n                case 6\n                /* NumericLiteral */\n                :\n                  if (this.context.strict && token.octal) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n                  }\n\n                  var raw = this.getTokenRaw(token);\n                  key = this.finalize(node, new Node.Literal(token.value, raw));\n                  break;\n\n                case 3\n                /* Identifier */\n                :\n                case 1\n                /* BooleanLiteral */\n                :\n                case 5\n                /* NullLiteral */\n                :\n                case 4\n                /* Keyword */\n                :\n                  key = this.finalize(node, new Node.Identifier(token.value));\n                  break;\n\n                case 7\n                /* Punctuator */\n                :\n                  if (token.value === '[') {\n                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                    this.expect(']');\n                  } else {\n                    key = this.throwUnexpectedToken(token);\n                  }\n\n                  break;\n\n                default:\n                  key = this.throwUnexpectedToken(token);\n              }\n\n              return key;\n            };\n\n            Parser.prototype.isPropertyKey = function (key, value) {\n              return key.type === syntax_1.Syntax.Identifier && key.name === value || key.type === syntax_1.Syntax.Literal && key.value === value;\n            };\n\n            Parser.prototype.parseObjectProperty = function (hasProto) {\n              var node = this.createNode();\n              var token = this.lookahead;\n              var kind;\n              var key = null;\n              var value = null;\n              var computed = false;\n              var method = false;\n              var shorthand = false;\n              var isAsync = false;\n\n              if (token.type === 3\n              /* Identifier */\n              ) {\n                  var id = token.value;\n                  this.nextToken();\n                  computed = this.match('[');\n                  isAsync = !this.hasLineTerminator && id === 'async' && !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n                  key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n                } else if (this.match('*')) {\n                this.nextToken();\n              } else {\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n              }\n\n              var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\n              if (token.type === 3\n              /* Identifier */\n              && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n                kind = 'get';\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                this.context.allowYield = false;\n                value = this.parseGetterMethod();\n              } else if (token.type === 3\n              /* Identifier */\n              && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n                kind = 'set';\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                value = this.parseSetterMethod();\n              } else if (token.type === 7\n              /* Punctuator */\n              && token.value === '*' && lookaheadPropertyKey) {\n                kind = 'init';\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                value = this.parseGeneratorMethod();\n                method = true;\n              } else {\n                if (!key) {\n                  this.throwUnexpectedToken(this.lookahead);\n                }\n\n                kind = 'init';\n\n                if (this.match(':') && !isAsync) {\n                  if (!computed && this.isPropertyKey(key, '__proto__')) {\n                    if (hasProto.value) {\n                      this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n                    }\n\n                    hasProto.value = true;\n                  }\n\n                  this.nextToken();\n                  value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n                } else if (this.match('(')) {\n                  value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n                  method = true;\n                } else if (token.type === 3\n                /* Identifier */\n                ) {\n                    var id = this.finalize(node, new Node.Identifier(token.value));\n\n                    if (this.match('=')) {\n                      this.context.firstCoverInitializedNameError = this.lookahead;\n                      this.nextToken();\n                      shorthand = true;\n                      var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                      value = this.finalize(node, new Node.AssignmentPattern(id, init));\n                    } else {\n                      shorthand = true;\n                      value = id;\n                    }\n                  } else {\n                  this.throwUnexpectedToken(this.nextToken());\n                }\n              }\n\n              return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n            };\n\n            Parser.prototype.parseObjectInitializer = function () {\n              var node = this.createNode();\n              this.expect('{');\n              var properties = [];\n              var hasProto = {\n                value: false\n              };\n\n              while (!this.match('}')) {\n                properties.push(this.parseObjectProperty(hasProto));\n\n                if (!this.match('}')) {\n                  this.expectCommaSeparator();\n                }\n              }\n\n              this.expect('}');\n              return this.finalize(node, new Node.ObjectExpression(properties));\n            }; // https://tc39.github.io/ecma262/#sec-template-literals\n\n\n            Parser.prototype.parseTemplateHead = function () {\n              assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n              var node = this.createNode();\n              var token = this.nextToken();\n              var raw = token.value;\n              var cooked = token.cooked;\n              return this.finalize(node, new Node.TemplateElement({\n                raw: raw,\n                cooked: cooked\n              }, token.tail));\n            };\n\n            Parser.prototype.parseTemplateElement = function () {\n              if (this.lookahead.type !== 10\n              /* Template */\n              ) {\n                  this.throwUnexpectedToken();\n                }\n\n              var node = this.createNode();\n              var token = this.nextToken();\n              var raw = token.value;\n              var cooked = token.cooked;\n              return this.finalize(node, new Node.TemplateElement({\n                raw: raw,\n                cooked: cooked\n              }, token.tail));\n            };\n\n            Parser.prototype.parseTemplateLiteral = function () {\n              var node = this.createNode();\n              var expressions = [];\n              var quasis = [];\n              var quasi = this.parseTemplateHead();\n              quasis.push(quasi);\n\n              while (!quasi.tail) {\n                expressions.push(this.parseExpression());\n                quasi = this.parseTemplateElement();\n                quasis.push(quasi);\n              }\n\n              return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n            }; // https://tc39.github.io/ecma262/#sec-grouping-operator\n\n\n            Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n              switch (expr.type) {\n                case syntax_1.Syntax.Identifier:\n                case syntax_1.Syntax.MemberExpression:\n                case syntax_1.Syntax.RestElement:\n                case syntax_1.Syntax.AssignmentPattern:\n                  break;\n\n                case syntax_1.Syntax.SpreadElement:\n                  expr.type = syntax_1.Syntax.RestElement;\n                  this.reinterpretExpressionAsPattern(expr.argument);\n                  break;\n\n                case syntax_1.Syntax.ArrayExpression:\n                  expr.type = syntax_1.Syntax.ArrayPattern;\n\n                  for (var i = 0; i < expr.elements.length; i++) {\n                    if (expr.elements[i] !== null) {\n                      this.reinterpretExpressionAsPattern(expr.elements[i]);\n                    }\n                  }\n\n                  break;\n\n                case syntax_1.Syntax.ObjectExpression:\n                  expr.type = syntax_1.Syntax.ObjectPattern;\n\n                  for (var i = 0; i < expr.properties.length; i++) {\n                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n                  }\n\n                  break;\n\n                case syntax_1.Syntax.AssignmentExpression:\n                  expr.type = syntax_1.Syntax.AssignmentPattern;\n                  delete expr.operator;\n                  this.reinterpretExpressionAsPattern(expr.left);\n                  break;\n\n                default:\n                  // Allow other node type for tolerant parsing.\n                  break;\n              }\n            };\n\n            Parser.prototype.parseGroupExpression = function () {\n              var expr;\n              this.expect('(');\n\n              if (this.match(')')) {\n                this.nextToken();\n\n                if (!this.match('=>')) {\n                  this.expect('=>');\n                }\n\n                expr = {\n                  type: ArrowParameterPlaceHolder,\n                  params: [],\n                  async: false\n                };\n              } else {\n                var startToken = this.lookahead;\n                var params = [];\n\n                if (this.match('...')) {\n                  expr = this.parseRestElement(params);\n                  this.expect(')');\n\n                  if (!this.match('=>')) {\n                    this.expect('=>');\n                  }\n\n                  expr = {\n                    type: ArrowParameterPlaceHolder,\n                    params: [expr],\n                    async: false\n                  };\n                } else {\n                  var arrow = false;\n                  this.context.isBindingElement = true;\n                  expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\n                  if (this.match(',')) {\n                    var expressions = [];\n                    this.context.isAssignmentTarget = false;\n                    expressions.push(expr);\n\n                    while (this.lookahead.type !== 2\n                    /* EOF */\n                    ) {\n                      if (!this.match(',')) {\n                        break;\n                      }\n\n                      this.nextToken();\n\n                      if (this.match(')')) {\n                        this.nextToken();\n\n                        for (var i = 0; i < expressions.length; i++) {\n                          this.reinterpretExpressionAsPattern(expressions[i]);\n                        }\n\n                        arrow = true;\n                        expr = {\n                          type: ArrowParameterPlaceHolder,\n                          params: expressions,\n                          async: false\n                        };\n                      } else if (this.match('...')) {\n                        if (!this.context.isBindingElement) {\n                          this.throwUnexpectedToken(this.lookahead);\n                        }\n\n                        expressions.push(this.parseRestElement(params));\n                        this.expect(')');\n\n                        if (!this.match('=>')) {\n                          this.expect('=>');\n                        }\n\n                        this.context.isBindingElement = false;\n\n                        for (var i = 0; i < expressions.length; i++) {\n                          this.reinterpretExpressionAsPattern(expressions[i]);\n                        }\n\n                        arrow = true;\n                        expr = {\n                          type: ArrowParameterPlaceHolder,\n                          params: expressions,\n                          async: false\n                        };\n                      } else {\n                        expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n                      }\n\n                      if (arrow) {\n                        break;\n                      }\n                    }\n\n                    if (!arrow) {\n                      expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n                    }\n                  }\n\n                  if (!arrow) {\n                    this.expect(')');\n\n                    if (this.match('=>')) {\n                      if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n                        arrow = true;\n                        expr = {\n                          type: ArrowParameterPlaceHolder,\n                          params: [expr],\n                          async: false\n                        };\n                      }\n\n                      if (!arrow) {\n                        if (!this.context.isBindingElement) {\n                          this.throwUnexpectedToken(this.lookahead);\n                        }\n\n                        if (expr.type === syntax_1.Syntax.SequenceExpression) {\n                          for (var i = 0; i < expr.expressions.length; i++) {\n                            this.reinterpretExpressionAsPattern(expr.expressions[i]);\n                          }\n                        } else {\n                          this.reinterpretExpressionAsPattern(expr);\n                        }\n\n                        var parameters = expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr];\n                        expr = {\n                          type: ArrowParameterPlaceHolder,\n                          params: parameters,\n                          async: false\n                        };\n                      }\n                    }\n\n                    this.context.isBindingElement = false;\n                  }\n                }\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\n\n            Parser.prototype.parseArguments = function () {\n              this.expect('(');\n              var args = [];\n\n              if (!this.match(')')) {\n                while (true) {\n                  var expr = this.match('...') ? this.parseSpreadElement() : this.isolateCoverGrammar(this.parseAssignmentExpression);\n                  args.push(expr);\n\n                  if (this.match(')')) {\n                    break;\n                  }\n\n                  this.expectCommaSeparator();\n\n                  if (this.match(')')) {\n                    break;\n                  }\n                }\n              }\n\n              this.expect(')');\n              return args;\n            };\n\n            Parser.prototype.isIdentifierName = function (token) {\n              return token.type === 3\n              /* Identifier */\n              || token.type === 4\n              /* Keyword */\n              || token.type === 1\n              /* BooleanLiteral */\n              || token.type === 5\n              /* NullLiteral */\n              ;\n            };\n\n            Parser.prototype.parseIdentifierName = function () {\n              var node = this.createNode();\n              var token = this.nextToken();\n\n              if (!this.isIdentifierName(token)) {\n                this.throwUnexpectedToken(token);\n              }\n\n              return this.finalize(node, new Node.Identifier(token.value));\n            };\n\n            Parser.prototype.parseNewExpression = function () {\n              var node = this.createNode();\n              var id = this.parseIdentifierName();\n              assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n              var expr;\n\n              if (this.match('.')) {\n                this.nextToken();\n\n                if (this.lookahead.type === 3\n                /* Identifier */\n                && this.context.inFunctionBody && this.lookahead.value === 'target') {\n                  var property = this.parseIdentifierName();\n                  expr = new Node.MetaProperty(id, property);\n                } else {\n                  this.throwUnexpectedToken(this.lookahead);\n                }\n              } else {\n                var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n                var args = this.match('(') ? this.parseArguments() : [];\n                expr = new Node.NewExpression(callee, args);\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n              }\n\n              return this.finalize(node, expr);\n            };\n\n            Parser.prototype.parseAsyncArgument = function () {\n              var arg = this.parseAssignmentExpression();\n              this.context.firstCoverInitializedNameError = null;\n              return arg;\n            };\n\n            Parser.prototype.parseAsyncArguments = function () {\n              this.expect('(');\n              var args = [];\n\n              if (!this.match(')')) {\n                while (true) {\n                  var expr = this.match('...') ? this.parseSpreadElement() : this.isolateCoverGrammar(this.parseAsyncArgument);\n                  args.push(expr);\n\n                  if (this.match(')')) {\n                    break;\n                  }\n\n                  this.expectCommaSeparator();\n\n                  if (this.match(')')) {\n                    break;\n                  }\n                }\n              }\n\n              this.expect(')');\n              return args;\n            };\n\n            Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n              var startToken = this.lookahead;\n              var maybeAsync = this.matchContextualKeyword('async');\n              var previousAllowIn = this.context.allowIn;\n              this.context.allowIn = true;\n              var expr;\n\n              if (this.matchKeyword('super') && this.context.inFunctionBody) {\n                expr = this.createNode();\n                this.nextToken();\n                expr = this.finalize(expr, new Node.Super());\n\n                if (!this.match('(') && !this.match('.') && !this.match('[')) {\n                  this.throwUnexpectedToken(this.lookahead);\n                }\n              } else {\n                expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n              }\n\n              while (true) {\n                if (this.match('.')) {\n                  this.context.isBindingElement = false;\n                  this.context.isAssignmentTarget = true;\n                  this.expect('.');\n                  var property = this.parseIdentifierName();\n                  expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n                } else if (this.match('(')) {\n                  var asyncArrow = maybeAsync && startToken.lineNumber === this.lookahead.lineNumber;\n                  this.context.isBindingElement = false;\n                  this.context.isAssignmentTarget = false;\n                  var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n                  expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\n                  if (asyncArrow && this.match('=>')) {\n                    for (var i = 0; i < args.length; ++i) {\n                      this.reinterpretExpressionAsPattern(args[i]);\n                    }\n\n                    expr = {\n                      type: ArrowParameterPlaceHolder,\n                      params: args,\n                      async: true\n                    };\n                  }\n                } else if (this.match('[')) {\n                  this.context.isBindingElement = false;\n                  this.context.isAssignmentTarget = true;\n                  this.expect('[');\n                  var property = this.isolateCoverGrammar(this.parseExpression);\n                  this.expect(']');\n                  expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n                } else if (this.lookahead.type === 10\n                /* Template */\n                && this.lookahead.head) {\n                  var quasi = this.parseTemplateLiteral();\n                  expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n                } else {\n                  break;\n                }\n              }\n\n              this.context.allowIn = previousAllowIn;\n              return expr;\n            };\n\n            Parser.prototype.parseSuper = function () {\n              var node = this.createNode();\n              this.expectKeyword('super');\n\n              if (!this.match('[') && !this.match('.')) {\n                this.throwUnexpectedToken(this.lookahead);\n              }\n\n              return this.finalize(node, new Node.Super());\n            };\n\n            Parser.prototype.parseLeftHandSideExpression = function () {\n              assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n              var node = this.startNode(this.lookahead);\n              var expr = this.matchKeyword('super') && this.context.inFunctionBody ? this.parseSuper() : this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\n              while (true) {\n                if (this.match('[')) {\n                  this.context.isBindingElement = false;\n                  this.context.isAssignmentTarget = true;\n                  this.expect('[');\n                  var property = this.isolateCoverGrammar(this.parseExpression);\n                  this.expect(']');\n                  expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n                } else if (this.match('.')) {\n                  this.context.isBindingElement = false;\n                  this.context.isAssignmentTarget = true;\n                  this.expect('.');\n                  var property = this.parseIdentifierName();\n                  expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n                } else if (this.lookahead.type === 10\n                /* Template */\n                && this.lookahead.head) {\n                  var quasi = this.parseTemplateLiteral();\n                  expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n                } else {\n                  break;\n                }\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-update-expressions\n\n\n            Parser.prototype.parseUpdateExpression = function () {\n              var expr;\n              var startToken = this.lookahead;\n\n              if (this.match('++') || this.match('--')) {\n                var node = this.startNode(startToken);\n                var token = this.nextToken();\n                expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\n                if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n                  this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n                }\n\n                if (!this.context.isAssignmentTarget) {\n                  this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n                }\n\n                var prefix = true;\n                expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n              } else {\n                expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\n                if (!this.hasLineTerminator && this.lookahead.type === 7\n                /* Punctuator */\n                ) {\n                    if (this.match('++') || this.match('--')) {\n                      if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n                      }\n\n                      if (!this.context.isAssignmentTarget) {\n                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n                      }\n\n                      this.context.isAssignmentTarget = false;\n                      this.context.isBindingElement = false;\n                      var operator = this.nextToken().value;\n                      var prefix = false;\n                      expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n                    }\n                  }\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-unary-operators\n\n\n            Parser.prototype.parseAwaitExpression = function () {\n              var node = this.createNode();\n              this.nextToken();\n              var argument = this.parseUnaryExpression();\n              return this.finalize(node, new Node.AwaitExpression(argument));\n            };\n\n            Parser.prototype.parseUnaryExpression = function () {\n              var expr;\n\n              if (this.match('+') || this.match('-') || this.match('~') || this.match('!') || this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n                var node = this.startNode(this.lookahead);\n                var token = this.nextToken();\n                expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n                expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\n                if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n                  this.tolerateError(messages_1.Messages.StrictDelete);\n                }\n\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n              } else if (this.context.await && this.matchContextualKeyword('await')) {\n                expr = this.parseAwaitExpression();\n              } else {\n                expr = this.parseUpdateExpression();\n              }\n\n              return expr;\n            };\n\n            Parser.prototype.parseExponentiationExpression = function () {\n              var startToken = this.lookahead;\n              var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\n              if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n                this.nextToken();\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n                var left = expr;\n                var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n                expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-exp-operator\n            // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n            // https://tc39.github.io/ecma262/#sec-additive-operators\n            // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n            // https://tc39.github.io/ecma262/#sec-relational-operators\n            // https://tc39.github.io/ecma262/#sec-equality-operators\n            // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n            // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\n\n            Parser.prototype.binaryPrecedence = function (token) {\n              var op = token.value;\n              var precedence;\n\n              if (token.type === 7\n              /* Punctuator */\n              ) {\n                  precedence = this.operatorPrecedence[op] || 0;\n                } else if (token.type === 4\n              /* Keyword */\n              ) {\n                  precedence = op === 'instanceof' || this.context.allowIn && op === 'in' ? 7 : 0;\n                } else {\n                precedence = 0;\n              }\n\n              return precedence;\n            };\n\n            Parser.prototype.parseBinaryExpression = function () {\n              var startToken = this.lookahead;\n              var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n              var token = this.lookahead;\n              var prec = this.binaryPrecedence(token);\n\n              if (prec > 0) {\n                this.nextToken();\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n                var markers = [startToken, this.lookahead];\n                var left = expr;\n                var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n                var stack = [left, token.value, right];\n                var precedences = [prec];\n\n                while (true) {\n                  prec = this.binaryPrecedence(this.lookahead);\n\n                  if (prec <= 0) {\n                    break;\n                  } // Reduce: make a binary expression from the three topmost entries.\n\n\n                  while (stack.length > 2 && prec <= precedences[precedences.length - 1]) {\n                    right = stack.pop();\n                    var operator = stack.pop();\n                    precedences.pop();\n                    left = stack.pop();\n                    markers.pop();\n                    var node = this.startNode(markers[markers.length - 1]);\n                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n                  } // Shift.\n\n\n                  stack.push(this.nextToken().value);\n                  precedences.push(prec);\n                  markers.push(this.lookahead);\n                  stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n                } // Final reduce to clean-up the stack.\n\n\n                var i = stack.length - 1;\n                expr = stack[i];\n                var lastMarker = markers.pop();\n\n                while (i > 1) {\n                  var marker = markers.pop();\n                  var lastLineStart = lastMarker && lastMarker.lineStart;\n                  var node = this.startNode(marker, lastLineStart);\n                  var operator = stack[i - 1];\n                  expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n                  i -= 2;\n                  lastMarker = marker;\n                }\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-conditional-operator\n\n\n            Parser.prototype.parseConditionalExpression = function () {\n              var startToken = this.lookahead;\n              var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\n              if (this.match('?')) {\n                this.nextToken();\n                var previousAllowIn = this.context.allowIn;\n                this.context.allowIn = true;\n                var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                this.context.allowIn = previousAllowIn;\n                this.expect(':');\n                var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n                this.context.isAssignmentTarget = false;\n                this.context.isBindingElement = false;\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-assignment-operators\n\n\n            Parser.prototype.checkPatternParam = function (options, param) {\n              switch (param.type) {\n                case syntax_1.Syntax.Identifier:\n                  this.validateParam(options, param, param.name);\n                  break;\n\n                case syntax_1.Syntax.RestElement:\n                  this.checkPatternParam(options, param.argument);\n                  break;\n\n                case syntax_1.Syntax.AssignmentPattern:\n                  this.checkPatternParam(options, param.left);\n                  break;\n\n                case syntax_1.Syntax.ArrayPattern:\n                  for (var i = 0; i < param.elements.length; i++) {\n                    if (param.elements[i] !== null) {\n                      this.checkPatternParam(options, param.elements[i]);\n                    }\n                  }\n\n                  break;\n\n                case syntax_1.Syntax.ObjectPattern:\n                  for (var i = 0; i < param.properties.length; i++) {\n                    this.checkPatternParam(options, param.properties[i].value);\n                  }\n\n                  break;\n\n                default:\n                  break;\n              }\n\n              options.simple = options.simple && param instanceof Node.Identifier;\n            };\n\n            Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n              var params = [expr];\n              var options;\n              var asyncArrow = false;\n\n              switch (expr.type) {\n                case syntax_1.Syntax.Identifier:\n                  break;\n\n                case ArrowParameterPlaceHolder:\n                  params = expr.params;\n                  asyncArrow = expr.async;\n                  break;\n\n                default:\n                  return null;\n              }\n\n              options = {\n                simple: true,\n                paramSet: {}\n              };\n\n              for (var i = 0; i < params.length; ++i) {\n                var param = params[i];\n\n                if (param.type === syntax_1.Syntax.AssignmentPattern) {\n                  if (param.right.type === syntax_1.Syntax.YieldExpression) {\n                    if (param.right.argument) {\n                      this.throwUnexpectedToken(this.lookahead);\n                    }\n\n                    param.right.type = syntax_1.Syntax.Identifier;\n                    param.right.name = 'yield';\n                    delete param.right.argument;\n                    delete param.right.delegate;\n                  }\n                } else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n                  this.throwUnexpectedToken(this.lookahead);\n                }\n\n                this.checkPatternParam(options, param);\n                params[i] = param;\n              }\n\n              if (this.context.strict || !this.context.allowYield) {\n                for (var i = 0; i < params.length; ++i) {\n                  var param = params[i];\n\n                  if (param.type === syntax_1.Syntax.YieldExpression) {\n                    this.throwUnexpectedToken(this.lookahead);\n                  }\n                }\n              }\n\n              if (options.message === messages_1.Messages.StrictParamDupe) {\n                var token = this.context.strict ? options.stricted : options.firstRestricted;\n                this.throwUnexpectedToken(token, options.message);\n              }\n\n              return {\n                simple: options.simple,\n                params: params,\n                stricted: options.stricted,\n                firstRestricted: options.firstRestricted,\n                message: options.message\n              };\n            };\n\n            Parser.prototype.parseAssignmentExpression = function () {\n              var expr;\n\n              if (!this.context.allowYield && this.matchKeyword('yield')) {\n                expr = this.parseYieldExpression();\n              } else {\n                var startToken = this.lookahead;\n                var token = startToken;\n                expr = this.parseConditionalExpression();\n\n                if (token.type === 3\n                /* Identifier */\n                && token.lineNumber === this.lookahead.lineNumber && token.value === 'async') {\n                  if (this.lookahead.type === 3\n                  /* Identifier */\n                  || this.matchKeyword('yield')) {\n                    var arg = this.parsePrimaryExpression();\n                    this.reinterpretExpressionAsPattern(arg);\n                    expr = {\n                      type: ArrowParameterPlaceHolder,\n                      params: [arg],\n                      async: true\n                    };\n                  }\n                }\n\n                if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n                  // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n                  this.context.isAssignmentTarget = false;\n                  this.context.isBindingElement = false;\n                  var isAsync = expr.async;\n                  var list = this.reinterpretAsCoverFormalsList(expr);\n\n                  if (list) {\n                    if (this.hasLineTerminator) {\n                      this.tolerateUnexpectedToken(this.lookahead);\n                    }\n\n                    this.context.firstCoverInitializedNameError = null;\n                    var previousStrict = this.context.strict;\n                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n                    this.context.allowStrictDirective = list.simple;\n                    var previousAllowYield = this.context.allowYield;\n                    var previousAwait = this.context.await;\n                    this.context.allowYield = true;\n                    this.context.await = isAsync;\n                    var node = this.startNode(startToken);\n                    this.expect('=>');\n                    var body = void 0;\n\n                    if (this.match('{')) {\n                      var previousAllowIn = this.context.allowIn;\n                      this.context.allowIn = true;\n                      body = this.parseFunctionSourceElements();\n                      this.context.allowIn = previousAllowIn;\n                    } else {\n                      body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                    }\n\n                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\n                    if (this.context.strict && list.firstRestricted) {\n                      this.throwUnexpectedToken(list.firstRestricted, list.message);\n                    }\n\n                    if (this.context.strict && list.stricted) {\n                      this.tolerateUnexpectedToken(list.stricted, list.message);\n                    }\n\n                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) : this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n                    this.context.strict = previousStrict;\n                    this.context.allowStrictDirective = previousAllowStrictDirective;\n                    this.context.allowYield = previousAllowYield;\n                    this.context.await = previousAwait;\n                  }\n                } else {\n                  if (this.matchAssign()) {\n                    if (!this.context.isAssignmentTarget) {\n                      this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n                    }\n\n                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n                      var id = expr;\n\n                      if (this.scanner.isRestrictedWord(id.name)) {\n                        this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n                      }\n\n                      if (this.scanner.isStrictModeReservedWord(id.name)) {\n                        this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n                      }\n                    }\n\n                    if (!this.match('=')) {\n                      this.context.isAssignmentTarget = false;\n                      this.context.isBindingElement = false;\n                    } else {\n                      this.reinterpretExpressionAsPattern(expr);\n                    }\n\n                    token = this.nextToken();\n                    var operator = token.value;\n                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n                    this.context.firstCoverInitializedNameError = null;\n                  }\n                }\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-comma-operator\n\n\n            Parser.prototype.parseExpression = function () {\n              var startToken = this.lookahead;\n              var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\n              if (this.match(',')) {\n                var expressions = [];\n                expressions.push(expr);\n\n                while (this.lookahead.type !== 2\n                /* EOF */\n                ) {\n                  if (!this.match(',')) {\n                    break;\n                  }\n\n                  this.nextToken();\n                  expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n                }\n\n                expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n              }\n\n              return expr;\n            }; // https://tc39.github.io/ecma262/#sec-block\n\n\n            Parser.prototype.parseStatementListItem = function () {\n              var statement;\n              this.context.isAssignmentTarget = true;\n              this.context.isBindingElement = true;\n\n              if (this.lookahead.type === 4\n              /* Keyword */\n              ) {\n                  switch (this.lookahead.value) {\n                    case 'export':\n                      if (!this.context.isModule) {\n                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n                      }\n\n                      statement = this.parseExportDeclaration();\n                      break;\n\n                    case 'import':\n                      if (!this.context.isModule) {\n                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n                      }\n\n                      statement = this.parseImportDeclaration();\n                      break;\n\n                    case 'const':\n                      statement = this.parseLexicalDeclaration({\n                        inFor: false\n                      });\n                      break;\n\n                    case 'function':\n                      statement = this.parseFunctionDeclaration();\n                      break;\n\n                    case 'class':\n                      statement = this.parseClassDeclaration();\n                      break;\n\n                    case 'let':\n                      statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({\n                        inFor: false\n                      }) : this.parseStatement();\n                      break;\n\n                    default:\n                      statement = this.parseStatement();\n                      break;\n                  }\n                } else {\n                statement = this.parseStatement();\n              }\n\n              return statement;\n            };\n\n            Parser.prototype.parseBlock = function () {\n              var node = this.createNode();\n              this.expect('{');\n              var block = [];\n\n              while (true) {\n                if (this.match('}')) {\n                  break;\n                }\n\n                block.push(this.parseStatementListItem());\n              }\n\n              this.expect('}');\n              return this.finalize(node, new Node.BlockStatement(block));\n            }; // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\n\n            Parser.prototype.parseLexicalBinding = function (kind, options) {\n              var node = this.createNode();\n              var params = [];\n              var id = this.parsePattern(params, kind);\n\n              if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n                if (this.scanner.isRestrictedWord(id.name)) {\n                  this.tolerateError(messages_1.Messages.StrictVarName);\n                }\n              }\n\n              var init = null;\n\n              if (kind === 'const') {\n                if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n                  if (this.match('=')) {\n                    this.nextToken();\n                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                  } else {\n                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n                  }\n                }\n              } else if (!options.inFor && id.type !== syntax_1.Syntax.Identifier || this.match('=')) {\n                this.expect('=');\n                init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n              }\n\n              return this.finalize(node, new Node.VariableDeclarator(id, init));\n            };\n\n            Parser.prototype.parseBindingList = function (kind, options) {\n              var list = [this.parseLexicalBinding(kind, options)];\n\n              while (this.match(',')) {\n                this.nextToken();\n                list.push(this.parseLexicalBinding(kind, options));\n              }\n\n              return list;\n            };\n\n            Parser.prototype.isLexicalDeclaration = function () {\n              var state = this.scanner.saveState();\n              this.scanner.scanComments();\n              var next = this.scanner.lex();\n              this.scanner.restoreState(state);\n              return next.type === 3\n              /* Identifier */\n              || next.type === 7\n              /* Punctuator */\n              && next.value === '[' || next.type === 7\n              /* Punctuator */\n              && next.value === '{' || next.type === 4\n              /* Keyword */\n              && next.value === 'let' || next.type === 4\n              /* Keyword */\n              && next.value === 'yield';\n            };\n\n            Parser.prototype.parseLexicalDeclaration = function (options) {\n              var node = this.createNode();\n              var kind = this.nextToken().value;\n              assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n              var declarations = this.parseBindingList(kind, options);\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n            }; // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\n\n            Parser.prototype.parseBindingRestElement = function (params, kind) {\n              var node = this.createNode();\n              this.expect('...');\n              var arg = this.parsePattern(params, kind);\n              return this.finalize(node, new Node.RestElement(arg));\n            };\n\n            Parser.prototype.parseArrayPattern = function (params, kind) {\n              var node = this.createNode();\n              this.expect('[');\n              var elements = [];\n\n              while (!this.match(']')) {\n                if (this.match(',')) {\n                  this.nextToken();\n                  elements.push(null);\n                } else {\n                  if (this.match('...')) {\n                    elements.push(this.parseBindingRestElement(params, kind));\n                    break;\n                  } else {\n                    elements.push(this.parsePatternWithDefault(params, kind));\n                  }\n\n                  if (!this.match(']')) {\n                    this.expect(',');\n                  }\n                }\n              }\n\n              this.expect(']');\n              return this.finalize(node, new Node.ArrayPattern(elements));\n            };\n\n            Parser.prototype.parsePropertyPattern = function (params, kind) {\n              var node = this.createNode();\n              var computed = false;\n              var shorthand = false;\n              var method = false;\n              var key;\n              var value;\n\n              if (this.lookahead.type === 3\n              /* Identifier */\n              ) {\n                  var keyToken = this.lookahead;\n                  key = this.parseVariableIdentifier();\n                  var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\n                  if (this.match('=')) {\n                    params.push(keyToken);\n                    shorthand = true;\n                    this.nextToken();\n                    var expr = this.parseAssignmentExpression();\n                    value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n                  } else if (!this.match(':')) {\n                    params.push(keyToken);\n                    shorthand = true;\n                    value = init;\n                  } else {\n                    this.expect(':');\n                    value = this.parsePatternWithDefault(params, kind);\n                  }\n                } else {\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                this.expect(':');\n                value = this.parsePatternWithDefault(params, kind);\n              }\n\n              return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n            };\n\n            Parser.prototype.parseObjectPattern = function (params, kind) {\n              var node = this.createNode();\n              var properties = [];\n              this.expect('{');\n\n              while (!this.match('}')) {\n                properties.push(this.parsePropertyPattern(params, kind));\n\n                if (!this.match('}')) {\n                  this.expect(',');\n                }\n              }\n\n              this.expect('}');\n              return this.finalize(node, new Node.ObjectPattern(properties));\n            };\n\n            Parser.prototype.parsePattern = function (params, kind) {\n              var pattern;\n\n              if (this.match('[')) {\n                pattern = this.parseArrayPattern(params, kind);\n              } else if (this.match('{')) {\n                pattern = this.parseObjectPattern(params, kind);\n              } else {\n                if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n                  this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n                }\n\n                params.push(this.lookahead);\n                pattern = this.parseVariableIdentifier(kind);\n              }\n\n              return pattern;\n            };\n\n            Parser.prototype.parsePatternWithDefault = function (params, kind) {\n              var startToken = this.lookahead;\n              var pattern = this.parsePattern(params, kind);\n\n              if (this.match('=')) {\n                this.nextToken();\n                var previousAllowYield = this.context.allowYield;\n                this.context.allowYield = true;\n                var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n                this.context.allowYield = previousAllowYield;\n                pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n              }\n\n              return pattern;\n            }; // https://tc39.github.io/ecma262/#sec-variable-statement\n\n\n            Parser.prototype.parseVariableIdentifier = function (kind) {\n              var node = this.createNode();\n              var token = this.nextToken();\n\n              if (token.type === 4\n              /* Keyword */\n              && token.value === 'yield') {\n                if (this.context.strict) {\n                  this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n                } else if (!this.context.allowYield) {\n                  this.throwUnexpectedToken(token);\n                }\n              } else if (token.type !== 3\n              /* Identifier */\n              ) {\n                  if (this.context.strict && token.type === 4\n                  /* Keyword */\n                  && this.scanner.isStrictModeReservedWord(token.value)) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n                  } else {\n                    if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n                      this.throwUnexpectedToken(token);\n                    }\n                  }\n                } else if ((this.context.isModule || this.context.await) && token.type === 3\n              /* Identifier */\n              && token.value === 'await') {\n                this.tolerateUnexpectedToken(token);\n              }\n\n              return this.finalize(node, new Node.Identifier(token.value));\n            };\n\n            Parser.prototype.parseVariableDeclaration = function (options) {\n              var node = this.createNode();\n              var params = [];\n              var id = this.parsePattern(params, 'var');\n\n              if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n                if (this.scanner.isRestrictedWord(id.name)) {\n                  this.tolerateError(messages_1.Messages.StrictVarName);\n                }\n              }\n\n              var init = null;\n\n              if (this.match('=')) {\n                this.nextToken();\n                init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n              } else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n                this.expect('=');\n              }\n\n              return this.finalize(node, new Node.VariableDeclarator(id, init));\n            };\n\n            Parser.prototype.parseVariableDeclarationList = function (options) {\n              var opt = {\n                inFor: options.inFor\n              };\n              var list = [];\n              list.push(this.parseVariableDeclaration(opt));\n\n              while (this.match(',')) {\n                this.nextToken();\n                list.push(this.parseVariableDeclaration(opt));\n              }\n\n              return list;\n            };\n\n            Parser.prototype.parseVariableStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('var');\n              var declarations = this.parseVariableDeclarationList({\n                inFor: false\n              });\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n            }; // https://tc39.github.io/ecma262/#sec-empty-statement\n\n\n            Parser.prototype.parseEmptyStatement = function () {\n              var node = this.createNode();\n              this.expect(';');\n              return this.finalize(node, new Node.EmptyStatement());\n            }; // https://tc39.github.io/ecma262/#sec-expression-statement\n\n\n            Parser.prototype.parseExpressionStatement = function () {\n              var node = this.createNode();\n              var expr = this.parseExpression();\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.ExpressionStatement(expr));\n            }; // https://tc39.github.io/ecma262/#sec-if-statement\n\n\n            Parser.prototype.parseIfClause = function () {\n              if (this.context.strict && this.matchKeyword('function')) {\n                this.tolerateError(messages_1.Messages.StrictFunction);\n              }\n\n              return this.parseStatement();\n            };\n\n            Parser.prototype.parseIfStatement = function () {\n              var node = this.createNode();\n              var consequent;\n              var alternate = null;\n              this.expectKeyword('if');\n              this.expect('(');\n              var test = this.parseExpression();\n\n              if (!this.match(')') && this.config.tolerant) {\n                this.tolerateUnexpectedToken(this.nextToken());\n                consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n              } else {\n                this.expect(')');\n                consequent = this.parseIfClause();\n\n                if (this.matchKeyword('else')) {\n                  this.nextToken();\n                  alternate = this.parseIfClause();\n                }\n              }\n\n              return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n            }; // https://tc39.github.io/ecma262/#sec-do-while-statement\n\n\n            Parser.prototype.parseDoWhileStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('do');\n              var previousInIteration = this.context.inIteration;\n              this.context.inIteration = true;\n              var body = this.parseStatement();\n              this.context.inIteration = previousInIteration;\n              this.expectKeyword('while');\n              this.expect('(');\n              var test = this.parseExpression();\n\n              if (!this.match(')') && this.config.tolerant) {\n                this.tolerateUnexpectedToken(this.nextToken());\n              } else {\n                this.expect(')');\n\n                if (this.match(';')) {\n                  this.nextToken();\n                }\n              }\n\n              return this.finalize(node, new Node.DoWhileStatement(body, test));\n            }; // https://tc39.github.io/ecma262/#sec-while-statement\n\n\n            Parser.prototype.parseWhileStatement = function () {\n              var node = this.createNode();\n              var body;\n              this.expectKeyword('while');\n              this.expect('(');\n              var test = this.parseExpression();\n\n              if (!this.match(')') && this.config.tolerant) {\n                this.tolerateUnexpectedToken(this.nextToken());\n                body = this.finalize(this.createNode(), new Node.EmptyStatement());\n              } else {\n                this.expect(')');\n                var previousInIteration = this.context.inIteration;\n                this.context.inIteration = true;\n                body = this.parseStatement();\n                this.context.inIteration = previousInIteration;\n              }\n\n              return this.finalize(node, new Node.WhileStatement(test, body));\n            }; // https://tc39.github.io/ecma262/#sec-for-statement\n            // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\n\n            Parser.prototype.parseForStatement = function () {\n              var init = null;\n              var test = null;\n              var update = null;\n              var forIn = true;\n              var left, right;\n              var node = this.createNode();\n              this.expectKeyword('for');\n              this.expect('(');\n\n              if (this.match(';')) {\n                this.nextToken();\n              } else {\n                if (this.matchKeyword('var')) {\n                  init = this.createNode();\n                  this.nextToken();\n                  var previousAllowIn = this.context.allowIn;\n                  this.context.allowIn = false;\n                  var declarations = this.parseVariableDeclarationList({\n                    inFor: true\n                  });\n                  this.context.allowIn = previousAllowIn;\n\n                  if (declarations.length === 1 && this.matchKeyword('in')) {\n                    var decl = declarations[0];\n\n                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n                      this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n                    }\n\n                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n                    this.nextToken();\n                    left = init;\n                    right = this.parseExpression();\n                    init = null;\n                  } else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n                    this.nextToken();\n                    left = init;\n                    right = this.parseAssignmentExpression();\n                    init = null;\n                    forIn = false;\n                  } else {\n                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n                    this.expect(';');\n                  }\n                } else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n                  init = this.createNode();\n                  var kind = this.nextToken().value;\n\n                  if (!this.context.strict && this.lookahead.value === 'in') {\n                    init = this.finalize(init, new Node.Identifier(kind));\n                    this.nextToken();\n                    left = init;\n                    right = this.parseExpression();\n                    init = null;\n                  } else {\n                    var previousAllowIn = this.context.allowIn;\n                    this.context.allowIn = false;\n                    var declarations = this.parseBindingList(kind, {\n                      inFor: true\n                    });\n                    this.context.allowIn = previousAllowIn;\n\n                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n                      init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n                      this.nextToken();\n                      left = init;\n                      right = this.parseExpression();\n                      init = null;\n                    } else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n                      init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n                      this.nextToken();\n                      left = init;\n                      right = this.parseAssignmentExpression();\n                      init = null;\n                      forIn = false;\n                    } else {\n                      this.consumeSemicolon();\n                      init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n                    }\n                  }\n                } else {\n                  var initStartToken = this.lookahead;\n                  var previousAllowIn = this.context.allowIn;\n                  this.context.allowIn = false;\n                  init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n                  this.context.allowIn = previousAllowIn;\n\n                  if (this.matchKeyword('in')) {\n                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n                      this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n                    }\n\n                    this.nextToken();\n                    this.reinterpretExpressionAsPattern(init);\n                    left = init;\n                    right = this.parseExpression();\n                    init = null;\n                  } else if (this.matchContextualKeyword('of')) {\n                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n                      this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n                    }\n\n                    this.nextToken();\n                    this.reinterpretExpressionAsPattern(init);\n                    left = init;\n                    right = this.parseAssignmentExpression();\n                    init = null;\n                    forIn = false;\n                  } else {\n                    if (this.match(',')) {\n                      var initSeq = [init];\n\n                      while (this.match(',')) {\n                        this.nextToken();\n                        initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n                      }\n\n                      init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n                    }\n\n                    this.expect(';');\n                  }\n                }\n              }\n\n              if (typeof left === 'undefined') {\n                if (!this.match(';')) {\n                  test = this.parseExpression();\n                }\n\n                this.expect(';');\n\n                if (!this.match(')')) {\n                  update = this.parseExpression();\n                }\n              }\n\n              var body;\n\n              if (!this.match(')') && this.config.tolerant) {\n                this.tolerateUnexpectedToken(this.nextToken());\n                body = this.finalize(this.createNode(), new Node.EmptyStatement());\n              } else {\n                this.expect(')');\n                var previousInIteration = this.context.inIteration;\n                this.context.inIteration = true;\n                body = this.isolateCoverGrammar(this.parseStatement);\n                this.context.inIteration = previousInIteration;\n              }\n\n              return typeof left === 'undefined' ? this.finalize(node, new Node.ForStatement(init, test, update, body)) : forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) : this.finalize(node, new Node.ForOfStatement(left, right, body));\n            }; // https://tc39.github.io/ecma262/#sec-continue-statement\n\n\n            Parser.prototype.parseContinueStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('continue');\n              var label = null;\n\n              if (this.lookahead.type === 3\n              /* Identifier */\n              && !this.hasLineTerminator) {\n                var id = this.parseVariableIdentifier();\n                label = id;\n                var key = '$' + id.name;\n\n                if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n                  this.throwError(messages_1.Messages.UnknownLabel, id.name);\n                }\n              }\n\n              this.consumeSemicolon();\n\n              if (label === null && !this.context.inIteration) {\n                this.throwError(messages_1.Messages.IllegalContinue);\n              }\n\n              return this.finalize(node, new Node.ContinueStatement(label));\n            }; // https://tc39.github.io/ecma262/#sec-break-statement\n\n\n            Parser.prototype.parseBreakStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('break');\n              var label = null;\n\n              if (this.lookahead.type === 3\n              /* Identifier */\n              && !this.hasLineTerminator) {\n                var id = this.parseVariableIdentifier();\n                var key = '$' + id.name;\n\n                if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n                  this.throwError(messages_1.Messages.UnknownLabel, id.name);\n                }\n\n                label = id;\n              }\n\n              this.consumeSemicolon();\n\n              if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n                this.throwError(messages_1.Messages.IllegalBreak);\n              }\n\n              return this.finalize(node, new Node.BreakStatement(label));\n            }; // https://tc39.github.io/ecma262/#sec-return-statement\n\n\n            Parser.prototype.parseReturnStatement = function () {\n              if (!this.context.inFunctionBody) {\n                this.tolerateError(messages_1.Messages.IllegalReturn);\n              }\n\n              var node = this.createNode();\n              this.expectKeyword('return');\n              var hasArgument = !this.match(';') && !this.match('}') && !this.hasLineTerminator && this.lookahead.type !== 2\n              /* EOF */\n              || this.lookahead.type === 8\n              /* StringLiteral */\n              || this.lookahead.type === 10\n              /* Template */\n              ;\n              var argument = hasArgument ? this.parseExpression() : null;\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.ReturnStatement(argument));\n            }; // https://tc39.github.io/ecma262/#sec-with-statement\n\n\n            Parser.prototype.parseWithStatement = function () {\n              if (this.context.strict) {\n                this.tolerateError(messages_1.Messages.StrictModeWith);\n              }\n\n              var node = this.createNode();\n              var body;\n              this.expectKeyword('with');\n              this.expect('(');\n              var object = this.parseExpression();\n\n              if (!this.match(')') && this.config.tolerant) {\n                this.tolerateUnexpectedToken(this.nextToken());\n                body = this.finalize(this.createNode(), new Node.EmptyStatement());\n              } else {\n                this.expect(')');\n                body = this.parseStatement();\n              }\n\n              return this.finalize(node, new Node.WithStatement(object, body));\n            }; // https://tc39.github.io/ecma262/#sec-switch-statement\n\n\n            Parser.prototype.parseSwitchCase = function () {\n              var node = this.createNode();\n              var test;\n\n              if (this.matchKeyword('default')) {\n                this.nextToken();\n                test = null;\n              } else {\n                this.expectKeyword('case');\n                test = this.parseExpression();\n              }\n\n              this.expect(':');\n              var consequent = [];\n\n              while (true) {\n                if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n                  break;\n                }\n\n                consequent.push(this.parseStatementListItem());\n              }\n\n              return this.finalize(node, new Node.SwitchCase(test, consequent));\n            };\n\n            Parser.prototype.parseSwitchStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('switch');\n              this.expect('(');\n              var discriminant = this.parseExpression();\n              this.expect(')');\n              var previousInSwitch = this.context.inSwitch;\n              this.context.inSwitch = true;\n              var cases = [];\n              var defaultFound = false;\n              this.expect('{');\n\n              while (true) {\n                if (this.match('}')) {\n                  break;\n                }\n\n                var clause = this.parseSwitchCase();\n\n                if (clause.test === null) {\n                  if (defaultFound) {\n                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n                  }\n\n                  defaultFound = true;\n                }\n\n                cases.push(clause);\n              }\n\n              this.expect('}');\n              this.context.inSwitch = previousInSwitch;\n              return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n            }; // https://tc39.github.io/ecma262/#sec-labelled-statements\n\n\n            Parser.prototype.parseLabelledStatement = function () {\n              var node = this.createNode();\n              var expr = this.parseExpression();\n              var statement;\n\n              if (expr.type === syntax_1.Syntax.Identifier && this.match(':')) {\n                this.nextToken();\n                var id = expr;\n                var key = '$' + id.name;\n\n                if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n                  this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n                }\n\n                this.context.labelSet[key] = true;\n                var body = void 0;\n\n                if (this.matchKeyword('class')) {\n                  this.tolerateUnexpectedToken(this.lookahead);\n                  body = this.parseClassDeclaration();\n                } else if (this.matchKeyword('function')) {\n                  var token = this.lookahead;\n                  var declaration = this.parseFunctionDeclaration();\n\n                  if (this.context.strict) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n                  } else if (declaration.generator) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n                  }\n\n                  body = declaration;\n                } else {\n                  body = this.parseStatement();\n                }\n\n                delete this.context.labelSet[key];\n                statement = new Node.LabeledStatement(id, body);\n              } else {\n                this.consumeSemicolon();\n                statement = new Node.ExpressionStatement(expr);\n              }\n\n              return this.finalize(node, statement);\n            }; // https://tc39.github.io/ecma262/#sec-throw-statement\n\n\n            Parser.prototype.parseThrowStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('throw');\n\n              if (this.hasLineTerminator) {\n                this.throwError(messages_1.Messages.NewlineAfterThrow);\n              }\n\n              var argument = this.parseExpression();\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.ThrowStatement(argument));\n            }; // https://tc39.github.io/ecma262/#sec-try-statement\n\n\n            Parser.prototype.parseCatchClause = function () {\n              var node = this.createNode();\n              this.expectKeyword('catch');\n              this.expect('(');\n\n              if (this.match(')')) {\n                this.throwUnexpectedToken(this.lookahead);\n              }\n\n              var params = [];\n              var param = this.parsePattern(params);\n              var paramMap = {};\n\n              for (var i = 0; i < params.length; i++) {\n                var key = '$' + params[i].value;\n\n                if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n                  this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n                }\n\n                paramMap[key] = true;\n              }\n\n              if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n                if (this.scanner.isRestrictedWord(param.name)) {\n                  this.tolerateError(messages_1.Messages.StrictCatchVariable);\n                }\n              }\n\n              this.expect(')');\n              var body = this.parseBlock();\n              return this.finalize(node, new Node.CatchClause(param, body));\n            };\n\n            Parser.prototype.parseFinallyClause = function () {\n              this.expectKeyword('finally');\n              return this.parseBlock();\n            };\n\n            Parser.prototype.parseTryStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('try');\n              var block = this.parseBlock();\n              var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n              var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\n              if (!handler && !finalizer) {\n                this.throwError(messages_1.Messages.NoCatchOrFinally);\n              }\n\n              return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n            }; // https://tc39.github.io/ecma262/#sec-debugger-statement\n\n\n            Parser.prototype.parseDebuggerStatement = function () {\n              var node = this.createNode();\n              this.expectKeyword('debugger');\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.DebuggerStatement());\n            }; // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\n\n            Parser.prototype.parseStatement = function () {\n              var statement;\n\n              switch (this.lookahead.type) {\n                case 1\n                /* BooleanLiteral */\n                :\n                case 5\n                /* NullLiteral */\n                :\n                case 6\n                /* NumericLiteral */\n                :\n                case 8\n                /* StringLiteral */\n                :\n                case 10\n                /* Template */\n                :\n                case 9\n                /* RegularExpression */\n                :\n                  statement = this.parseExpressionStatement();\n                  break;\n\n                case 7\n                /* Punctuator */\n                :\n                  var value = this.lookahead.value;\n\n                  if (value === '{') {\n                    statement = this.parseBlock();\n                  } else if (value === '(') {\n                    statement = this.parseExpressionStatement();\n                  } else if (value === ';') {\n                    statement = this.parseEmptyStatement();\n                  } else {\n                    statement = this.parseExpressionStatement();\n                  }\n\n                  break;\n\n                case 3\n                /* Identifier */\n                :\n                  statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n                  break;\n\n                case 4\n                /* Keyword */\n                :\n                  switch (this.lookahead.value) {\n                    case 'break':\n                      statement = this.parseBreakStatement();\n                      break;\n\n                    case 'continue':\n                      statement = this.parseContinueStatement();\n                      break;\n\n                    case 'debugger':\n                      statement = this.parseDebuggerStatement();\n                      break;\n\n                    case 'do':\n                      statement = this.parseDoWhileStatement();\n                      break;\n\n                    case 'for':\n                      statement = this.parseForStatement();\n                      break;\n\n                    case 'function':\n                      statement = this.parseFunctionDeclaration();\n                      break;\n\n                    case 'if':\n                      statement = this.parseIfStatement();\n                      break;\n\n                    case 'return':\n                      statement = this.parseReturnStatement();\n                      break;\n\n                    case 'switch':\n                      statement = this.parseSwitchStatement();\n                      break;\n\n                    case 'throw':\n                      statement = this.parseThrowStatement();\n                      break;\n\n                    case 'try':\n                      statement = this.parseTryStatement();\n                      break;\n\n                    case 'var':\n                      statement = this.parseVariableStatement();\n                      break;\n\n                    case 'while':\n                      statement = this.parseWhileStatement();\n                      break;\n\n                    case 'with':\n                      statement = this.parseWithStatement();\n                      break;\n\n                    default:\n                      statement = this.parseExpressionStatement();\n                      break;\n                  }\n\n                  break;\n\n                default:\n                  statement = this.throwUnexpectedToken(this.lookahead);\n              }\n\n              return statement;\n            }; // https://tc39.github.io/ecma262/#sec-function-definitions\n\n\n            Parser.prototype.parseFunctionSourceElements = function () {\n              var node = this.createNode();\n              this.expect('{');\n              var body = this.parseDirectivePrologues();\n              var previousLabelSet = this.context.labelSet;\n              var previousInIteration = this.context.inIteration;\n              var previousInSwitch = this.context.inSwitch;\n              var previousInFunctionBody = this.context.inFunctionBody;\n              this.context.labelSet = {};\n              this.context.inIteration = false;\n              this.context.inSwitch = false;\n              this.context.inFunctionBody = true;\n\n              while (this.lookahead.type !== 2\n              /* EOF */\n              ) {\n                if (this.match('}')) {\n                  break;\n                }\n\n                body.push(this.parseStatementListItem());\n              }\n\n              this.expect('}');\n              this.context.labelSet = previousLabelSet;\n              this.context.inIteration = previousInIteration;\n              this.context.inSwitch = previousInSwitch;\n              this.context.inFunctionBody = previousInFunctionBody;\n              return this.finalize(node, new Node.BlockStatement(body));\n            };\n\n            Parser.prototype.validateParam = function (options, param, name) {\n              var key = '$' + name;\n\n              if (this.context.strict) {\n                if (this.scanner.isRestrictedWord(name)) {\n                  options.stricted = param;\n                  options.message = messages_1.Messages.StrictParamName;\n                }\n\n                if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n                  options.stricted = param;\n                  options.message = messages_1.Messages.StrictParamDupe;\n                }\n              } else if (!options.firstRestricted) {\n                if (this.scanner.isRestrictedWord(name)) {\n                  options.firstRestricted = param;\n                  options.message = messages_1.Messages.StrictParamName;\n                } else if (this.scanner.isStrictModeReservedWord(name)) {\n                  options.firstRestricted = param;\n                  options.message = messages_1.Messages.StrictReservedWord;\n                } else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n                  options.stricted = param;\n                  options.message = messages_1.Messages.StrictParamDupe;\n                }\n              }\n              /* istanbul ignore next */\n\n\n              if (typeof Object.defineProperty === 'function') {\n                Object.defineProperty(options.paramSet, key, {\n                  value: true,\n                  enumerable: true,\n                  writable: true,\n                  configurable: true\n                });\n              } else {\n                options.paramSet[key] = true;\n              }\n            };\n\n            Parser.prototype.parseRestElement = function (params) {\n              var node = this.createNode();\n              this.expect('...');\n              var arg = this.parsePattern(params);\n\n              if (this.match('=')) {\n                this.throwError(messages_1.Messages.DefaultRestParameter);\n              }\n\n              if (!this.match(')')) {\n                this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n              }\n\n              return this.finalize(node, new Node.RestElement(arg));\n            };\n\n            Parser.prototype.parseFormalParameter = function (options) {\n              var params = [];\n              var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\n              for (var i = 0; i < params.length; i++) {\n                this.validateParam(options, params[i], params[i].value);\n              }\n\n              options.simple = options.simple && param instanceof Node.Identifier;\n              options.params.push(param);\n            };\n\n            Parser.prototype.parseFormalParameters = function (firstRestricted) {\n              var options;\n              options = {\n                simple: true,\n                params: [],\n                firstRestricted: firstRestricted\n              };\n              this.expect('(');\n\n              if (!this.match(')')) {\n                options.paramSet = {};\n\n                while (this.lookahead.type !== 2\n                /* EOF */\n                ) {\n                  this.parseFormalParameter(options);\n\n                  if (this.match(')')) {\n                    break;\n                  }\n\n                  this.expect(',');\n\n                  if (this.match(')')) {\n                    break;\n                  }\n                }\n              }\n\n              this.expect(')');\n              return {\n                simple: options.simple,\n                params: options.params,\n                stricted: options.stricted,\n                firstRestricted: options.firstRestricted,\n                message: options.message\n              };\n            };\n\n            Parser.prototype.matchAsyncFunction = function () {\n              var match = this.matchContextualKeyword('async');\n\n              if (match) {\n                var state = this.scanner.saveState();\n                this.scanner.scanComments();\n                var next = this.scanner.lex();\n                this.scanner.restoreState(state);\n                match = state.lineNumber === next.lineNumber && next.type === 4\n                /* Keyword */\n                && next.value === 'function';\n              }\n\n              return match;\n            };\n\n            Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n              var node = this.createNode();\n              var isAsync = this.matchContextualKeyword('async');\n\n              if (isAsync) {\n                this.nextToken();\n              }\n\n              this.expectKeyword('function');\n              var isGenerator = isAsync ? false : this.match('*');\n\n              if (isGenerator) {\n                this.nextToken();\n              }\n\n              var message;\n              var id = null;\n              var firstRestricted = null;\n\n              if (!identifierIsOptional || !this.match('(')) {\n                var token = this.lookahead;\n                id = this.parseVariableIdentifier();\n\n                if (this.context.strict) {\n                  if (this.scanner.isRestrictedWord(token.value)) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n                  }\n                } else {\n                  if (this.scanner.isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = messages_1.Messages.StrictFunctionName;\n                  } else if (this.scanner.isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = messages_1.Messages.StrictReservedWord;\n                  }\n                }\n              }\n\n              var previousAllowAwait = this.context.await;\n              var previousAllowYield = this.context.allowYield;\n              this.context.await = isAsync;\n              this.context.allowYield = !isGenerator;\n              var formalParameters = this.parseFormalParameters(firstRestricted);\n              var params = formalParameters.params;\n              var stricted = formalParameters.stricted;\n              firstRestricted = formalParameters.firstRestricted;\n\n              if (formalParameters.message) {\n                message = formalParameters.message;\n              }\n\n              var previousStrict = this.context.strict;\n              var previousAllowStrictDirective = this.context.allowStrictDirective;\n              this.context.allowStrictDirective = formalParameters.simple;\n              var body = this.parseFunctionSourceElements();\n\n              if (this.context.strict && firstRestricted) {\n                this.throwUnexpectedToken(firstRestricted, message);\n              }\n\n              if (this.context.strict && stricted) {\n                this.tolerateUnexpectedToken(stricted, message);\n              }\n\n              this.context.strict = previousStrict;\n              this.context.allowStrictDirective = previousAllowStrictDirective;\n              this.context.await = previousAllowAwait;\n              this.context.allowYield = previousAllowYield;\n              return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) : this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n            };\n\n            Parser.prototype.parseFunctionExpression = function () {\n              var node = this.createNode();\n              var isAsync = this.matchContextualKeyword('async');\n\n              if (isAsync) {\n                this.nextToken();\n              }\n\n              this.expectKeyword('function');\n              var isGenerator = isAsync ? false : this.match('*');\n\n              if (isGenerator) {\n                this.nextToken();\n              }\n\n              var message;\n              var id = null;\n              var firstRestricted;\n              var previousAllowAwait = this.context.await;\n              var previousAllowYield = this.context.allowYield;\n              this.context.await = isAsync;\n              this.context.allowYield = !isGenerator;\n\n              if (!this.match('(')) {\n                var token = this.lookahead;\n                id = !this.context.strict && !isGenerator && this.matchKeyword('yield') ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\n                if (this.context.strict) {\n                  if (this.scanner.isRestrictedWord(token.value)) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n                  }\n                } else {\n                  if (this.scanner.isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = messages_1.Messages.StrictFunctionName;\n                  } else if (this.scanner.isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = messages_1.Messages.StrictReservedWord;\n                  }\n                }\n              }\n\n              var formalParameters = this.parseFormalParameters(firstRestricted);\n              var params = formalParameters.params;\n              var stricted = formalParameters.stricted;\n              firstRestricted = formalParameters.firstRestricted;\n\n              if (formalParameters.message) {\n                message = formalParameters.message;\n              }\n\n              var previousStrict = this.context.strict;\n              var previousAllowStrictDirective = this.context.allowStrictDirective;\n              this.context.allowStrictDirective = formalParameters.simple;\n              var body = this.parseFunctionSourceElements();\n\n              if (this.context.strict && firstRestricted) {\n                this.throwUnexpectedToken(firstRestricted, message);\n              }\n\n              if (this.context.strict && stricted) {\n                this.tolerateUnexpectedToken(stricted, message);\n              }\n\n              this.context.strict = previousStrict;\n              this.context.allowStrictDirective = previousAllowStrictDirective;\n              this.context.await = previousAllowAwait;\n              this.context.allowYield = previousAllowYield;\n              return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) : this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n            }; // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\n\n            Parser.prototype.parseDirective = function () {\n              var token = this.lookahead;\n              var node = this.createNode();\n              var expr = this.parseExpression();\n              var directive = expr.type === syntax_1.Syntax.Literal ? this.getTokenRaw(token).slice(1, -1) : null;\n              this.consumeSemicolon();\n              return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n            };\n\n            Parser.prototype.parseDirectivePrologues = function () {\n              var firstRestricted = null;\n              var body = [];\n\n              while (true) {\n                var token = this.lookahead;\n\n                if (token.type !== 8\n                /* StringLiteral */\n                ) {\n                    break;\n                  }\n\n                var statement = this.parseDirective();\n                body.push(statement);\n                var directive = statement.directive;\n\n                if (typeof directive !== 'string') {\n                  break;\n                }\n\n                if (directive === 'use strict') {\n                  this.context.strict = true;\n\n                  if (firstRestricted) {\n                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n                  }\n\n                  if (!this.context.allowStrictDirective) {\n                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n                  }\n                } else {\n                  if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                  }\n                }\n              }\n\n              return body;\n            }; // https://tc39.github.io/ecma262/#sec-method-definitions\n\n\n            Parser.prototype.qualifiedPropertyName = function (token) {\n              switch (token.type) {\n                case 3\n                /* Identifier */\n                :\n                case 8\n                /* StringLiteral */\n                :\n                case 1\n                /* BooleanLiteral */\n                :\n                case 5\n                /* NullLiteral */\n                :\n                case 6\n                /* NumericLiteral */\n                :\n                case 4\n                /* Keyword */\n                :\n                  return true;\n\n                case 7\n                /* Punctuator */\n                :\n                  return token.value === '[';\n\n                default:\n                  break;\n              }\n\n              return false;\n            };\n\n            Parser.prototype.parseGetterMethod = function () {\n              var node = this.createNode();\n              var isGenerator = false;\n              var previousAllowYield = this.context.allowYield;\n              this.context.allowYield = !isGenerator;\n              var formalParameters = this.parseFormalParameters();\n\n              if (formalParameters.params.length > 0) {\n                this.tolerateError(messages_1.Messages.BadGetterArity);\n              }\n\n              var method = this.parsePropertyMethod(formalParameters);\n              this.context.allowYield = previousAllowYield;\n              return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n            };\n\n            Parser.prototype.parseSetterMethod = function () {\n              var node = this.createNode();\n              var isGenerator = false;\n              var previousAllowYield = this.context.allowYield;\n              this.context.allowYield = !isGenerator;\n              var formalParameters = this.parseFormalParameters();\n\n              if (formalParameters.params.length !== 1) {\n                this.tolerateError(messages_1.Messages.BadSetterArity);\n              } else if (formalParameters.params[0] instanceof Node.RestElement) {\n                this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n              }\n\n              var method = this.parsePropertyMethod(formalParameters);\n              this.context.allowYield = previousAllowYield;\n              return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n            };\n\n            Parser.prototype.parseGeneratorMethod = function () {\n              var node = this.createNode();\n              var isGenerator = true;\n              var previousAllowYield = this.context.allowYield;\n              this.context.allowYield = true;\n              var params = this.parseFormalParameters();\n              this.context.allowYield = false;\n              var method = this.parsePropertyMethod(params);\n              this.context.allowYield = previousAllowYield;\n              return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n            }; // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\n\n            Parser.prototype.isStartOfExpression = function () {\n              var start = true;\n              var value = this.lookahead.value;\n\n              switch (this.lookahead.type) {\n                case 7\n                /* Punctuator */\n                :\n                  start = value === '[' || value === '(' || value === '{' || value === '+' || value === '-' || value === '!' || value === '~' || value === '++' || value === '--' || value === '/' || value === '/='; // regular expression literal\n\n                  break;\n\n                case 4\n                /* Keyword */\n                :\n                  start = value === 'class' || value === 'delete' || value === 'function' || value === 'let' || value === 'new' || value === 'super' || value === 'this' || value === 'typeof' || value === 'void' || value === 'yield';\n                  break;\n\n                default:\n                  break;\n              }\n\n              return start;\n            };\n\n            Parser.prototype.parseYieldExpression = function () {\n              var node = this.createNode();\n              this.expectKeyword('yield');\n              var argument = null;\n              var delegate = false;\n\n              if (!this.hasLineTerminator) {\n                var previousAllowYield = this.context.allowYield;\n                this.context.allowYield = false;\n                delegate = this.match('*');\n\n                if (delegate) {\n                  this.nextToken();\n                  argument = this.parseAssignmentExpression();\n                } else if (this.isStartOfExpression()) {\n                  argument = this.parseAssignmentExpression();\n                }\n\n                this.context.allowYield = previousAllowYield;\n              }\n\n              return this.finalize(node, new Node.YieldExpression(argument, delegate));\n            }; // https://tc39.github.io/ecma262/#sec-class-definitions\n\n\n            Parser.prototype.parseClassElement = function (hasConstructor) {\n              var token = this.lookahead;\n              var node = this.createNode();\n              var kind = '';\n              var key = null;\n              var value = null;\n              var computed = false;\n              var method = false;\n              var isStatic = false;\n              var isAsync = false;\n\n              if (this.match('*')) {\n                this.nextToken();\n              } else {\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                var id = key;\n\n                if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n                  token = this.lookahead;\n                  isStatic = true;\n                  computed = this.match('[');\n\n                  if (this.match('*')) {\n                    this.nextToken();\n                  } else {\n                    key = this.parseObjectPropertyKey();\n                  }\n                }\n\n                if (token.type === 3\n                /* Identifier */\n                && !this.hasLineTerminator && token.value === 'async') {\n                  var punctuator = this.lookahead.value;\n\n                  if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n                    isAsync = true;\n                    token = this.lookahead;\n                    key = this.parseObjectPropertyKey();\n\n                    if (token.type === 3\n                    /* Identifier */\n                    && token.value === 'constructor') {\n                      this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n                    }\n                  }\n                }\n              }\n\n              var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\n              if (token.type === 3\n              /* Identifier */\n              ) {\n                  if (token.value === 'get' && lookaheadPropertyKey) {\n                    kind = 'get';\n                    computed = this.match('[');\n                    key = this.parseObjectPropertyKey();\n                    this.context.allowYield = false;\n                    value = this.parseGetterMethod();\n                  } else if (token.value === 'set' && lookaheadPropertyKey) {\n                    kind = 'set';\n                    computed = this.match('[');\n                    key = this.parseObjectPropertyKey();\n                    value = this.parseSetterMethod();\n                  }\n                } else if (token.type === 7\n              /* Punctuator */\n              && token.value === '*' && lookaheadPropertyKey) {\n                kind = 'init';\n                computed = this.match('[');\n                key = this.parseObjectPropertyKey();\n                value = this.parseGeneratorMethod();\n                method = true;\n              }\n\n              if (!kind && key && this.match('(')) {\n                kind = 'init';\n                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n                method = true;\n              }\n\n              if (!kind) {\n                this.throwUnexpectedToken(this.lookahead);\n              }\n\n              if (kind === 'init') {\n                kind = 'method';\n              }\n\n              if (!computed) {\n                if (isStatic && this.isPropertyKey(key, 'prototype')) {\n                  this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n                }\n\n                if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n                  if (kind !== 'method' || !method || value && value.generator) {\n                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n                  }\n\n                  if (hasConstructor.value) {\n                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n                  } else {\n                    hasConstructor.value = true;\n                  }\n\n                  kind = 'constructor';\n                }\n              }\n\n              return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n            };\n\n            Parser.prototype.parseClassElementList = function () {\n              var body = [];\n              var hasConstructor = {\n                value: false\n              };\n              this.expect('{');\n\n              while (!this.match('}')) {\n                if (this.match(';')) {\n                  this.nextToken();\n                } else {\n                  body.push(this.parseClassElement(hasConstructor));\n                }\n              }\n\n              this.expect('}');\n              return body;\n            };\n\n            Parser.prototype.parseClassBody = function () {\n              var node = this.createNode();\n              var elementList = this.parseClassElementList();\n              return this.finalize(node, new Node.ClassBody(elementList));\n            };\n\n            Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n              var node = this.createNode();\n              var previousStrict = this.context.strict;\n              this.context.strict = true;\n              this.expectKeyword('class');\n              var id = identifierIsOptional && this.lookahead.type !== 3\n              /* Identifier */\n              ? null : this.parseVariableIdentifier();\n              var superClass = null;\n\n              if (this.matchKeyword('extends')) {\n                this.nextToken();\n                superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n              }\n\n              var classBody = this.parseClassBody();\n              this.context.strict = previousStrict;\n              return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n            };\n\n            Parser.prototype.parseClassExpression = function () {\n              var node = this.createNode();\n              var previousStrict = this.context.strict;\n              this.context.strict = true;\n              this.expectKeyword('class');\n              var id = this.lookahead.type === 3\n              /* Identifier */\n              ? this.parseVariableIdentifier() : null;\n              var superClass = null;\n\n              if (this.matchKeyword('extends')) {\n                this.nextToken();\n                superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n              }\n\n              var classBody = this.parseClassBody();\n              this.context.strict = previousStrict;\n              return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n            }; // https://tc39.github.io/ecma262/#sec-scripts\n            // https://tc39.github.io/ecma262/#sec-modules\n\n\n            Parser.prototype.parseModule = function () {\n              this.context.strict = true;\n              this.context.isModule = true;\n              this.scanner.isModule = true;\n              var node = this.createNode();\n              var body = this.parseDirectivePrologues();\n\n              while (this.lookahead.type !== 2\n              /* EOF */\n              ) {\n                body.push(this.parseStatementListItem());\n              }\n\n              return this.finalize(node, new Node.Module(body));\n            };\n\n            Parser.prototype.parseScript = function () {\n              var node = this.createNode();\n              var body = this.parseDirectivePrologues();\n\n              while (this.lookahead.type !== 2\n              /* EOF */\n              ) {\n                body.push(this.parseStatementListItem());\n              }\n\n              return this.finalize(node, new Node.Script(body));\n            }; // https://tc39.github.io/ecma262/#sec-imports\n\n\n            Parser.prototype.parseModuleSpecifier = function () {\n              var node = this.createNode();\n\n              if (this.lookahead.type !== 8\n              /* StringLiteral */\n              ) {\n                  this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n                }\n\n              var token = this.nextToken();\n              var raw = this.getTokenRaw(token);\n              return this.finalize(node, new Node.Literal(token.value, raw));\n            }; // import {<foo as bar>} ...;\n\n\n            Parser.prototype.parseImportSpecifier = function () {\n              var node = this.createNode();\n              var imported;\n              var local;\n\n              if (this.lookahead.type === 3\n              /* Identifier */\n              ) {\n                  imported = this.parseVariableIdentifier();\n                  local = imported;\n\n                  if (this.matchContextualKeyword('as')) {\n                    this.nextToken();\n                    local = this.parseVariableIdentifier();\n                  }\n                } else {\n                imported = this.parseIdentifierName();\n                local = imported;\n\n                if (this.matchContextualKeyword('as')) {\n                  this.nextToken();\n                  local = this.parseVariableIdentifier();\n                } else {\n                  this.throwUnexpectedToken(this.nextToken());\n                }\n              }\n\n              return this.finalize(node, new Node.ImportSpecifier(local, imported));\n            }; // {foo, bar as bas}\n\n\n            Parser.prototype.parseNamedImports = function () {\n              this.expect('{');\n              var specifiers = [];\n\n              while (!this.match('}')) {\n                specifiers.push(this.parseImportSpecifier());\n\n                if (!this.match('}')) {\n                  this.expect(',');\n                }\n              }\n\n              this.expect('}');\n              return specifiers;\n            }; // import <foo> ...;\n\n\n            Parser.prototype.parseImportDefaultSpecifier = function () {\n              var node = this.createNode();\n              var local = this.parseIdentifierName();\n              return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n            }; // import <* as foo> ...;\n\n\n            Parser.prototype.parseImportNamespaceSpecifier = function () {\n              var node = this.createNode();\n              this.expect('*');\n\n              if (!this.matchContextualKeyword('as')) {\n                this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n              }\n\n              this.nextToken();\n              var local = this.parseIdentifierName();\n              return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n            };\n\n            Parser.prototype.parseImportDeclaration = function () {\n              if (this.context.inFunctionBody) {\n                this.throwError(messages_1.Messages.IllegalImportDeclaration);\n              }\n\n              var node = this.createNode();\n              this.expectKeyword('import');\n              var src;\n              var specifiers = [];\n\n              if (this.lookahead.type === 8\n              /* StringLiteral */\n              ) {\n                  // import 'foo';\n                  src = this.parseModuleSpecifier();\n                } else {\n                if (this.match('{')) {\n                  // import {bar}\n                  specifiers = specifiers.concat(this.parseNamedImports());\n                } else if (this.match('*')) {\n                  // import * as foo\n                  specifiers.push(this.parseImportNamespaceSpecifier());\n                } else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n                  // import foo\n                  specifiers.push(this.parseImportDefaultSpecifier());\n\n                  if (this.match(',')) {\n                    this.nextToken();\n\n                    if (this.match('*')) {\n                      // import foo, * as foo\n                      specifiers.push(this.parseImportNamespaceSpecifier());\n                    } else if (this.match('{')) {\n                      // import foo, {bar}\n                      specifiers = specifiers.concat(this.parseNamedImports());\n                    } else {\n                      this.throwUnexpectedToken(this.lookahead);\n                    }\n                  }\n                } else {\n                  this.throwUnexpectedToken(this.nextToken());\n                }\n\n                if (!this.matchContextualKeyword('from')) {\n                  var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n                  this.throwError(message, this.lookahead.value);\n                }\n\n                this.nextToken();\n                src = this.parseModuleSpecifier();\n              }\n\n              this.consumeSemicolon();\n              return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n            }; // https://tc39.github.io/ecma262/#sec-exports\n\n\n            Parser.prototype.parseExportSpecifier = function () {\n              var node = this.createNode();\n              var local = this.parseIdentifierName();\n              var exported = local;\n\n              if (this.matchContextualKeyword('as')) {\n                this.nextToken();\n                exported = this.parseIdentifierName();\n              }\n\n              return this.finalize(node, new Node.ExportSpecifier(local, exported));\n            };\n\n            Parser.prototype.parseExportDeclaration = function () {\n              if (this.context.inFunctionBody) {\n                this.throwError(messages_1.Messages.IllegalExportDeclaration);\n              }\n\n              var node = this.createNode();\n              this.expectKeyword('export');\n              var exportDeclaration;\n\n              if (this.matchKeyword('default')) {\n                // export default ...\n                this.nextToken();\n\n                if (this.matchKeyword('function')) {\n                  // export default function foo () {}\n                  // export default function () {}\n                  var declaration = this.parseFunctionDeclaration(true);\n                  exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n                } else if (this.matchKeyword('class')) {\n                  // export default class foo {}\n                  var declaration = this.parseClassDeclaration(true);\n                  exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n                } else if (this.matchContextualKeyword('async')) {\n                  // export default async function f () {}\n                  // export default async function () {}\n                  // export default async x => x\n                  var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n                  exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n                } else {\n                  if (this.matchContextualKeyword('from')) {\n                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n                  } // export default {};\n                  // export default [];\n                  // export default (1 + 2);\n\n\n                  var declaration = this.match('{') ? this.parseObjectInitializer() : this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n                  this.consumeSemicolon();\n                  exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n                }\n              } else if (this.match('*')) {\n                // export * from 'foo';\n                this.nextToken();\n\n                if (!this.matchContextualKeyword('from')) {\n                  var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n                  this.throwError(message, this.lookahead.value);\n                }\n\n                this.nextToken();\n                var src = this.parseModuleSpecifier();\n                this.consumeSemicolon();\n                exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n              } else if (this.lookahead.type === 4\n              /* Keyword */\n              ) {\n                  // export var f = 1;\n                  var declaration = void 0;\n\n                  switch (this.lookahead.value) {\n                    case 'let':\n                    case 'const':\n                      declaration = this.parseLexicalDeclaration({\n                        inFor: false\n                      });\n                      break;\n\n                    case 'var':\n                    case 'class':\n                    case 'function':\n                      declaration = this.parseStatementListItem();\n                      break;\n\n                    default:\n                      this.throwUnexpectedToken(this.lookahead);\n                  }\n\n                  exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n                } else if (this.matchAsyncFunction()) {\n                var declaration = this.parseFunctionDeclaration();\n                exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n              } else {\n                var specifiers = [];\n                var source = null;\n                var isExportFromIdentifier = false;\n                this.expect('{');\n\n                while (!this.match('}')) {\n                  isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n                  specifiers.push(this.parseExportSpecifier());\n\n                  if (!this.match('}')) {\n                    this.expect(',');\n                  }\n                }\n\n                this.expect('}');\n\n                if (this.matchContextualKeyword('from')) {\n                  // export {default} from 'foo';\n                  // export {foo} from 'foo';\n                  this.nextToken();\n                  source = this.parseModuleSpecifier();\n                  this.consumeSemicolon();\n                } else if (isExportFromIdentifier) {\n                  // export {default}; // missing fromClause\n                  var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n                  this.throwError(message, this.lookahead.value);\n                } else {\n                  // export {foo};\n                  this.consumeSemicolon();\n                }\n\n                exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n              }\n\n              return exportDeclaration;\n            };\n\n            return Parser;\n          }();\n\n          exports.Parser = Parser;\n          /***/\n        },\n        /* 9 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\"; // Ensure the condition is true, otherwise throw an error.\n          // This is only to have a better contract semantic, i.e. another safety net\n          // to catch a logic error. The condition shall be fulfilled in normal case.\n          // Do NOT use this to enforce a certain condition on any user input.\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          function assert(condition, message) {\n            /* istanbul ignore if */\n            if (!condition) {\n              throw new Error('ASSERT: ' + message);\n            }\n          }\n\n          exports.assert = assert;\n          /***/\n        },\n        /* 10 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n          /* tslint:disable:max-classes-per-file */\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var ErrorHandler = function () {\n            function ErrorHandler() {\n              this.errors = [];\n              this.tolerant = false;\n            }\n\n            ErrorHandler.prototype.recordError = function (error) {\n              this.errors.push(error);\n            };\n\n            ErrorHandler.prototype.tolerate = function (error) {\n              if (this.tolerant) {\n                this.recordError(error);\n              } else {\n                throw error;\n              }\n            };\n\n            ErrorHandler.prototype.constructError = function (msg, column) {\n              var error = new Error(msg);\n\n              try {\n                throw error;\n              } catch (base) {\n                /* istanbul ignore else */\n                if (Object.create && Object.defineProperty) {\n                  error = Object.create(base);\n                  Object.defineProperty(error, 'column', {\n                    value: column\n                  });\n                }\n              }\n              /* istanbul ignore next */\n\n\n              return error;\n            };\n\n            ErrorHandler.prototype.createError = function (index, line, col, description) {\n              var msg = 'Line ' + line + ': ' + description;\n              var error = this.constructError(msg, col);\n              error.index = index;\n              error.lineNumber = line;\n              error.description = description;\n              return error;\n            };\n\n            ErrorHandler.prototype.throwError = function (index, line, col, description) {\n              throw this.createError(index, line, col, description);\n            };\n\n            ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n              var error = this.createError(index, line, col, description);\n\n              if (this.tolerant) {\n                this.recordError(error);\n              } else {\n                throw error;\n              }\n            };\n\n            return ErrorHandler;\n          }();\n\n          exports.ErrorHandler = ErrorHandler;\n          /***/\n        },\n        /* 11 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          }); // Error messages should be identical to V8.\n\n          exports.Messages = {\n            BadGetterArity: 'Getter must not have any formal parameters',\n            BadSetterArity: 'Setter must have exactly one formal parameter',\n            BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n            ConstructorIsAsync: 'Class constructor may not be an async method',\n            ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n            DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n            DefaultRestParameter: 'Unexpected token =',\n            DuplicateBinding: 'Duplicate binding %0',\n            DuplicateConstructor: 'A class may only have one constructor',\n            DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n            ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n            GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n            IllegalBreak: 'Illegal break statement',\n            IllegalContinue: 'Illegal continue statement',\n            IllegalExportDeclaration: 'Unexpected token',\n            IllegalImportDeclaration: 'Unexpected token',\n            IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n            IllegalReturn: 'Illegal return statement',\n            InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n            InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n            InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n            InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n            InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n            InvalidModuleSpecifier: 'Unexpected token',\n            InvalidRegExp: 'Invalid regular expression',\n            LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n            MissingFromClause: 'Unexpected token',\n            MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n            NewlineAfterThrow: 'Illegal newline after throw',\n            NoAsAfterImportNamespace: 'Unexpected token',\n            NoCatchOrFinally: 'Missing catch or finally after try',\n            ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n            Redeclaration: '%0 \\'%1\\' has already been declared',\n            StaticPrototype: 'Classes may not have static property named prototype',\n            StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n            StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n            StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n            StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n            StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n            StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n            StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n            StrictModeWith: 'Strict mode code may not include a with statement',\n            StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n            StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n            StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n            StrictReservedWord: 'Use of future reserved word in strict mode',\n            StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n            TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n            UnexpectedEOS: 'Unexpected end of input',\n            UnexpectedIdentifier: 'Unexpected identifier',\n            UnexpectedNumber: 'Unexpected number',\n            UnexpectedReserved: 'Unexpected reserved word',\n            UnexpectedString: 'Unexpected string',\n            UnexpectedTemplate: 'Unexpected quasi %0',\n            UnexpectedToken: 'Unexpected token %0',\n            UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n            UnknownLabel: 'Undefined label \\'%0\\'',\n            UnterminatedRegExp: 'Invalid regular expression: missing /'\n          };\n          /***/\n        },\n        /* 12 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var assert_1 = __webpack_require__(9);\n\n          var character_1 = __webpack_require__(4);\n\n          var messages_1 = __webpack_require__(11);\n\n          function hexValue(ch) {\n            return '0123456789abcdef'.indexOf(ch.toLowerCase());\n          }\n\n          function octalValue(ch) {\n            return '01234567'.indexOf(ch);\n          }\n\n          var Scanner = function () {\n            function Scanner(code, handler) {\n              this.source = code;\n              this.errorHandler = handler;\n              this.trackComment = false;\n              this.isModule = false;\n              this.length = code.length;\n              this.index = 0;\n              this.lineNumber = code.length > 0 ? 1 : 0;\n              this.lineStart = 0;\n              this.curlyStack = [];\n            }\n\n            Scanner.prototype.saveState = function () {\n              return {\n                index: this.index,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart\n              };\n            };\n\n            Scanner.prototype.restoreState = function (state) {\n              this.index = state.index;\n              this.lineNumber = state.lineNumber;\n              this.lineStart = state.lineStart;\n            };\n\n            Scanner.prototype.eof = function () {\n              return this.index >= this.length;\n            };\n\n            Scanner.prototype.throwUnexpectedToken = function (message) {\n              if (message === void 0) {\n                message = messages_1.Messages.UnexpectedTokenIllegal;\n              }\n\n              return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n            };\n\n            Scanner.prototype.tolerateUnexpectedToken = function (message) {\n              if (message === void 0) {\n                message = messages_1.Messages.UnexpectedTokenIllegal;\n              }\n\n              this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n            }; // https://tc39.github.io/ecma262/#sec-comments\n\n\n            Scanner.prototype.skipSingleLineComment = function (offset) {\n              var comments = [];\n              var start, loc;\n\n              if (this.trackComment) {\n                comments = [];\n                start = this.index - offset;\n                loc = {\n                  start: {\n                    line: this.lineNumber,\n                    column: this.index - this.lineStart - offset\n                  },\n                  end: {}\n                };\n              }\n\n              while (!this.eof()) {\n                var ch = this.source.charCodeAt(this.index);\n                ++this.index;\n\n                if (character_1.Character.isLineTerminator(ch)) {\n                  if (this.trackComment) {\n                    loc.end = {\n                      line: this.lineNumber,\n                      column: this.index - this.lineStart - 1\n                    };\n                    var entry = {\n                      multiLine: false,\n                      slice: [start + offset, this.index - 1],\n                      range: [start, this.index - 1],\n                      loc: loc\n                    };\n                    comments.push(entry);\n                  }\n\n                  if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n                    ++this.index;\n                  }\n\n                  ++this.lineNumber;\n                  this.lineStart = this.index;\n                  return comments;\n                }\n              }\n\n              if (this.trackComment) {\n                loc.end = {\n                  line: this.lineNumber,\n                  column: this.index - this.lineStart\n                };\n                var entry = {\n                  multiLine: false,\n                  slice: [start + offset, this.index],\n                  range: [start, this.index],\n                  loc: loc\n                };\n                comments.push(entry);\n              }\n\n              return comments;\n            };\n\n            Scanner.prototype.skipMultiLineComment = function () {\n              var comments = [];\n              var start, loc;\n\n              if (this.trackComment) {\n                comments = [];\n                start = this.index - 2;\n                loc = {\n                  start: {\n                    line: this.lineNumber,\n                    column: this.index - this.lineStart - 2\n                  },\n                  end: {}\n                };\n              }\n\n              while (!this.eof()) {\n                var ch = this.source.charCodeAt(this.index);\n\n                if (character_1.Character.isLineTerminator(ch)) {\n                  if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n                    ++this.index;\n                  }\n\n                  ++this.lineNumber;\n                  ++this.index;\n                  this.lineStart = this.index;\n                } else if (ch === 0x2A) {\n                  // Block comment ends with '*/'.\n                  if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n                    this.index += 2;\n\n                    if (this.trackComment) {\n                      loc.end = {\n                        line: this.lineNumber,\n                        column: this.index - this.lineStart\n                      };\n                      var entry = {\n                        multiLine: true,\n                        slice: [start + 2, this.index - 2],\n                        range: [start, this.index],\n                        loc: loc\n                      };\n                      comments.push(entry);\n                    }\n\n                    return comments;\n                  }\n\n                  ++this.index;\n                } else {\n                  ++this.index;\n                }\n              } // Ran off the end of the file - the whole thing is a comment\n\n\n              if (this.trackComment) {\n                loc.end = {\n                  line: this.lineNumber,\n                  column: this.index - this.lineStart\n                };\n                var entry = {\n                  multiLine: true,\n                  slice: [start + 2, this.index],\n                  range: [start, this.index],\n                  loc: loc\n                };\n                comments.push(entry);\n              }\n\n              this.tolerateUnexpectedToken();\n              return comments;\n            };\n\n            Scanner.prototype.scanComments = function () {\n              var comments;\n\n              if (this.trackComment) {\n                comments = [];\n              }\n\n              var start = this.index === 0;\n\n              while (!this.eof()) {\n                var ch = this.source.charCodeAt(this.index);\n\n                if (character_1.Character.isWhiteSpace(ch)) {\n                  ++this.index;\n                } else if (character_1.Character.isLineTerminator(ch)) {\n                  ++this.index;\n\n                  if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n                    ++this.index;\n                  }\n\n                  ++this.lineNumber;\n                  this.lineStart = this.index;\n                  start = true;\n                } else if (ch === 0x2F) {\n                  ch = this.source.charCodeAt(this.index + 1);\n\n                  if (ch === 0x2F) {\n                    this.index += 2;\n                    var comment = this.skipSingleLineComment(2);\n\n                    if (this.trackComment) {\n                      comments = comments.concat(comment);\n                    }\n\n                    start = true;\n                  } else if (ch === 0x2A) {\n                    this.index += 2;\n                    var comment = this.skipMultiLineComment();\n\n                    if (this.trackComment) {\n                      comments = comments.concat(comment);\n                    }\n                  } else {\n                    break;\n                  }\n                } else if (start && ch === 0x2D) {\n                  // U+003E is '>'\n                  if (this.source.charCodeAt(this.index + 1) === 0x2D && this.source.charCodeAt(this.index + 2) === 0x3E) {\n                    // '-->' is a single-line comment\n                    this.index += 3;\n                    var comment = this.skipSingleLineComment(3);\n\n                    if (this.trackComment) {\n                      comments = comments.concat(comment);\n                    }\n                  } else {\n                    break;\n                  }\n                } else if (ch === 0x3C && !this.isModule) {\n                  if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n                    this.index += 4; // `<!--`\n\n                    var comment = this.skipSingleLineComment(4);\n\n                    if (this.trackComment) {\n                      comments = comments.concat(comment);\n                    }\n                  } else {\n                    break;\n                  }\n                } else {\n                  break;\n                }\n              }\n\n              return comments;\n            }; // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\n\n            Scanner.prototype.isFutureReservedWord = function (id) {\n              switch (id) {\n                case 'enum':\n                case 'export':\n                case 'import':\n                case 'super':\n                  return true;\n\n                default:\n                  return false;\n              }\n            };\n\n            Scanner.prototype.isStrictModeReservedWord = function (id) {\n              switch (id) {\n                case 'implements':\n                case 'interface':\n                case 'package':\n                case 'private':\n                case 'protected':\n                case 'public':\n                case 'static':\n                case 'yield':\n                case 'let':\n                  return true;\n\n                default:\n                  return false;\n              }\n            };\n\n            Scanner.prototype.isRestrictedWord = function (id) {\n              return id === 'eval' || id === 'arguments';\n            }; // https://tc39.github.io/ecma262/#sec-keywords\n\n\n            Scanner.prototype.isKeyword = function (id) {\n              switch (id.length) {\n                case 2:\n                  return id === 'if' || id === 'in' || id === 'do';\n\n                case 3:\n                  return id === 'var' || id === 'for' || id === 'new' || id === 'try' || id === 'let';\n\n                case 4:\n                  return id === 'this' || id === 'else' || id === 'case' || id === 'void' || id === 'with' || id === 'enum';\n\n                case 5:\n                  return id === 'while' || id === 'break' || id === 'catch' || id === 'throw' || id === 'const' || id === 'yield' || id === 'class' || id === 'super';\n\n                case 6:\n                  return id === 'return' || id === 'typeof' || id === 'delete' || id === 'switch' || id === 'export' || id === 'import';\n\n                case 7:\n                  return id === 'default' || id === 'finally' || id === 'extends';\n\n                case 8:\n                  return id === 'function' || id === 'continue' || id === 'debugger';\n\n                case 10:\n                  return id === 'instanceof';\n\n                default:\n                  return false;\n              }\n            };\n\n            Scanner.prototype.codePointAt = function (i) {\n              var cp = this.source.charCodeAt(i);\n\n              if (cp >= 0xD800 && cp <= 0xDBFF) {\n                var second = this.source.charCodeAt(i + 1);\n\n                if (second >= 0xDC00 && second <= 0xDFFF) {\n                  var first = cp;\n                  cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n                }\n              }\n\n              return cp;\n            };\n\n            Scanner.prototype.scanHexEscape = function (prefix) {\n              var len = prefix === 'u' ? 4 : 2;\n              var code = 0;\n\n              for (var i = 0; i < len; ++i) {\n                if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n                  code = code * 16 + hexValue(this.source[this.index++]);\n                } else {\n                  return null;\n                }\n              }\n\n              return String.fromCharCode(code);\n            };\n\n            Scanner.prototype.scanUnicodeCodePointEscape = function () {\n              var ch = this.source[this.index];\n              var code = 0; // At least, one hex digit is required.\n\n              if (ch === '}') {\n                this.throwUnexpectedToken();\n              }\n\n              while (!this.eof()) {\n                ch = this.source[this.index++];\n\n                if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n                  break;\n                }\n\n                code = code * 16 + hexValue(ch);\n              }\n\n              if (code > 0x10FFFF || ch !== '}') {\n                this.throwUnexpectedToken();\n              }\n\n              return character_1.Character.fromCodePoint(code);\n            };\n\n            Scanner.prototype.getIdentifier = function () {\n              var start = this.index++;\n\n              while (!this.eof()) {\n                var ch = this.source.charCodeAt(this.index);\n\n                if (ch === 0x5C) {\n                  // Blackslash (U+005C) marks Unicode escape sequence.\n                  this.index = start;\n                  return this.getComplexIdentifier();\n                } else if (ch >= 0xD800 && ch < 0xDFFF) {\n                  // Need to handle surrogate pairs.\n                  this.index = start;\n                  return this.getComplexIdentifier();\n                }\n\n                if (character_1.Character.isIdentifierPart(ch)) {\n                  ++this.index;\n                } else {\n                  break;\n                }\n              }\n\n              return this.source.slice(start, this.index);\n            };\n\n            Scanner.prototype.getComplexIdentifier = function () {\n              var cp = this.codePointAt(this.index);\n              var id = character_1.Character.fromCodePoint(cp);\n              this.index += id.length; // '\\u' (U+005C, U+0075) denotes an escaped character.\n\n              var ch;\n\n              if (cp === 0x5C) {\n                if (this.source.charCodeAt(this.index) !== 0x75) {\n                  this.throwUnexpectedToken();\n                }\n\n                ++this.index;\n\n                if (this.source[this.index] === '{') {\n                  ++this.index;\n                  ch = this.scanUnicodeCodePointEscape();\n                } else {\n                  ch = this.scanHexEscape('u');\n\n                  if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n                    this.throwUnexpectedToken();\n                  }\n                }\n\n                id = ch;\n              }\n\n              while (!this.eof()) {\n                cp = this.codePointAt(this.index);\n\n                if (!character_1.Character.isIdentifierPart(cp)) {\n                  break;\n                }\n\n                ch = character_1.Character.fromCodePoint(cp);\n                id += ch;\n                this.index += ch.length; // '\\u' (U+005C, U+0075) denotes an escaped character.\n\n                if (cp === 0x5C) {\n                  id = id.substr(0, id.length - 1);\n\n                  if (this.source.charCodeAt(this.index) !== 0x75) {\n                    this.throwUnexpectedToken();\n                  }\n\n                  ++this.index;\n\n                  if (this.source[this.index] === '{') {\n                    ++this.index;\n                    ch = this.scanUnicodeCodePointEscape();\n                  } else {\n                    ch = this.scanHexEscape('u');\n\n                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n                      this.throwUnexpectedToken();\n                    }\n                  }\n\n                  id += ch;\n                }\n              }\n\n              return id;\n            };\n\n            Scanner.prototype.octalToDecimal = function (ch) {\n              // \\0 is not octal escape sequence\n              var octal = ch !== '0';\n              var code = octalValue(ch);\n\n              if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n                octal = true;\n                code = code * 8 + octalValue(this.source[this.index++]); // 3 digits are only allowed when string starts\n                // with 0, 1, 2, 3\n\n                if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n                  code = code * 8 + octalValue(this.source[this.index++]);\n                }\n              }\n\n              return {\n                code: code,\n                octal: octal\n              };\n            }; // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\n\n            Scanner.prototype.scanIdentifier = function () {\n              var type;\n              var start = this.index; // Backslash (U+005C) starts an escaped character.\n\n              var id = this.source.charCodeAt(start) === 0x5C ? this.getComplexIdentifier() : this.getIdentifier(); // There is no keyword or literal with only one character.\n              // Thus, it must be an identifier.\n\n              if (id.length === 1) {\n                type = 3\n                /* Identifier */\n                ;\n              } else if (this.isKeyword(id)) {\n                type = 4\n                /* Keyword */\n                ;\n              } else if (id === 'null') {\n                type = 5\n                /* NullLiteral */\n                ;\n              } else if (id === 'true' || id === 'false') {\n                type = 1\n                /* BooleanLiteral */\n                ;\n              } else {\n                type = 3\n                /* Identifier */\n                ;\n              }\n\n              if (type !== 3\n              /* Identifier */\n              && start + id.length !== this.index) {\n                var restore = this.index;\n                this.index = start;\n                this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n                this.index = restore;\n              }\n\n              return {\n                type: type,\n                value: id,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            }; // https://tc39.github.io/ecma262/#sec-punctuators\n\n\n            Scanner.prototype.scanPunctuator = function () {\n              var start = this.index; // Check for most common single-character punctuators.\n\n              var str = this.source[this.index];\n\n              switch (str) {\n                case '(':\n                case '{':\n                  if (str === '{') {\n                    this.curlyStack.push('{');\n                  }\n\n                  ++this.index;\n                  break;\n\n                case '.':\n                  ++this.index;\n\n                  if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n                    // Spread operator: ...\n                    this.index += 2;\n                    str = '...';\n                  }\n\n                  break;\n\n                case '}':\n                  ++this.index;\n                  this.curlyStack.pop();\n                  break;\n\n                case ')':\n                case ';':\n                case ',':\n                case '[':\n                case ']':\n                case ':':\n                case '?':\n                case '~':\n                  ++this.index;\n                  break;\n\n                default:\n                  // 4-character punctuator.\n                  str = this.source.substr(this.index, 4);\n\n                  if (str === '>>>=') {\n                    this.index += 4;\n                  } else {\n                    // 3-character punctuators.\n                    str = str.substr(0, 3);\n\n                    if (str === '===' || str === '!==' || str === '>>>' || str === '<<=' || str === '>>=' || str === '**=') {\n                      this.index += 3;\n                    } else {\n                      // 2-character punctuators.\n                      str = str.substr(0, 2);\n\n                      if (str === '&&' || str === '||' || str === '==' || str === '!=' || str === '+=' || str === '-=' || str === '*=' || str === '/=' || str === '++' || str === '--' || str === '<<' || str === '>>' || str === '&=' || str === '|=' || str === '^=' || str === '%=' || str === '<=' || str === '>=' || str === '=>' || str === '**') {\n                        this.index += 2;\n                      } else {\n                        // 1-character punctuators.\n                        str = this.source[this.index];\n\n                        if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n                          ++this.index;\n                        }\n                      }\n                    }\n                  }\n\n              }\n\n              if (this.index === start) {\n                this.throwUnexpectedToken();\n              }\n\n              return {\n                type: 7\n                /* Punctuator */\n                ,\n                value: str,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            }; // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\n\n            Scanner.prototype.scanHexLiteral = function (start) {\n              var num = '';\n\n              while (!this.eof()) {\n                if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n                  break;\n                }\n\n                num += this.source[this.index++];\n              }\n\n              if (num.length === 0) {\n                this.throwUnexpectedToken();\n              }\n\n              if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n                this.throwUnexpectedToken();\n              }\n\n              return {\n                type: 6\n                /* NumericLiteral */\n                ,\n                value: parseInt('0x' + num, 16),\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            };\n\n            Scanner.prototype.scanBinaryLiteral = function (start) {\n              var num = '';\n              var ch;\n\n              while (!this.eof()) {\n                ch = this.source[this.index];\n\n                if (ch !== '0' && ch !== '1') {\n                  break;\n                }\n\n                num += this.source[this.index++];\n              }\n\n              if (num.length === 0) {\n                // only 0b or 0B\n                this.throwUnexpectedToken();\n              }\n\n              if (!this.eof()) {\n                ch = this.source.charCodeAt(this.index);\n                /* istanbul ignore else */\n\n                if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n                  this.throwUnexpectedToken();\n                }\n              }\n\n              return {\n                type: 6\n                /* NumericLiteral */\n                ,\n                value: parseInt(num, 2),\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            };\n\n            Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n              var num = '';\n              var octal = false;\n\n              if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n                octal = true;\n                num = '0' + this.source[this.index++];\n              } else {\n                ++this.index;\n              }\n\n              while (!this.eof()) {\n                if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n                  break;\n                }\n\n                num += this.source[this.index++];\n              }\n\n              if (!octal && num.length === 0) {\n                // only 0o or 0O\n                this.throwUnexpectedToken();\n              }\n\n              if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                this.throwUnexpectedToken();\n              }\n\n              return {\n                type: 6\n                /* NumericLiteral */\n                ,\n                value: parseInt(num, 8),\n                octal: octal,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            };\n\n            Scanner.prototype.isImplicitOctalLiteral = function () {\n              // Implicit octal, unless there is a non-octal digit.\n              // (Annex B.1.1 on Numeric Literals)\n              for (var i = this.index + 1; i < this.length; ++i) {\n                var ch = this.source[i];\n\n                if (ch === '8' || ch === '9') {\n                  return false;\n                }\n\n                if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n                  return true;\n                }\n              }\n\n              return true;\n            };\n\n            Scanner.prototype.scanNumericLiteral = function () {\n              var start = this.index;\n              var ch = this.source[start];\n              assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || ch === '.', 'Numeric literal must start with a decimal digit or a decimal point');\n              var num = '';\n\n              if (ch !== '.') {\n                num = this.source[this.index++];\n                ch = this.source[this.index]; // Hex number starts with '0x'.\n                // Octal number starts with '0'.\n                // Octal number in ES6 starts with '0o'.\n                // Binary number in ES6 starts with '0b'.\n\n                if (num === '0') {\n                  if (ch === 'x' || ch === 'X') {\n                    ++this.index;\n                    return this.scanHexLiteral(start);\n                  }\n\n                  if (ch === 'b' || ch === 'B') {\n                    ++this.index;\n                    return this.scanBinaryLiteral(start);\n                  }\n\n                  if (ch === 'o' || ch === 'O') {\n                    return this.scanOctalLiteral(ch, start);\n                  }\n\n                  if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n                    if (this.isImplicitOctalLiteral()) {\n                      return this.scanOctalLiteral(ch, start);\n                    }\n                  }\n                }\n\n                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                  num += this.source[this.index++];\n                }\n\n                ch = this.source[this.index];\n              }\n\n              if (ch === '.') {\n                num += this.source[this.index++];\n\n                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                  num += this.source[this.index++];\n                }\n\n                ch = this.source[this.index];\n              }\n\n              if (ch === 'e' || ch === 'E') {\n                num += this.source[this.index++];\n                ch = this.source[this.index];\n\n                if (ch === '+' || ch === '-') {\n                  num += this.source[this.index++];\n                }\n\n                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                  while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                    num += this.source[this.index++];\n                  }\n                } else {\n                  this.throwUnexpectedToken();\n                }\n              }\n\n              if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n                this.throwUnexpectedToken();\n              }\n\n              return {\n                type: 6\n                /* NumericLiteral */\n                ,\n                value: parseFloat(num),\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            }; // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\n\n            Scanner.prototype.scanStringLiteral = function () {\n              var start = this.index;\n              var quote = this.source[start];\n              assert_1.assert(quote === '\\'' || quote === '\"', 'String literal must starts with a quote');\n              ++this.index;\n              var octal = false;\n              var str = '';\n\n              while (!this.eof()) {\n                var ch = this.source[this.index++];\n\n                if (ch === quote) {\n                  quote = '';\n                  break;\n                } else if (ch === '\\\\') {\n                  ch = this.source[this.index++];\n\n                  if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                      case 'u':\n                        if (this.source[this.index] === '{') {\n                          ++this.index;\n                          str += this.scanUnicodeCodePointEscape();\n                        } else {\n                          var unescaped_1 = this.scanHexEscape(ch);\n\n                          if (unescaped_1 === null) {\n                            this.throwUnexpectedToken();\n                          }\n\n                          str += unescaped_1;\n                        }\n\n                        break;\n\n                      case 'x':\n                        var unescaped = this.scanHexEscape(ch);\n\n                        if (unescaped === null) {\n                          this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n                        }\n\n                        str += unescaped;\n                        break;\n\n                      case 'n':\n                        str += '\\n';\n                        break;\n\n                      case 'r':\n                        str += '\\r';\n                        break;\n\n                      case 't':\n                        str += '\\t';\n                        break;\n\n                      case 'b':\n                        str += '\\b';\n                        break;\n\n                      case 'f':\n                        str += '\\f';\n                        break;\n\n                      case 'v':\n                        str += '\\x0B';\n                        break;\n\n                      case '8':\n                      case '9':\n                        str += ch;\n                        this.tolerateUnexpectedToken();\n                        break;\n\n                      default:\n                        if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n                          var octToDec = this.octalToDecimal(ch);\n                          octal = octToDec.octal || octal;\n                          str += String.fromCharCode(octToDec.code);\n                        } else {\n                          str += ch;\n                        }\n\n                        break;\n                    }\n                  } else {\n                    ++this.lineNumber;\n\n                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n                      ++this.index;\n                    }\n\n                    this.lineStart = this.index;\n                  }\n                } else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                  break;\n                } else {\n                  str += ch;\n                }\n              }\n\n              if (quote !== '') {\n                this.index = start;\n                this.throwUnexpectedToken();\n              }\n\n              return {\n                type: 8\n                /* StringLiteral */\n                ,\n                value: str,\n                octal: octal,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            }; // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\n\n            Scanner.prototype.scanTemplate = function () {\n              var cooked = '';\n              var terminated = false;\n              var start = this.index;\n              var head = this.source[start] === '`';\n              var tail = false;\n              var rawOffset = 2;\n              ++this.index;\n\n              while (!this.eof()) {\n                var ch = this.source[this.index++];\n\n                if (ch === '`') {\n                  rawOffset = 1;\n                  tail = true;\n                  terminated = true;\n                  break;\n                } else if (ch === '$') {\n                  if (this.source[this.index] === '{') {\n                    this.curlyStack.push('${');\n                    ++this.index;\n                    terminated = true;\n                    break;\n                  }\n\n                  cooked += ch;\n                } else if (ch === '\\\\') {\n                  ch = this.source[this.index++];\n\n                  if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                      case 'n':\n                        cooked += '\\n';\n                        break;\n\n                      case 'r':\n                        cooked += '\\r';\n                        break;\n\n                      case 't':\n                        cooked += '\\t';\n                        break;\n\n                      case 'u':\n                        if (this.source[this.index] === '{') {\n                          ++this.index;\n                          cooked += this.scanUnicodeCodePointEscape();\n                        } else {\n                          var restore = this.index;\n                          var unescaped_2 = this.scanHexEscape(ch);\n\n                          if (unescaped_2 !== null) {\n                            cooked += unescaped_2;\n                          } else {\n                            this.index = restore;\n                            cooked += ch;\n                          }\n                        }\n\n                        break;\n\n                      case 'x':\n                        var unescaped = this.scanHexEscape(ch);\n\n                        if (unescaped === null) {\n                          this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n                        }\n\n                        cooked += unescaped;\n                        break;\n\n                      case 'b':\n                        cooked += '\\b';\n                        break;\n\n                      case 'f':\n                        cooked += '\\f';\n                        break;\n\n                      case 'v':\n                        cooked += '\\v';\n                        break;\n\n                      default:\n                        if (ch === '0') {\n                          if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                            // Illegal: \\01 \\02 and so on\n                            this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n                          }\n\n                          cooked += '\\0';\n                        } else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n                          // Illegal: \\1 \\2\n                          this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n                        } else {\n                          cooked += ch;\n                        }\n\n                        break;\n                    }\n                  } else {\n                    ++this.lineNumber;\n\n                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n                      ++this.index;\n                    }\n\n                    this.lineStart = this.index;\n                  }\n                } else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                  ++this.lineNumber;\n\n                  if (ch === '\\r' && this.source[this.index] === '\\n') {\n                    ++this.index;\n                  }\n\n                  this.lineStart = this.index;\n                  cooked += '\\n';\n                } else {\n                  cooked += ch;\n                }\n              }\n\n              if (!terminated) {\n                this.throwUnexpectedToken();\n              }\n\n              if (!head) {\n                this.curlyStack.pop();\n              }\n\n              return {\n                type: 10\n                /* Template */\n                ,\n                value: this.source.slice(start + 1, this.index - rawOffset),\n                cooked: cooked,\n                head: head,\n                tail: tail,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            }; // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\n\n            Scanner.prototype.testRegExp = function (pattern, flags) {\n              // The BMP character to use as a replacement for astral symbols when\n              // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n              // approximation.\n              // Note: replacing with '\\uFFFF' enables false positives in unlikely\n              // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n              // pattern that would not be detected by this substitution.\n              var astralSubstitute = '\\uFFFF';\n              var tmp = pattern;\n              var self = this;\n\n              if (flags.indexOf('u') >= 0) {\n                tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n                  var codePoint = parseInt($1 || $2, 16);\n\n                  if (codePoint > 0x10FFFF) {\n                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n                  }\n\n                  if (codePoint <= 0xFFFF) {\n                    return String.fromCharCode(codePoint);\n                  }\n\n                  return astralSubstitute;\n                }).replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n              } // First, detect invalid regular expressions.\n\n\n              try {\n                RegExp(tmp);\n              } catch (e) {\n                this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n              } // Return a regular expression object for this pattern-flag pair, or\n              // `null` in case the current environment doesn't support the flags it\n              // uses.\n\n\n              try {\n                return new RegExp(pattern, flags);\n              } catch (exception) {\n                /* istanbul ignore next */\n                return null;\n              }\n            };\n\n            Scanner.prototype.scanRegExpBody = function () {\n              var ch = this.source[this.index];\n              assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n              var str = this.source[this.index++];\n              var classMarker = false;\n              var terminated = false;\n\n              while (!this.eof()) {\n                ch = this.source[this.index++];\n                str += ch;\n\n                if (ch === '\\\\') {\n                  ch = this.source[this.index++]; // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\n                  if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n                  }\n\n                  str += ch;\n                } else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n                  this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n                } else if (classMarker) {\n                  if (ch === ']') {\n                    classMarker = false;\n                  }\n                } else {\n                  if (ch === '/') {\n                    terminated = true;\n                    break;\n                  } else if (ch === '[') {\n                    classMarker = true;\n                  }\n                }\n              }\n\n              if (!terminated) {\n                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n              } // Exclude leading and trailing slash.\n\n\n              return str.substr(1, str.length - 2);\n            };\n\n            Scanner.prototype.scanRegExpFlags = function () {\n              var str = '';\n              var flags = '';\n\n              while (!this.eof()) {\n                var ch = this.source[this.index];\n\n                if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n                  break;\n                }\n\n                ++this.index;\n\n                if (ch === '\\\\' && !this.eof()) {\n                  ch = this.source[this.index];\n\n                  if (ch === 'u') {\n                    ++this.index;\n                    var restore = this.index;\n                    var char = this.scanHexEscape('u');\n\n                    if (char !== null) {\n                      flags += char;\n\n                      for (str += '\\\\u'; restore < this.index; ++restore) {\n                        str += this.source[restore];\n                      }\n                    } else {\n                      this.index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                    }\n\n                    this.tolerateUnexpectedToken();\n                  } else {\n                    str += '\\\\';\n                    this.tolerateUnexpectedToken();\n                  }\n                } else {\n                  flags += ch;\n                  str += ch;\n                }\n              }\n\n              return flags;\n            };\n\n            Scanner.prototype.scanRegExp = function () {\n              var start = this.index;\n              var pattern = this.scanRegExpBody();\n              var flags = this.scanRegExpFlags();\n              var value = this.testRegExp(pattern, flags);\n              return {\n                type: 9\n                /* RegularExpression */\n                ,\n                value: '',\n                pattern: pattern,\n                flags: flags,\n                regex: value,\n                lineNumber: this.lineNumber,\n                lineStart: this.lineStart,\n                start: start,\n                end: this.index\n              };\n            };\n\n            Scanner.prototype.lex = function () {\n              if (this.eof()) {\n                return {\n                  type: 2\n                  /* EOF */\n                  ,\n                  value: '',\n                  lineNumber: this.lineNumber,\n                  lineStart: this.lineStart,\n                  start: this.index,\n                  end: this.index\n                };\n              }\n\n              var cp = this.source.charCodeAt(this.index);\n\n              if (character_1.Character.isIdentifierStart(cp)) {\n                return this.scanIdentifier();\n              } // Very common: ( and ) and ;\n\n\n              if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n                return this.scanPunctuator();\n              } // String literal starts with single quote (U+0027) or double quote (U+0022).\n\n\n              if (cp === 0x27 || cp === 0x22) {\n                return this.scanStringLiteral();\n              } // Dot (.) U+002E can also start a floating-point number, hence the need\n              // to check the next character.\n\n\n              if (cp === 0x2E) {\n                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n                  return this.scanNumericLiteral();\n                }\n\n                return this.scanPunctuator();\n              }\n\n              if (character_1.Character.isDecimalDigit(cp)) {\n                return this.scanNumericLiteral();\n              } // Template literals start with ` (U+0060) for template head\n              // or } (U+007D) for template middle or template tail.\n\n\n              if (cp === 0x60 || cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${') {\n                return this.scanTemplate();\n              } // Possible identifier start in a surrogate pair.\n\n\n              if (cp >= 0xD800 && cp < 0xDFFF) {\n                if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n                  return this.scanIdentifier();\n                }\n              }\n\n              return this.scanPunctuator();\n            };\n\n            return Scanner;\n          }();\n\n          exports.Scanner = Scanner;\n          /***/\n        },\n        /* 13 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.TokenName = {};\n          exports.TokenName[1\n          /* BooleanLiteral */\n          ] = 'Boolean';\n          exports.TokenName[2\n          /* EOF */\n          ] = '<end>';\n          exports.TokenName[3\n          /* Identifier */\n          ] = 'Identifier';\n          exports.TokenName[4\n          /* Keyword */\n          ] = 'Keyword';\n          exports.TokenName[5\n          /* NullLiteral */\n          ] = 'Null';\n          exports.TokenName[6\n          /* NumericLiteral */\n          ] = 'Numeric';\n          exports.TokenName[7\n          /* Punctuator */\n          ] = 'Punctuator';\n          exports.TokenName[8\n          /* StringLiteral */\n          ] = 'String';\n          exports.TokenName[9\n          /* RegularExpression */\n          ] = 'RegularExpression';\n          exports.TokenName[10\n          /* Template */\n          ] = 'Template';\n          /***/\n        },\n        /* 14 */\n\n        /***/\n        function (module, exports) {\n          \"use strict\"; // Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.XHTMLEntities = {\n            quot: '\\u0022',\n            amp: '\\u0026',\n            apos: '\\u0027',\n            gt: '\\u003E',\n            nbsp: '\\u00A0',\n            iexcl: '\\u00A1',\n            cent: '\\u00A2',\n            pound: '\\u00A3',\n            curren: '\\u00A4',\n            yen: '\\u00A5',\n            brvbar: '\\u00A6',\n            sect: '\\u00A7',\n            uml: '\\u00A8',\n            copy: '\\u00A9',\n            ordf: '\\u00AA',\n            laquo: '\\u00AB',\n            not: '\\u00AC',\n            shy: '\\u00AD',\n            reg: '\\u00AE',\n            macr: '\\u00AF',\n            deg: '\\u00B0',\n            plusmn: '\\u00B1',\n            sup2: '\\u00B2',\n            sup3: '\\u00B3',\n            acute: '\\u00B4',\n            micro: '\\u00B5',\n            para: '\\u00B6',\n            middot: '\\u00B7',\n            cedil: '\\u00B8',\n            sup1: '\\u00B9',\n            ordm: '\\u00BA',\n            raquo: '\\u00BB',\n            frac14: '\\u00BC',\n            frac12: '\\u00BD',\n            frac34: '\\u00BE',\n            iquest: '\\u00BF',\n            Agrave: '\\u00C0',\n            Aacute: '\\u00C1',\n            Acirc: '\\u00C2',\n            Atilde: '\\u00C3',\n            Auml: '\\u00C4',\n            Aring: '\\u00C5',\n            AElig: '\\u00C6',\n            Ccedil: '\\u00C7',\n            Egrave: '\\u00C8',\n            Eacute: '\\u00C9',\n            Ecirc: '\\u00CA',\n            Euml: '\\u00CB',\n            Igrave: '\\u00CC',\n            Iacute: '\\u00CD',\n            Icirc: '\\u00CE',\n            Iuml: '\\u00CF',\n            ETH: '\\u00D0',\n            Ntilde: '\\u00D1',\n            Ograve: '\\u00D2',\n            Oacute: '\\u00D3',\n            Ocirc: '\\u00D4',\n            Otilde: '\\u00D5',\n            Ouml: '\\u00D6',\n            times: '\\u00D7',\n            Oslash: '\\u00D8',\n            Ugrave: '\\u00D9',\n            Uacute: '\\u00DA',\n            Ucirc: '\\u00DB',\n            Uuml: '\\u00DC',\n            Yacute: '\\u00DD',\n            THORN: '\\u00DE',\n            szlig: '\\u00DF',\n            agrave: '\\u00E0',\n            aacute: '\\u00E1',\n            acirc: '\\u00E2',\n            atilde: '\\u00E3',\n            auml: '\\u00E4',\n            aring: '\\u00E5',\n            aelig: '\\u00E6',\n            ccedil: '\\u00E7',\n            egrave: '\\u00E8',\n            eacute: '\\u00E9',\n            ecirc: '\\u00EA',\n            euml: '\\u00EB',\n            igrave: '\\u00EC',\n            iacute: '\\u00ED',\n            icirc: '\\u00EE',\n            iuml: '\\u00EF',\n            eth: '\\u00F0',\n            ntilde: '\\u00F1',\n            ograve: '\\u00F2',\n            oacute: '\\u00F3',\n            ocirc: '\\u00F4',\n            otilde: '\\u00F5',\n            ouml: '\\u00F6',\n            divide: '\\u00F7',\n            oslash: '\\u00F8',\n            ugrave: '\\u00F9',\n            uacute: '\\u00FA',\n            ucirc: '\\u00FB',\n            uuml: '\\u00FC',\n            yacute: '\\u00FD',\n            thorn: '\\u00FE',\n            yuml: '\\u00FF',\n            OElig: '\\u0152',\n            oelig: '\\u0153',\n            Scaron: '\\u0160',\n            scaron: '\\u0161',\n            Yuml: '\\u0178',\n            fnof: '\\u0192',\n            circ: '\\u02C6',\n            tilde: '\\u02DC',\n            Alpha: '\\u0391',\n            Beta: '\\u0392',\n            Gamma: '\\u0393',\n            Delta: '\\u0394',\n            Epsilon: '\\u0395',\n            Zeta: '\\u0396',\n            Eta: '\\u0397',\n            Theta: '\\u0398',\n            Iota: '\\u0399',\n            Kappa: '\\u039A',\n            Lambda: '\\u039B',\n            Mu: '\\u039C',\n            Nu: '\\u039D',\n            Xi: '\\u039E',\n            Omicron: '\\u039F',\n            Pi: '\\u03A0',\n            Rho: '\\u03A1',\n            Sigma: '\\u03A3',\n            Tau: '\\u03A4',\n            Upsilon: '\\u03A5',\n            Phi: '\\u03A6',\n            Chi: '\\u03A7',\n            Psi: '\\u03A8',\n            Omega: '\\u03A9',\n            alpha: '\\u03B1',\n            beta: '\\u03B2',\n            gamma: '\\u03B3',\n            delta: '\\u03B4',\n            epsilon: '\\u03B5',\n            zeta: '\\u03B6',\n            eta: '\\u03B7',\n            theta: '\\u03B8',\n            iota: '\\u03B9',\n            kappa: '\\u03BA',\n            lambda: '\\u03BB',\n            mu: '\\u03BC',\n            nu: '\\u03BD',\n            xi: '\\u03BE',\n            omicron: '\\u03BF',\n            pi: '\\u03C0',\n            rho: '\\u03C1',\n            sigmaf: '\\u03C2',\n            sigma: '\\u03C3',\n            tau: '\\u03C4',\n            upsilon: '\\u03C5',\n            phi: '\\u03C6',\n            chi: '\\u03C7',\n            psi: '\\u03C8',\n            omega: '\\u03C9',\n            thetasym: '\\u03D1',\n            upsih: '\\u03D2',\n            piv: '\\u03D6',\n            ensp: '\\u2002',\n            emsp: '\\u2003',\n            thinsp: '\\u2009',\n            zwnj: '\\u200C',\n            zwj: '\\u200D',\n            lrm: '\\u200E',\n            rlm: '\\u200F',\n            ndash: '\\u2013',\n            mdash: '\\u2014',\n            lsquo: '\\u2018',\n            rsquo: '\\u2019',\n            sbquo: '\\u201A',\n            ldquo: '\\u201C',\n            rdquo: '\\u201D',\n            bdquo: '\\u201E',\n            dagger: '\\u2020',\n            Dagger: '\\u2021',\n            bull: '\\u2022',\n            hellip: '\\u2026',\n            permil: '\\u2030',\n            prime: '\\u2032',\n            Prime: '\\u2033',\n            lsaquo: '\\u2039',\n            rsaquo: '\\u203A',\n            oline: '\\u203E',\n            frasl: '\\u2044',\n            euro: '\\u20AC',\n            image: '\\u2111',\n            weierp: '\\u2118',\n            real: '\\u211C',\n            trade: '\\u2122',\n            alefsym: '\\u2135',\n            larr: '\\u2190',\n            uarr: '\\u2191',\n            rarr: '\\u2192',\n            darr: '\\u2193',\n            harr: '\\u2194',\n            crarr: '\\u21B5',\n            lArr: '\\u21D0',\n            uArr: '\\u21D1',\n            rArr: '\\u21D2',\n            dArr: '\\u21D3',\n            hArr: '\\u21D4',\n            forall: '\\u2200',\n            part: '\\u2202',\n            exist: '\\u2203',\n            empty: '\\u2205',\n            nabla: '\\u2207',\n            isin: '\\u2208',\n            notin: '\\u2209',\n            ni: '\\u220B',\n            prod: '\\u220F',\n            sum: '\\u2211',\n            minus: '\\u2212',\n            lowast: '\\u2217',\n            radic: '\\u221A',\n            prop: '\\u221D',\n            infin: '\\u221E',\n            ang: '\\u2220',\n            and: '\\u2227',\n            or: '\\u2228',\n            cap: '\\u2229',\n            cup: '\\u222A',\n            int: '\\u222B',\n            there4: '\\u2234',\n            sim: '\\u223C',\n            cong: '\\u2245',\n            asymp: '\\u2248',\n            ne: '\\u2260',\n            equiv: '\\u2261',\n            le: '\\u2264',\n            ge: '\\u2265',\n            sub: '\\u2282',\n            sup: '\\u2283',\n            nsub: '\\u2284',\n            sube: '\\u2286',\n            supe: '\\u2287',\n            oplus: '\\u2295',\n            otimes: '\\u2297',\n            perp: '\\u22A5',\n            sdot: '\\u22C5',\n            lceil: '\\u2308',\n            rceil: '\\u2309',\n            lfloor: '\\u230A',\n            rfloor: '\\u230B',\n            loz: '\\u25CA',\n            spades: '\\u2660',\n            clubs: '\\u2663',\n            hearts: '\\u2665',\n            diams: '\\u2666',\n            lang: '\\u27E8',\n            rang: '\\u27E9'\n          };\n          /***/\n        },\n        /* 15 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n\n          var error_handler_1 = __webpack_require__(10);\n\n          var scanner_1 = __webpack_require__(12);\n\n          var token_1 = __webpack_require__(13);\n\n          var Reader = function () {\n            function Reader() {\n              this.values = [];\n              this.curly = this.paren = -1;\n            } // A function following one of those tokens is an expression.\n\n\n            Reader.prototype.beforeFunctionExpression = function (t) {\n              return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new', 'return', 'case', 'delete', 'throw', 'void', // assignment operators\n              '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=', '&=', '|=', '^=', ',', // binary/unary operators\n              '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&', '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=', '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n            }; // Determine if forward slash (/) is an operator or part of a regular expression\n            // https://github.com/mozilla/sweet.js/wiki/design\n\n\n            Reader.prototype.isRegexStart = function () {\n              var previous = this.values[this.values.length - 1];\n              var regex = previous !== null;\n\n              switch (previous) {\n                case 'this':\n                case ']':\n                  regex = false;\n                  break;\n\n                case ')':\n                  var keyword = this.values[this.paren - 1];\n                  regex = keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with';\n                  break;\n\n                case '}':\n                  // Dividing a function by anything makes little sense,\n                  // but we have to check for that.\n                  regex = false;\n\n                  if (this.values[this.curly - 3] === 'function') {\n                    // Anonymous function, e.g. function(){} /42\n                    var check = this.values[this.curly - 4];\n                    regex = check ? !this.beforeFunctionExpression(check) : false;\n                  } else if (this.values[this.curly - 4] === 'function') {\n                    // Named function, e.g. function f(){} /42/\n                    var check = this.values[this.curly - 5];\n                    regex = check ? !this.beforeFunctionExpression(check) : true;\n                  }\n\n                  break;\n\n                default:\n                  break;\n              }\n\n              return regex;\n            };\n\n            Reader.prototype.push = function (token) {\n              if (token.type === 7\n              /* Punctuator */\n              || token.type === 4\n              /* Keyword */\n              ) {\n                  if (token.value === '{') {\n                    this.curly = this.values.length;\n                  } else if (token.value === '(') {\n                    this.paren = this.values.length;\n                  }\n\n                  this.values.push(token.value);\n                } else {\n                this.values.push(null);\n              }\n            };\n\n            return Reader;\n          }();\n\n          var Tokenizer = function () {\n            function Tokenizer(code, config) {\n              this.errorHandler = new error_handler_1.ErrorHandler();\n              this.errorHandler.tolerant = config ? typeof config.tolerant === 'boolean' && config.tolerant : false;\n              this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n              this.scanner.trackComment = config ? typeof config.comment === 'boolean' && config.comment : false;\n              this.trackRange = config ? typeof config.range === 'boolean' && config.range : false;\n              this.trackLoc = config ? typeof config.loc === 'boolean' && config.loc : false;\n              this.buffer = [];\n              this.reader = new Reader();\n            }\n\n            Tokenizer.prototype.errors = function () {\n              return this.errorHandler.errors;\n            };\n\n            Tokenizer.prototype.getNextToken = function () {\n              if (this.buffer.length === 0) {\n                var comments = this.scanner.scanComments();\n\n                if (this.scanner.trackComment) {\n                  for (var i = 0; i < comments.length; ++i) {\n                    var e = comments[i];\n                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n                    var comment = {\n                      type: e.multiLine ? 'BlockComment' : 'LineComment',\n                      value: value\n                    };\n\n                    if (this.trackRange) {\n                      comment.range = e.range;\n                    }\n\n                    if (this.trackLoc) {\n                      comment.loc = e.loc;\n                    }\n\n                    this.buffer.push(comment);\n                  }\n                }\n\n                if (!this.scanner.eof()) {\n                  var loc = void 0;\n\n                  if (this.trackLoc) {\n                    loc = {\n                      start: {\n                        line: this.scanner.lineNumber,\n                        column: this.scanner.index - this.scanner.lineStart\n                      },\n                      end: {}\n                    };\n                  }\n\n                  var startRegex = this.scanner.source[this.scanner.index] === '/' && this.reader.isRegexStart();\n                  var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n                  this.reader.push(token);\n                  var entry = {\n                    type: token_1.TokenName[token.type],\n                    value: this.scanner.source.slice(token.start, token.end)\n                  };\n\n                  if (this.trackRange) {\n                    entry.range = [token.start, token.end];\n                  }\n\n                  if (this.trackLoc) {\n                    loc.end = {\n                      line: this.scanner.lineNumber,\n                      column: this.scanner.index - this.scanner.lineStart\n                    };\n                    entry.loc = loc;\n                  }\n\n                  if (token.type === 9\n                  /* RegularExpression */\n                  ) {\n                      var pattern = token.pattern;\n                      var flags = token.flags;\n                      entry.regex = {\n                        pattern: pattern,\n                        flags: flags\n                      };\n                    }\n\n                  this.buffer.push(entry);\n                }\n              }\n\n              return this.buffer.shift();\n            };\n\n            return Tokenizer;\n          }();\n\n          exports.Tokenizer = Tokenizer;\n          /***/\n        }\n        /******/\n        ])\n      );\n    });\n\n    ;\n    /*global define, Reflect */\n\n    /*\n     * xpcshell has a smaller stack on linux and windows (1MB vs 9MB on mac),\n     * and the recursive nature of esprima can cause it to overflow pretty\n     * quickly. So favor it built in Reflect parser:\n     * https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n     */\n\n    define('esprimaAdapter', ['./esprima', 'env'], function (esprima, env) {\n      if (env.get() === 'xpconnect' && typeof Reflect !== 'undefined') {\n        return Reflect;\n      } else {\n        return esprima;\n      }\n    });\n\n    (function webpackUniversalModuleDefinition(root, factory) {\n      var exports, module;\n      if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define('source-map', [], factory);else if (typeof exports === 'object') exports[\"sourceMap\"] = factory();else root[\"sourceMap\"] = factory();\n    })(this, function () {\n      return (\n        /******/\n        function (modules) {\n          // webpackBootstrap\n\n          /******/\n          // The module cache\n\n          /******/\n          var installedModules = {};\n          /******/\n          // The require function\n\n          /******/\n\n          function __webpack_require__(moduleId) {\n            /******/\n            // Check if module is in cache\n\n            /******/\n            if (installedModules[moduleId])\n              /******/\n              return installedModules[moduleId].exports;\n            /******/\n            // Create a new module (and put it into the cache)\n\n            /******/\n\n            var module = installedModules[moduleId] = {\n              /******/\n              exports: {},\n\n              /******/\n              id: moduleId,\n\n              /******/\n              loaded: false\n              /******/\n\n            };\n            /******/\n            // Execute the module function\n\n            /******/\n\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            /******/\n            // Flag the module as loaded\n\n            /******/\n\n            module.loaded = true;\n            /******/\n            // Return the exports of the module\n\n            /******/\n\n            return module.exports;\n            /******/\n          }\n          /******/\n          // expose the modules object (__webpack_modules__)\n\n          /******/\n\n\n          __webpack_require__.m = modules;\n          /******/\n          // expose the module cache\n\n          /******/\n\n          __webpack_require__.c = installedModules;\n          /******/\n          // __webpack_public_path__\n\n          /******/\n\n          __webpack_require__.p = \"\";\n          /******/\n          // Load entry module and return exports\n\n          /******/\n\n          return __webpack_require__(0);\n          /******/\n        }(\n        /************************************************************************/\n\n        /******/\n        [\n        /* 0 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /*\n           * Copyright 2009-2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE.txt or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          exports.SourceMapGenerator = __webpack_require__(1).SourceMapGenerator;\n          exports.SourceMapConsumer = __webpack_require__(7).SourceMapConsumer;\n          exports.SourceNode = __webpack_require__(10).SourceNode;\n          /***/\n        },\n        /* 1 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var base64VLQ = __webpack_require__(2);\n\n          var util = __webpack_require__(4);\n\n          var ArraySet = __webpack_require__(5).ArraySet;\n\n          var MappingList = __webpack_require__(6).MappingList;\n          /**\n           * An instance of the SourceMapGenerator represents a source map which is\n           * being built incrementally. You may pass an object with the following\n           * properties:\n           *\n           *   - file: The filename of the generated source.\n           *   - sourceRoot: A root for all relative URLs in this source map.\n           */\n\n\n          function SourceMapGenerator(aArgs) {\n            if (!aArgs) {\n              aArgs = {};\n            }\n\n            this._file = util.getArg(aArgs, 'file', null);\n            this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n            this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n            this._sources = new ArraySet();\n            this._names = new ArraySet();\n            this._mappings = new MappingList();\n            this._sourcesContents = null;\n          }\n\n          SourceMapGenerator.prototype._version = 3;\n          /**\n           * Creates a new SourceMapGenerator based on a SourceMapConsumer\n           *\n           * @param aSourceMapConsumer The SourceMap.\n           */\n\n          SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n            var sourceRoot = aSourceMapConsumer.sourceRoot;\n            var generator = new SourceMapGenerator({\n              file: aSourceMapConsumer.file,\n              sourceRoot: sourceRoot\n            });\n            aSourceMapConsumer.eachMapping(function (mapping) {\n              var newMapping = {\n                generated: {\n                  line: mapping.generatedLine,\n                  column: mapping.generatedColumn\n                }\n              };\n\n              if (mapping.source != null) {\n                newMapping.source = mapping.source;\n\n                if (sourceRoot != null) {\n                  newMapping.source = util.relative(sourceRoot, newMapping.source);\n                }\n\n                newMapping.original = {\n                  line: mapping.originalLine,\n                  column: mapping.originalColumn\n                };\n\n                if (mapping.name != null) {\n                  newMapping.name = mapping.name;\n                }\n              }\n\n              generator.addMapping(newMapping);\n            });\n            aSourceMapConsumer.sources.forEach(function (sourceFile) {\n              var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n              if (content != null) {\n                generator.setSourceContent(sourceFile, content);\n              }\n            });\n            return generator;\n          };\n          /**\n           * Add a single mapping from original source line and column to the generated\n           * source's line and column for this source map being created. The mapping\n           * object should have the following properties:\n           *\n           *   - generated: An object with the generated line and column positions.\n           *   - original: An object with the original line and column positions.\n           *   - source: The original source file (relative to the sourceRoot).\n           *   - name: An optional original token name for this mapping.\n           */\n\n\n          SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n            var generated = util.getArg(aArgs, 'generated');\n            var original = util.getArg(aArgs, 'original', null);\n            var source = util.getArg(aArgs, 'source', null);\n            var name = util.getArg(aArgs, 'name', null);\n\n            if (!this._skipValidation) {\n              this._validateMapping(generated, original, source, name);\n            }\n\n            if (source != null) {\n              source = String(source);\n\n              if (!this._sources.has(source)) {\n                this._sources.add(source);\n              }\n            }\n\n            if (name != null) {\n              name = String(name);\n\n              if (!this._names.has(name)) {\n                this._names.add(name);\n              }\n            }\n\n            this._mappings.add({\n              generatedLine: generated.line,\n              generatedColumn: generated.column,\n              originalLine: original != null && original.line,\n              originalColumn: original != null && original.column,\n              source: source,\n              name: name\n            });\n          };\n          /**\n           * Set the source content for a source file.\n           */\n\n\n          SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n            var source = aSourceFile;\n\n            if (this._sourceRoot != null) {\n              source = util.relative(this._sourceRoot, source);\n            }\n\n            if (aSourceContent != null) {\n              // Add the source content to the _sourcesContents map.\n              // Create a new _sourcesContents map if the property is null.\n              if (!this._sourcesContents) {\n                this._sourcesContents = Object.create(null);\n              }\n\n              this._sourcesContents[util.toSetString(source)] = aSourceContent;\n            } else if (this._sourcesContents) {\n              // Remove the source file from the _sourcesContents map.\n              // If the _sourcesContents map is empty, set the property to null.\n              delete this._sourcesContents[util.toSetString(source)];\n\n              if (Object.keys(this._sourcesContents).length === 0) {\n                this._sourcesContents = null;\n              }\n            }\n          };\n          /**\n           * Applies the mappings of a sub-source-map for a specific source file to the\n           * source map being generated. Each mapping to the supplied source file is\n           * rewritten using the supplied source map. Note: The resolution for the\n           * resulting mappings is the minimium of this map and the supplied map.\n           *\n           * @param aSourceMapConsumer The source map to be applied.\n           * @param aSourceFile Optional. The filename of the source file.\n           *        If omitted, SourceMapConsumer's file property will be used.\n           * @param aSourceMapPath Optional. The dirname of the path to the source map\n           *        to be applied. If relative, it is relative to the SourceMapConsumer.\n           *        This parameter is needed when the two source maps aren't in the same\n           *        directory, and the source map to be applied contains relative source\n           *        paths. If so, those relative source paths need to be rewritten\n           *        relative to the SourceMapGenerator.\n           */\n\n\n          SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n            var sourceFile = aSourceFile; // If aSourceFile is omitted, we will use the file property of the SourceMap\n\n            if (aSourceFile == null) {\n              if (aSourceMapConsumer.file == null) {\n                throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n              }\n\n              sourceFile = aSourceMapConsumer.file;\n            }\n\n            var sourceRoot = this._sourceRoot; // Make \"sourceFile\" relative if an absolute Url is passed.\n\n            if (sourceRoot != null) {\n              sourceFile = util.relative(sourceRoot, sourceFile);\n            } // Applying the SourceMap can add and remove items from the sources and\n            // the names array.\n\n\n            var newSources = new ArraySet();\n            var newNames = new ArraySet(); // Find mappings for the \"sourceFile\"\n\n            this._mappings.unsortedForEach(function (mapping) {\n              if (mapping.source === sourceFile && mapping.originalLine != null) {\n                // Check if it can be mapped by the source map, then update the mapping.\n                var original = aSourceMapConsumer.originalPositionFor({\n                  line: mapping.originalLine,\n                  column: mapping.originalColumn\n                });\n\n                if (original.source != null) {\n                  // Copy mapping\n                  mapping.source = original.source;\n\n                  if (aSourceMapPath != null) {\n                    mapping.source = util.join(aSourceMapPath, mapping.source);\n                  }\n\n                  if (sourceRoot != null) {\n                    mapping.source = util.relative(sourceRoot, mapping.source);\n                  }\n\n                  mapping.originalLine = original.line;\n                  mapping.originalColumn = original.column;\n\n                  if (original.name != null) {\n                    mapping.name = original.name;\n                  }\n                }\n              }\n\n              var source = mapping.source;\n\n              if (source != null && !newSources.has(source)) {\n                newSources.add(source);\n              }\n\n              var name = mapping.name;\n\n              if (name != null && !newNames.has(name)) {\n                newNames.add(name);\n              }\n            }, this);\n\n            this._sources = newSources;\n            this._names = newNames; // Copy sourcesContents of applied map.\n\n            aSourceMapConsumer.sources.forEach(function (sourceFile) {\n              var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n              if (content != null) {\n                if (aSourceMapPath != null) {\n                  sourceFile = util.join(aSourceMapPath, sourceFile);\n                }\n\n                if (sourceRoot != null) {\n                  sourceFile = util.relative(sourceRoot, sourceFile);\n                }\n\n                this.setSourceContent(sourceFile, content);\n              }\n            }, this);\n          };\n          /**\n           * A mapping can have one of the three levels of data:\n           *\n           *   1. Just the generated position.\n           *   2. The Generated position, original position, and original source.\n           *   3. Generated and original position, original source, as well as a name\n           *      token.\n           *\n           * To maintain consistency, we validate that any new mapping being added falls\n           * in to one of these categories.\n           */\n\n\n          SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n            if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n              // Case 1.\n              return;\n            } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n              // Cases 2 and 3.\n              return;\n            } else {\n              throw new Error('Invalid mapping: ' + JSON.stringify({\n                generated: aGenerated,\n                source: aSource,\n                original: aOriginal,\n                name: aName\n              }));\n            }\n          };\n          /**\n           * Serialize the accumulated mappings in to the stream of base 64 VLQs\n           * specified by the source map format.\n           */\n\n\n          SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n            var previousGeneratedColumn = 0;\n            var previousGeneratedLine = 1;\n            var previousOriginalColumn = 0;\n            var previousOriginalLine = 0;\n            var previousName = 0;\n            var previousSource = 0;\n            var result = '';\n            var next;\n            var mapping;\n            var nameIdx;\n            var sourceIdx;\n\n            var mappings = this._mappings.toArray();\n\n            for (var i = 0, len = mappings.length; i < len; i++) {\n              mapping = mappings[i];\n              next = '';\n\n              if (mapping.generatedLine !== previousGeneratedLine) {\n                previousGeneratedColumn = 0;\n\n                while (mapping.generatedLine !== previousGeneratedLine) {\n                  next += ';';\n                  previousGeneratedLine++;\n                }\n              } else {\n                if (i > 0) {\n                  if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n                    continue;\n                  }\n\n                  next += ',';\n                }\n              }\n\n              next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n              previousGeneratedColumn = mapping.generatedColumn;\n\n              if (mapping.source != null) {\n                sourceIdx = this._sources.indexOf(mapping.source);\n                next += base64VLQ.encode(sourceIdx - previousSource);\n                previousSource = sourceIdx; // lines are stored 0-based in SourceMap spec version 3\n\n                next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n                previousOriginalLine = mapping.originalLine - 1;\n                next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n                previousOriginalColumn = mapping.originalColumn;\n\n                if (mapping.name != null) {\n                  nameIdx = this._names.indexOf(mapping.name);\n                  next += base64VLQ.encode(nameIdx - previousName);\n                  previousName = nameIdx;\n                }\n              }\n\n              result += next;\n            }\n\n            return result;\n          };\n\n          SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n            return aSources.map(function (source) {\n              if (!this._sourcesContents) {\n                return null;\n              }\n\n              if (aSourceRoot != null) {\n                source = util.relative(aSourceRoot, source);\n              }\n\n              var key = util.toSetString(source);\n              return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n            }, this);\n          };\n          /**\n           * Externalize the source map.\n           */\n\n\n          SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n            var map = {\n              version: this._version,\n              sources: this._sources.toArray(),\n              names: this._names.toArray(),\n              mappings: this._serializeMappings()\n            };\n\n            if (this._file != null) {\n              map.file = this._file;\n            }\n\n            if (this._sourceRoot != null) {\n              map.sourceRoot = this._sourceRoot;\n            }\n\n            if (this._sourcesContents) {\n              map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n            }\n\n            return map;\n          };\n          /**\n           * Render the source map being generated to a string.\n           */\n\n\n          SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n            return JSON.stringify(this.toJSON());\n          };\n\n          exports.SourceMapGenerator = SourceMapGenerator;\n          /***/\n        },\n        /* 2 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           *\n           * Based on the Base 64 VLQ implementation in Closure Compiler:\n           * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n           *\n           * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n           * Redistribution and use in source and binary forms, with or without\n           * modification, are permitted provided that the following conditions are\n           * met:\n           *\n           *  * Redistributions of source code must retain the above copyright\n           *    notice, this list of conditions and the following disclaimer.\n           *  * Redistributions in binary form must reproduce the above\n           *    copyright notice, this list of conditions and the following\n           *    disclaimer in the documentation and/or other materials provided\n           *    with the distribution.\n           *  * Neither the name of Google Inc. nor the names of its\n           *    contributors may be used to endorse or promote products derived\n           *    from this software without specific prior written permission.\n           *\n           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n           * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n           * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n           * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n           * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n           * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n           * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n           * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n           * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n           */\n          var base64 = __webpack_require__(3); // A single base 64 digit can contain 6 bits of data. For the base 64 variable\n          // length quantities we use in the source map spec, the first bit is the sign,\n          // the next four bits are the actual value, and the 6th bit is the\n          // continuation bit. The continuation bit tells us whether there are more\n          // digits in this value following this digit.\n          //\n          //   Continuation\n          //   |    Sign\n          //   |    |\n          //   V    V\n          //   101011\n\n\n          var VLQ_BASE_SHIFT = 5; // binary: 100000\n\n          var VLQ_BASE = 1 << VLQ_BASE_SHIFT; // binary: 011111\n\n          var VLQ_BASE_MASK = VLQ_BASE - 1; // binary: 100000\n\n          var VLQ_CONTINUATION_BIT = VLQ_BASE;\n          /**\n           * Converts from a two-complement value to a value where the sign bit is\n           * placed in the least significant bit.  For example, as decimals:\n           *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n           *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n           */\n\n          function toVLQSigned(aValue) {\n            return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;\n          }\n          /**\n           * Converts to a two-complement value from a value where the sign bit is\n           * placed in the least significant bit.  For example, as decimals:\n           *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n           *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n           */\n\n\n          function fromVLQSigned(aValue) {\n            var isNegative = (aValue & 1) === 1;\n            var shifted = aValue >> 1;\n            return isNegative ? -shifted : shifted;\n          }\n          /**\n           * Returns the base 64 VLQ encoded value.\n           */\n\n\n          exports.encode = function base64VLQ_encode(aValue) {\n            var encoded = \"\";\n            var digit;\n            var vlq = toVLQSigned(aValue);\n\n            do {\n              digit = vlq & VLQ_BASE_MASK;\n              vlq >>>= VLQ_BASE_SHIFT;\n\n              if (vlq > 0) {\n                // There are still more digits in this value, so we must make sure the\n                // continuation bit is marked.\n                digit |= VLQ_CONTINUATION_BIT;\n              }\n\n              encoded += base64.encode(digit);\n            } while (vlq > 0);\n\n            return encoded;\n          };\n          /**\n           * Decodes the next base 64 VLQ value from the given string and returns the\n           * value and the rest of the string via the out parameter.\n           */\n\n\n          exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n            var strLen = aStr.length;\n            var result = 0;\n            var shift = 0;\n            var continuation, digit;\n\n            do {\n              if (aIndex >= strLen) {\n                throw new Error(\"Expected more digits in base 64 VLQ value.\");\n              }\n\n              digit = base64.decode(aStr.charCodeAt(aIndex++));\n\n              if (digit === -1) {\n                throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n              }\n\n              continuation = !!(digit & VLQ_CONTINUATION_BIT);\n              digit &= VLQ_BASE_MASK;\n              result = result + (digit << shift);\n              shift += VLQ_BASE_SHIFT;\n            } while (continuation);\n\n            aOutParam.value = fromVLQSigned(result);\n            aOutParam.rest = aIndex;\n          };\n          /***/\n\n        },\n        /* 3 */\n\n        /***/\n        function (module, exports) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n          /**\n           * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n           */\n\n          exports.encode = function (number) {\n            if (0 <= number && number < intToCharMap.length) {\n              return intToCharMap[number];\n            }\n\n            throw new TypeError(\"Must be between 0 and 63: \" + number);\n          };\n          /**\n           * Decode a single base 64 character code digit to an integer. Returns -1 on\n           * failure.\n           */\n\n\n          exports.decode = function (charCode) {\n            var bigA = 65; // 'A'\n\n            var bigZ = 90; // 'Z'\n\n            var littleA = 97; // 'a'\n\n            var littleZ = 122; // 'z'\n\n            var zero = 48; // '0'\n\n            var nine = 57; // '9'\n\n            var plus = 43; // '+'\n\n            var slash = 47; // '/'\n\n            var littleOffset = 26;\n            var numberOffset = 52; // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n            if (bigA <= charCode && charCode <= bigZ) {\n              return charCode - bigA;\n            } // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\n\n            if (littleA <= charCode && charCode <= littleZ) {\n              return charCode - littleA + littleOffset;\n            } // 52 - 61: 0123456789\n\n\n            if (zero <= charCode && charCode <= nine) {\n              return charCode - zero + numberOffset;\n            } // 62: +\n\n\n            if (charCode == plus) {\n              return 62;\n            } // 63: /\n\n\n            if (charCode == slash) {\n              return 63;\n            } // Invalid base64 digit.\n\n\n            return -1;\n          };\n          /***/\n\n        },\n        /* 4 */\n\n        /***/\n        function (module, exports) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n\n          /**\n           * This is a helper function for getting values from parameter/options\n           * objects.\n           *\n           * @param args The object we are extracting values from\n           * @param name The name of the property we are getting.\n           * @param defaultValue An optional value to return if the property is missing\n           * from the object. If this is not specified and the property is missing, an\n           * error will be thrown.\n           */\n          function getArg(aArgs, aName, aDefaultValue) {\n            if (aName in aArgs) {\n              return aArgs[aName];\n            } else if (arguments.length === 3) {\n              return aDefaultValue;\n            } else {\n              throw new Error('\"' + aName + '\" is a required argument.');\n            }\n          }\n\n          exports.getArg = getArg;\n          var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n          var dataUrlRegexp = /^data:.+\\,.+$/;\n\n          function urlParse(aUrl) {\n            var match = aUrl.match(urlRegexp);\n\n            if (!match) {\n              return null;\n            }\n\n            return {\n              scheme: match[1],\n              auth: match[2],\n              host: match[3],\n              port: match[4],\n              path: match[5]\n            };\n          }\n\n          exports.urlParse = urlParse;\n\n          function urlGenerate(aParsedUrl) {\n            var url = '';\n\n            if (aParsedUrl.scheme) {\n              url += aParsedUrl.scheme + ':';\n            }\n\n            url += '//';\n\n            if (aParsedUrl.auth) {\n              url += aParsedUrl.auth + '@';\n            }\n\n            if (aParsedUrl.host) {\n              url += aParsedUrl.host;\n            }\n\n            if (aParsedUrl.port) {\n              url += \":\" + aParsedUrl.port;\n            }\n\n            if (aParsedUrl.path) {\n              url += aParsedUrl.path;\n            }\n\n            return url;\n          }\n\n          exports.urlGenerate = urlGenerate;\n          /**\n           * Normalizes a path, or the path portion of a URL:\n           *\n           * - Replaces consequtive slashes with one slash.\n           * - Removes unnecessary '.' parts.\n           * - Removes unnecessary '<dir>/..' parts.\n           *\n           * Based on code in the Node.js 'path' core module.\n           *\n           * @param aPath The path or url to normalize.\n           */\n\n          function normalize(aPath) {\n            var path = aPath;\n            var url = urlParse(aPath);\n\n            if (url) {\n              if (!url.path) {\n                return aPath;\n              }\n\n              path = url.path;\n            }\n\n            var isAbsolute = exports.isAbsolute(path);\n            var parts = path.split(/\\/+/);\n\n            for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n              part = parts[i];\n\n              if (part === '.') {\n                parts.splice(i, 1);\n              } else if (part === '..') {\n                up++;\n              } else if (up > 0) {\n                if (part === '') {\n                  // The first part is blank if the path is absolute. Trying to go\n                  // above the root is a no-op. Therefore we can remove all '..' parts\n                  // directly after the root.\n                  parts.splice(i + 1, up);\n                  up = 0;\n                } else {\n                  parts.splice(i, 2);\n                  up--;\n                }\n              }\n            }\n\n            path = parts.join('/');\n\n            if (path === '') {\n              path = isAbsolute ? '/' : '.';\n            }\n\n            if (url) {\n              url.path = path;\n              return urlGenerate(url);\n            }\n\n            return path;\n          }\n\n          exports.normalize = normalize;\n          /**\n           * Joins two paths/URLs.\n           *\n           * @param aRoot The root path or URL.\n           * @param aPath The path or URL to be joined with the root.\n           *\n           * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n           *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n           *   first.\n           * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n           *   is updated with the result and aRoot is returned. Otherwise the result\n           *   is returned.\n           *   - If aPath is absolute, the result is aPath.\n           *   - Otherwise the two paths are joined with a slash.\n           * - Joining for example 'http://' and 'www.example.com' is also supported.\n           */\n\n          function join(aRoot, aPath) {\n            if (aRoot === \"\") {\n              aRoot = \".\";\n            }\n\n            if (aPath === \"\") {\n              aPath = \".\";\n            }\n\n            var aPathUrl = urlParse(aPath);\n            var aRootUrl = urlParse(aRoot);\n\n            if (aRootUrl) {\n              aRoot = aRootUrl.path || '/';\n            } // `join(foo, '//www.example.org')`\n\n\n            if (aPathUrl && !aPathUrl.scheme) {\n              if (aRootUrl) {\n                aPathUrl.scheme = aRootUrl.scheme;\n              }\n\n              return urlGenerate(aPathUrl);\n            }\n\n            if (aPathUrl || aPath.match(dataUrlRegexp)) {\n              return aPath;\n            } // `join('http://', 'www.example.com')`\n\n\n            if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n              aRootUrl.host = aPath;\n              return urlGenerate(aRootUrl);\n            }\n\n            var joined = aPath.charAt(0) === '/' ? aPath : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n            if (aRootUrl) {\n              aRootUrl.path = joined;\n              return urlGenerate(aRootUrl);\n            }\n\n            return joined;\n          }\n\n          exports.join = join;\n\n          exports.isAbsolute = function (aPath) {\n            return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n          };\n          /**\n           * Make a path relative to a URL or another path.\n           *\n           * @param aRoot The root path or URL.\n           * @param aPath The path or URL to be made relative to aRoot.\n           */\n\n\n          function relative(aRoot, aPath) {\n            if (aRoot === \"\") {\n              aRoot = \".\";\n            }\n\n            aRoot = aRoot.replace(/\\/$/, ''); // It is possible for the path to be above the root. In this case, simply\n            // checking whether the root is a prefix of the path won't work. Instead, we\n            // need to remove components from the root one by one, until either we find\n            // a prefix that fits, or we run out of components to remove.\n\n            var level = 0;\n\n            while (aPath.indexOf(aRoot + '/') !== 0) {\n              var index = aRoot.lastIndexOf(\"/\");\n\n              if (index < 0) {\n                return aPath;\n              } // If the only part of the root that is left is the scheme (i.e. http://,\n              // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n              // have exhausted all components, so the path is not relative to the root.\n\n\n              aRoot = aRoot.slice(0, index);\n\n              if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n                return aPath;\n              }\n\n              ++level;\n            } // Make sure we add a \"../\" for each component we removed from the root.\n\n\n            return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n          }\n\n          exports.relative = relative;\n\n          var supportsNullProto = function () {\n            var obj = Object.create(null);\n            return !('__proto__' in obj);\n          }();\n\n          function identity(s) {\n            return s;\n          }\n          /**\n           * Because behavior goes wacky when you set `__proto__` on objects, we\n           * have to prefix all the strings in our set with an arbitrary character.\n           *\n           * See https://github.com/mozilla/source-map/pull/31 and\n           * https://github.com/mozilla/source-map/issues/30\n           *\n           * @param String aStr\n           */\n\n\n          function toSetString(aStr) {\n            if (isProtoString(aStr)) {\n              return '$' + aStr;\n            }\n\n            return aStr;\n          }\n\n          exports.toSetString = supportsNullProto ? identity : toSetString;\n\n          function fromSetString(aStr) {\n            if (isProtoString(aStr)) {\n              return aStr.slice(1);\n            }\n\n            return aStr;\n          }\n\n          exports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n          function isProtoString(s) {\n            if (!s) {\n              return false;\n            }\n\n            var length = s.length;\n\n            if (length < 9\n            /* \"__proto__\".length */\n            ) {\n                return false;\n              }\n\n            if (s.charCodeAt(length - 1) !== 95\n            /* '_' */\n            || s.charCodeAt(length - 2) !== 95\n            /* '_' */\n            || s.charCodeAt(length - 3) !== 111\n            /* 'o' */\n            || s.charCodeAt(length - 4) !== 116\n            /* 't' */\n            || s.charCodeAt(length - 5) !== 111\n            /* 'o' */\n            || s.charCodeAt(length - 6) !== 114\n            /* 'r' */\n            || s.charCodeAt(length - 7) !== 112\n            /* 'p' */\n            || s.charCodeAt(length - 8) !== 95\n            /* '_' */\n            || s.charCodeAt(length - 9) !== 95\n            /* '_' */\n            ) {\n                return false;\n              }\n\n            for (var i = length - 10; i >= 0; i--) {\n              if (s.charCodeAt(i) !== 36\n              /* '$' */\n              ) {\n                  return false;\n                }\n            }\n\n            return true;\n          }\n          /**\n           * Comparator between two mappings where the original positions are compared.\n           *\n           * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n           * mappings with the same original source/line/column, but different generated\n           * line and column the same. Useful when searching for a mapping with a\n           * stubbed out mapping.\n           */\n\n\n          function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n            var cmp = mappingA.source - mappingB.source;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalLine - mappingB.originalLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n            if (cmp !== 0 || onlyCompareOriginal) {\n              return cmp;\n            }\n\n            cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            return mappingA.name - mappingB.name;\n          }\n\n          exports.compareByOriginalPositions = compareByOriginalPositions;\n          /**\n           * Comparator between two mappings with deflated source and name indices where\n           * the generated positions are compared.\n           *\n           * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n           * mappings with the same generated line and column, but different\n           * source/name/original line and column the same. Useful when searching for a\n           * mapping with a stubbed out mapping.\n           */\n\n          function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n            var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n            if (cmp !== 0 || onlyCompareGenerated) {\n              return cmp;\n            }\n\n            cmp = mappingA.source - mappingB.source;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalLine - mappingB.originalLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            return mappingA.name - mappingB.name;\n          }\n\n          exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n          function strcmp(aStr1, aStr2) {\n            if (aStr1 === aStr2) {\n              return 0;\n            }\n\n            if (aStr1 > aStr2) {\n              return 1;\n            }\n\n            return -1;\n          }\n          /**\n           * Comparator between two mappings with inflated source and name strings where\n           * the generated positions are compared.\n           */\n\n\n          function compareByGeneratedPositionsInflated(mappingA, mappingB) {\n            var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = strcmp(mappingA.source, mappingB.source);\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalLine - mappingB.originalLine;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n            if (cmp !== 0) {\n              return cmp;\n            }\n\n            return strcmp(mappingA.name, mappingB.name);\n          }\n\n          exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n          /***/\n        },\n        /* 5 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var util = __webpack_require__(4);\n\n          var has = Object.prototype.hasOwnProperty;\n          /**\n           * A data structure which is a combination of an array and a set. Adding a new\n           * member is O(1), testing for membership is O(1), and finding the index of an\n           * element is O(1). Removing elements from the set is not supported. Only\n           * strings are supported for membership.\n           */\n\n          function ArraySet() {\n            this._array = [];\n            this._set = Object.create(null);\n          }\n          /**\n           * Static method for creating ArraySet instances from an existing array.\n           */\n\n\n          ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n            var set = new ArraySet();\n\n            for (var i = 0, len = aArray.length; i < len; i++) {\n              set.add(aArray[i], aAllowDuplicates);\n            }\n\n            return set;\n          };\n          /**\n           * Return how many unique items are in this ArraySet. If duplicates have been\n           * added, than those do not count towards the size.\n           *\n           * @returns Number\n           */\n\n\n          ArraySet.prototype.size = function ArraySet_size() {\n            return Object.getOwnPropertyNames(this._set).length;\n          };\n          /**\n           * Add the given string to this set.\n           *\n           * @param String aStr\n           */\n\n\n          ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n            var sStr = util.toSetString(aStr);\n            var isDuplicate = has.call(this._set, sStr);\n            var idx = this._array.length;\n\n            if (!isDuplicate || aAllowDuplicates) {\n              this._array.push(aStr);\n            }\n\n            if (!isDuplicate) {\n              this._set[sStr] = idx;\n            }\n          };\n          /**\n           * Is the given string a member of this set?\n           *\n           * @param String aStr\n           */\n\n\n          ArraySet.prototype.has = function ArraySet_has(aStr) {\n            var sStr = util.toSetString(aStr);\n            return has.call(this._set, sStr);\n          };\n          /**\n           * What is the index of the given string in the array?\n           *\n           * @param String aStr\n           */\n\n\n          ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n            var sStr = util.toSetString(aStr);\n\n            if (has.call(this._set, sStr)) {\n              return this._set[sStr];\n            }\n\n            throw new Error('\"' + aStr + '\" is not in the set.');\n          };\n          /**\n           * What is the element at the given index?\n           *\n           * @param Number aIdx\n           */\n\n\n          ArraySet.prototype.at = function ArraySet_at(aIdx) {\n            if (aIdx >= 0 && aIdx < this._array.length) {\n              return this._array[aIdx];\n            }\n\n            throw new Error('No element indexed by ' + aIdx);\n          };\n          /**\n           * Returns the array representation of this set (which has the proper indices\n           * indicated by indexOf). Note that this is a copy of the internal array used\n           * for storing the members so that no one can mess with internal state.\n           */\n\n\n          ArraySet.prototype.toArray = function ArraySet_toArray() {\n            return this._array.slice();\n          };\n\n          exports.ArraySet = ArraySet;\n          /***/\n        },\n        /* 6 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2014 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var util = __webpack_require__(4);\n          /**\n           * Determine whether mappingB is after mappingA with respect to generated\n           * position.\n           */\n\n\n          function generatedPositionAfter(mappingA, mappingB) {\n            // Optimized for most common case\n            var lineA = mappingA.generatedLine;\n            var lineB = mappingB.generatedLine;\n            var columnA = mappingA.generatedColumn;\n            var columnB = mappingB.generatedColumn;\n            return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n          }\n          /**\n           * A data structure to provide a sorted view of accumulated mappings in a\n           * performance conscious manner. It trades a neglibable overhead in general\n           * case for a large speedup in case of mappings being added in order.\n           */\n\n\n          function MappingList() {\n            this._array = [];\n            this._sorted = true; // Serves as infimum\n\n            this._last = {\n              generatedLine: -1,\n              generatedColumn: 0\n            };\n          }\n          /**\n           * Iterate through internal items. This method takes the same arguments that\n           * `Array.prototype.forEach` takes.\n           *\n           * NOTE: The order of the mappings is NOT guaranteed.\n           */\n\n\n          MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n            this._array.forEach(aCallback, aThisArg);\n          };\n          /**\n           * Add the given source mapping.\n           *\n           * @param Object aMapping\n           */\n\n\n          MappingList.prototype.add = function MappingList_add(aMapping) {\n            if (generatedPositionAfter(this._last, aMapping)) {\n              this._last = aMapping;\n\n              this._array.push(aMapping);\n            } else {\n              this._sorted = false;\n\n              this._array.push(aMapping);\n            }\n          };\n          /**\n           * Returns the flat, sorted array of mappings. The mappings are sorted by\n           * generated position.\n           *\n           * WARNING: This method returns internal data without copying, for\n           * performance. The return value must NOT be mutated, and should be treated as\n           * an immutable borrow. If you want to take ownership, you must make your own\n           * copy.\n           */\n\n\n          MappingList.prototype.toArray = function MappingList_toArray() {\n            if (!this._sorted) {\n              this._array.sort(util.compareByGeneratedPositionsInflated);\n\n              this._sorted = true;\n            }\n\n            return this._array;\n          };\n\n          exports.MappingList = MappingList;\n          /***/\n        },\n        /* 7 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var util = __webpack_require__(4);\n\n          var binarySearch = __webpack_require__(8);\n\n          var ArraySet = __webpack_require__(5).ArraySet;\n\n          var base64VLQ = __webpack_require__(2);\n\n          var quickSort = __webpack_require__(9).quickSort;\n\n          function SourceMapConsumer(aSourceMap) {\n            var sourceMap = aSourceMap;\n\n            if (typeof aSourceMap === 'string') {\n              sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n            }\n\n            return sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap) : new BasicSourceMapConsumer(sourceMap);\n          }\n\n          SourceMapConsumer.fromSourceMap = function (aSourceMap) {\n            return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n          };\n          /**\n           * The version of the source mapping spec that we are consuming.\n           */\n\n\n          SourceMapConsumer.prototype._version = 3; // `__generatedMappings` and `__originalMappings` are arrays that hold the\n          // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n          // are lazily instantiated, accessed via the `_generatedMappings` and\n          // `_originalMappings` getters respectively, and we only parse the mappings\n          // and create these arrays once queried for a source location. We jump through\n          // these hoops because there can be many thousands of mappings, and parsing\n          // them is expensive, so we only want to do it if we must.\n          //\n          // Each object in the arrays is of the form:\n          //\n          //     {\n          //       generatedLine: The line number in the generated code,\n          //       generatedColumn: The column number in the generated code,\n          //       source: The path to the original source file that generated this\n          //               chunk of code,\n          //       originalLine: The line number in the original source that\n          //                     corresponds to this chunk of generated code,\n          //       originalColumn: The column number in the original source that\n          //                       corresponds to this chunk of generated code,\n          //       name: The name of the original symbol which generated this chunk of\n          //             code.\n          //     }\n          //\n          // All properties except for `generatedLine` and `generatedColumn` can be\n          // `null`.\n          //\n          // `_generatedMappings` is ordered by the generated positions.\n          //\n          // `_originalMappings` is ordered by the original positions.\n\n          SourceMapConsumer.prototype.__generatedMappings = null;\n          Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n            get: function () {\n              if (!this.__generatedMappings) {\n                this._parseMappings(this._mappings, this.sourceRoot);\n              }\n\n              return this.__generatedMappings;\n            }\n          });\n          SourceMapConsumer.prototype.__originalMappings = null;\n          Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n            get: function () {\n              if (!this.__originalMappings) {\n                this._parseMappings(this._mappings, this.sourceRoot);\n              }\n\n              return this.__originalMappings;\n            }\n          });\n\n          SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n            var c = aStr.charAt(index);\n            return c === \";\" || c === \",\";\n          };\n          /**\n           * Parse the mappings in a string in to a data structure which we can easily\n           * query (the ordered arrays in the `this.__generatedMappings` and\n           * `this.__originalMappings` properties).\n           */\n\n\n          SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n            throw new Error(\"Subclasses must implement _parseMappings\");\n          };\n\n          SourceMapConsumer.GENERATED_ORDER = 1;\n          SourceMapConsumer.ORIGINAL_ORDER = 2;\n          SourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n          SourceMapConsumer.LEAST_UPPER_BOUND = 2;\n          /**\n           * Iterate over each mapping between an original source/line/column and a\n           * generated line/column in this source map.\n           *\n           * @param Function aCallback\n           *        The function that is called with each mapping.\n           * @param Object aContext\n           *        Optional. If specified, this object will be the value of `this` every\n           *        time that `aCallback` is called.\n           * @param aOrder\n           *        Either `SourceMapConsumer.GENERATED_ORDER` or\n           *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n           *        iterate over the mappings sorted by the generated file's line/column\n           *        order or the original's source/line/column order, respectively. Defaults to\n           *        `SourceMapConsumer.GENERATED_ORDER`.\n           */\n\n          SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n            var context = aContext || null;\n            var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n            var mappings;\n\n            switch (order) {\n              case SourceMapConsumer.GENERATED_ORDER:\n                mappings = this._generatedMappings;\n                break;\n\n              case SourceMapConsumer.ORIGINAL_ORDER:\n                mappings = this._originalMappings;\n                break;\n\n              default:\n                throw new Error(\"Unknown order of iteration.\");\n            }\n\n            var sourceRoot = this.sourceRoot;\n            mappings.map(function (mapping) {\n              var source = mapping.source === null ? null : this._sources.at(mapping.source);\n\n              if (source != null && sourceRoot != null) {\n                source = util.join(sourceRoot, source);\n              }\n\n              return {\n                source: source,\n                generatedLine: mapping.generatedLine,\n                generatedColumn: mapping.generatedColumn,\n                originalLine: mapping.originalLine,\n                originalColumn: mapping.originalColumn,\n                name: mapping.name === null ? null : this._names.at(mapping.name)\n              };\n            }, this).forEach(aCallback, context);\n          };\n          /**\n           * Returns all generated line and column information for the original source,\n           * line, and column provided. If no column is provided, returns all mappings\n           * corresponding to a either the line we are searching for or the next\n           * closest line that has any mappings. Otherwise, returns all mappings\n           * corresponding to the given line and either the column we are searching for\n           * or the next closest column that has any offsets.\n           *\n           * The only argument is an object with the following properties:\n           *\n           *   - source: The filename of the original source.\n           *   - line: The line number in the original source.\n           *   - column: Optional. the column number in the original source.\n           *\n           * and an array of objects is returned, each with the following properties:\n           *\n           *   - line: The line number in the generated source, or null.\n           *   - column: The column number in the generated source, or null.\n           */\n\n\n          SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n            var line = util.getArg(aArgs, 'line'); // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n            // returns the index of the closest mapping less than the needle. By\n            // setting needle.originalColumn to 0, we thus find the last mapping for\n            // the given line, provided such a mapping exists.\n\n            var needle = {\n              source: util.getArg(aArgs, 'source'),\n              originalLine: line,\n              originalColumn: util.getArg(aArgs, 'column', 0)\n            };\n\n            if (this.sourceRoot != null) {\n              needle.source = util.relative(this.sourceRoot, needle.source);\n            }\n\n            if (!this._sources.has(needle.source)) {\n              return [];\n            }\n\n            needle.source = this._sources.indexOf(needle.source);\n            var mappings = [];\n\n            var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, binarySearch.LEAST_UPPER_BOUND);\n\n            if (index >= 0) {\n              var mapping = this._originalMappings[index];\n\n              if (aArgs.column === undefined) {\n                var originalLine = mapping.originalLine; // Iterate until either we run out of mappings, or we run into\n                // a mapping for a different line than the one we found. Since\n                // mappings are sorted, this is guaranteed to find all mappings for\n                // the line we found.\n\n                while (mapping && mapping.originalLine === originalLine) {\n                  mappings.push({\n                    line: util.getArg(mapping, 'generatedLine', null),\n                    column: util.getArg(mapping, 'generatedColumn', null),\n                    lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                  });\n                  mapping = this._originalMappings[++index];\n                }\n              } else {\n                var originalColumn = mapping.originalColumn; // Iterate until either we run out of mappings, or we run into\n                // a mapping for a different line than the one we were searching for.\n                // Since mappings are sorted, this is guaranteed to find all mappings for\n                // the line we are searching for.\n\n                while (mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn) {\n                  mappings.push({\n                    line: util.getArg(mapping, 'generatedLine', null),\n                    column: util.getArg(mapping, 'generatedColumn', null),\n                    lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                  });\n                  mapping = this._originalMappings[++index];\n                }\n              }\n            }\n\n            return mappings;\n          };\n\n          exports.SourceMapConsumer = SourceMapConsumer;\n          /**\n           * A BasicSourceMapConsumer instance represents a parsed source map which we can\n           * query for information about the original file positions by giving it a file\n           * position in the generated source.\n           *\n           * The only parameter is the raw source map (either as a JSON string, or\n           * already parsed to an object). According to the spec, source maps have the\n           * following attributes:\n           *\n           *   - version: Which version of the source map spec this map is following.\n           *   - sources: An array of URLs to the original source files.\n           *   - names: An array of identifiers which can be referrenced by individual mappings.\n           *   - sourceRoot: Optional. The URL root from which all sources are relative.\n           *   - sourcesContent: Optional. An array of contents of the original source files.\n           *   - mappings: A string of base64 VLQs which contain the actual mappings.\n           *   - file: Optional. The generated file this source map is associated with.\n           *\n           * Here is an example source map, taken from the source map spec[0]:\n           *\n           *     {\n           *       version : 3,\n           *       file: \"out.js\",\n           *       sourceRoot : \"\",\n           *       sources: [\"foo.js\", \"bar.js\"],\n           *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n           *       mappings: \"AA,AB;;ABCDE;\"\n           *     }\n           *\n           * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n           */\n\n          function BasicSourceMapConsumer(aSourceMap) {\n            var sourceMap = aSourceMap;\n\n            if (typeof aSourceMap === 'string') {\n              sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n            }\n\n            var version = util.getArg(sourceMap, 'version');\n            var sources = util.getArg(sourceMap, 'sources'); // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n            // requires the array) to play nice here.\n\n            var names = util.getArg(sourceMap, 'names', []);\n            var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n            var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n            var mappings = util.getArg(sourceMap, 'mappings');\n            var file = util.getArg(sourceMap, 'file', null); // Once again, Sass deviates from the spec and supplies the version as a\n            // string rather than a number, so we use loose equality checking here.\n\n            if (version != this._version) {\n              throw new Error('Unsupported version: ' + version);\n            }\n\n            sources = sources.map(String) // Some source maps produce relative source paths like \"./foo.js\" instead of\n            // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n            // See bugzil.la/1090768.\n            .map(util.normalize) // Always ensure that absolute sources are internally stored relative to\n            // the source root, if the source root is absolute. Not doing this would\n            // be particularly problematic when the source root is a prefix of the\n            // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n            .map(function (source) {\n              return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;\n            }); // Pass `true` below to allow duplicate names and sources. While source maps\n            // are intended to be compressed and deduplicated, the TypeScript compiler\n            // sometimes generates source maps with duplicates in them. See Github issue\n            // #72 and bugzil.la/889492.\n\n            this._names = ArraySet.fromArray(names.map(String), true);\n            this._sources = ArraySet.fromArray(sources, true);\n            this.sourceRoot = sourceRoot;\n            this.sourcesContent = sourcesContent;\n            this._mappings = mappings;\n            this.file = file;\n          }\n\n          BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n          BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n          /**\n           * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n           *\n           * @param SourceMapGenerator aSourceMap\n           *        The source map that will be consumed.\n           * @returns BasicSourceMapConsumer\n           */\n\n          BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(aSourceMap) {\n            var smc = Object.create(BasicSourceMapConsumer.prototype);\n            var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n            var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n            smc.sourceRoot = aSourceMap._sourceRoot;\n            smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), smc.sourceRoot);\n            smc.file = aSourceMap._file; // Because we are modifying the entries (by converting string sources and\n            // names to indices into the sources and names ArraySets), we have to make\n            // a copy of the entry or else bad things happen. Shared mutable state\n            // strikes again! See github issue #191.\n\n            var generatedMappings = aSourceMap._mappings.toArray().slice();\n\n            var destGeneratedMappings = smc.__generatedMappings = [];\n            var destOriginalMappings = smc.__originalMappings = [];\n\n            for (var i = 0, length = generatedMappings.length; i < length; i++) {\n              var srcMapping = generatedMappings[i];\n              var destMapping = new Mapping();\n              destMapping.generatedLine = srcMapping.generatedLine;\n              destMapping.generatedColumn = srcMapping.generatedColumn;\n\n              if (srcMapping.source) {\n                destMapping.source = sources.indexOf(srcMapping.source);\n                destMapping.originalLine = srcMapping.originalLine;\n                destMapping.originalColumn = srcMapping.originalColumn;\n\n                if (srcMapping.name) {\n                  destMapping.name = names.indexOf(srcMapping.name);\n                }\n\n                destOriginalMappings.push(destMapping);\n              }\n\n              destGeneratedMappings.push(destMapping);\n            }\n\n            quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n            return smc;\n          };\n          /**\n           * The version of the source mapping spec that we are consuming.\n           */\n\n\n          BasicSourceMapConsumer.prototype._version = 3;\n          /**\n           * The list of original sources.\n           */\n\n          Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n            get: function () {\n              return this._sources.toArray().map(function (s) {\n                return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n              }, this);\n            }\n          });\n          /**\n           * Provide the JIT with a nice shape / hidden class.\n           */\n\n          function Mapping() {\n            this.generatedLine = 0;\n            this.generatedColumn = 0;\n            this.source = null;\n            this.originalLine = null;\n            this.originalColumn = null;\n            this.name = null;\n          }\n          /**\n           * Parse the mappings in a string in to a data structure which we can easily\n           * query (the ordered arrays in the `this.__generatedMappings` and\n           * `this.__originalMappings` properties).\n           */\n\n\n          BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n            var generatedLine = 1;\n            var previousGeneratedColumn = 0;\n            var previousOriginalLine = 0;\n            var previousOriginalColumn = 0;\n            var previousSource = 0;\n            var previousName = 0;\n            var length = aStr.length;\n            var index = 0;\n            var cachedSegments = {};\n            var temp = {};\n            var originalMappings = [];\n            var generatedMappings = [];\n            var mapping, str, segment, end, value;\n\n            while (index < length) {\n              if (aStr.charAt(index) === ';') {\n                generatedLine++;\n                index++;\n                previousGeneratedColumn = 0;\n              } else if (aStr.charAt(index) === ',') {\n                index++;\n              } else {\n                mapping = new Mapping();\n                mapping.generatedLine = generatedLine; // Because each offset is encoded relative to the previous one,\n                // many segments often have the same encoding. We can exploit this\n                // fact by caching the parsed variable length fields of each segment,\n                // allowing us to avoid a second parse if we encounter the same\n                // segment again.\n\n                for (end = index; end < length; end++) {\n                  if (this._charIsMappingSeparator(aStr, end)) {\n                    break;\n                  }\n                }\n\n                str = aStr.slice(index, end);\n                segment = cachedSegments[str];\n\n                if (segment) {\n                  index += str.length;\n                } else {\n                  segment = [];\n\n                  while (index < end) {\n                    base64VLQ.decode(aStr, index, temp);\n                    value = temp.value;\n                    index = temp.rest;\n                    segment.push(value);\n                  }\n\n                  if (segment.length === 2) {\n                    throw new Error('Found a source, but no line and column');\n                  }\n\n                  if (segment.length === 3) {\n                    throw new Error('Found a source and line, but no column');\n                  }\n\n                  cachedSegments[str] = segment;\n                } // Generated column.\n\n\n                mapping.generatedColumn = previousGeneratedColumn + segment[0];\n                previousGeneratedColumn = mapping.generatedColumn;\n\n                if (segment.length > 1) {\n                  // Original source.\n                  mapping.source = previousSource + segment[1];\n                  previousSource += segment[1]; // Original line.\n\n                  mapping.originalLine = previousOriginalLine + segment[2];\n                  previousOriginalLine = mapping.originalLine; // Lines are stored 0-based\n\n                  mapping.originalLine += 1; // Original column.\n\n                  mapping.originalColumn = previousOriginalColumn + segment[3];\n                  previousOriginalColumn = mapping.originalColumn;\n\n                  if (segment.length > 4) {\n                    // Original name.\n                    mapping.name = previousName + segment[4];\n                    previousName += segment[4];\n                  }\n                }\n\n                generatedMappings.push(mapping);\n\n                if (typeof mapping.originalLine === 'number') {\n                  originalMappings.push(mapping);\n                }\n              }\n            }\n\n            quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n            this.__generatedMappings = generatedMappings;\n            quickSort(originalMappings, util.compareByOriginalPositions);\n            this.__originalMappings = originalMappings;\n          };\n          /**\n           * Find the mapping that best matches the hypothetical \"needle\" mapping that\n           * we are searching for in the given \"haystack\" of mappings.\n           */\n\n\n          BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {\n            // To return the position we are searching for, we must first find the\n            // mapping for the given position and then return the opposite position it\n            // points to. Because the mappings are sorted, we can use binary search to\n            // find the best mapping.\n            if (aNeedle[aLineName] <= 0) {\n              throw new TypeError('Line must be greater than or equal to 1, got ' + aNeedle[aLineName]);\n            }\n\n            if (aNeedle[aColumnName] < 0) {\n              throw new TypeError('Column must be greater than or equal to 0, got ' + aNeedle[aColumnName]);\n            }\n\n            return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n          };\n          /**\n           * Compute the last column for each generated mapping. The last column is\n           * inclusive.\n           */\n\n\n          BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {\n            for (var index = 0; index < this._generatedMappings.length; ++index) {\n              var mapping = this._generatedMappings[index]; // Mappings do not contain a field for the last generated columnt. We\n              // can come up with an optimistic estimate, however, by assuming that\n              // mappings are contiguous (i.e. given two consecutive mappings, the\n              // first mapping ends where the second one starts).\n\n              if (index + 1 < this._generatedMappings.length) {\n                var nextMapping = this._generatedMappings[index + 1];\n\n                if (mapping.generatedLine === nextMapping.generatedLine) {\n                  mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n                  continue;\n                }\n              } // The last mapping for each line spans the entire line.\n\n\n              mapping.lastGeneratedColumn = Infinity;\n            }\n          };\n          /**\n           * Returns the original source, line, and column information for the generated\n           * source's line and column positions provided. The only argument is an object\n           * with the following properties:\n           *\n           *   - line: The line number in the generated source.\n           *   - column: The column number in the generated source.\n           *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n           *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n           *     closest element that is smaller than or greater than the one we are\n           *     searching for, respectively, if the exact element cannot be found.\n           *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n           *\n           * and an object is returned with the following properties:\n           *\n           *   - source: The original source file, or null.\n           *   - line: The line number in the original source, or null.\n           *   - column: The column number in the original source, or null.\n           *   - name: The original identifier, or null.\n           */\n\n\n          BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(aArgs) {\n            var needle = {\n              generatedLine: util.getArg(aArgs, 'line'),\n              generatedColumn: util.getArg(aArgs, 'column')\n            };\n\n            var index = this._findMapping(needle, this._generatedMappings, \"generatedLine\", \"generatedColumn\", util.compareByGeneratedPositionsDeflated, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n\n            if (index >= 0) {\n              var mapping = this._generatedMappings[index];\n\n              if (mapping.generatedLine === needle.generatedLine) {\n                var source = util.getArg(mapping, 'source', null);\n\n                if (source !== null) {\n                  source = this._sources.at(source);\n\n                  if (this.sourceRoot != null) {\n                    source = util.join(this.sourceRoot, source);\n                  }\n                }\n\n                var name = util.getArg(mapping, 'name', null);\n\n                if (name !== null) {\n                  name = this._names.at(name);\n                }\n\n                return {\n                  source: source,\n                  line: util.getArg(mapping, 'originalLine', null),\n                  column: util.getArg(mapping, 'originalColumn', null),\n                  name: name\n                };\n              }\n            }\n\n            return {\n              source: null,\n              line: null,\n              column: null,\n              name: null\n            };\n          };\n          /**\n           * Return true if we have the source content for every source in the source\n           * map, false otherwise.\n           */\n\n\n          BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {\n            if (!this.sourcesContent) {\n              return false;\n            }\n\n            return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (sc) {\n              return sc == null;\n            });\n          };\n          /**\n           * Returns the original source content. The only argument is the url of the\n           * original source file. Returns null if no original source content is\n           * available.\n           */\n\n\n          BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n            if (!this.sourcesContent) {\n              return null;\n            }\n\n            if (this.sourceRoot != null) {\n              aSource = util.relative(this.sourceRoot, aSource);\n            }\n\n            if (this._sources.has(aSource)) {\n              return this.sourcesContent[this._sources.indexOf(aSource)];\n            }\n\n            var url;\n\n            if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {\n              // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n              // many users. We can help them out when they expect file:// URIs to\n              // behave like it would if they were running a local HTTP server. See\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n              var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n\n              if (url.scheme == \"file\" && this._sources.has(fileUriAbsPath)) {\n                return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n              }\n\n              if ((!url.path || url.path == \"/\") && this._sources.has(\"/\" + aSource)) {\n                return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n              }\n            } // This function is used recursively from\n            // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n            // don't want to throw if we can't find the source - we just want to\n            // return null, so we provide a flag to exit gracefully.\n\n\n            if (nullOnMissing) {\n              return null;\n            } else {\n              throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n            }\n          };\n          /**\n           * Returns the generated line and column information for the original source,\n           * line, and column positions provided. The only argument is an object with\n           * the following properties:\n           *\n           *   - source: The filename of the original source.\n           *   - line: The line number in the original source.\n           *   - column: The column number in the original source.\n           *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n           *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n           *     closest element that is smaller than or greater than the one we are\n           *     searching for, respectively, if the exact element cannot be found.\n           *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n           *\n           * and an object is returned with the following properties:\n           *\n           *   - line: The line number in the generated source, or null.\n           *   - column: The column number in the generated source, or null.\n           */\n\n\n          BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(aArgs) {\n            var source = util.getArg(aArgs, 'source');\n\n            if (this.sourceRoot != null) {\n              source = util.relative(this.sourceRoot, source);\n            }\n\n            if (!this._sources.has(source)) {\n              return {\n                line: null,\n                column: null,\n                lastColumn: null\n              };\n            }\n\n            source = this._sources.indexOf(source);\n            var needle = {\n              source: source,\n              originalLine: util.getArg(aArgs, 'line'),\n              originalColumn: util.getArg(aArgs, 'column')\n            };\n\n            var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n\n            if (index >= 0) {\n              var mapping = this._originalMappings[index];\n\n              if (mapping.source === needle.source) {\n                return {\n                  line: util.getArg(mapping, 'generatedLine', null),\n                  column: util.getArg(mapping, 'generatedColumn', null),\n                  lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                };\n              }\n            }\n\n            return {\n              line: null,\n              column: null,\n              lastColumn: null\n            };\n          };\n\n          exports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n          /**\n           * An IndexedSourceMapConsumer instance represents a parsed source map which\n           * we can query for information. It differs from BasicSourceMapConsumer in\n           * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n           * input.\n           *\n           * The only parameter is a raw source map (either as a JSON string, or already\n           * parsed to an object). According to the spec for indexed source maps, they\n           * have the following attributes:\n           *\n           *   - version: Which version of the source map spec this map is following.\n           *   - file: Optional. The generated file this source map is associated with.\n           *   - sections: A list of section definitions.\n           *\n           * Each value under the \"sections\" field has two fields:\n           *   - offset: The offset into the original specified at which this section\n           *       begins to apply, defined as an object with a \"line\" and \"column\"\n           *       field.\n           *   - map: A source map definition. This source map could also be indexed,\n           *       but doesn't have to be.\n           *\n           * Instead of the \"map\" field, it's also possible to have a \"url\" field\n           * specifying a URL to retrieve a source map from, but that's currently\n           * unsupported.\n           *\n           * Here's an example source map, taken from the source map spec[0], but\n           * modified to omit a section which uses the \"url\" field.\n           *\n           *  {\n           *    version : 3,\n           *    file: \"app.js\",\n           *    sections: [{\n           *      offset: {line:100, column:10},\n           *      map: {\n           *        version : 3,\n           *        file: \"section.js\",\n           *        sources: [\"foo.js\", \"bar.js\"],\n           *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n           *        mappings: \"AAAA,E;;ABCDE;\"\n           *      }\n           *    }],\n           *  }\n           *\n           * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n           */\n\n          function IndexedSourceMapConsumer(aSourceMap) {\n            var sourceMap = aSourceMap;\n\n            if (typeof aSourceMap === 'string') {\n              sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n            }\n\n            var version = util.getArg(sourceMap, 'version');\n            var sections = util.getArg(sourceMap, 'sections');\n\n            if (version != this._version) {\n              throw new Error('Unsupported version: ' + version);\n            }\n\n            this._sources = new ArraySet();\n            this._names = new ArraySet();\n            var lastOffset = {\n              line: -1,\n              column: 0\n            };\n            this._sections = sections.map(function (s) {\n              if (s.url) {\n                // The url field will require support for asynchronicity.\n                // See https://github.com/mozilla/source-map/issues/16\n                throw new Error('Support for url field in sections not implemented.');\n              }\n\n              var offset = util.getArg(s, 'offset');\n              var offsetLine = util.getArg(offset, 'line');\n              var offsetColumn = util.getArg(offset, 'column');\n\n              if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {\n                throw new Error('Section offsets must be ordered and non-overlapping.');\n              }\n\n              lastOffset = offset;\n              return {\n                generatedOffset: {\n                  // The offset fields are 0-based, but we use 1-based indices when\n                  // encoding/decoding from VLQ.\n                  generatedLine: offsetLine + 1,\n                  generatedColumn: offsetColumn + 1\n                },\n                consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n              };\n            });\n          }\n\n          IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n          IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n          /**\n           * The version of the source mapping spec that we are consuming.\n           */\n\n          IndexedSourceMapConsumer.prototype._version = 3;\n          /**\n           * The list of original sources.\n           */\n\n          Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n            get: function () {\n              var sources = [];\n\n              for (var i = 0; i < this._sections.length; i++) {\n                for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n                  sources.push(this._sections[i].consumer.sources[j]);\n                }\n              }\n\n              return sources;\n            }\n          });\n          /**\n           * Returns the original source, line, and column information for the generated\n           * source's line and column positions provided. The only argument is an object\n           * with the following properties:\n           *\n           *   - line: The line number in the generated source.\n           *   - column: The column number in the generated source.\n           *\n           * and an object is returned with the following properties:\n           *\n           *   - source: The original source file, or null.\n           *   - line: The line number in the original source, or null.\n           *   - column: The column number in the original source, or null.\n           *   - name: The original identifier, or null.\n           */\n\n          IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n            var needle = {\n              generatedLine: util.getArg(aArgs, 'line'),\n              generatedColumn: util.getArg(aArgs, 'column')\n            }; // Find the section containing the generated position we're trying to map\n            // to an original position.\n\n            var sectionIndex = binarySearch.search(needle, this._sections, function (needle, section) {\n              var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n\n              if (cmp) {\n                return cmp;\n              }\n\n              return needle.generatedColumn - section.generatedOffset.generatedColumn;\n            });\n            var section = this._sections[sectionIndex];\n\n            if (!section) {\n              return {\n                source: null,\n                line: null,\n                column: null,\n                name: null\n              };\n            }\n\n            return section.consumer.originalPositionFor({\n              line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),\n              column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n              bias: aArgs.bias\n            });\n          };\n          /**\n           * Return true if we have the source content for every source in the source\n           * map, false otherwise.\n           */\n\n\n          IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n            return this._sections.every(function (s) {\n              return s.consumer.hasContentsOfAllSources();\n            });\n          };\n          /**\n           * Returns the original source content. The only argument is the url of the\n           * original source file. Returns null if no original source content is\n           * available.\n           */\n\n\n          IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n            for (var i = 0; i < this._sections.length; i++) {\n              var section = this._sections[i];\n              var content = section.consumer.sourceContentFor(aSource, true);\n\n              if (content) {\n                return content;\n              }\n            }\n\n            if (nullOnMissing) {\n              return null;\n            } else {\n              throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n            }\n          };\n          /**\n           * Returns the generated line and column information for the original source,\n           * line, and column positions provided. The only argument is an object with\n           * the following properties:\n           *\n           *   - source: The filename of the original source.\n           *   - line: The line number in the original source.\n           *   - column: The column number in the original source.\n           *\n           * and an object is returned with the following properties:\n           *\n           *   - line: The line number in the generated source, or null.\n           *   - column: The column number in the generated source, or null.\n           */\n\n\n          IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n            for (var i = 0; i < this._sections.length; i++) {\n              var section = this._sections[i]; // Only consider this section if the requested source is in the list of\n              // sources of the consumer.\n\n              if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n                continue;\n              }\n\n              var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n\n              if (generatedPosition) {\n                var ret = {\n                  line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),\n                  column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)\n                };\n                return ret;\n              }\n            }\n\n            return {\n              line: null,\n              column: null\n            };\n          };\n          /**\n           * Parse the mappings in a string in to a data structure which we can easily\n           * query (the ordered arrays in the `this.__generatedMappings` and\n           * `this.__originalMappings` properties).\n           */\n\n\n          IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n            this.__generatedMappings = [];\n            this.__originalMappings = [];\n\n            for (var i = 0; i < this._sections.length; i++) {\n              var section = this._sections[i];\n              var sectionMappings = section.consumer._generatedMappings;\n\n              for (var j = 0; j < sectionMappings.length; j++) {\n                var mapping = sectionMappings[j];\n\n                var source = section.consumer._sources.at(mapping.source);\n\n                if (section.consumer.sourceRoot !== null) {\n                  source = util.join(section.consumer.sourceRoot, source);\n                }\n\n                this._sources.add(source);\n\n                source = this._sources.indexOf(source);\n\n                var name = section.consumer._names.at(mapping.name);\n\n                this._names.add(name);\n\n                name = this._names.indexOf(name); // The mappings coming from the consumer for the section have\n                // generated positions relative to the start of the section, so we\n                // need to offset them to be relative to the start of the concatenated\n                // generated file.\n\n                var adjustedMapping = {\n                  source: source,\n                  generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),\n                  generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n                  originalLine: mapping.originalLine,\n                  originalColumn: mapping.originalColumn,\n                  name: name\n                };\n\n                this.__generatedMappings.push(adjustedMapping);\n\n                if (typeof adjustedMapping.originalLine === 'number') {\n                  this.__originalMappings.push(adjustedMapping);\n                }\n              }\n            }\n\n            quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n            quickSort(this.__originalMappings, util.compareByOriginalPositions);\n          };\n\n          exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n          /***/\n        },\n        /* 8 */\n\n        /***/\n        function (module, exports) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          exports.GREATEST_LOWER_BOUND = 1;\n          exports.LEAST_UPPER_BOUND = 2;\n          /**\n           * Recursive implementation of binary search.\n           *\n           * @param aLow Indices here and lower do not contain the needle.\n           * @param aHigh Indices here and higher do not contain the needle.\n           * @param aNeedle The element being searched for.\n           * @param aHaystack The non-empty array being searched.\n           * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n           * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n           *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n           *     closest element that is smaller than or greater than the one we are\n           *     searching for, respectively, if the exact element cannot be found.\n           */\n\n          function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n            // This function terminates when one of the following is true:\n            //\n            //   1. We find the exact element we are looking for.\n            //\n            //   2. We did not find the exact element, but we can return the index of\n            //      the next-closest element.\n            //\n            //   3. We did not find the exact element, and there is no next-closest\n            //      element than the one we are searching for, so we return -1.\n            var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n            var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\n            if (cmp === 0) {\n              // Found the element we are looking for.\n              return mid;\n            } else if (cmp > 0) {\n              // Our needle is greater than aHaystack[mid].\n              if (aHigh - mid > 1) {\n                // The element is in the upper half.\n                return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n              } // The exact needle element was not found in this haystack. Determine if\n              // we are in termination case (3) or (2) and return the appropriate thing.\n\n\n              if (aBias == exports.LEAST_UPPER_BOUND) {\n                return aHigh < aHaystack.length ? aHigh : -1;\n              } else {\n                return mid;\n              }\n            } else {\n              // Our needle is less than aHaystack[mid].\n              if (mid - aLow > 1) {\n                // The element is in the lower half.\n                return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n              } // we are in termination case (3) or (2) and return the appropriate thing.\n\n\n              if (aBias == exports.LEAST_UPPER_BOUND) {\n                return mid;\n              } else {\n                return aLow < 0 ? -1 : aLow;\n              }\n            }\n          }\n          /**\n           * This is an implementation of binary search which will always try and return\n           * the index of the closest element if there is no exact hit. This is because\n           * mappings between original and generated line/col pairs are single points,\n           * and there is an implicit region between each of them, so a miss just means\n           * that you aren't on the very start of a region.\n           *\n           * @param aNeedle The element you are looking for.\n           * @param aHaystack The array that is being searched.\n           * @param aCompare A function which takes the needle and an element in the\n           *     array and returns -1, 0, or 1 depending on whether the needle is less\n           *     than, equal to, or greater than the element, respectively.\n           * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n           *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n           *     closest element that is smaller than or greater than the one we are\n           *     searching for, respectively, if the exact element cannot be found.\n           *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n           */\n\n\n          exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n            if (aHaystack.length === 0) {\n              return -1;\n            }\n\n            var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\n            if (index < 0) {\n              return -1;\n            } // We have found either the exact element, or the next-closest element than\n            // the one we are searching for. However, there may be more than one such\n            // element. Make sure we always return the smallest of these.\n\n\n            while (index - 1 >= 0) {\n              if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n                break;\n              }\n\n              --index;\n            }\n\n            return index;\n          };\n          /***/\n\n        },\n        /* 9 */\n\n        /***/\n        function (module, exports) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          // It turns out that some (most?) JavaScript engines don't self-host\n          // `Array.prototype.sort`. This makes sense because C++ will likely remain\n          // faster than JS when doing raw CPU-intensive sorting. However, when using a\n          // custom comparator function, calling back and forth between the VM's C++ and\n          // JIT'd JS is rather slow *and* loses JIT type information, resulting in\n          // worse generated code for the comparator function than would be optimal. In\n          // fact, when sorting with a comparator, these costs outweigh the benefits of\n          // sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n          // a ~3500ms mean speed-up in `bench/bench.html`.\n\n          /**\n           * Swap the elements indexed by `x` and `y` in the array `ary`.\n           *\n           * @param {Array} ary\n           *        The array.\n           * @param {Number} x\n           *        The index of the first item.\n           * @param {Number} y\n           *        The index of the second item.\n           */\n          function swap(ary, x, y) {\n            var temp = ary[x];\n            ary[x] = ary[y];\n            ary[y] = temp;\n          }\n          /**\n           * Returns a random integer within the range `low .. high` inclusive.\n           *\n           * @param {Number} low\n           *        The lower bound on the range.\n           * @param {Number} high\n           *        The upper bound on the range.\n           */\n\n\n          function randomIntInRange(low, high) {\n            return Math.round(low + Math.random() * (high - low));\n          }\n          /**\n           * The Quick Sort algorithm.\n           *\n           * @param {Array} ary\n           *        An array to sort.\n           * @param {function} comparator\n           *        Function to use to compare two items.\n           * @param {Number} p\n           *        Start index of the array\n           * @param {Number} r\n           *        End index of the array\n           */\n\n\n          function doQuickSort(ary, comparator, p, r) {\n            // If our lower bound is less than our upper bound, we (1) partition the\n            // array into two pieces and (2) recurse on each half. If it is not, this is\n            // the empty array and our base case.\n            if (p < r) {\n              // (1) Partitioning.\n              //\n              // The partitioning chooses a pivot between `p` and `r` and moves all\n              // elements that are less than or equal to the pivot to the before it, and\n              // all the elements that are greater than it after it. The effect is that\n              // once partition is done, the pivot is in the exact place it will be when\n              // the array is put in sorted order, and it will not need to be moved\n              // again. This runs in O(n) time.\n              // Always choose a random pivot so that an input array which is reverse\n              // sorted does not cause O(n^2) running time.\n              var pivotIndex = randomIntInRange(p, r);\n              var i = p - 1;\n              swap(ary, pivotIndex, r);\n              var pivot = ary[r]; // Immediately after `j` is incremented in this loop, the following hold\n              // true:\n              //\n              //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n              //\n              //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n\n              for (var j = p; j < r; j++) {\n                if (comparator(ary[j], pivot) <= 0) {\n                  i += 1;\n                  swap(ary, i, j);\n                }\n              }\n\n              swap(ary, i + 1, j);\n              var q = i + 1; // (2) Recurse on each half.\n\n              doQuickSort(ary, comparator, p, q - 1);\n              doQuickSort(ary, comparator, q + 1, r);\n            }\n          }\n          /**\n           * Sort the given array in-place with the given comparator function.\n           *\n           * @param {Array} ary\n           *        An array to sort.\n           * @param {function} comparator\n           *        Function to use to compare two items.\n           */\n\n\n          exports.quickSort = function (ary, comparator) {\n            doQuickSort(ary, comparator, 0, ary.length - 1);\n          };\n          /***/\n\n        },\n        /* 10 */\n\n        /***/\n        function (module, exports, __webpack_require__) {\n          /* -*- Mode: js; js-indent-level: 2; -*- */\n\n          /*\n           * Copyright 2011 Mozilla Foundation and contributors\n           * Licensed under the New BSD license. See LICENSE or:\n           * http://opensource.org/licenses/BSD-3-Clause\n           */\n          var SourceMapGenerator = __webpack_require__(1).SourceMapGenerator;\n\n          var util = __webpack_require__(4); // Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n          // operating systems these days (capturing the result).\n\n\n          var REGEX_NEWLINE = /(\\r?\\n)/; // Newline character code for charCodeAt() comparisons\n\n          var NEWLINE_CODE = 10; // Private symbol for identifying `SourceNode`s when multiple versions of\n          // the source-map library are loaded. This MUST NOT CHANGE across\n          // versions!\n\n          var isSourceNode = \"$$$isSourceNode$$$\";\n          /**\n           * SourceNodes provide a way to abstract over interpolating/concatenating\n           * snippets of generated JavaScript source code while maintaining the line and\n           * column information associated with the original source code.\n           *\n           * @param aLine The original line number.\n           * @param aColumn The original column number.\n           * @param aSource The original source's filename.\n           * @param aChunks Optional. An array of strings which are snippets of\n           *        generated JS, or other SourceNodes.\n           * @param aName The original identifier.\n           */\n\n          function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n            this.children = [];\n            this.sourceContents = {};\n            this.line = aLine == null ? null : aLine;\n            this.column = aColumn == null ? null : aColumn;\n            this.source = aSource == null ? null : aSource;\n            this.name = aName == null ? null : aName;\n            this[isSourceNode] = true;\n            if (aChunks != null) this.add(aChunks);\n          }\n          /**\n           * Creates a SourceNode from generated code and a SourceMapConsumer.\n           *\n           * @param aGeneratedCode The generated code\n           * @param aSourceMapConsumer The SourceMap for the generated code\n           * @param aRelativePath Optional. The path that relative sources in the\n           *        SourceMapConsumer should be relative to.\n           */\n\n\n          SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n            // The SourceNode we want to fill with the generated code\n            // and the SourceMap\n            var node = new SourceNode(); // All even indices of this array are one line of the generated code,\n            // while all odd indices are the newlines between two adjacent lines\n            // (since `REGEX_NEWLINE` captures its match).\n            // Processed fragments are removed from this array, by calling `shiftNextLine`.\n\n            var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n\n            var shiftNextLine = function () {\n              var lineContents = remainingLines.shift(); // The last line of a file might not have a newline.\n\n              var newLine = remainingLines.shift() || \"\";\n              return lineContents + newLine;\n            }; // We need to remember the position of \"remainingLines\"\n\n\n            var lastGeneratedLine = 1,\n                lastGeneratedColumn = 0; // The generate SourceNodes we need a code range.\n            // To extract it current and last mapping is used.\n            // Here we store the last mapping.\n\n            var lastMapping = null;\n            aSourceMapConsumer.eachMapping(function (mapping) {\n              if (lastMapping !== null) {\n                // We add the code from \"lastMapping\" to \"mapping\":\n                // First check if there is a new line in between.\n                if (lastGeneratedLine < mapping.generatedLine) {\n                  // Associate first line with \"lastMapping\"\n                  addMappingWithCode(lastMapping, shiftNextLine());\n                  lastGeneratedLine++;\n                  lastGeneratedColumn = 0; // The remaining code is added without mapping\n                } else {\n                  // There is no new line in between.\n                  // Associate the code between \"lastGeneratedColumn\" and\n                  // \"mapping.generatedColumn\" with \"lastMapping\"\n                  var nextLine = remainingLines[0];\n                  var code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);\n                  remainingLines[0] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn);\n                  lastGeneratedColumn = mapping.generatedColumn;\n                  addMappingWithCode(lastMapping, code); // No more remaining code, continue\n\n                  lastMapping = mapping;\n                  return;\n                }\n              } // We add the generated code until the first mapping\n              // to the SourceNode without any mapping.\n              // Each line is added as separate string.\n\n\n              while (lastGeneratedLine < mapping.generatedLine) {\n                node.add(shiftNextLine());\n                lastGeneratedLine++;\n              }\n\n              if (lastGeneratedColumn < mapping.generatedColumn) {\n                var nextLine = remainingLines[0];\n                node.add(nextLine.substr(0, mapping.generatedColumn));\n                remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n                lastGeneratedColumn = mapping.generatedColumn;\n              }\n\n              lastMapping = mapping;\n            }, this); // We have processed all mappings.\n\n            if (remainingLines.length > 0) {\n              if (lastMapping) {\n                // Associate the remaining code in the current line with \"lastMapping\"\n                addMappingWithCode(lastMapping, shiftNextLine());\n              } // and add the remaining lines without any mapping\n\n\n              node.add(remainingLines.join(\"\"));\n            } // Copy sourcesContent into SourceNode\n\n\n            aSourceMapConsumer.sources.forEach(function (sourceFile) {\n              var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n              if (content != null) {\n                if (aRelativePath != null) {\n                  sourceFile = util.join(aRelativePath, sourceFile);\n                }\n\n                node.setSourceContent(sourceFile, content);\n              }\n            });\n            return node;\n\n            function addMappingWithCode(mapping, code) {\n              if (mapping === null || mapping.source === undefined) {\n                node.add(code);\n              } else {\n                var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;\n                node.add(new SourceNode(mapping.originalLine, mapping.originalColumn, source, code, mapping.name));\n              }\n            }\n          };\n          /**\n           * Add a chunk of generated JS to this source node.\n           *\n           * @param aChunk A string snippet of generated JS code, another instance of\n           *        SourceNode, or an array where each member is one of those things.\n           */\n\n\n          SourceNode.prototype.add = function SourceNode_add(aChunk) {\n            if (Array.isArray(aChunk)) {\n              aChunk.forEach(function (chunk) {\n                this.add(chunk);\n              }, this);\n            } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n              if (aChunk) {\n                this.children.push(aChunk);\n              }\n            } else {\n              throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\n            }\n\n            return this;\n          };\n          /**\n           * Add a chunk of generated JS to the beginning of this source node.\n           *\n           * @param aChunk A string snippet of generated JS code, another instance of\n           *        SourceNode, or an array where each member is one of those things.\n           */\n\n\n          SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n            if (Array.isArray(aChunk)) {\n              for (var i = aChunk.length - 1; i >= 0; i--) {\n                this.prepend(aChunk[i]);\n              }\n            } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n              this.children.unshift(aChunk);\n            } else {\n              throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\n            }\n\n            return this;\n          };\n          /**\n           * Walk over the tree of JS snippets in this node and its children. The\n           * walking function is called once for each snippet of JS and is passed that\n           * snippet and the its original associated source's line/column location.\n           *\n           * @param aFn The traversal function.\n           */\n\n\n          SourceNode.prototype.walk = function SourceNode_walk(aFn) {\n            var chunk;\n\n            for (var i = 0, len = this.children.length; i < len; i++) {\n              chunk = this.children[i];\n\n              if (chunk[isSourceNode]) {\n                chunk.walk(aFn);\n              } else {\n                if (chunk !== '') {\n                  aFn(chunk, {\n                    source: this.source,\n                    line: this.line,\n                    column: this.column,\n                    name: this.name\n                  });\n                }\n              }\n            }\n          };\n          /**\n           * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n           * each of `this.children`.\n           *\n           * @param aSep The separator.\n           */\n\n\n          SourceNode.prototype.join = function SourceNode_join(aSep) {\n            var newChildren;\n            var i;\n            var len = this.children.length;\n\n            if (len > 0) {\n              newChildren = [];\n\n              for (i = 0; i < len - 1; i++) {\n                newChildren.push(this.children[i]);\n                newChildren.push(aSep);\n              }\n\n              newChildren.push(this.children[i]);\n              this.children = newChildren;\n            }\n\n            return this;\n          };\n          /**\n           * Call String.prototype.replace on the very right-most source snippet. Useful\n           * for trimming whitespace from the end of a source node, etc.\n           *\n           * @param aPattern The pattern to replace.\n           * @param aReplacement The thing to replace the pattern with.\n           */\n\n\n          SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n            var lastChild = this.children[this.children.length - 1];\n\n            if (lastChild[isSourceNode]) {\n              lastChild.replaceRight(aPattern, aReplacement);\n            } else if (typeof lastChild === 'string') {\n              this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n            } else {\n              this.children.push(''.replace(aPattern, aReplacement));\n            }\n\n            return this;\n          };\n          /**\n           * Set the source content for a source file. This will be added to the SourceMapGenerator\n           * in the sourcesContent field.\n           *\n           * @param aSourceFile The filename of the source file\n           * @param aSourceContent The content of the source file\n           */\n\n\n          SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n            this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n          };\n          /**\n           * Walk over the tree of SourceNodes. The walking function is called for each\n           * source file content and is passed the filename and source content.\n           *\n           * @param aFn The traversal function.\n           */\n\n\n          SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(aFn) {\n            for (var i = 0, len = this.children.length; i < len; i++) {\n              if (this.children[i][isSourceNode]) {\n                this.children[i].walkSourceContents(aFn);\n              }\n            }\n\n            var sources = Object.keys(this.sourceContents);\n\n            for (var i = 0, len = sources.length; i < len; i++) {\n              aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n            }\n          };\n          /**\n           * Return the string representation of this source node. Walks over the tree\n           * and concatenates all the various snippets together to one string.\n           */\n\n\n          SourceNode.prototype.toString = function SourceNode_toString() {\n            var str = \"\";\n            this.walk(function (chunk) {\n              str += chunk;\n            });\n            return str;\n          };\n          /**\n           * Returns the string representation of this source node along with a source\n           * map.\n           */\n\n\n          SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n            var generated = {\n              code: \"\",\n              line: 1,\n              column: 0\n            };\n            var map = new SourceMapGenerator(aArgs);\n            var sourceMappingActive = false;\n            var lastOriginalSource = null;\n            var lastOriginalLine = null;\n            var lastOriginalColumn = null;\n            var lastOriginalName = null;\n            this.walk(function (chunk, original) {\n              generated.code += chunk;\n\n              if (original.source !== null && original.line !== null && original.column !== null) {\n                if (lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) {\n                  map.addMapping({\n                    source: original.source,\n                    original: {\n                      line: original.line,\n                      column: original.column\n                    },\n                    generated: {\n                      line: generated.line,\n                      column: generated.column\n                    },\n                    name: original.name\n                  });\n                }\n\n                lastOriginalSource = original.source;\n                lastOriginalLine = original.line;\n                lastOriginalColumn = original.column;\n                lastOriginalName = original.name;\n                sourceMappingActive = true;\n              } else if (sourceMappingActive) {\n                map.addMapping({\n                  generated: {\n                    line: generated.line,\n                    column: generated.column\n                  }\n                });\n                lastOriginalSource = null;\n                sourceMappingActive = false;\n              }\n\n              for (var idx = 0, length = chunk.length; idx < length; idx++) {\n                if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n                  generated.line++;\n                  generated.column = 0; // Mappings end at eol\n\n                  if (idx + 1 === length) {\n                    lastOriginalSource = null;\n                    sourceMappingActive = false;\n                  } else if (sourceMappingActive) {\n                    map.addMapping({\n                      source: original.source,\n                      original: {\n                        line: original.line,\n                        column: original.column\n                      },\n                      generated: {\n                        line: generated.line,\n                        column: generated.column\n                      },\n                      name: original.name\n                    });\n                  }\n                } else {\n                  generated.column++;\n                }\n              }\n            });\n            this.walkSourceContents(function (sourceFile, sourceContent) {\n              map.setSourceContent(sourceFile, sourceContent);\n            });\n            return {\n              code: generated.code,\n              map: map\n            };\n          };\n\n          exports.SourceNode = SourceNode;\n          /***/\n        }\n        /******/\n        ])\n      );\n    });\n\n    ; //Distributed under the BSD license:\n    //Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    define('uglifyjs', ['exports', 'source-map', 'logger', 'env!env/file'], function (exports, MOZ_SourceMap, logger, rjsFile) {\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n      \"use strict\";\n\n      function array_to_hash(a) {\n        var ret = Object.create(null);\n\n        for (var i = 0; i < a.length; ++i) ret[a[i]] = true;\n\n        return ret;\n      }\n\n      ;\n\n      function slice(a, start) {\n        return Array.prototype.slice.call(a, start || 0);\n      }\n\n      ;\n\n      function characters(str) {\n        return str.split(\"\");\n      }\n\n      ;\n\n      function member(name, array) {\n        return array.indexOf(name) >= 0;\n      }\n\n      ;\n\n      function find_if(func, array) {\n        for (var i = 0, n = array.length; i < n; ++i) {\n          if (func(array[i])) return array[i];\n        }\n      }\n\n      ;\n\n      function repeat_string(str, i) {\n        if (i <= 0) return \"\";\n        if (i == 1) return str;\n        var d = repeat_string(str, i >> 1);\n        d += d;\n        if (i & 1) d += str;\n        return d;\n      }\n\n      ;\n\n      function configure_error_stack(fn) {\n        Object.defineProperty(fn.prototype, \"stack\", {\n          get: function () {\n            var err = new Error(this.message);\n            err.name = this.name;\n\n            try {\n              throw err;\n            } catch (e) {\n              return e.stack;\n            }\n          }\n        });\n      }\n\n      function DefaultsError(msg, defs) {\n        this.message = msg;\n        this.defs = defs;\n      }\n\n      ;\n      DefaultsError.prototype = Object.create(Error.prototype);\n      DefaultsError.prototype.constructor = DefaultsError;\n      DefaultsError.prototype.name = \"DefaultsError\";\n      configure_error_stack(DefaultsError);\n\n      DefaultsError.croak = function (msg, defs) {\n        throw new DefaultsError(msg, defs);\n      };\n\n      function defaults(args, defs, croak) {\n        if (args === true) args = {};\n        var ret = args || {};\n        if (croak) for (var i in ret) if (HOP(ret, i) && !HOP(defs, i)) DefaultsError.croak(\"`\" + i + \"` is not a supported option\", defs);\n\n        for (var i in defs) if (HOP(defs, i)) {\n          ret[i] = args && HOP(args, i) ? args[i] : defs[i];\n        }\n\n        return ret;\n      }\n\n      ;\n\n      function merge(obj, ext) {\n        var count = 0;\n\n        for (var i in ext) if (HOP(ext, i)) {\n          obj[i] = ext[i];\n          count++;\n        }\n\n        return count;\n      }\n\n      ;\n\n      function noop() {}\n\n      function return_false() {\n        return false;\n      }\n\n      function return_true() {\n        return true;\n      }\n\n      function return_this() {\n        return this;\n      }\n\n      function return_null() {\n        return null;\n      }\n\n      var MAP = function () {\n        function MAP(a, f, backwards) {\n          var ret = [],\n              top = [],\n              i;\n\n          function doit() {\n            var val = f(a[i], i);\n            var is_last = val instanceof Last;\n            if (is_last) val = val.v;\n\n            if (val instanceof AtTop) {\n              val = val.v;\n\n              if (val instanceof Splice) {\n                top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);\n              } else {\n                top.push(val);\n              }\n            } else if (val !== skip) {\n              if (val instanceof Splice) {\n                ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);\n              } else {\n                ret.push(val);\n              }\n            }\n\n            return is_last;\n          }\n\n          ;\n\n          if (a instanceof Array) {\n            if (backwards) {\n              for (i = a.length; --i >= 0;) if (doit()) break;\n\n              ret.reverse();\n              top.reverse();\n            } else {\n              for (i = 0; i < a.length; ++i) if (doit()) break;\n            }\n          } else {\n            for (i in a) if (HOP(a, i)) if (doit()) break;\n          }\n\n          return top.concat(ret);\n        }\n\n        ;\n\n        MAP.at_top = function (val) {\n          return new AtTop(val);\n        };\n\n        MAP.splice = function (val) {\n          return new Splice(val);\n        };\n\n        MAP.last = function (val) {\n          return new Last(val);\n        };\n\n        var skip = MAP.skip = {};\n\n        function AtTop(val) {\n          this.v = val;\n        }\n\n        ;\n\n        function Splice(val) {\n          this.v = val;\n        }\n\n        ;\n\n        function Last(val) {\n          this.v = val;\n        }\n\n        ;\n        return MAP;\n      }();\n\n      function push_uniq(array, el) {\n        if (array.indexOf(el) < 0) array.push(el);\n      }\n\n      ;\n\n      function string_template(text, props) {\n        return text.replace(/\\{(.+?)\\}/g, function (str, p) {\n          return props && props[p];\n        });\n      }\n\n      ;\n\n      function remove(array, el) {\n        for (var i = array.length; --i >= 0;) {\n          if (array[i] === el) array.splice(i, 1);\n        }\n      }\n\n      ;\n\n      function mergeSort(array, cmp) {\n        if (array.length < 2) return array.slice();\n\n        function merge(a, b) {\n          var r = [],\n              ai = 0,\n              bi = 0,\n              i = 0;\n\n          while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0 ? r[i++] = a[ai++] : r[i++] = b[bi++];\n          }\n\n          if (ai < a.length) r.push.apply(r, a.slice(ai));\n          if (bi < b.length) r.push.apply(r, b.slice(bi));\n          return r;\n        }\n\n        ;\n\n        function _ms(a) {\n          if (a.length <= 1) return a;\n          var m = Math.floor(a.length / 2),\n              left = a.slice(0, m),\n              right = a.slice(m);\n          left = _ms(left);\n          right = _ms(right);\n          return merge(left, right);\n        }\n\n        ;\n        return _ms(array);\n      }\n\n      ;\n\n      function set_difference(a, b) {\n        return a.filter(function (el) {\n          return b.indexOf(el) < 0;\n        });\n      }\n\n      ;\n\n      function set_intersection(a, b) {\n        return a.filter(function (el) {\n          return b.indexOf(el) >= 0;\n        });\n      }\n\n      ; // this function is taken from Acorn [1], written by Marijn Haverbeke\n      // [1] https://github.com/marijnh/acorn\n\n      function makePredicate(words) {\n        if (!(words instanceof Array)) words = words.split(\" \");\n        var f = \"\",\n            cats = [];\n\n        out: for (var i = 0; i < words.length; ++i) {\n          for (var j = 0; j < cats.length; ++j) if (cats[j][0].length == words[i].length) {\n            cats[j].push(words[i]);\n            continue out;\n          }\n\n          cats.push([words[i]]);\n        }\n\n        function quote(word) {\n          return JSON.stringify(word).replace(/[\\u2028\\u2029]/g, function (s) {\n            switch (s) {\n              case \"\\u2028\":\n                return \"\\\\u2028\";\n\n              case \"\\u2029\":\n                return \"\\\\u2029\";\n            }\n\n            return s;\n          });\n        }\n\n        function compareTo(arr) {\n          if (arr.length == 1) return f += \"return str === \" + quote(arr[0]) + \";\";\n          f += \"switch(str){\";\n\n          for (var i = 0; i < arr.length; ++i) f += \"case \" + quote(arr[i]) + \":\";\n\n          f += \"return true}return false;\";\n        } // When there are more than three length categories, an outer\n        // switch first dispatches on the lengths, to save on comparisons.\n\n\n        if (cats.length > 3) {\n          cats.sort(function (a, b) {\n            return b.length - a.length;\n          });\n          f += \"switch(str.length){\";\n\n          for (var i = 0; i < cats.length; ++i) {\n            var cat = cats[i];\n            f += \"case \" + cat[0].length + \":\";\n            compareTo(cat);\n          }\n\n          f += \"}\"; // Otherwise, simply generate a flat `switch` statement.\n        } else {\n          compareTo(words);\n        }\n\n        return new Function(\"str\", f);\n      }\n\n      ;\n\n      function all(array, predicate) {\n        for (var i = array.length; --i >= 0;) if (!predicate(array[i])) return false;\n\n        return true;\n      }\n\n      ;\n\n      function Dictionary() {\n        this._values = Object.create(null);\n        this._size = 0;\n      }\n\n      ;\n      Dictionary.prototype = {\n        set: function (key, val) {\n          if (!this.has(key)) ++this._size;\n          this._values[\"$\" + key] = val;\n          return this;\n        },\n        add: function (key, val) {\n          if (this.has(key)) {\n            this.get(key).push(val);\n          } else {\n            this.set(key, [val]);\n          }\n\n          return this;\n        },\n        get: function (key) {\n          return this._values[\"$\" + key];\n        },\n        del: function (key) {\n          if (this.has(key)) {\n            --this._size;\n            delete this._values[\"$\" + key];\n          }\n\n          return this;\n        },\n        has: function (key) {\n          return \"$\" + key in this._values;\n        },\n        each: function (f) {\n          for (var i in this._values) f(this._values[i], i.substr(1));\n        },\n        size: function () {\n          return this._size;\n        },\n        map: function (f) {\n          var ret = [];\n\n          for (var i in this._values) ret.push(f(this._values[i], i.substr(1)));\n\n          return ret;\n        },\n        toObject: function () {\n          return this._values;\n        }\n      };\n\n      Dictionary.fromObject = function (obj) {\n        var dict = new Dictionary();\n        dict._size = merge(dict._values, obj);\n        return dict;\n      };\n\n      function HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n      } // return true if the node at the top of the stack (that means the\n      // innermost node in the current output) is lexically the first in\n      // a statement.\n\n\n      function first_in_statement(stack) {\n        var node = stack.parent(-1);\n\n        for (var i = 0, p; p = stack.parent(i); i++) {\n          if (p instanceof AST_Statement && p.body === node) return true;\n\n          if (p instanceof AST_Seq && p.car === node || p instanceof AST_Call && p.expression === node && !(p instanceof AST_New) || p instanceof AST_Dot && p.expression === node || p instanceof AST_Sub && p.expression === node || p instanceof AST_Conditional && p.condition === node || p instanceof AST_Binary && p.left === node || p instanceof AST_UnaryPostfix && p.expression === node) {\n            node = p;\n          } else {\n            return false;\n          }\n        }\n      }\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n\n      \"use strict\";\n\n      function DEFNODE(type, props, methods, base) {\n        if (arguments.length < 4) base = AST_Node;\n        if (!props) props = [];else props = props.split(/\\s+/);\n        var self_props = props;\n        if (base && base.PROPS) props = props.concat(base.PROPS);\n        var code = \"return function AST_\" + type + \"(props){ if (props) { \";\n\n        for (var i = props.length; --i >= 0;) {\n          code += \"this.\" + props[i] + \" = props.\" + props[i] + \";\";\n        }\n\n        var proto = base && new base();\n        if (proto && proto.initialize || methods && methods.initialize) code += \"this.initialize();\";\n        code += \"}}\";\n        var ctor = new Function(code)();\n\n        if (proto) {\n          ctor.prototype = proto;\n          ctor.BASE = base;\n        }\n\n        if (base) base.SUBCLASSES.push(ctor);\n        ctor.prototype.CTOR = ctor;\n        ctor.PROPS = props || null;\n        ctor.SELF_PROPS = self_props;\n        ctor.SUBCLASSES = [];\n\n        if (type) {\n          ctor.prototype.TYPE = ctor.TYPE = type;\n        }\n\n        if (methods) for (i in methods) if (HOP(methods, i)) {\n          if (/^\\$/.test(i)) {\n            ctor[i.substr(1)] = methods[i];\n          } else {\n            ctor.prototype[i] = methods[i];\n          }\n        }\n\n        ctor.DEFMETHOD = function (name, method) {\n          this.prototype[name] = method;\n        };\n\n        if (typeof exports !== \"undefined\") {\n          exports[\"AST_\" + type] = ctor;\n        }\n\n        return ctor;\n      }\n\n      ;\n      var AST_Token = DEFNODE(\"Token\", \"type value line col pos endline endcol endpos nlb comments_before file raw\", {}, null);\n      var AST_Node = DEFNODE(\"Node\", \"start end\", {\n        _clone: function (deep) {\n          if (deep) {\n            var self = this.clone();\n            return self.transform(new TreeTransformer(function (node) {\n              if (node !== self) {\n                return node.clone(true);\n              }\n            }));\n          }\n\n          return new this.CTOR(this);\n        },\n        clone: function (deep) {\n          return this._clone(deep);\n        },\n        $documentation: \"Base class of all AST nodes\",\n        $propdoc: {\n          start: \"[AST_Token] The first token of this node\",\n          end: \"[AST_Token] The last token of this node\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this);\n        },\n        walk: function (visitor) {\n          return this._walk(visitor); // not sure the indirection will be any help\n        }\n      }, null);\n      AST_Node.warn_function = null;\n\n      AST_Node.warn = function (txt, props) {\n        if (AST_Node.warn_function) AST_Node.warn_function(string_template(txt, props));\n      };\n      /* -----[ statements ]----- */\n\n\n      var AST_Statement = DEFNODE(\"Statement\", null, {\n        $documentation: \"Base class of all statements\"\n      });\n      var AST_Debugger = DEFNODE(\"Debugger\", null, {\n        $documentation: \"Represents a debugger statement\"\n      }, AST_Statement);\n      var AST_Directive = DEFNODE(\"Directive\", \"value scope quote\", {\n        $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n        $propdoc: {\n          value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n          scope: \"[AST_Scope/S] The scope that this directive affects\",\n          quote: \"[string] the original quote character\"\n        }\n      }, AST_Statement);\n      var AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", {\n        $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n        $propdoc: {\n          body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_Statement);\n\n      function walk_body(node, visitor) {\n        var body = node.body;\n\n        if (body instanceof AST_Statement) {\n          body._walk(visitor);\n        } else for (var i = 0, len = body.length; i < len; i++) {\n          body[i]._walk(visitor);\n        }\n      }\n\n      ;\n      var AST_Block = DEFNODE(\"Block\", \"body\", {\n        $documentation: \"A body of statements (usually bracketed)\",\n        $propdoc: {\n          body: \"[AST_Statement*] an array of statements\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            walk_body(this, visitor);\n          });\n        }\n      }, AST_Statement);\n      var AST_BlockStatement = DEFNODE(\"BlockStatement\", null, {\n        $documentation: \"A block statement\"\n      }, AST_Block);\n      var AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, {\n        $documentation: \"The empty statement (empty block or simply a semicolon)\",\n        _walk: function (visitor) {\n          return visitor._visit(this);\n        }\n      }, AST_Statement);\n      var AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", {\n        $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n        $propdoc: {\n          body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_Statement);\n      var AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", {\n        $documentation: \"Statement with a label\",\n        $propdoc: {\n          label: \"[AST_Label] a label definition\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.label._walk(visitor);\n\n            this.body._walk(visitor);\n          });\n        },\n        clone: function (deep) {\n          var node = this._clone(deep);\n\n          if (deep) {\n            var label = node.label;\n            var def = this.label;\n            node.walk(new TreeWalker(function (node) {\n              if (node instanceof AST_LoopControl && node.label && node.label.thedef === def) {\n                node.label.thedef = label;\n                label.references.push(node);\n              }\n            }));\n          }\n\n          return node;\n        }\n      }, AST_StatementWithBody);\n      var AST_IterationStatement = DEFNODE(\"IterationStatement\", null, {\n        $documentation: \"Internal class.  All loops inherit from it.\"\n      }, AST_StatementWithBody);\n      var AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", {\n        $documentation: \"Base class for do/while statements\",\n        $propdoc: {\n          condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n        }\n      }, AST_IterationStatement);\n      var AST_Do = DEFNODE(\"Do\", null, {\n        $documentation: \"A `do` statement\",\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.body._walk(visitor);\n\n            this.condition._walk(visitor);\n          });\n        }\n      }, AST_DWLoop);\n      var AST_While = DEFNODE(\"While\", null, {\n        $documentation: \"A `while` statement\",\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.condition._walk(visitor);\n\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_DWLoop);\n      var AST_For = DEFNODE(\"For\", \"init condition step\", {\n        $documentation: \"A `for` statement\",\n        $propdoc: {\n          init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n          condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n          step: \"[AST_Node?] the `for` update clause, or null if empty\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_IterationStatement);\n      var AST_ForIn = DEFNODE(\"ForIn\", \"init name object\", {\n        $documentation: \"A `for ... in` statement\",\n        $propdoc: {\n          init: \"[AST_Node] the `for/in` initialization code\",\n          name: \"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var\",\n          object: \"[AST_Node] the object that we're looping through\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.init._walk(visitor);\n\n            this.object._walk(visitor);\n\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_IterationStatement);\n      var AST_With = DEFNODE(\"With\", \"expression\", {\n        $documentation: \"A `with` statement\",\n        $propdoc: {\n          expression: \"[AST_Node] the `with` expression\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n\n            this.body._walk(visitor);\n          });\n        }\n      }, AST_StatementWithBody);\n      /* -----[ scope and functions ]----- */\n\n      var AST_Scope = DEFNODE(\"Scope\", \"directives variables functions uses_with uses_eval parent_scope enclosed cname\", {\n        $documentation: \"Base class for all statements introducing a lexical scope\",\n        $propdoc: {\n          directives: \"[string*/S] an array of directives declared in this scope\",\n          variables: \"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n          functions: \"[Object/S] like `variables`, but only lists function declarations\",\n          uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n          uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n          parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n          enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n          cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\"\n        }\n      }, AST_Block);\n      var AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", {\n        $documentation: \"The toplevel scope\",\n        $propdoc: {\n          globals: \"[Object/S] a map of name -> SymbolDef for all undeclared names\"\n        },\n        wrap_enclose: function (arg_parameter_pairs) {\n          var self = this;\n          var args = [];\n          var parameters = [];\n          arg_parameter_pairs.forEach(function (pair) {\n            var splitAt = pair.lastIndexOf(\":\");\n            args.push(pair.substr(0, splitAt));\n            parameters.push(pair.substr(splitAt + 1));\n          });\n          var wrapped_tl = \"(function(\" + parameters.join(\",\") + \"){ '$ORIG'; })(\" + args.join(\",\") + \")\";\n          wrapped_tl = parse(wrapped_tl);\n          wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node) {\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n              return MAP.splice(self.body);\n            }\n          }));\n          return wrapped_tl;\n        },\n        wrap_commonjs: function (name, export_all) {\n          var self = this;\n          var to_export = [];\n\n          if (export_all) {\n            self.figure_out_scope();\n            self.walk(new TreeWalker(function (node) {\n              if (node instanceof AST_SymbolDeclaration && node.definition().global) {\n                if (!find_if(function (n) {\n                  return n.name == node.name;\n                }, to_export)) to_export.push(node);\n              }\n            }));\n          }\n\n          var wrapped_tl = \"(function(exports, global){ '$ORIG'; '$EXPORTS'; global['\" + name + \"'] = exports; }({}, (function(){return this}())))\";\n          wrapped_tl = parse(wrapped_tl);\n          wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node) {\n            if (node instanceof AST_Directive) {\n              switch (node.value) {\n                case \"$ORIG\":\n                  return MAP.splice(self.body);\n\n                case \"$EXPORTS\":\n                  var body = [];\n                  to_export.forEach(function (sym) {\n                    body.push(new AST_SimpleStatement({\n                      body: new AST_Assign({\n                        left: new AST_Sub({\n                          expression: new AST_SymbolRef({\n                            name: \"exports\"\n                          }),\n                          property: new AST_String({\n                            value: sym.name\n                          })\n                        }),\n                        operator: \"=\",\n                        right: new AST_SymbolRef(sym)\n                      })\n                    }));\n                  });\n                  return MAP.splice(body);\n              }\n            }\n          }));\n          return wrapped_tl;\n        }\n      }, AST_Scope);\n      var AST_Lambda = DEFNODE(\"Lambda\", \"name argnames uses_arguments\", {\n        $documentation: \"Base class for functions\",\n        $propdoc: {\n          name: \"[AST_SymbolDeclaration?] the name of this function\",\n          argnames: \"[AST_SymbolFunarg*] array of function arguments\",\n          uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            if (this.name) this.name._walk(visitor);\n            var argnames = this.argnames;\n\n            for (var i = 0, len = argnames.length; i < len; i++) {\n              argnames[i]._walk(visitor);\n            }\n\n            walk_body(this, visitor);\n          });\n        }\n      }, AST_Scope);\n      var AST_Accessor = DEFNODE(\"Accessor\", null, {\n        $documentation: \"A setter/getter function.  The `name` property is always null.\"\n      }, AST_Lambda);\n      var AST_Function = DEFNODE(\"Function\", null, {\n        $documentation: \"A function expression\"\n      }, AST_Lambda);\n      var AST_Defun = DEFNODE(\"Defun\", null, {\n        $documentation: \"A function definition\"\n      }, AST_Lambda);\n      /* -----[ JUMPS ]----- */\n\n      var AST_Jump = DEFNODE(\"Jump\", null, {\n        $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n      }, AST_Statement);\n      var AST_Exit = DEFNODE(\"Exit\", \"value\", {\n        $documentation: \"Base class for “exits” (`return` and `throw`)\",\n        $propdoc: {\n          value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, this.value && function () {\n            this.value._walk(visitor);\n          });\n        }\n      }, AST_Jump);\n      var AST_Return = DEFNODE(\"Return\", null, {\n        $documentation: \"A `return` statement\"\n      }, AST_Exit);\n      var AST_Throw = DEFNODE(\"Throw\", null, {\n        $documentation: \"A `throw` statement\"\n      }, AST_Exit);\n      var AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", {\n        $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n        $propdoc: {\n          label: \"[AST_LabelRef?] the label, or null if none\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, this.label && function () {\n            this.label._walk(visitor);\n          });\n        }\n      }, AST_Jump);\n      var AST_Break = DEFNODE(\"Break\", null, {\n        $documentation: \"A `break` statement\"\n      }, AST_LoopControl);\n      var AST_Continue = DEFNODE(\"Continue\", null, {\n        $documentation: \"A `continue` statement\"\n      }, AST_LoopControl);\n      /* -----[ IF ]----- */\n\n      var AST_If = DEFNODE(\"If\", \"condition alternative\", {\n        $documentation: \"A `if` statement\",\n        $propdoc: {\n          condition: \"[AST_Node] the `if` condition\",\n          alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.condition._walk(visitor);\n\n            this.body._walk(visitor);\n\n            if (this.alternative) this.alternative._walk(visitor);\n          });\n        }\n      }, AST_StatementWithBody);\n      /* -----[ SWITCH ]----- */\n\n      var AST_Switch = DEFNODE(\"Switch\", \"expression\", {\n        $documentation: \"A `switch` statement\",\n        $propdoc: {\n          expression: \"[AST_Node] the `switch` “discriminant”\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n\n            walk_body(this, visitor);\n          });\n        }\n      }, AST_Block);\n      var AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, {\n        $documentation: \"Base class for `switch` branches\"\n      }, AST_Block);\n      var AST_Default = DEFNODE(\"Default\", null, {\n        $documentation: \"A `default` switch branch\"\n      }, AST_SwitchBranch);\n      var AST_Case = DEFNODE(\"Case\", \"expression\", {\n        $documentation: \"A `case` switch branch\",\n        $propdoc: {\n          expression: \"[AST_Node] the `case` expression\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n\n            walk_body(this, visitor);\n          });\n        }\n      }, AST_SwitchBranch);\n      /* -----[ EXCEPTIONS ]----- */\n\n      var AST_Try = DEFNODE(\"Try\", \"bcatch bfinally\", {\n        $documentation: \"A `try` statement\",\n        $propdoc: {\n          bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n          bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            walk_body(this, visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n          });\n        }\n      }, AST_Block);\n      var AST_Catch = DEFNODE(\"Catch\", \"argname\", {\n        $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n        $propdoc: {\n          argname: \"[AST_SymbolCatch] symbol for the exception\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.argname._walk(visitor);\n\n            walk_body(this, visitor);\n          });\n        }\n      }, AST_Block);\n      var AST_Finally = DEFNODE(\"Finally\", null, {\n        $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n      }, AST_Block);\n      /* -----[ VAR/CONST ]----- */\n\n      var AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", {\n        $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n        $propdoc: {\n          definitions: \"[AST_VarDef*] array of variable definitions\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            var definitions = this.definitions;\n\n            for (var i = 0, len = definitions.length; i < len; i++) {\n              definitions[i]._walk(visitor);\n            }\n          });\n        }\n      }, AST_Statement);\n      var AST_Var = DEFNODE(\"Var\", null, {\n        $documentation: \"A `var` statement\"\n      }, AST_Definitions);\n      var AST_Const = DEFNODE(\"Const\", null, {\n        $documentation: \"A `const` statement\"\n      }, AST_Definitions);\n      var AST_VarDef = DEFNODE(\"VarDef\", \"name value\", {\n        $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n        $propdoc: {\n          name: \"[AST_SymbolVar|AST_SymbolConst] name of the variable\",\n          value: \"[AST_Node?] initializer, or null of there's no initializer\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.name._walk(visitor);\n\n            if (this.value) this.value._walk(visitor);\n          });\n        }\n      });\n      /* -----[ OTHER ]----- */\n\n      var AST_Call = DEFNODE(\"Call\", \"expression args\", {\n        $documentation: \"A function call expression\",\n        $propdoc: {\n          expression: \"[AST_Node] expression to invoke as function\",\n          args: \"[AST_Node*] array of arguments\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n\n            var args = this.args;\n\n            for (var i = 0, len = args.length; i < len; i++) {\n              args[i]._walk(visitor);\n            }\n          });\n        }\n      });\n      var AST_New = DEFNODE(\"New\", null, {\n        $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n      }, AST_Call);\n      var AST_Seq = DEFNODE(\"Seq\", \"car cdr\", {\n        $documentation: \"A sequence expression (two comma-separated expressions)\",\n        $propdoc: {\n          car: \"[AST_Node] first element in sequence\",\n          cdr: \"[AST_Node] second element in sequence\"\n        },\n        $cons: function (x, y) {\n          var seq = new AST_Seq(x);\n          seq.car = x;\n          seq.cdr = y;\n          return seq;\n        },\n        $from_array: function (array) {\n          if (array.length == 0) return null;\n          if (array.length == 1) return array[0].clone();\n          var list = null;\n\n          for (var i = array.length; --i >= 0;) {\n            list = AST_Seq.cons(array[i], list);\n          }\n\n          var p = list;\n\n          while (p) {\n            if (p.cdr && !p.cdr.cdr) {\n              p.cdr = p.cdr.car;\n              break;\n            }\n\n            p = p.cdr;\n          }\n\n          return list;\n        },\n        to_array: function () {\n          var p = this,\n              a = [];\n\n          while (p) {\n            a.push(p.car);\n\n            if (p.cdr && !(p.cdr instanceof AST_Seq)) {\n              a.push(p.cdr);\n              break;\n            }\n\n            p = p.cdr;\n          }\n\n          return a;\n        },\n        add: function (node) {\n          var p = this;\n\n          while (p) {\n            if (!(p.cdr instanceof AST_Seq)) {\n              var cell = AST_Seq.cons(p.cdr, node);\n              return p.cdr = cell;\n            }\n\n            p = p.cdr;\n          }\n        },\n        len: function () {\n          if (this.cdr instanceof AST_Seq) {\n            return this.cdr.len() + 1;\n          } else {\n            return 2;\n          }\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.car._walk(visitor);\n\n            if (this.cdr) this.cdr._walk(visitor);\n          });\n        }\n      });\n      var AST_PropAccess = DEFNODE(\"PropAccess\", \"expression property\", {\n        $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n        $propdoc: {\n          expression: \"[AST_Node] the “container” expression\",\n          property: \"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\"\n        }\n      });\n      var AST_Dot = DEFNODE(\"Dot\", null, {\n        $documentation: \"A dotted property access expression\",\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n          });\n        }\n      }, AST_PropAccess);\n      var AST_Sub = DEFNODE(\"Sub\", null, {\n        $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n\n            this.property._walk(visitor);\n          });\n        }\n      }, AST_PropAccess);\n      var AST_Unary = DEFNODE(\"Unary\", \"operator expression\", {\n        $documentation: \"Base class for unary expressions\",\n        $propdoc: {\n          operator: \"[string] the operator\",\n          expression: \"[AST_Node] expression that this unary operator applies to\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.expression._walk(visitor);\n          });\n        }\n      });\n      var AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, {\n        $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n      }, AST_Unary);\n      var AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, {\n        $documentation: \"Unary postfix expression, i.e. `i++`\"\n      }, AST_Unary);\n      var AST_Binary = DEFNODE(\"Binary\", \"left operator right\", {\n        $documentation: \"Binary expression, i.e. `a + b`\",\n        $propdoc: {\n          left: \"[AST_Node] left-hand side expression\",\n          operator: \"[string] the operator\",\n          right: \"[AST_Node] right-hand side expression\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.left._walk(visitor);\n\n            this.right._walk(visitor);\n          });\n        }\n      });\n      var AST_Conditional = DEFNODE(\"Conditional\", \"condition consequent alternative\", {\n        $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n        $propdoc: {\n          condition: \"[AST_Node]\",\n          consequent: \"[AST_Node]\",\n          alternative: \"[AST_Node]\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.condition._walk(visitor);\n\n            this.consequent._walk(visitor);\n\n            this.alternative._walk(visitor);\n          });\n        }\n      });\n      var AST_Assign = DEFNODE(\"Assign\", null, {\n        $documentation: \"An assignment expression — `a = b + 5`\"\n      }, AST_Binary);\n      /* -----[ LITERALS ]----- */\n\n      var AST_Array = DEFNODE(\"Array\", \"elements\", {\n        $documentation: \"An array literal\",\n        $propdoc: {\n          elements: \"[AST_Node*] array of elements\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            var elements = this.elements;\n\n            for (var i = 0, len = elements.length; i < len; i++) {\n              elements[i]._walk(visitor);\n            }\n          });\n        }\n      });\n      var AST_Object = DEFNODE(\"Object\", \"properties\", {\n        $documentation: \"An object literal\",\n        $propdoc: {\n          properties: \"[AST_ObjectProperty*] array of properties\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            var properties = this.properties;\n\n            for (var i = 0, len = properties.length; i < len; i++) {\n              properties[i]._walk(visitor);\n            }\n          });\n        }\n      });\n      var AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", {\n        $documentation: \"Base class for literal object properties\",\n        $propdoc: {\n          key: \"[string] the property name converted to a string for ObjectKeyVal.  For setters and getters this is an AST_SymbolAccessor.\",\n          value: \"[AST_Node] property value.  For setters and getters this is an AST_Accessor.\"\n        },\n        _walk: function (visitor) {\n          return visitor._visit(this, function () {\n            this.value._walk(visitor);\n          });\n        }\n      });\n      var AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", {\n        $documentation: \"A key: value object property\",\n        $propdoc: {\n          quote: \"[string] the original quote character\"\n        }\n      }, AST_ObjectProperty);\n      var AST_ObjectSetter = DEFNODE(\"ObjectSetter\", null, {\n        $documentation: \"An object setter property\"\n      }, AST_ObjectProperty);\n      var AST_ObjectGetter = DEFNODE(\"ObjectGetter\", null, {\n        $documentation: \"An object getter property\"\n      }, AST_ObjectProperty);\n      var AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", {\n        $propdoc: {\n          name: \"[string] name of this symbol\",\n          scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n          thedef: \"[SymbolDef/S] the definition of this symbol\"\n        },\n        $documentation: \"Base class for all symbols\"\n      });\n      var AST_SymbolAccessor = DEFNODE(\"SymbolAccessor\", null, {\n        $documentation: \"The name of a property accessor (setter/getter function)\"\n      }, AST_Symbol);\n      var AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", {\n        $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\"\n      }, AST_Symbol);\n      var AST_SymbolVar = DEFNODE(\"SymbolVar\", null, {\n        $documentation: \"Symbol defining a variable\"\n      }, AST_SymbolDeclaration);\n      var AST_SymbolConst = DEFNODE(\"SymbolConst\", null, {\n        $documentation: \"A constant declaration\"\n      }, AST_SymbolDeclaration);\n      var AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, {\n        $documentation: \"Symbol naming a function argument\"\n      }, AST_SymbolVar);\n      var AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, {\n        $documentation: \"Symbol defining a function\"\n      }, AST_SymbolDeclaration);\n      var AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, {\n        $documentation: \"Symbol naming a function expression\"\n      }, AST_SymbolDeclaration);\n      var AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, {\n        $documentation: \"Symbol naming the exception in catch\"\n      }, AST_SymbolDeclaration);\n      var AST_Label = DEFNODE(\"Label\", \"references\", {\n        $documentation: \"Symbol naming a label (declaration)\",\n        $propdoc: {\n          references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n        },\n        initialize: function () {\n          this.references = [];\n          this.thedef = this;\n        }\n      }, AST_Symbol);\n      var AST_SymbolRef = DEFNODE(\"SymbolRef\", null, {\n        $documentation: \"Reference to some symbol (not definition/declaration)\"\n      }, AST_Symbol);\n      var AST_LabelRef = DEFNODE(\"LabelRef\", null, {\n        $documentation: \"Reference to a label symbol\"\n      }, AST_Symbol);\n      var AST_This = DEFNODE(\"This\", null, {\n        $documentation: \"The `this` symbol\"\n      }, AST_Symbol);\n      var AST_Constant = DEFNODE(\"Constant\", null, {\n        $documentation: \"Base class for all constants\",\n        getValue: function () {\n          return this.value;\n        }\n      });\n      var AST_String = DEFNODE(\"String\", \"value quote\", {\n        $documentation: \"A string literal\",\n        $propdoc: {\n          value: \"[string] the contents of this string\",\n          quote: \"[string] the original quote character\"\n        }\n      }, AST_Constant);\n      var AST_Number = DEFNODE(\"Number\", \"value literal\", {\n        $documentation: \"A number literal\",\n        $propdoc: {\n          value: \"[number] the numeric value\",\n          literal: \"[string] numeric value as string (optional)\"\n        }\n      }, AST_Constant);\n      var AST_RegExp = DEFNODE(\"RegExp\", \"value\", {\n        $documentation: \"A regexp literal\",\n        $propdoc: {\n          value: \"[RegExp] the actual regexp\"\n        }\n      }, AST_Constant);\n      var AST_Atom = DEFNODE(\"Atom\", null, {\n        $documentation: \"Base class for atoms\"\n      }, AST_Constant);\n      var AST_Null = DEFNODE(\"Null\", null, {\n        $documentation: \"The `null` atom\",\n        value: null\n      }, AST_Atom);\n      var AST_NaN = DEFNODE(\"NaN\", null, {\n        $documentation: \"The impossible value\",\n        value: 0 / 0\n      }, AST_Atom);\n      var AST_Undefined = DEFNODE(\"Undefined\", null, {\n        $documentation: \"The `undefined` value\",\n        value: function () {}()\n      }, AST_Atom);\n      var AST_Hole = DEFNODE(\"Hole\", null, {\n        $documentation: \"A hole in an array\",\n        value: function () {}()\n      }, AST_Atom);\n      var AST_Infinity = DEFNODE(\"Infinity\", null, {\n        $documentation: \"The `Infinity` value\",\n        value: 1 / 0\n      }, AST_Atom);\n      var AST_Boolean = DEFNODE(\"Boolean\", null, {\n        $documentation: \"Base class for booleans\"\n      }, AST_Atom);\n      var AST_False = DEFNODE(\"False\", null, {\n        $documentation: \"The `false` atom\",\n        value: false\n      }, AST_Boolean);\n      var AST_True = DEFNODE(\"True\", null, {\n        $documentation: \"The `true` atom\",\n        value: true\n      }, AST_Boolean);\n      /* -----[ TreeWalker ]----- */\n\n      function TreeWalker(callback) {\n        this.visit = callback;\n        this.stack = [];\n        this.directives = Object.create(null);\n      }\n\n      ;\n      TreeWalker.prototype = {\n        _visit: function (node, descend) {\n          this.push(node);\n          var ret = this.visit(node, descend ? function () {\n            descend.call(node);\n          } : noop);\n\n          if (!ret && descend) {\n            descend.call(node);\n          }\n\n          this.pop(node);\n          return ret;\n        },\n        parent: function (n) {\n          return this.stack[this.stack.length - 2 - (n || 0)];\n        },\n        push: function (node) {\n          if (node instanceof AST_Lambda) {\n            this.directives = Object.create(this.directives);\n          } else if (node instanceof AST_Directive && !this.directives[node.value]) {\n            this.directives[node.value] = node;\n          }\n\n          this.stack.push(node);\n        },\n        pop: function (node) {\n          this.stack.pop();\n\n          if (node instanceof AST_Lambda) {\n            this.directives = Object.getPrototypeOf(this.directives);\n          }\n        },\n        self: function () {\n          return this.stack[this.stack.length - 1];\n        },\n        find_parent: function (type) {\n          var stack = this.stack;\n\n          for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n          }\n        },\n        has_directive: function (type) {\n          var dir = this.directives[type];\n          if (dir) return dir;\n          var node = this.stack[this.stack.length - 1];\n\n          if (node instanceof AST_Scope) {\n            for (var i = 0; i < node.body.length; ++i) {\n              var st = node.body[i];\n              if (!(st instanceof AST_Directive)) break;\n              if (st.value == type) return st;\n            }\n          }\n        },\n        in_boolean_context: function () {\n          var stack = this.stack;\n          var i = stack.length,\n              self = stack[--i];\n\n          while (i > 0) {\n            var p = stack[--i];\n\n            if (p instanceof AST_If && p.condition === self || p instanceof AST_Conditional && p.condition === self || p instanceof AST_DWLoop && p.condition === self || p instanceof AST_For && p.condition === self || p instanceof AST_UnaryPrefix && p.operator == \"!\" && p.expression === self) {\n              return true;\n            }\n\n            if (!(p instanceof AST_Binary && (p.operator == \"&&\" || p.operator == \"||\"))) return false;\n            self = p;\n          }\n        },\n        loopcontrol_target: function (node) {\n          var stack = this.stack;\n          if (node.label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == node.label.name) return x.body;\n          } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_IterationStatement || node instanceof AST_Break && x instanceof AST_Switch) return x;\n          }\n        }\n      };\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n          Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n      \"use strict\";\n\n      var KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';\n      var KEYWORDS_ATOM = 'false null true';\n      var RESERVED_WORDS = 'abstract boolean byte char class double enum export extends final float goto implements import int interface let long native package private protected public short static super synchronized this throws transient volatile yield' + \" \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\n      var KEYWORDS_BEFORE_EXPRESSION = 'return new delete throw else case';\n      KEYWORDS = makePredicate(KEYWORDS);\n      RESERVED_WORDS = makePredicate(RESERVED_WORDS);\n      KEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\n      KEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\n      var OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n      var RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\n      var RE_OCT_NUMBER = /^0[0-7]+$/;\n      var OPERATORS = makePredicate([\"in\", \"instanceof\", \"typeof\", \"new\", \"void\", \"delete\", \"++\", \"--\", \"+\", \"-\", \"!\", \"~\", \"&\", \"|\", \"^\", \"*\", \"/\", \"%\", \">>\", \"<<\", \">>>\", \"<\", \">\", \"<=\", \">=\", \"==\", \"===\", \"!=\", \"!==\", \"?\", \"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\", \"&&\", \"||\"]);\n      var WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\uFEFF\"));\n      var NEWLINE_CHARS = makePredicate(characters(\"\\n\\r\\u2028\\u2029\"));\n      var PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,;:\"));\n      var PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n      var REGEXP_MODIFIERS = makePredicate(characters(\"gmsiy\"));\n      /* -----[ Tokenizer ]----- */\n      // regexps adapted from http://xregexp.com/plugins/#unicode\n\n      var UNICODE = {\n        letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n        digit: new RegExp(\"[\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19D9\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]\"),\n        non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n        space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n        connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n      };\n\n      function is_letter(code) {\n        return code >= 97 && code <= 122 || code >= 65 && code <= 90 || code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code));\n      }\n\n      ;\n\n      function is_digit(code) {\n        return code >= 48 && code <= 57;\n      }\n\n      ;\n\n      function is_alphanumeric_char(code) {\n        return is_digit(code) || is_letter(code);\n      }\n\n      ;\n\n      function is_unicode_digit(code) {\n        return UNICODE.digit.test(String.fromCharCode(code));\n      }\n\n      function is_unicode_combining_mark(ch) {\n        return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n      }\n\n      ;\n\n      function is_unicode_connector_punctuation(ch) {\n        return UNICODE.connector_punctuation.test(ch);\n      }\n\n      ;\n\n      function is_identifier(name) {\n        return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);\n      }\n\n      ;\n\n      function is_identifier_start(code) {\n        return code == 36 || code == 95 || is_letter(code);\n      }\n\n      ;\n\n      function is_identifier_char(ch) {\n        var code = ch.charCodeAt(0);\n        return is_identifier_start(code) || is_digit(code) || code == 8204 // \\u200c: zero-width non-joiner <ZWNJ>\n        || code == 8205 // \\u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        || is_unicode_combining_mark(ch) || is_unicode_connector_punctuation(ch) || is_unicode_digit(code);\n      }\n\n      ;\n\n      function is_identifier_string(str) {\n        return /^[a-z_$][a-z0-9_$]*$/i.test(str);\n      }\n\n      ;\n\n      function parse_js_number(num) {\n        if (RE_HEX_NUMBER.test(num)) {\n          return parseInt(num.substr(2), 16);\n        } else if (RE_OCT_NUMBER.test(num)) {\n          return parseInt(num.substr(1), 8);\n        } else {\n          var val = parseFloat(num);\n          if (val == num) return val;\n        }\n      }\n\n      ;\n\n      function JS_Parse_Error(message, filename, line, col, pos) {\n        this.message = message;\n        this.filename = filename;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n      }\n\n      ;\n      JS_Parse_Error.prototype = Object.create(Error.prototype);\n      JS_Parse_Error.prototype.constructor = JS_Parse_Error;\n      JS_Parse_Error.prototype.name = \"SyntaxError\";\n      configure_error_stack(JS_Parse_Error);\n\n      function js_error(message, filename, line, col, pos) {\n        throw new JS_Parse_Error(message, filename, line, col, pos);\n      }\n\n      ;\n\n      function is_token(token, type, val) {\n        return token.type == type && (val == null || token.value == val);\n      }\n\n      ;\n      var EX_EOF = {};\n\n      function tokenizer($TEXT, filename, html5_comments, shebang) {\n        var S = {\n          text: $TEXT,\n          filename: filename,\n          pos: 0,\n          tokpos: 0,\n          line: 1,\n          tokline: 0,\n          col: 0,\n          tokcol: 0,\n          newline_before: false,\n          regex_allowed: false,\n          comments_before: [],\n          directives: {},\n          directive_stack: []\n        };\n\n        function peek() {\n          return S.text.charAt(S.pos);\n        }\n\n        ;\n\n        function next(signal_eof, in_string) {\n          var ch = S.text.charAt(S.pos++);\n          if (signal_eof && !ch) throw EX_EOF;\n\n          if (NEWLINE_CHARS(ch)) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n\n            if (!in_string && ch == \"\\r\" && peek() == \"\\n\") {\n              // treat a \\r\\n sequence as a single \\n\n              ++S.pos;\n              ch = \"\\n\";\n            }\n          } else {\n            ++S.col;\n          }\n\n          return ch;\n        }\n\n        ;\n\n        function forward(i) {\n          while (i-- > 0) next();\n        }\n\n        ;\n\n        function looking_at(str) {\n          return S.text.substr(S.pos, str.length) == str;\n        }\n\n        ;\n\n        function find_eol() {\n          var text = S.text;\n\n          for (var i = S.pos, n = S.text.length; i < n; ++i) {\n            var ch = text[i];\n            if (NEWLINE_CHARS(ch)) return i;\n          }\n\n          return -1;\n        }\n\n        ;\n\n        function find(what, signal_eof) {\n          var pos = S.text.indexOf(what, S.pos);\n          if (signal_eof && pos == -1) throw EX_EOF;\n          return pos;\n        }\n\n        ;\n\n        function start_token() {\n          S.tokline = S.line;\n          S.tokcol = S.col;\n          S.tokpos = S.pos;\n        }\n\n        ;\n        var prev_was_dot = false;\n\n        function token(type, value, is_comment) {\n          S.regex_allowed = type == \"operator\" && !UNARY_POSTFIX(value) || type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION(value) || type == \"punc\" && PUNC_BEFORE_EXPRESSION(value);\n\n          if (type == \"punc\" && value == \".\") {\n            prev_was_dot = true;\n          } else if (!is_comment) {\n            prev_was_dot = false;\n          }\n\n          var ret = {\n            type: type,\n            value: value,\n            line: S.tokline,\n            col: S.tokcol,\n            pos: S.tokpos,\n            endline: S.line,\n            endcol: S.col,\n            endpos: S.pos,\n            nlb: S.newline_before,\n            file: filename\n          };\n\n          if (/^(?:num|string|regexp)$/i.test(type)) {\n            ret.raw = $TEXT.substring(ret.pos, ret.endpos);\n          }\n\n          if (!is_comment) {\n            ret.comments_before = S.comments_before;\n            S.comments_before = []; // make note of any newlines in the comments that came before\n\n            for (var i = 0, len = ret.comments_before.length; i < len; i++) {\n              ret.nlb = ret.nlb || ret.comments_before[i].nlb;\n            }\n          }\n\n          S.newline_before = false;\n          return new AST_Token(ret);\n        }\n\n        ;\n\n        function skip_whitespace() {\n          while (WHITESPACE_CHARS(peek())) next();\n        }\n\n        ;\n\n        function read_while(pred) {\n          var ret = \"\",\n              ch,\n              i = 0;\n\n          while ((ch = peek()) && pred(ch, i++)) ret += next();\n\n          return ret;\n        }\n\n        ;\n\n        function parse_error(err) {\n          js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n        }\n\n        ;\n\n        function read_num(prefix) {\n          var has_e = false,\n              after_e = false,\n              has_x = false,\n              has_dot = prefix == \".\";\n          var num = read_while(function (ch, i) {\n            var code = ch.charCodeAt(0);\n\n            switch (code) {\n              case 120:\n              case 88:\n                // xX\n                return has_x ? false : has_x = true;\n\n              case 101:\n              case 69:\n                // eE\n                return has_x ? true : has_e ? false : has_e = after_e = true;\n\n              case 45:\n                // -\n                return after_e || i == 0 && !prefix;\n\n              case 43:\n                // +\n                return after_e;\n\n              case (after_e = false, 46):\n                // .\n                return !has_dot && !has_x && !has_e ? has_dot = true : false;\n            }\n\n            return is_alphanumeric_char(code);\n          });\n          if (prefix) num = prefix + num;\n\n          if (RE_OCT_NUMBER.test(num) && next_token.has_directive(\"use strict\")) {\n            parse_error(\"Legacy octal literals are not allowed in strict mode\");\n          }\n\n          var valid = parse_js_number(num);\n\n          if (!isNaN(valid)) {\n            return token(\"num\", valid);\n          } else {\n            parse_error(\"Invalid syntax: \" + num);\n          }\n        }\n\n        ;\n\n        function read_escaped_char(in_string) {\n          var ch = next(true, in_string);\n\n          switch (ch.charCodeAt(0)) {\n            case 110:\n              return \"\\n\";\n\n            case 114:\n              return \"\\r\";\n\n            case 116:\n              return \"\\t\";\n\n            case 98:\n              return \"\\b\";\n\n            case 118:\n              return \"\\u000b\";\n            // \\v\n\n            case 102:\n              return \"\\f\";\n\n            case 120:\n              return String.fromCharCode(hex_bytes(2));\n            // \\x\n\n            case 117:\n              return String.fromCharCode(hex_bytes(4));\n            // \\u\n\n            case 10:\n              return \"\";\n            // newline\n\n            case 13:\n              // \\r\n              if (peek() == \"\\n\") {\n                // DOS newline\n                next(true, in_string);\n                return \"\";\n              }\n\n          }\n\n          if (ch >= \"0\" && ch <= \"7\") return read_octal_escape_sequence(ch);\n          return ch;\n        }\n\n        ;\n\n        function read_octal_escape_sequence(ch) {\n          // Read\n          var p = peek();\n\n          if (p >= \"0\" && p <= \"7\") {\n            ch += next(true);\n            if (ch[0] <= \"3\" && (p = peek()) >= \"0\" && p <= \"7\") ch += next(true);\n          } // Parse\n\n\n          if (ch === \"0\") return \"\\0\";\n          if (ch.length > 0 && next_token.has_directive(\"use strict\")) parse_error(\"Legacy octal escape sequences are not allowed in strict mode\");\n          return String.fromCharCode(parseInt(ch, 8));\n        }\n\n        function hex_bytes(n) {\n          var num = 0;\n\n          for (; n > 0; --n) {\n            var digit = parseInt(next(true), 16);\n            if (isNaN(digit)) parse_error(\"Invalid hex-character pattern in string\");\n            num = num << 4 | digit;\n          }\n\n          return num;\n        }\n\n        ;\n        var read_string = with_eof_error(\"Unterminated string constant\", function (quote_char) {\n          var quote = next(),\n              ret = \"\";\n\n          for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") ch = read_escaped_char(true);else if (NEWLINE_CHARS(ch)) parse_error(\"Unterminated string constant\");else if (ch == quote) break;\n            ret += ch;\n          }\n\n          var tok = token(\"string\", ret);\n          tok.quote = quote_char;\n          return tok;\n        });\n\n        function skip_line_comment(type) {\n          var regex_allowed = S.regex_allowed;\n          var i = find_eol(),\n              ret;\n\n          if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n          } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n          }\n\n          S.col = S.tokcol + (S.pos - S.tokpos);\n          S.comments_before.push(token(type, ret, true));\n          S.regex_allowed = regex_allowed;\n          return next_token;\n        }\n\n        ;\n        var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function () {\n          var regex_allowed = S.regex_allowed;\n          var i = find(\"*/\", true);\n          var text = S.text.substring(S.pos, i).replace(/\\r\\n|\\r|\\u2028|\\u2029/g, '\\n'); // update stream position\n\n          forward(text.length\n          /* doesn't count \\r\\n as 2 char while S.pos - i does */\n          + 2);\n          S.comments_before.push(token(\"comment2\", text, true));\n          S.regex_allowed = regex_allowed;\n          return next_token;\n        });\n\n        function read_name() {\n          var backslash = false,\n              name = \"\",\n              ch,\n              escaped = false,\n              hex;\n\n          while ((ch = peek()) != null) {\n            if (!backslash) {\n              if (ch == \"\\\\\") escaped = backslash = true, next();else if (is_identifier_char(ch)) name += next();else break;\n            } else {\n              if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n              ch = read_escaped_char();\n              if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n              name += ch;\n              backslash = false;\n            }\n          }\n\n          if (KEYWORDS(name) && escaped) {\n            hex = name.charCodeAt(0).toString(16).toUpperCase();\n            name = \"\\\\u\" + \"0000\".substr(hex.length) + hex + name.slice(1);\n          }\n\n          return name;\n        }\n\n        ;\n        var read_regexp = with_eof_error(\"Unterminated regular expression\", function (regexp) {\n          var prev_backslash = false,\n              ch,\n              in_class = false;\n\n          while (ch = next(true)) if (NEWLINE_CHARS(ch)) {\n            parse_error(\"Unexpected line terminator\");\n          } else if (prev_backslash) {\n            regexp += \"\\\\\" + ch;\n            prev_backslash = false;\n          } else if (ch == \"[\") {\n            in_class = true;\n            regexp += ch;\n          } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            regexp += ch;\n          } else if (ch == \"/\" && !in_class) {\n            break;\n          } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n          } else {\n            regexp += ch;\n          }\n\n          var mods = read_name();\n\n          try {\n            return token(\"regexp\", new RegExp(regexp, mods));\n          } catch (e) {\n            parse_error(e.message);\n          }\n        });\n\n        function read_operator(prefix) {\n          function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n\n            if (OPERATORS(bigger)) {\n              next();\n              return grow(bigger);\n            } else {\n              return op;\n            }\n          }\n\n          ;\n          return token(\"operator\", grow(prefix || next()));\n        }\n\n        ;\n\n        function handle_slash() {\n          next();\n\n          switch (peek()) {\n            case \"/\":\n              next();\n              return skip_line_comment(\"comment1\");\n\n            case \"*\":\n              next();\n              return skip_multiline_comment();\n          }\n\n          return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n        }\n\n        ;\n\n        function handle_dot() {\n          next();\n          return is_digit(peek().charCodeAt(0)) ? read_num(\".\") : token(\"punc\", \".\");\n        }\n\n        ;\n\n        function read_word() {\n          var word = read_name();\n          if (prev_was_dot) return token(\"name\", word);\n          return KEYWORDS_ATOM(word) ? token(\"atom\", word) : !KEYWORDS(word) ? token(\"name\", word) : OPERATORS(word) ? token(\"operator\", word) : token(\"keyword\", word);\n        }\n\n        ;\n\n        function with_eof_error(eof_error, cont) {\n          return function (x) {\n            try {\n              return cont(x);\n            } catch (ex) {\n              if (ex === EX_EOF) parse_error(eof_error);else throw ex;\n            }\n          };\n        }\n\n        ;\n\n        function next_token(force_regexp) {\n          if (force_regexp != null) return read_regexp(force_regexp);\n\n          if (shebang && S.pos == 0 && looking_at(\"#!\")) {\n            start_token();\n            forward(2);\n            skip_line_comment(\"comment5\");\n          }\n\n          for (;;) {\n            skip_whitespace();\n            start_token();\n\n            if (html5_comments) {\n              if (looking_at(\"<!--\")) {\n                forward(4);\n                skip_line_comment(\"comment3\");\n                continue;\n              }\n\n              if (looking_at(\"-->\") && S.newline_before) {\n                forward(3);\n                skip_line_comment(\"comment4\");\n                continue;\n              }\n            }\n\n            var ch = peek();\n            if (!ch) return token(\"eof\");\n            var code = ch.charCodeAt(0);\n\n            switch (code) {\n              case 34:\n              case 39:\n                return read_string(ch);\n\n              case 46:\n                return handle_dot();\n\n              case 47:\n                {\n                  var tok = handle_slash();\n                  if (tok === next_token) continue;\n                  return tok;\n                }\n            }\n\n            if (is_digit(code)) return read_num();\n            if (PUNC_CHARS(ch)) return token(\"punc\", next());\n            if (OPERATOR_CHARS(ch)) return read_operator();\n            if (code == 92 || is_identifier_start(code)) return read_word();\n            break;\n          }\n\n          parse_error(\"Unexpected character '\" + ch + \"'\");\n        }\n\n        ;\n\n        next_token.context = function (nc) {\n          if (nc) S = nc;\n          return S;\n        };\n\n        next_token.add_directive = function (directive) {\n          S.directive_stack[S.directive_stack.length - 1].push(directive);\n\n          if (S.directives[directive] === undefined) {\n            S.directives[directive] = 1;\n          } else {\n            S.directives[directive]++;\n          }\n        };\n\n        next_token.push_directives_stack = function () {\n          S.directive_stack.push([]);\n        };\n\n        next_token.pop_directives_stack = function () {\n          var directives = S.directive_stack[S.directive_stack.length - 1];\n\n          for (var i = 0; i < directives.length; i++) {\n            S.directives[directives[i]]--;\n          }\n\n          S.directive_stack.pop();\n        };\n\n        next_token.has_directive = function (directive) {\n          return S.directives[directive] !== undefined && S.directives[directive] > 0;\n        };\n\n        return next_token;\n      }\n\n      ;\n      /* -----[ Parser (constants) ]----- */\n\n      var UNARY_PREFIX = makePredicate([\"typeof\", \"void\", \"delete\", \"--\", \"++\", \"!\", \"~\", \"-\", \"+\"]);\n      var UNARY_POSTFIX = makePredicate([\"--\", \"++\"]);\n      var ASSIGNMENT = makePredicate([\"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\"]);\n\n      var PRECEDENCE = function (a, ret) {\n        for (var i = 0; i < a.length; ++i) {\n          var b = a[i];\n\n          for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n          }\n        }\n\n        return ret;\n      }([[\"||\"], [\"&&\"], [\"|\"], [\"^\"], [\"&\"], [\"==\", \"===\", \"!=\", \"!==\"], [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"], [\">>\", \"<<\", \">>>\"], [\"+\", \"-\"], [\"*\", \"/\", \"%\"]], {});\n\n      var STATEMENTS_WITH_LABELS = array_to_hash([\"for\", \"do\", \"while\", \"switch\"]);\n      var ATOMIC_START_TOKEN = array_to_hash([\"atom\", \"num\", \"string\", \"regexp\", \"name\"]);\n      /* -----[ Parser ]----- */\n\n      function parse($TEXT, options) {\n        options = defaults(options, {\n          bare_returns: false,\n          cli: false,\n          expression: false,\n          filename: null,\n          html5_comments: true,\n          shebang: true,\n          strict: false,\n          toplevel: null\n        });\n        var S = {\n          input: typeof $TEXT == \"string\" ? tokenizer($TEXT, options.filename, options.html5_comments, options.shebang) : $TEXT,\n          token: null,\n          prev: null,\n          peeked: null,\n          in_function: 0,\n          in_directives: true,\n          in_loop: 0,\n          labels: []\n        };\n        S.token = next();\n\n        function is(type, value) {\n          return is_token(S.token, type, value);\n        }\n\n        ;\n\n        function peek() {\n          return S.peeked || (S.peeked = S.input());\n        }\n\n        ;\n\n        function next() {\n          S.prev = S.token;\n\n          if (S.peeked) {\n            S.token = S.peeked;\n            S.peeked = null;\n          } else {\n            S.token = S.input();\n          }\n\n          S.in_directives = S.in_directives && (S.token.type == \"string\" || is(\"punc\", \";\"));\n          return S.token;\n        }\n\n        ;\n\n        function prev() {\n          return S.prev;\n        }\n\n        ;\n\n        function croak(msg, line, col, pos) {\n          var ctx = S.input.context();\n          js_error(msg, ctx.filename, line != null ? line : ctx.tokline, col != null ? col : ctx.tokcol, pos != null ? pos : ctx.tokpos);\n        }\n\n        ;\n\n        function token_error(token, msg) {\n          croak(msg, token.line, token.col);\n        }\n\n        ;\n\n        function unexpected(token) {\n          if (token == null) token = S.token;\n          token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n        }\n\n        ;\n\n        function expect_token(type, val) {\n          if (is(type, val)) {\n            return next();\n          }\n\n          token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n        }\n\n        ;\n\n        function expect(punc) {\n          return expect_token(\"punc\", punc);\n        }\n\n        ;\n\n        function can_insert_semicolon() {\n          return !options.strict && (S.token.nlb || is(\"eof\") || is(\"punc\", \"}\"));\n        }\n\n        ;\n\n        function semicolon(optional) {\n          if (is(\"punc\", \";\")) next();else if (!optional && !can_insert_semicolon()) unexpected();\n        }\n\n        ;\n\n        function parenthesised() {\n          expect(\"(\");\n          var exp = expression(true);\n          expect(\")\");\n          return exp;\n        }\n\n        ;\n\n        function embed_tokens(parser) {\n          return function () {\n            var start = S.token;\n            var expr = parser();\n            var end = prev();\n            expr.start = start;\n            expr.end = end;\n            return expr;\n          };\n        }\n\n        ;\n\n        function handle_regexp() {\n          if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n          }\n        }\n\n        ;\n        var statement = embed_tokens(function () {\n          handle_regexp();\n\n          switch (S.token.type) {\n            case \"string\":\n              if (S.in_directives) {\n                var token = peek();\n\n                if (S.token.raw.indexOf(\"\\\\\") == -1 && (token.nlb || is_token(token, \"eof\") || is_token(token, \"punc\", \";\") || is_token(token, \"punc\", \"}\"))) {\n                  S.input.add_directive(S.token.value);\n                } else {\n                  S.in_directives = false;\n                }\n              }\n\n              var dir = S.in_directives,\n                  stat = simple_statement();\n              return dir ? new AST_Directive(stat.body) : stat;\n\n            case \"num\":\n            case \"regexp\":\n            case \"operator\":\n            case \"atom\":\n              return simple_statement();\n\n            case \"name\":\n              return is_token(peek(), \"punc\", \":\") ? labeled_statement() : simple_statement();\n\n            case \"punc\":\n              switch (S.token.value) {\n                case \"{\":\n                  return new AST_BlockStatement({\n                    start: S.token,\n                    body: block_(),\n                    end: prev()\n                  });\n\n                case \"[\":\n                case \"(\":\n                  return simple_statement();\n\n                case \";\":\n                  S.in_directives = false;\n                  next();\n                  return new AST_EmptyStatement();\n\n                default:\n                  unexpected();\n              }\n\n            case \"keyword\":\n              switch (S.token.value) {\n                case \"break\":\n                  next();\n                  return break_cont(AST_Break);\n\n                case \"continue\":\n                  next();\n                  return break_cont(AST_Continue);\n\n                case \"debugger\":\n                  next();\n                  semicolon();\n                  return new AST_Debugger();\n\n                case \"do\":\n                  next();\n                  var body = in_loop(statement);\n                  expect_token(\"keyword\", \"while\");\n                  var condition = parenthesised();\n                  semicolon(true);\n                  return new AST_Do({\n                    body: body,\n                    condition: condition\n                  });\n\n                case \"while\":\n                  next();\n                  return new AST_While({\n                    condition: parenthesised(),\n                    body: in_loop(statement)\n                  });\n\n                case \"for\":\n                  next();\n                  return for_();\n\n                case \"function\":\n                  next();\n                  return function_(AST_Defun);\n\n                case \"if\":\n                  next();\n                  return if_();\n\n                case \"return\":\n                  if (S.in_function == 0 && !options.bare_returns) croak(\"'return' outside of function\");\n                  next();\n                  var value = null;\n\n                  if (is(\"punc\", \";\")) {\n                    next();\n                  } else if (!can_insert_semicolon()) {\n                    value = expression(true);\n                    semicolon();\n                  }\n\n                  return new AST_Return({\n                    value: value\n                  });\n\n                case \"switch\":\n                  next();\n                  return new AST_Switch({\n                    expression: parenthesised(),\n                    body: in_loop(switch_body_)\n                  });\n\n                case \"throw\":\n                  next();\n                  if (S.token.nlb) croak(\"Illegal newline after 'throw'\");\n                  var value = expression(true);\n                  semicolon();\n                  return new AST_Throw({\n                    value: value\n                  });\n\n                case \"try\":\n                  next();\n                  return try_();\n\n                case \"var\":\n                  next();\n                  var node = var_();\n                  semicolon();\n                  return node;\n\n                case \"const\":\n                  next();\n                  var node = const_();\n                  semicolon();\n                  return node;\n\n                case \"with\":\n                  if (S.input.has_directive(\"use strict\")) {\n                    croak(\"Strict mode may not include a with statement\");\n                  }\n\n                  next();\n                  return new AST_With({\n                    expression: parenthesised(),\n                    body: statement()\n                  });\n              }\n\n          }\n\n          unexpected();\n        });\n\n        function labeled_statement() {\n          var label = as_symbol(AST_Label);\n\n          if (find_if(function (l) {\n            return l.name == label.name;\n          }, S.labels)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n          }\n\n          expect(\":\");\n          S.labels.push(label);\n          var stat = statement();\n          S.labels.pop();\n\n          if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function (ref) {\n              if (ref instanceof AST_Continue) {\n                ref = ref.label.start;\n                croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\", ref.line, ref.col, ref.pos);\n              }\n            });\n          }\n\n          return new AST_LabeledStatement({\n            body: stat,\n            label: label\n          });\n        }\n\n        ;\n\n        function simple_statement(tmp) {\n          return new AST_SimpleStatement({\n            body: (tmp = expression(true), semicolon(), tmp)\n          });\n        }\n\n        ;\n\n        function break_cont(type) {\n          var label = null,\n              ldef;\n\n          if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n          }\n\n          if (label != null) {\n            ldef = find_if(function (l) {\n              return l.name == label.name;\n            }, S.labels);\n            if (!ldef) croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n          } else if (S.in_loop == 0) croak(type.TYPE + \" not inside a loop or switch\");\n\n          semicolon();\n          var stat = new type({\n            label: label\n          });\n          if (ldef) ldef.references.push(stat);\n          return stat;\n        }\n\n        ;\n\n        function for_() {\n          expect(\"(\");\n          var init = null;\n\n          if (!is(\"punc\", \";\")) {\n            init = is(\"keyword\", \"var\") ? (next(), var_(true)) : expression(true, true);\n\n            if (is(\"operator\", \"in\")) {\n              if (init instanceof AST_Var && init.definitions.length > 1) croak(\"Only one variable declaration allowed in for..in loop\");\n              next();\n              return for_in(init);\n            }\n          }\n\n          return regular_for(init);\n        }\n\n        ;\n\n        function regular_for(init) {\n          expect(\";\");\n          var test = is(\"punc\", \";\") ? null : expression(true);\n          expect(\";\");\n          var step = is(\"punc\", \")\") ? null : expression(true);\n          expect(\")\");\n          return new AST_For({\n            init: init,\n            condition: test,\n            step: step,\n            body: in_loop(statement)\n          });\n        }\n\n        ;\n\n        function for_in(init) {\n          var lhs = init instanceof AST_Var ? init.definitions[0].name : null;\n          var obj = expression(true);\n          expect(\")\");\n          return new AST_ForIn({\n            init: init,\n            name: lhs,\n            object: obj,\n            body: in_loop(statement)\n          });\n        }\n\n        ;\n\n        var function_ = function (ctor) {\n          var in_statement = ctor === AST_Defun;\n          var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n          if (in_statement && !name) unexpected();\n          expect(\"(\");\n          return new ctor({\n            name: name,\n            argnames: function (first, a) {\n              while (!is(\"punc\", \")\")) {\n                if (first) first = false;else expect(\",\");\n                a.push(as_symbol(AST_SymbolFunarg));\n              }\n\n              next();\n              return a;\n            }(true, []),\n            body: function (loop, labels) {\n              ++S.in_function;\n              S.in_directives = true;\n              S.input.push_directives_stack();\n              S.in_loop = 0;\n              S.labels = [];\n              var a = block_();\n              S.input.pop_directives_stack();\n              --S.in_function;\n              S.in_loop = loop;\n              S.labels = labels;\n              return a;\n            }(S.in_loop, S.labels)\n          });\n        };\n\n        function if_() {\n          var cond = parenthesised(),\n              body = statement(),\n              belse = null;\n\n          if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement();\n          }\n\n          return new AST_If({\n            condition: cond,\n            body: body,\n            alternative: belse\n          });\n        }\n\n        ;\n\n        function block_() {\n          expect(\"{\");\n          var a = [];\n\n          while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n          }\n\n          next();\n          return a;\n        }\n\n        ;\n\n        function switch_body_() {\n          expect(\"{\");\n          var a = [],\n              cur = null,\n              branch = null,\n              tmp;\n\n          while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n\n            if (is(\"keyword\", \"case\")) {\n              if (branch) branch.end = prev();\n              cur = [];\n              branch = new AST_Case({\n                start: (tmp = S.token, next(), tmp),\n                expression: expression(true),\n                body: cur\n              });\n              a.push(branch);\n              expect(\":\");\n            } else if (is(\"keyword\", \"default\")) {\n              if (branch) branch.end = prev();\n              cur = [];\n              branch = new AST_Default({\n                start: (tmp = S.token, next(), expect(\":\"), tmp),\n                body: cur\n              });\n              a.push(branch);\n            } else {\n              if (!cur) unexpected();\n              cur.push(statement());\n            }\n          }\n\n          if (branch) branch.end = prev();\n          next();\n          return a;\n        }\n\n        ;\n\n        function try_() {\n          var body = block_(),\n              bcatch = null,\n              bfinally = null;\n\n          if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            expect(\"(\");\n            var name = as_symbol(AST_SymbolCatch);\n            expect(\")\");\n            bcatch = new AST_Catch({\n              start: start,\n              argname: name,\n              body: block_(),\n              end: prev()\n            });\n          }\n\n          if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n              start: start,\n              body: block_(),\n              end: prev()\n            });\n          }\n\n          if (!bcatch && !bfinally) croak(\"Missing catch/finally blocks\");\n          return new AST_Try({\n            body: body,\n            bcatch: bcatch,\n            bfinally: bfinally\n          });\n        }\n\n        ;\n\n        function vardefs(no_in, in_const) {\n          var a = [];\n\n          for (;;) {\n            a.push(new AST_VarDef({\n              start: S.token,\n              name: as_symbol(in_const ? AST_SymbolConst : AST_SymbolVar),\n              value: is(\"operator\", \"=\") ? (next(), expression(false, no_in)) : null,\n              end: prev()\n            }));\n            if (!is(\"punc\", \",\")) break;\n            next();\n          }\n\n          return a;\n        }\n\n        ;\n\n        var var_ = function (no_in) {\n          return new AST_Var({\n            start: prev(),\n            definitions: vardefs(no_in, false),\n            end: prev()\n          });\n        };\n\n        var const_ = function () {\n          return new AST_Const({\n            start: prev(),\n            definitions: vardefs(false, true),\n            end: prev()\n          });\n        };\n\n        var new_ = function (allow_calls) {\n          var start = S.token;\n          expect_token(\"operator\", \"new\");\n          var newexp = expr_atom(false),\n              args;\n\n          if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\");\n          } else {\n            args = [];\n          }\n\n          return subscripts(new AST_New({\n            start: start,\n            expression: newexp,\n            args: args,\n            end: prev()\n          }), allow_calls);\n        };\n\n        function as_atom_node() {\n          var tok = S.token,\n              ret;\n\n          switch (tok.type) {\n            case \"name\":\n            case \"keyword\":\n              ret = _make_symbol(AST_SymbolRef);\n              break;\n\n            case \"num\":\n              ret = new AST_Number({\n                start: tok,\n                end: tok,\n                value: tok.value\n              });\n              break;\n\n            case \"string\":\n              ret = new AST_String({\n                start: tok,\n                end: tok,\n                value: tok.value,\n                quote: tok.quote\n              });\n              break;\n\n            case \"regexp\":\n              ret = new AST_RegExp({\n                start: tok,\n                end: tok,\n                value: tok.value\n              });\n              break;\n\n            case \"atom\":\n              switch (tok.value) {\n                case \"false\":\n                  ret = new AST_False({\n                    start: tok,\n                    end: tok\n                  });\n                  break;\n\n                case \"true\":\n                  ret = new AST_True({\n                    start: tok,\n                    end: tok\n                  });\n                  break;\n\n                case \"null\":\n                  ret = new AST_Null({\n                    start: tok,\n                    end: tok\n                  });\n                  break;\n              }\n\n              break;\n\n            case \"operator\":\n              if (!is_identifier_string(tok.value)) {\n                croak(\"Invalid getter/setter name: \" + tok.value, tok.line, tok.col, tok.pos);\n              }\n\n              ret = _make_symbol(AST_SymbolRef);\n              break;\n          }\n\n          next();\n          return ret;\n        }\n\n        ;\n\n        var expr_atom = function (allow_calls) {\n          if (is(\"operator\", \"new\")) {\n            return new_(allow_calls);\n          }\n\n          var start = S.token;\n\n          if (is(\"punc\")) {\n            switch (start.value) {\n              case \"(\":\n                next();\n                var ex = expression(true);\n                ex.start = start;\n                ex.end = S.token;\n                expect(\")\");\n                return subscripts(ex, allow_calls);\n\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n\n              case \"{\":\n                return subscripts(object_(), allow_calls);\n            }\n\n            unexpected();\n          }\n\n          if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n          }\n\n          if (ATOMIC_START_TOKEN[S.token.type]) {\n            return subscripts(as_atom_node(), allow_calls);\n          }\n\n          unexpected();\n        };\n\n        function expr_list(closing, allow_trailing_comma, allow_empty) {\n          var first = true,\n              a = [];\n\n          while (!is(\"punc\", closing)) {\n            if (first) first = false;else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n\n            if (is(\"punc\", \",\") && allow_empty) {\n              a.push(new AST_Hole({\n                start: S.token,\n                end: S.token\n              }));\n            } else {\n              a.push(expression(false));\n            }\n          }\n\n          next();\n          return a;\n        }\n\n        ;\n        var array_ = embed_tokens(function () {\n          expect(\"[\");\n          return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n          });\n        });\n        var create_accessor = embed_tokens(function () {\n          return function_(AST_Accessor);\n        });\n        var object_ = embed_tokens(function () {\n          expect(\"{\");\n          var first = true,\n              a = [];\n\n          while (!is(\"punc\", \"}\")) {\n            if (first) first = false;else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\")) // allow trailing comma\n              break;\n            var start = S.token;\n            var type = start.type;\n            var name = as_property_name();\n\n            if (type == \"name\" && !is(\"punc\", \":\")) {\n              var key = new AST_SymbolAccessor({\n                start: S.token,\n                name: as_property_name(),\n                end: prev()\n              });\n\n              if (name == \"get\") {\n                a.push(new AST_ObjectGetter({\n                  start: start,\n                  key: key,\n                  value: create_accessor(),\n                  end: prev()\n                }));\n                continue;\n              }\n\n              if (name == \"set\") {\n                a.push(new AST_ObjectSetter({\n                  start: start,\n                  key: key,\n                  value: create_accessor(),\n                  end: prev()\n                }));\n                continue;\n              }\n            }\n\n            expect(\":\");\n            a.push(new AST_ObjectKeyVal({\n              start: start,\n              quote: start.quote,\n              key: name,\n              value: expression(false),\n              end: prev()\n            }));\n          }\n\n          next();\n          return new AST_Object({\n            properties: a\n          });\n        });\n\n        function as_property_name() {\n          var tmp = S.token;\n\n          switch (tmp.type) {\n            case \"operator\":\n              if (!KEYWORDS(tmp.value)) unexpected();\n\n            case \"num\":\n            case \"string\":\n            case \"name\":\n            case \"keyword\":\n            case \"atom\":\n              next();\n              return tmp.value;\n\n            default:\n              unexpected();\n          }\n        }\n\n        ;\n\n        function as_name() {\n          var tmp = S.token;\n          if (tmp.type != \"name\") unexpected();\n          next();\n          return tmp.value;\n        }\n\n        ;\n\n        function _make_symbol(type) {\n          var name = S.token.value;\n          return new (name == \"this\" ? AST_This : type)({\n            name: String(name),\n            start: S.token,\n            end: S.token\n          });\n        }\n\n        ;\n\n        function as_symbol(type, noerror) {\n          if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n          }\n\n          var sym = _make_symbol(type);\n\n          next();\n          return sym;\n        }\n\n        ;\n\n        var subscripts = function (expr, allow_calls) {\n          var start = expr.start;\n\n          if (is(\"punc\", \".\")) {\n            next();\n            return subscripts(new AST_Dot({\n              start: start,\n              expression: expr,\n              property: as_name(),\n              end: prev()\n            }), allow_calls);\n          }\n\n          if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n              start: start,\n              expression: expr,\n              property: prop,\n              end: prev()\n            }), allow_calls);\n          }\n\n          if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            return subscripts(new AST_Call({\n              start: start,\n              expression: expr,\n              args: expr_list(\")\"),\n              end: prev()\n            }), true);\n          }\n\n          return expr;\n        };\n\n        var maybe_unary = function (allow_calls) {\n          var start = S.token;\n\n          if (is(\"operator\") && UNARY_PREFIX(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n          }\n\n          var val = expr_atom(allow_calls);\n\n          while (is(\"operator\") && UNARY_POSTFIX(S.token.value) && !S.token.nlb) {\n            val = make_unary(AST_UnaryPostfix, S.token, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n          }\n\n          return val;\n        };\n\n        function make_unary(ctor, token, expr) {\n          var op = token.value;\n          if ((op == \"++\" || op == \"--\") && !is_assignable(expr)) croak(\"Invalid use of \" + op + \" operator\", token.line, token.col, token.pos);\n          return new ctor({\n            operator: op,\n            expression: expr\n          });\n        }\n\n        ;\n\n        var expr_op = function (left, min_prec, no_in) {\n          var op = is(\"operator\") ? S.token.value : null;\n          if (op == \"in\" && no_in) op = null;\n          var prec = op != null ? PRECEDENCE[op] : null;\n\n          if (prec != null && prec > min_prec) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n              start: left.start,\n              left: left,\n              operator: op,\n              right: right,\n              end: right.end\n            }), min_prec, no_in);\n          }\n\n          return left;\n        };\n\n        function expr_ops(no_in) {\n          return expr_op(maybe_unary(true), 0, no_in);\n        }\n\n        ;\n\n        var maybe_conditional = function (no_in) {\n          var start = S.token;\n          var expr = expr_ops(no_in);\n\n          if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n              start: start,\n              condition: expr,\n              consequent: yes,\n              alternative: expression(false, no_in),\n              end: prev()\n            });\n          }\n\n          return expr;\n        };\n\n        function is_assignable(expr) {\n          if (options.cli) return true;\n          return expr instanceof AST_PropAccess || expr instanceof AST_SymbolRef;\n        }\n\n        ;\n\n        var maybe_assign = function (no_in) {\n          var start = S.token;\n          var left = maybe_conditional(no_in),\n              val = S.token.value;\n\n          if (is(\"operator\") && ASSIGNMENT(val)) {\n            if (is_assignable(left)) {\n              next();\n              return new AST_Assign({\n                start: start,\n                left: left,\n                operator: val,\n                right: maybe_assign(no_in),\n                end: prev()\n              });\n            }\n\n            croak(\"Invalid assignment\");\n          }\n\n          return left;\n        };\n\n        var expression = function (commas, no_in) {\n          var start = S.token;\n          var expr = maybe_assign(no_in);\n\n          if (commas && is(\"punc\", \",\")) {\n            next();\n            return new AST_Seq({\n              start: start,\n              car: expr,\n              cdr: expression(true, no_in),\n              end: peek()\n            });\n          }\n\n          return expr;\n        };\n\n        function in_loop(cont) {\n          ++S.in_loop;\n          var ret = cont();\n          --S.in_loop;\n          return ret;\n        }\n\n        ;\n\n        if (options.expression) {\n          return expression(true);\n        }\n\n        return function () {\n          var start = S.token;\n          var body = [];\n          S.input.push_directives_stack();\n\n          while (!is(\"eof\")) body.push(statement());\n\n          S.input.pop_directives_stack();\n          var end = prev();\n          var toplevel = options.toplevel;\n\n          if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n          } else {\n            toplevel = new AST_Toplevel({\n              start: start,\n              body: body,\n              end: end\n            });\n          }\n\n          return toplevel;\n        }();\n      }\n\n      ;\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n      \"use strict\"; // Tree transformer helpers.\n\n\n      function TreeTransformer(before, after) {\n        TreeWalker.call(this);\n        this.before = before;\n        this.after = after;\n      }\n\n      TreeTransformer.prototype = new TreeWalker();\n\n      (function (undefined) {\n        function _(node, descend) {\n          node.DEFMETHOD(\"transform\", function (tw, in_list) {\n            var x, y;\n            tw.push(this);\n            if (tw.before) x = tw.before(this, descend, in_list);\n\n            if (x === undefined) {\n              if (!tw.after) {\n                x = this;\n                descend(x, tw);\n              } else {\n                tw.stack[tw.stack.length - 1] = x = this;\n                descend(x, tw);\n                y = tw.after(x, in_list);\n                if (y !== undefined) x = y;\n              }\n            }\n\n            tw.pop(this);\n            return x;\n          });\n        }\n\n        ;\n\n        function do_list(list, tw) {\n          return MAP(list, function (node) {\n            return node.transform(tw, true);\n          });\n        }\n\n        ;\n\n        _(AST_Node, noop);\n\n        _(AST_LabeledStatement, function (self, tw) {\n          self.label = self.label.transform(tw);\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_SimpleStatement, function (self, tw) {\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_Block, function (self, tw) {\n          self.body = do_list(self.body, tw);\n        });\n\n        _(AST_DWLoop, function (self, tw) {\n          self.condition = self.condition.transform(tw);\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_For, function (self, tw) {\n          if (self.init) self.init = self.init.transform(tw);\n          if (self.condition) self.condition = self.condition.transform(tw);\n          if (self.step) self.step = self.step.transform(tw);\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_ForIn, function (self, tw) {\n          self.init = self.init.transform(tw);\n          self.object = self.object.transform(tw);\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_With, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n          self.body = self.body.transform(tw);\n        });\n\n        _(AST_Exit, function (self, tw) {\n          if (self.value) self.value = self.value.transform(tw);\n        });\n\n        _(AST_LoopControl, function (self, tw) {\n          if (self.label) self.label = self.label.transform(tw);\n        });\n\n        _(AST_If, function (self, tw) {\n          self.condition = self.condition.transform(tw);\n          self.body = self.body.transform(tw);\n          if (self.alternative) self.alternative = self.alternative.transform(tw);\n        });\n\n        _(AST_Switch, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n          self.body = do_list(self.body, tw);\n        });\n\n        _(AST_Case, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n          self.body = do_list(self.body, tw);\n        });\n\n        _(AST_Try, function (self, tw) {\n          self.body = do_list(self.body, tw);\n          if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n          if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n        });\n\n        _(AST_Catch, function (self, tw) {\n          self.argname = self.argname.transform(tw);\n          self.body = do_list(self.body, tw);\n        });\n\n        _(AST_Definitions, function (self, tw) {\n          self.definitions = do_list(self.definitions, tw);\n        });\n\n        _(AST_VarDef, function (self, tw) {\n          self.name = self.name.transform(tw);\n          if (self.value) self.value = self.value.transform(tw);\n        });\n\n        _(AST_Lambda, function (self, tw) {\n          if (self.name) self.name = self.name.transform(tw);\n          self.argnames = do_list(self.argnames, tw);\n          self.body = do_list(self.body, tw);\n        });\n\n        _(AST_Call, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n          self.args = do_list(self.args, tw);\n        });\n\n        _(AST_Seq, function (self, tw) {\n          self.car = self.car.transform(tw);\n          self.cdr = self.cdr.transform(tw);\n        });\n\n        _(AST_Dot, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n        });\n\n        _(AST_Sub, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n          self.property = self.property.transform(tw);\n        });\n\n        _(AST_Unary, function (self, tw) {\n          self.expression = self.expression.transform(tw);\n        });\n\n        _(AST_Binary, function (self, tw) {\n          self.left = self.left.transform(tw);\n          self.right = self.right.transform(tw);\n        });\n\n        _(AST_Conditional, function (self, tw) {\n          self.condition = self.condition.transform(tw);\n          self.consequent = self.consequent.transform(tw);\n          self.alternative = self.alternative.transform(tw);\n        });\n\n        _(AST_Array, function (self, tw) {\n          self.elements = do_list(self.elements, tw);\n        });\n\n        _(AST_Object, function (self, tw) {\n          self.properties = do_list(self.properties, tw);\n        });\n\n        _(AST_ObjectProperty, function (self, tw) {\n          self.value = self.value.transform(tw);\n        });\n      })();\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n\n      \"use strict\";\n\n      function SymbolDef(scope, index, orig) {\n        this.name = orig.name;\n        this.orig = [orig];\n        this.scope = scope;\n        this.references = [];\n        this.global = false;\n        this.mangled_name = null;\n        this.undeclared = false;\n        this.index = index;\n        this.id = SymbolDef.next_id++;\n      }\n\n      ;\n      SymbolDef.next_id = 1;\n      SymbolDef.prototype = {\n        unmangleable: function (options) {\n          if (!options) options = {};\n          return this.global && !options.toplevel || this.undeclared || !options.eval && (this.scope.uses_eval || this.scope.uses_with) || options.keep_fnames && (this.orig[0] instanceof AST_SymbolLambda || this.orig[0] instanceof AST_SymbolDefun);\n        },\n        mangle: function (options) {\n          var cache = options.cache && options.cache.props;\n\n          if (this.global && cache && cache.has(this.name)) {\n            this.mangled_name = cache.get(this.name);\n          } else if (!this.mangled_name && !this.unmangleable(options)) {\n            var s = this.scope;\n            var sym = this.orig[0];\n            if (!options.screw_ie8 && sym instanceof AST_SymbolLambda) s = s.parent_scope;\n            var def;\n\n            if (this.defun && (def = this.defun.variables.get(this.name))) {\n              this.mangled_name = def.mangled_name || def.name;\n            } else this.mangled_name = s.next_mangled(options, this);\n\n            if (this.global && cache) {\n              cache.set(this.name, this.mangled_name);\n            }\n          }\n        }\n      };\n      AST_Toplevel.DEFMETHOD(\"figure_out_scope\", function (options) {\n        options = defaults(options, {\n          cache: null,\n          screw_ie8: true\n        }); // pass 1: setup scope chaining and handle definitions\n\n        var self = this;\n        var scope = self.parent_scope = null;\n        var labels = new Dictionary();\n        var defun = null;\n        var tw = new TreeWalker(function (node, descend) {\n          if (node instanceof AST_Catch) {\n            var save_scope = scope;\n            scope = new AST_Scope(node);\n            scope.init_scope_vars(save_scope);\n            descend();\n            scope = save_scope;\n            return true;\n          }\n\n          if (node instanceof AST_Scope) {\n            node.init_scope_vars(scope);\n            var save_scope = scope;\n            var save_defun = defun;\n            var save_labels = labels;\n            defun = scope = node;\n            labels = new Dictionary();\n            descend();\n            scope = save_scope;\n            defun = save_defun;\n            labels = save_labels;\n            return true; // don't descend again in TreeWalker\n          }\n\n          if (node instanceof AST_LabeledStatement) {\n            var l = node.label;\n\n            if (labels.has(l.name)) {\n              throw new Error(string_template(\"Label {name} defined twice\", l));\n            }\n\n            labels.set(l.name, l);\n            descend();\n            labels.del(l.name);\n            return true; // no descend again\n          }\n\n          if (node instanceof AST_With) {\n            for (var s = scope; s; s = s.parent_scope) s.uses_with = true;\n\n            return;\n          }\n\n          if (node instanceof AST_Symbol) {\n            node.scope = scope;\n          }\n\n          if (node instanceof AST_Label) {\n            node.thedef = node;\n            node.references = [];\n          }\n\n          if (node instanceof AST_SymbolLambda) {\n            defun.def_function(node);\n          } else if (node instanceof AST_SymbolDefun) {\n            // Careful here, the scope where this should be defined is\n            // the parent scope.  The reason is that we enter a new\n            // scope when we encounter the AST_Defun node (which is\n            // instanceof AST_Scope) but we get to the symbol a bit\n            // later.\n            (node.scope = defun.parent_scope).def_function(node);\n          } else if (node instanceof AST_SymbolVar || node instanceof AST_SymbolConst) {\n            defun.def_variable(node);\n\n            if (defun !== scope) {\n              node.mark_enclosed(options);\n              var def = scope.find_variable(node);\n\n              if (node.thedef !== def) {\n                node.thedef = def;\n                node.reference(options);\n              }\n            }\n          } else if (node instanceof AST_SymbolCatch) {\n            scope.def_variable(node).defun = defun;\n          } else if (node instanceof AST_LabelRef) {\n            var sym = labels.get(node.name);\n            if (!sym) throw new Error(string_template(\"Undefined label {name} [{line},{col}]\", {\n              name: node.name,\n              line: node.start.line,\n              col: node.start.col\n            }));\n            node.thedef = sym;\n          }\n        });\n        self.walk(tw); // pass 2: find back references and eval\n\n        var func = null;\n        var globals = self.globals = new Dictionary();\n        var tw = new TreeWalker(function (node, descend) {\n          if (node instanceof AST_Lambda) {\n            var prev_func = func;\n            func = node;\n            descend();\n            func = prev_func;\n            return true;\n          }\n\n          if (node instanceof AST_LoopControl && node.label) {\n            node.label.thedef.references.push(node);\n            return true;\n          }\n\n          if (node instanceof AST_SymbolRef) {\n            var name = node.name;\n\n            if (name == \"eval\" && tw.parent() instanceof AST_Call) {\n              for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope) {\n                s.uses_eval = true;\n              }\n            }\n\n            var sym = node.scope.find_variable(name);\n\n            if (node.scope instanceof AST_Lambda && name == \"arguments\") {\n              node.scope.uses_arguments = true;\n            }\n\n            if (!sym) {\n              sym = self.def_global(node);\n            }\n\n            node.thedef = sym;\n            node.reference(options);\n            return true;\n          }\n        });\n        self.walk(tw); // pass 3: fix up any scoping issue with IE8\n\n        if (!options.screw_ie8) {\n          self.walk(new TreeWalker(function (node, descend) {\n            if (node instanceof AST_SymbolCatch) {\n              var name = node.name;\n              var refs = node.thedef.references;\n              var scope = node.thedef.defun;\n              var def = scope.find_variable(name) || self.globals.get(name) || scope.def_variable(node);\n              refs.forEach(function (ref) {\n                ref.thedef = def;\n                ref.reference(options);\n              });\n              node.thedef = def;\n              return true;\n            }\n          }));\n        }\n\n        if (options.cache) {\n          this.cname = options.cache.cname;\n        }\n      });\n      AST_Toplevel.DEFMETHOD(\"def_global\", function (node) {\n        var globals = this.globals,\n            name = node.name;\n\n        if (globals.has(name)) {\n          return globals.get(name);\n        } else {\n          var g = new SymbolDef(this, globals.size(), node);\n          g.undeclared = true;\n          g.global = true;\n          globals.set(name, g);\n          return g;\n        }\n      });\n      AST_Scope.DEFMETHOD(\"init_scope_vars\", function (parent_scope) {\n        this.variables = new Dictionary(); // map name to AST_SymbolVar (variables defined in this scope; includes functions)\n\n        this.functions = new Dictionary(); // map name to AST_SymbolDefun (functions defined in this scope)\n\n        this.uses_with = false; // will be set to true if this or some nested scope uses the `with` statement\n\n        this.uses_eval = false; // will be set to true if this or nested scope uses the global `eval`\n\n        this.parent_scope = parent_scope; // the parent scope\n\n        this.enclosed = []; // a list of variables from this or outer scope(s) that are referenced from this or inner scopes\n\n        this.cname = -1; // the current index for mangling functions/variables\n      });\n      AST_Lambda.DEFMETHOD(\"init_scope_vars\", function () {\n        AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n        this.uses_arguments = false;\n        this.def_variable(new AST_SymbolVar({\n          name: \"arguments\",\n          start: this.start,\n          end: this.end\n        }));\n      });\n      AST_Symbol.DEFMETHOD(\"mark_enclosed\", function (options) {\n        var def = this.definition();\n        var s = this.scope;\n\n        while (s) {\n          push_uniq(s.enclosed, def);\n\n          if (options.keep_fnames) {\n            s.functions.each(function (d) {\n              push_uniq(def.scope.enclosed, d);\n            });\n          }\n\n          if (s === def.scope) break;\n          s = s.parent_scope;\n        }\n      });\n      AST_Symbol.DEFMETHOD(\"reference\", function (options) {\n        this.definition().references.push(this);\n        this.mark_enclosed(options);\n      });\n      AST_Scope.DEFMETHOD(\"find_variable\", function (name) {\n        if (name instanceof AST_Symbol) name = name.name;\n        return this.variables.get(name) || this.parent_scope && this.parent_scope.find_variable(name);\n      });\n      AST_Scope.DEFMETHOD(\"def_function\", function (symbol) {\n        this.functions.set(symbol.name, this.def_variable(symbol));\n      });\n      AST_Scope.DEFMETHOD(\"def_variable\", function (symbol) {\n        var def;\n\n        if (!this.variables.has(symbol.name)) {\n          def = new SymbolDef(this, this.variables.size(), symbol);\n          this.variables.set(symbol.name, def);\n          def.global = !this.parent_scope;\n        } else {\n          def = this.variables.get(symbol.name);\n          def.orig.push(symbol);\n        }\n\n        return symbol.thedef = def;\n      });\n      AST_Scope.DEFMETHOD(\"next_mangled\", function (options) {\n        var ext = this.enclosed;\n\n        out: while (true) {\n          var m = base54(++this.cname);\n          if (!is_identifier(m)) continue; // skip over \"do\"\n          // https://github.com/mishoo/UglifyJS2/issues/242 -- do not\n          // shadow a name excepted from mangling.\n\n          if (options.except.indexOf(m) >= 0) continue; // we must ensure that the mangled name does not shadow a name\n          // from some parent scope that is referenced in this or in\n          // inner scopes.\n\n          for (var i = ext.length; --i >= 0;) {\n            var sym = ext[i];\n            var name = sym.mangled_name || sym.unmangleable(options) && sym.name;\n            if (m == name) continue out;\n          }\n\n          return m;\n        }\n      });\n      AST_Function.DEFMETHOD(\"next_mangled\", function (options, def) {\n        // #179, #326\n        // in Safari strict mode, something like (function x(x){...}) is a syntax error;\n        // a function expression's argument cannot shadow the function expression's name\n        var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition(); // the function's mangled_name is null when keep_fnames is true\n\n        var tricky_name = tricky_def ? tricky_def.mangled_name || tricky_def.name : null;\n\n        while (true) {\n          var name = AST_Lambda.prototype.next_mangled.call(this, options, def);\n          if (!tricky_name || tricky_name != name) return name;\n        }\n      });\n      AST_Symbol.DEFMETHOD(\"unmangleable\", function (options) {\n        return this.definition().unmangleable(options);\n      }); // labels are always mangleable\n\n      AST_Label.DEFMETHOD(\"unmangleable\", function () {\n        return false;\n      });\n      AST_Symbol.DEFMETHOD(\"unreferenced\", function () {\n        return this.definition().references.length == 0 && !(this.scope.uses_eval || this.scope.uses_with);\n      });\n      AST_Symbol.DEFMETHOD(\"undeclared\", function () {\n        return this.definition().undeclared;\n      });\n      AST_LabelRef.DEFMETHOD(\"undeclared\", function () {\n        return false;\n      });\n      AST_Label.DEFMETHOD(\"undeclared\", function () {\n        return false;\n      });\n      AST_Symbol.DEFMETHOD(\"definition\", function () {\n        return this.thedef;\n      });\n      AST_Symbol.DEFMETHOD(\"global\", function () {\n        return this.definition().global;\n      });\n      AST_Toplevel.DEFMETHOD(\"_default_mangler_options\", function (options) {\n        return defaults(options, {\n          eval: false,\n          except: [],\n          keep_fnames: false,\n          screw_ie8: true,\n          sort: false,\n          // Ignored. Flag retained for backwards compatibility.\n          toplevel: false\n        });\n      });\n      AST_Toplevel.DEFMETHOD(\"mangle_names\", function (options) {\n        options = this._default_mangler_options(options); // Never mangle arguments\n\n        options.except.push('arguments'); // We only need to mangle declaration nodes.  Special logic wired\n        // into the code generator will display the mangled name if it's\n        // present (and for AST_SymbolRef-s it'll use the mangled name of\n        // the AST_SymbolDeclaration that it points to).\n\n        var lname = -1;\n        var to_mangle = [];\n\n        if (options.cache) {\n          this.globals.each(function (symbol) {\n            if (options.except.indexOf(symbol.name) < 0) {\n              to_mangle.push(symbol);\n            }\n          });\n        }\n\n        var tw = new TreeWalker(function (node, descend) {\n          if (node instanceof AST_LabeledStatement) {\n            // lname is incremented when we get to the AST_Label\n            var save_nesting = lname;\n            descend();\n            lname = save_nesting;\n            return true; // don't descend again in TreeWalker\n          }\n\n          if (node instanceof AST_Scope) {\n            var p = tw.parent(),\n                a = [];\n            node.variables.each(function (symbol) {\n              if (options.except.indexOf(symbol.name) < 0) {\n                a.push(symbol);\n              }\n            });\n            to_mangle.push.apply(to_mangle, a);\n            return;\n          }\n\n          if (node instanceof AST_Label) {\n            var name;\n\n            do name = base54(++lname); while (!is_identifier(name));\n\n            node.mangled_name = name;\n            return true;\n          }\n\n          if (options.screw_ie8 && node instanceof AST_SymbolCatch) {\n            to_mangle.push(node.definition());\n            return;\n          }\n        });\n        this.walk(tw);\n        to_mangle.forEach(function (def) {\n          def.mangle(options);\n        });\n\n        if (options.cache) {\n          options.cache.cname = this.cname;\n        }\n      });\n      AST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function (options) {\n        options = this._default_mangler_options(options);\n        var tw = new TreeWalker(function (node) {\n          if (node instanceof AST_Constant) base54.consider(node.print_to_string());else if (node instanceof AST_Return) base54.consider(\"return\");else if (node instanceof AST_Throw) base54.consider(\"throw\");else if (node instanceof AST_Continue) base54.consider(\"continue\");else if (node instanceof AST_Break) base54.consider(\"break\");else if (node instanceof AST_Debugger) base54.consider(\"debugger\");else if (node instanceof AST_Directive) base54.consider(node.value);else if (node instanceof AST_While) base54.consider(\"while\");else if (node instanceof AST_Do) base54.consider(\"do while\");else if (node instanceof AST_If) {\n            base54.consider(\"if\");\n            if (node.alternative) base54.consider(\"else\");\n          } else if (node instanceof AST_Var) base54.consider(\"var\");else if (node instanceof AST_Const) base54.consider(\"const\");else if (node instanceof AST_Lambda) base54.consider(\"function\");else if (node instanceof AST_For) base54.consider(\"for\");else if (node instanceof AST_ForIn) base54.consider(\"for in\");else if (node instanceof AST_Switch) base54.consider(\"switch\");else if (node instanceof AST_Case) base54.consider(\"case\");else if (node instanceof AST_Default) base54.consider(\"default\");else if (node instanceof AST_With) base54.consider(\"with\");else if (node instanceof AST_ObjectSetter) base54.consider(\"set\" + node.key);else if (node instanceof AST_ObjectGetter) base54.consider(\"get\" + node.key);else if (node instanceof AST_ObjectKeyVal) base54.consider(node.key);else if (node instanceof AST_New) base54.consider(\"new\");else if (node instanceof AST_This) base54.consider(\"this\");else if (node instanceof AST_Try) base54.consider(\"try\");else if (node instanceof AST_Catch) base54.consider(\"catch\");else if (node instanceof AST_Finally) base54.consider(\"finally\");else if (node instanceof AST_Symbol && node.unmangleable(options)) base54.consider(node.name);else if (node instanceof AST_Unary || node instanceof AST_Binary) base54.consider(node.operator);else if (node instanceof AST_Dot) base54.consider(node.property);\n        });\n        this.walk(tw);\n        base54.sort();\n      });\n\n      var base54 = function () {\n        var string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789\";\n        var chars, frequency;\n\n        function reset() {\n          frequency = Object.create(null);\n          chars = string.split(\"\").map(function (ch) {\n            return ch.charCodeAt(0);\n          });\n          chars.forEach(function (ch) {\n            frequency[ch] = 0;\n          });\n        }\n\n        base54.consider = function (str) {\n          for (var i = str.length; --i >= 0;) {\n            var code = str.charCodeAt(i);\n            if (code in frequency) ++frequency[code];\n          }\n        };\n\n        base54.sort = function () {\n          chars = mergeSort(chars, function (a, b) {\n            if (is_digit(a) && !is_digit(b)) return 1;\n            if (is_digit(b) && !is_digit(a)) return -1;\n            return frequency[b] - frequency[a];\n          });\n        };\n\n        base54.reset = reset;\n        reset();\n\n        base54.get = function () {\n          return chars;\n        };\n\n        base54.freq = function () {\n          return frequency;\n        };\n\n        function base54(num) {\n          var ret = \"\",\n              base = 54;\n          num++;\n\n          do {\n            num--;\n            ret += String.fromCharCode(chars[num % base]);\n            num = Math.floor(num / base);\n            base = 64;\n          } while (num > 0);\n\n          return ret;\n        }\n\n        ;\n        return base54;\n      }();\n\n      AST_Toplevel.DEFMETHOD(\"scope_warnings\", function (options) {\n        options = defaults(options, {\n          assign_to_global: true,\n          eval: true,\n          func_arguments: true,\n          nested_defuns: true,\n          undeclared: false,\n          // this makes a lot of noise\n          unreferenced: true\n        });\n        var tw = new TreeWalker(function (node) {\n          if (options.undeclared && node instanceof AST_SymbolRef && node.undeclared()) {\n            // XXX: this also warns about JS standard names,\n            // i.e. Object, Array, parseInt etc.  Should add a list of\n            // exceptions.\n            AST_Node.warn(\"Undeclared symbol: {name} [{file}:{line},{col}]\", {\n              name: node.name,\n              file: node.start.file,\n              line: node.start.line,\n              col: node.start.col\n            });\n          }\n\n          if (options.assign_to_global) {\n            var sym = null;\n            if (node instanceof AST_Assign && node.left instanceof AST_SymbolRef) sym = node.left;else if (node instanceof AST_ForIn && node.init instanceof AST_SymbolRef) sym = node.init;\n\n            if (sym && (sym.undeclared() || sym.global() && sym.scope !== sym.definition().scope)) {\n              AST_Node.warn(\"{msg}: {name} [{file}:{line},{col}]\", {\n                msg: sym.undeclared() ? \"Accidental global?\" : \"Assignment to global\",\n                name: sym.name,\n                file: sym.start.file,\n                line: sym.start.line,\n                col: sym.start.col\n              });\n            }\n          }\n\n          if (options.eval && node instanceof AST_SymbolRef && node.undeclared() && node.name == \"eval\") {\n            AST_Node.warn(\"Eval is used [{file}:{line},{col}]\", node.start);\n          }\n\n          if (options.unreferenced && (node instanceof AST_SymbolDeclaration || node instanceof AST_Label) && !(node instanceof AST_SymbolCatch) && node.unreferenced()) {\n            AST_Node.warn(\"{type} {name} is declared but not referenced [{file}:{line},{col}]\", {\n              type: node instanceof AST_Label ? \"Label\" : \"Symbol\",\n              name: node.name,\n              file: node.start.file,\n              line: node.start.line,\n              col: node.start.col\n            });\n          }\n\n          if (options.func_arguments && node instanceof AST_Lambda && node.uses_arguments) {\n            AST_Node.warn(\"arguments used in function {name} [{file}:{line},{col}]\", {\n              name: node.name ? node.name.name : \"anonymous\",\n              file: node.start.file,\n              line: node.start.line,\n              col: node.start.col\n            });\n          }\n\n          if (options.nested_defuns && node instanceof AST_Defun && !(tw.parent() instanceof AST_Scope)) {\n            AST_Node.warn(\"Function {name} declared in nested statement \\\"{type}\\\" [{file}:{line},{col}]\", {\n              name: node.name.name,\n              type: tw.parent().TYPE,\n              file: node.start.file,\n              line: node.start.line,\n              col: node.start.col\n            });\n          }\n        });\n        this.walk(tw);\n      });\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n      \"use strict\";\n\n      var EXPECT_DIRECTIVE = /^$|[;{][\\s\\n]*$/;\n\n      function is_some_comments(comment) {\n        // multiline comment\n        return comment.type == \"comment2\" && /@preserve|@license|@cc_on/i.test(comment.value);\n      }\n\n      function OutputStream(options) {\n        options = defaults(options, {\n          ascii_only: false,\n          beautify: false,\n          bracketize: false,\n          comments: false,\n          indent_level: 4,\n          indent_start: 0,\n          inline_script: true,\n          keep_quoted_props: false,\n          max_line_len: false,\n          preamble: null,\n          preserve_line: false,\n          quote_keys: false,\n          quote_style: 0,\n          screw_ie8: true,\n          semicolons: true,\n          shebang: true,\n          source_map: null,\n          space_colon: true,\n          unescape_regexps: false,\n          width: 80,\n          wrap_iife: false\n        }, true); // Convert comment option to RegExp if neccessary and set up comments filter\n\n        var comment_filter = return_false; // Default case, throw all comments away\n\n        if (options.comments) {\n          var comments = options.comments;\n\n          if (typeof options.comments === \"string\" && /^\\/.*\\/[a-zA-Z]*$/.test(options.comments)) {\n            var regex_pos = options.comments.lastIndexOf(\"/\");\n            comments = new RegExp(options.comments.substr(1, regex_pos - 1), options.comments.substr(regex_pos + 1));\n          }\n\n          if (comments instanceof RegExp) {\n            comment_filter = function (comment) {\n              return comment.type != \"comment5\" && comments.test(comment.value);\n            };\n          } else if (typeof comments === \"function\") {\n            comment_filter = function (comment) {\n              return comment.type != \"comment5\" && comments(this, comment);\n            };\n          } else if (comments === \"some\") {\n            comment_filter = is_some_comments;\n          } else {\n            // NOTE includes \"all\" option\n            comment_filter = return_true;\n          }\n        }\n\n        var indentation = 0;\n        var current_col = 0;\n        var current_line = 1;\n        var current_pos = 0;\n        var OUTPUT = \"\";\n\n        function to_ascii(str, identifier) {\n          return str.replace(/[\\u0000-\\u001f\\u007f-\\uffff]/g, function (ch) {\n            var code = ch.charCodeAt(0).toString(16);\n\n            if (code.length <= 2 && !identifier) {\n              while (code.length < 2) code = \"0\" + code;\n\n              return \"\\\\x\" + code;\n            } else {\n              while (code.length < 4) code = \"0\" + code;\n\n              return \"\\\\u\" + code;\n            }\n          });\n        }\n\n        ;\n\n        function make_string(str, quote) {\n          var dq = 0,\n              sq = 0;\n          str = str.replace(/[\\\\\\b\\f\\n\\r\\v\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g, function (s, i) {\n            switch (s) {\n              case '\"':\n                ++dq;\n                return '\"';\n\n              case \"'\":\n                ++sq;\n                return \"'\";\n\n              case \"\\\\\":\n                return \"\\\\\\\\\";\n\n              case \"\\n\":\n                return \"\\\\n\";\n\n              case \"\\r\":\n                return \"\\\\r\";\n\n              case \"\\t\":\n                return \"\\\\t\";\n\n              case \"\\b\":\n                return \"\\\\b\";\n\n              case \"\\f\":\n                return \"\\\\f\";\n\n              case \"\\x0B\":\n                return options.screw_ie8 ? \"\\\\v\" : \"\\\\x0B\";\n\n              case \"\\u2028\":\n                return \"\\\\u2028\";\n\n              case \"\\u2029\":\n                return \"\\\\u2029\";\n\n              case \"\\ufeff\":\n                return \"\\\\ufeff\";\n\n              case \"\\0\":\n                return /[0-7]/.test(str.charAt(i + 1)) ? \"\\\\x00\" : \"\\\\0\";\n            }\n\n            return s;\n          });\n\n          function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n          }\n\n          function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n          }\n\n          if (options.ascii_only) str = to_ascii(str);\n\n          switch (options.quote_style) {\n            case 1:\n              return quote_single();\n\n            case 2:\n              return quote_double();\n\n            case 3:\n              return quote == \"'\" ? quote_single() : quote_double();\n\n            default:\n              return dq > sq ? quote_single() : quote_double();\n          }\n        }\n\n        ;\n\n        function encode_string(str, quote) {\n          var ret = make_string(str, quote);\n\n          if (options.inline_script) {\n            ret = ret.replace(/<\\x2fscript([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n            ret = ret.replace(/\\x3c!--/g, \"\\\\x3c!--\");\n            ret = ret.replace(/--\\x3e/g, \"--\\\\x3e\");\n          }\n\n          return ret;\n        }\n\n        ;\n\n        function make_name(name) {\n          name = name.toString();\n          if (options.ascii_only) name = to_ascii(name, true);\n          return name;\n        }\n\n        ;\n\n        function make_indent(back) {\n          return repeat_string(\" \", options.indent_start + indentation - back * options.indent_level);\n        }\n\n        ;\n        /* -----[ beautification/minification ]----- */\n\n        var might_need_space = false;\n        var might_need_semicolon = false;\n        var might_add_newline = 0;\n        var last = \"\";\n        var ensure_line_len = options.max_line_len ? function () {\n          if (current_col > options.max_line_len) {\n            if (might_add_newline) {\n              var left = OUTPUT.slice(0, might_add_newline);\n              var right = OUTPUT.slice(might_add_newline);\n              OUTPUT = left + \"\\n\" + right;\n              current_line++;\n              current_pos++;\n              current_col = right.length;\n            }\n\n            if (current_col > options.max_line_len) {\n              AST_Node.warn(\"Output exceeds {max_line_len} characters\", options);\n            }\n          }\n\n          might_add_newline = 0;\n        } : noop;\n        var requireSemicolonChars = makePredicate(\"( [ + * / - , .\");\n\n        function print(str) {\n          str = String(str);\n          var ch = str.charAt(0);\n          var prev = last.charAt(last.length - 1);\n\n          if (might_need_semicolon) {\n            might_need_semicolon = false;\n\n            if (prev == \":\" && ch == \"}\" || (!ch || \";}\".indexOf(ch) < 0) && prev != \";\") {\n              if (options.semicolons || requireSemicolonChars(ch)) {\n                OUTPUT += \";\";\n                current_col++;\n                current_pos++;\n              } else {\n                ensure_line_len();\n                OUTPUT += \"\\n\";\n                current_pos++;\n                current_line++;\n                current_col = 0;\n\n                if (/^\\s+$/.test(str)) {\n                  // reset the semicolon flag, since we didn't print one\n                  // now and might still have to later\n                  might_need_semicolon = true;\n                }\n              }\n\n              if (!options.beautify) might_need_space = false;\n            }\n          }\n\n          if (!options.beautify && options.preserve_line && stack[stack.length - 1]) {\n            var target_line = stack[stack.length - 1].start.line;\n\n            while (current_line < target_line) {\n              ensure_line_len();\n              OUTPUT += \"\\n\";\n              current_pos++;\n              current_line++;\n              current_col = 0;\n              might_need_space = false;\n            }\n          }\n\n          if (might_need_space) {\n            if (is_identifier_char(prev) && (is_identifier_char(ch) || ch == \"\\\\\") || ch == \"/\" && ch == prev || (ch == \"+\" || ch == \"-\") && ch == last) {\n              OUTPUT += \" \";\n              current_col++;\n              current_pos++;\n            }\n\n            might_need_space = false;\n          }\n\n          OUTPUT += str;\n          current_pos += str.length;\n          var a = str.split(/\\r?\\n/),\n              n = a.length - 1;\n          current_line += n;\n          current_col += a[0].length;\n\n          if (n > 0) {\n            ensure_line_len();\n            current_col = a[n].length;\n          }\n\n          last = str;\n        }\n\n        ;\n        var space = options.beautify ? function () {\n          print(\" \");\n        } : function () {\n          might_need_space = true;\n        };\n        var indent = options.beautify ? function (half) {\n          if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n          }\n        } : noop;\n        var with_indent = options.beautify ? function (col, cont) {\n          if (col === true) col = next_indent();\n          var save_indentation = indentation;\n          indentation = col;\n          var ret = cont();\n          indentation = save_indentation;\n          return ret;\n        } : function (col, cont) {\n          return cont();\n        };\n        var newline = options.beautify ? function () {\n          print(\"\\n\");\n        } : options.max_line_len ? function () {\n          ensure_line_len();\n          might_add_newline = OUTPUT.length;\n        } : noop;\n        var semicolon = options.beautify ? function () {\n          print(\";\");\n        } : function () {\n          might_need_semicolon = true;\n        };\n\n        function force_semicolon() {\n          might_need_semicolon = false;\n          print(\";\");\n        }\n\n        ;\n\n        function next_indent() {\n          return indentation + options.indent_level;\n        }\n\n        ;\n\n        function with_block(cont) {\n          var ret;\n          print(\"{\");\n          newline();\n          with_indent(next_indent(), function () {\n            ret = cont();\n          });\n          indent();\n          print(\"}\");\n          return ret;\n        }\n\n        ;\n\n        function with_parens(cont) {\n          print(\"(\"); //XXX: still nice to have that for argument lists\n          //var ret = with_indent(current_col, cont);\n\n          var ret = cont();\n          print(\")\");\n          return ret;\n        }\n\n        ;\n\n        function with_square(cont) {\n          print(\"[\"); //var ret = with_indent(current_col, cont);\n\n          var ret = cont();\n          print(\"]\");\n          return ret;\n        }\n\n        ;\n\n        function comma() {\n          print(\",\");\n          space();\n        }\n\n        ;\n\n        function colon() {\n          print(\":\");\n          if (options.space_colon) space();\n        }\n\n        ;\n        var add_mapping = options.source_map ? function (token, name) {\n          try {\n            if (token) options.source_map.add(token.file || \"?\", current_line, current_col, token.line, token.col, !name && token.type == \"name\" ? token.value : name);\n          } catch (ex) {\n            AST_Node.warn(\"Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]\", {\n              file: token.file,\n              line: token.line,\n              col: token.col,\n              cline: current_line,\n              ccol: current_col,\n              name: name || \"\"\n            });\n          }\n        } : noop;\n\n        function get() {\n          if (might_add_newline) {\n            ensure_line_len();\n          }\n\n          return OUTPUT;\n        }\n\n        ;\n        var stack = [];\n        return {\n          get: get,\n          toString: get,\n          indent: indent,\n          indentation: function () {\n            return indentation;\n          },\n          current_width: function () {\n            return current_col - indentation;\n          },\n          should_break: function () {\n            return options.width && this.current_width() >= options.width;\n          },\n          newline: newline,\n          print: print,\n          space: space,\n          comma: comma,\n          colon: colon,\n          last: function () {\n            return last;\n          },\n          semicolon: semicolon,\n          force_semicolon: force_semicolon,\n          to_ascii: to_ascii,\n          print_name: function (name) {\n            print(make_name(name));\n          },\n          print_string: function (str, quote, escape_directive) {\n            var encoded = encode_string(str, quote);\n\n            if (escape_directive === true && encoded.indexOf(\"\\\\\") === -1) {\n              // Insert semicolons to break directive prologue\n              if (!EXPECT_DIRECTIVE.test(OUTPUT)) {\n                force_semicolon();\n              }\n\n              force_semicolon();\n            }\n\n            print(encoded);\n          },\n          encode_string: encode_string,\n          next_indent: next_indent,\n          with_indent: with_indent,\n          with_block: with_block,\n          with_parens: with_parens,\n          with_square: with_square,\n          add_mapping: add_mapping,\n          option: function (opt) {\n            return options[opt];\n          },\n          comment_filter: comment_filter,\n          line: function () {\n            return current_line;\n          },\n          col: function () {\n            return current_col;\n          },\n          pos: function () {\n            return current_pos;\n          },\n          push_node: function (node) {\n            stack.push(node);\n          },\n          pop_node: function () {\n            return stack.pop();\n          },\n          parent: function (n) {\n            return stack[stack.length - 2 - (n || 0)];\n          }\n        };\n      }\n\n      ;\n      /* -----[ code generators ]----- */\n\n      (function () {\n        /* -----[ utils ]----- */\n        function DEFPRINT(nodetype, generator) {\n          nodetype.DEFMETHOD(\"_codegen\", generator);\n        }\n\n        ;\n        var use_asm = false;\n        var in_directive = false;\n        AST_Node.DEFMETHOD(\"print\", function (stream, force_parens) {\n          var self = this,\n              generator = self._codegen,\n              prev_use_asm = use_asm;\n\n          if (self instanceof AST_Directive && self.value == \"use asm\" && stream.parent() instanceof AST_Scope) {\n            use_asm = true;\n          }\n\n          function doit() {\n            self.add_comments(stream);\n            self.add_source_map(stream);\n            generator(self, stream);\n          }\n\n          stream.push_node(self);\n\n          if (force_parens || self.needs_parens(stream)) {\n            stream.with_parens(doit);\n          } else {\n            doit();\n          }\n\n          stream.pop_node();\n\n          if (self instanceof AST_Scope) {\n            use_asm = prev_use_asm;\n          }\n        });\n        AST_Node.DEFMETHOD(\"print_to_string\", function (options) {\n          var s = OutputStream(options);\n          if (!options) s._readonly = true;\n          this.print(s);\n          return s.get();\n        });\n        /* -----[ comments ]----- */\n\n        AST_Node.DEFMETHOD(\"add_comments\", function (output) {\n          if (output._readonly) return;\n          var self = this;\n          var start = self.start;\n\n          if (start && !start._comments_dumped) {\n            start._comments_dumped = true;\n            var comments = start.comments_before || []; // XXX: ugly fix for https://github.com/mishoo/UglifyJS2/issues/112\n            //               and https://github.com/mishoo/UglifyJS2/issues/372\n\n            if (self instanceof AST_Exit && self.value) {\n              self.value.walk(new TreeWalker(function (node) {\n                if (node.start && node.start.comments_before) {\n                  comments = comments.concat(node.start.comments_before);\n                  node.start.comments_before = [];\n                }\n\n                if (node instanceof AST_Function || node instanceof AST_Array || node instanceof AST_Object) {\n                  return true; // don't go inside.\n                }\n              }));\n            }\n\n            if (output.pos() == 0) {\n              if (comments.length > 0 && output.option(\"shebang\") && comments[0].type == \"comment5\") {\n                output.print(\"#!\" + comments.shift().value + \"\\n\");\n                output.indent();\n              }\n\n              var preamble = output.option(\"preamble\");\n\n              if (preamble) {\n                output.print(preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n              }\n            }\n\n            comments = comments.filter(output.comment_filter, self); // Keep single line comments after nlb, after nlb\n\n            if (!output.option(\"beautify\") && comments.length > 0 && /comment[134]/.test(comments[0].type) && output.col() !== 0 && comments[0].nlb) {\n              output.print(\"\\n\");\n            }\n\n            comments.forEach(function (c) {\n              if (/comment[134]/.test(c.type)) {\n                output.print(\"//\" + c.value + \"\\n\");\n                output.indent();\n              } else if (c.type == \"comment2\") {\n                output.print(\"/*\" + c.value + \"*/\");\n\n                if (start.nlb) {\n                  output.print(\"\\n\");\n                  output.indent();\n                } else {\n                  output.space();\n                }\n              }\n            });\n          }\n        });\n        /* -----[ PARENTHESES ]----- */\n\n        function PARENS(nodetype, func) {\n          if (Array.isArray(nodetype)) {\n            nodetype.forEach(function (nodetype) {\n              PARENS(nodetype, func);\n            });\n          } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n          }\n        }\n\n        ;\n        PARENS(AST_Node, function () {\n          return false;\n        }); // a function expression needs parens around it when it's provably\n        // the first token to appear in a statement.\n\n        PARENS(AST_Function, function (output) {\n          if (first_in_statement(output)) {\n            return true;\n          }\n\n          if (output.option('wrap_iife')) {\n            var p = output.parent();\n            return p instanceof AST_Call && p.expression === this;\n          }\n\n          return false;\n        }); // same goes for an object literal, because otherwise it would be\n        // interpreted as a block of code.\n\n        PARENS(AST_Object, function (output) {\n          return first_in_statement(output);\n        });\n        PARENS(AST_Unary, function (output) {\n          var p = output.parent();\n          return p instanceof AST_PropAccess && p.expression === this || p instanceof AST_Call && p.expression === this;\n        });\n        PARENS(AST_Seq, function (output) {\n          var p = output.parent();\n          return p instanceof AST_Call // (foo, bar)() or foo(1, (2, 3), 4)\n          || p instanceof AST_Unary // !(foo, bar, baz)\n          || p instanceof AST_Binary // 1 + (2, 3) + 4 ==> 8\n          || p instanceof AST_VarDef // var a = (1, 2), b = a + a; ==> b == 4\n          || p instanceof AST_PropAccess // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n          || p instanceof AST_Array // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n          || p instanceof AST_ObjectProperty // { foo: (1, 2) }.foo ==> 2\n          || p instanceof AST_Conditional\n          /* (false, true) ? (a = 10, b = 20) : (c = 30)\n           * ==> 20 (side effect, set a := 10 and b := 20) */\n          ;\n        });\n        PARENS(AST_Binary, function (output) {\n          var p = output.parent(); // (foo && bar)()\n\n          if (p instanceof AST_Call && p.expression === this) return true; // typeof (foo && bar)\n\n          if (p instanceof AST_Unary) return true; // (foo && bar)[\"prop\"], (foo && bar).prop\n\n          if (p instanceof AST_PropAccess && p.expression === this) return true; // this deals with precedence: 3 * (2 + 1)\n\n          if (p instanceof AST_Binary) {\n            var po = p.operator,\n                pp = PRECEDENCE[po];\n            var so = this.operator,\n                sp = PRECEDENCE[so];\n\n            if (pp > sp || pp == sp && this === p.right) {\n              return true;\n            }\n          }\n        });\n        PARENS(AST_PropAccess, function (output) {\n          var p = output.parent();\n\n          if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            try {\n              this.walk(new TreeWalker(function (node) {\n                if (node instanceof AST_Call) throw p;\n              }));\n            } catch (ex) {\n              if (ex !== p) throw ex;\n              return true;\n            }\n          }\n        });\n        PARENS(AST_Call, function (output) {\n          var p = output.parent(),\n              p1;\n          if (p instanceof AST_New && p.expression === this) return true; // workaround for Safari bug.\n          // https://bugs.webkit.org/show_bug.cgi?id=123506\n\n          return this.expression instanceof AST_Function && p instanceof AST_PropAccess && p.expression === this && (p1 = output.parent(1)) instanceof AST_Assign && p1.left === p;\n        });\n        PARENS(AST_New, function (output) {\n          var p = output.parent();\n          if (!need_constructor_parens(this, output) && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n          || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)\n            return true;\n        });\n        PARENS(AST_Number, function (output) {\n          var p = output.parent();\n\n          if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n\n            if (value < 0 || /^0/.test(make_num(value))) {\n              return true;\n            }\n          }\n        });\n        PARENS([AST_Assign, AST_Conditional], function (output) {\n          var p = output.parent(); // !(a = false) → true\n\n          if (p instanceof AST_Unary) return true; // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n\n          if (p instanceof AST_Binary && !(p instanceof AST_Assign)) return true; // (a = func)() —or— new (a = Object)()\n\n          if (p instanceof AST_Call && p.expression === this) return true; // (a = foo) ? bar : baz\n\n          if (p instanceof AST_Conditional && p.condition === this) return true; // (a = foo)[\"prop\"] —or— (a = foo).prop\n\n          if (p instanceof AST_PropAccess && p.expression === this) return true;\n        });\n        /* -----[ PRINTERS ]----- */\n\n        DEFPRINT(AST_Directive, function (self, output) {\n          output.print_string(self.value, self.quote);\n          output.semicolon();\n        });\n        DEFPRINT(AST_Debugger, function (self, output) {\n          output.print(\"debugger\");\n          output.semicolon();\n        });\n        /* -----[ statements ]----- */\n\n        function display_body(body, is_toplevel, output, allow_directives) {\n          var last = body.length - 1;\n          in_directive = allow_directives;\n          body.forEach(function (stmt, i) {\n            if (in_directive === true && !(stmt instanceof AST_Directive || stmt instanceof AST_EmptyStatement || stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)) {\n              in_directive = false;\n            }\n\n            if (!(stmt instanceof AST_EmptyStatement)) {\n              output.indent();\n              stmt.print(output);\n\n              if (!(i == last && is_toplevel)) {\n                output.newline();\n                if (is_toplevel) output.newline();\n              }\n            }\n\n            if (in_directive === true && stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String) {\n              in_directive = false;\n            }\n          });\n          in_directive = false;\n        }\n\n        ;\n        AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function (output) {\n          force_statement(this.body, output);\n        });\n        DEFPRINT(AST_Statement, function (self, output) {\n          self.body.print(output);\n          output.semicolon();\n        });\n        DEFPRINT(AST_Toplevel, function (self, output) {\n          display_body(self.body, true, output, true);\n          output.print(\"\");\n        });\n        DEFPRINT(AST_LabeledStatement, function (self, output) {\n          self.label.print(output);\n          output.colon();\n          self.body.print(output);\n        });\n        DEFPRINT(AST_SimpleStatement, function (self, output) {\n          self.body.print(output);\n          output.semicolon();\n        });\n\n        function print_bracketed(body, output, allow_directives) {\n          if (body.length > 0) output.with_block(function () {\n            display_body(body, false, output, allow_directives);\n          });else output.print(\"{}\");\n        }\n\n        ;\n        DEFPRINT(AST_BlockStatement, function (self, output) {\n          print_bracketed(self.body, output);\n        });\n        DEFPRINT(AST_EmptyStatement, function (self, output) {\n          output.semicolon();\n        });\n        DEFPRINT(AST_Do, function (self, output) {\n          output.print(\"do\");\n          output.space();\n          make_block(self.body, output);\n          output.space();\n          output.print(\"while\");\n          output.space();\n          output.with_parens(function () {\n            self.condition.print(output);\n          });\n          output.semicolon();\n        });\n        DEFPRINT(AST_While, function (self, output) {\n          output.print(\"while\");\n          output.space();\n          output.with_parens(function () {\n            self.condition.print(output);\n          });\n          output.space();\n\n          self._do_print_body(output);\n        });\n        DEFPRINT(AST_For, function (self, output) {\n          output.print(\"for\");\n          output.space();\n          output.with_parens(function () {\n            if (self.init) {\n              if (self.init instanceof AST_Definitions) {\n                self.init.print(output);\n              } else {\n                parenthesize_for_noin(self.init, output, true);\n              }\n\n              output.print(\";\");\n              output.space();\n            } else {\n              output.print(\";\");\n            }\n\n            if (self.condition) {\n              self.condition.print(output);\n              output.print(\";\");\n              output.space();\n            } else {\n              output.print(\";\");\n            }\n\n            if (self.step) {\n              self.step.print(output);\n            }\n          });\n          output.space();\n\n          self._do_print_body(output);\n        });\n        DEFPRINT(AST_ForIn, function (self, output) {\n          output.print(\"for\");\n          output.space();\n          output.with_parens(function () {\n            self.init.print(output);\n            output.space();\n            output.print(\"in\");\n            output.space();\n            self.object.print(output);\n          });\n          output.space();\n\n          self._do_print_body(output);\n        });\n        DEFPRINT(AST_With, function (self, output) {\n          output.print(\"with\");\n          output.space();\n          output.with_parens(function () {\n            self.expression.print(output);\n          });\n          output.space();\n\n          self._do_print_body(output);\n        });\n        /* -----[ functions ]----- */\n\n        AST_Lambda.DEFMETHOD(\"_do_print\", function (output, nokeyword) {\n          var self = this;\n\n          if (!nokeyword) {\n            output.print(\"function\");\n          }\n\n          if (self.name) {\n            output.space();\n            self.name.print(output);\n          }\n\n          output.with_parens(function () {\n            self.argnames.forEach(function (arg, i) {\n              if (i) output.comma();\n              arg.print(output);\n            });\n          });\n          output.space();\n          print_bracketed(self.body, output, true);\n        });\n        DEFPRINT(AST_Lambda, function (self, output) {\n          self._do_print(output);\n        });\n        /* -----[ exits ]----- */\n\n        AST_Exit.DEFMETHOD(\"_do_print\", function (output, kind) {\n          output.print(kind);\n\n          if (this.value) {\n            output.space();\n            this.value.print(output);\n          }\n\n          output.semicolon();\n        });\n        DEFPRINT(AST_Return, function (self, output) {\n          self._do_print(output, \"return\");\n        });\n        DEFPRINT(AST_Throw, function (self, output) {\n          self._do_print(output, \"throw\");\n        });\n        /* -----[ loop control ]----- */\n\n        AST_LoopControl.DEFMETHOD(\"_do_print\", function (output, kind) {\n          output.print(kind);\n\n          if (this.label) {\n            output.space();\n            this.label.print(output);\n          }\n\n          output.semicolon();\n        });\n        DEFPRINT(AST_Break, function (self, output) {\n          self._do_print(output, \"break\");\n        });\n        DEFPRINT(AST_Continue, function (self, output) {\n          self._do_print(output, \"continue\");\n        });\n        /* -----[ if ]----- */\n\n        function make_then(self, output) {\n          var b = self.body;\n          if (output.option(\"bracketize\") || !output.option(\"screw_ie8\") && b instanceof AST_Do) return make_block(b, output); // The squeezer replaces \"block\"-s that contain only a single\n          // statement with the statement itself; technically, the AST\n          // is correct, but this can create problems when we output an\n          // IF having an ELSE clause where the THEN clause ends in an\n          // IF *without* an ELSE block (then the outer ELSE would refer\n          // to the inner IF).  This function checks for this case and\n          // adds the block brackets if needed.\n\n          if (!b) return output.force_semicolon();\n\n          while (true) {\n            if (b instanceof AST_If) {\n              if (!b.alternative) {\n                make_block(self.body, output);\n                return;\n              }\n\n              b = b.alternative;\n            } else if (b instanceof AST_StatementWithBody) {\n              b = b.body;\n            } else break;\n          }\n\n          force_statement(self.body, output);\n        }\n\n        ;\n        DEFPRINT(AST_If, function (self, output) {\n          output.print(\"if\");\n          output.space();\n          output.with_parens(function () {\n            self.condition.print(output);\n          });\n          output.space();\n\n          if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            if (self.alternative instanceof AST_If) self.alternative.print(output);else force_statement(self.alternative, output);\n          } else {\n            self._do_print_body(output);\n          }\n        });\n        /* -----[ switch ]----- */\n\n        DEFPRINT(AST_Switch, function (self, output) {\n          output.print(\"switch\");\n          output.space();\n          output.with_parens(function () {\n            self.expression.print(output);\n          });\n          output.space();\n          var last = self.body.length - 1;\n          if (last < 0) output.print(\"{}\");else output.with_block(function () {\n            self.body.forEach(function (branch, i) {\n              output.indent(true);\n              branch.print(output);\n              if (i < last && branch.body.length > 0) output.newline();\n            });\n          });\n        });\n        AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function (output) {\n          output.newline();\n          this.body.forEach(function (stmt) {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n          });\n        });\n        DEFPRINT(AST_Default, function (self, output) {\n          output.print(\"default:\");\n\n          self._do_print_body(output);\n        });\n        DEFPRINT(AST_Case, function (self, output) {\n          output.print(\"case\");\n          output.space();\n          self.expression.print(output);\n          output.print(\":\");\n\n          self._do_print_body(output);\n        });\n        /* -----[ exceptions ]----- */\n\n        DEFPRINT(AST_Try, function (self, output) {\n          output.print(\"try\");\n          output.space();\n          print_bracketed(self.body, output);\n\n          if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n          }\n\n          if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n          }\n        });\n        DEFPRINT(AST_Catch, function (self, output) {\n          output.print(\"catch\");\n          output.space();\n          output.with_parens(function () {\n            self.argname.print(output);\n          });\n          output.space();\n          print_bracketed(self.body, output);\n        });\n        DEFPRINT(AST_Finally, function (self, output) {\n          output.print(\"finally\");\n          output.space();\n          print_bracketed(self.body, output);\n        });\n        /* -----[ var/const ]----- */\n\n        AST_Definitions.DEFMETHOD(\"_do_print\", function (output, kind) {\n          output.print(kind);\n          output.space();\n          this.definitions.forEach(function (def, i) {\n            if (i) output.comma();\n            def.print(output);\n          });\n          var p = output.parent();\n          var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n          var avoid_semicolon = in_for && p.init === this;\n          if (!avoid_semicolon) output.semicolon();\n        });\n        DEFPRINT(AST_Var, function (self, output) {\n          self._do_print(output, \"var\");\n        });\n        DEFPRINT(AST_Const, function (self, output) {\n          self._do_print(output, \"const\");\n        });\n\n        function parenthesize_for_noin(node, output, noin) {\n          if (!noin) node.print(output);else try {\n            // need to take some precautions here:\n            //    https://github.com/mishoo/UglifyJS2/issues/60\n            node.walk(new TreeWalker(function (node) {\n              if (node instanceof AST_Binary && node.operator == \"in\") throw output;\n            }));\n            node.print(output);\n          } catch (ex) {\n            if (ex !== output) throw ex;\n            node.print(output, true);\n          }\n        }\n\n        ;\n        DEFPRINT(AST_VarDef, function (self, output) {\n          self.name.print(output);\n\n          if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n          }\n        });\n        /* -----[ other expressions ]----- */\n\n        DEFPRINT(AST_Call, function (self, output) {\n          self.expression.print(output);\n          if (self instanceof AST_New && !need_constructor_parens(self, output)) return;\n          output.with_parens(function () {\n            self.args.forEach(function (expr, i) {\n              if (i) output.comma();\n              expr.print(output);\n            });\n          });\n        });\n        DEFPRINT(AST_New, function (self, output) {\n          output.print(\"new\");\n          output.space();\n\n          AST_Call.prototype._codegen(self, output);\n        });\n        AST_Seq.DEFMETHOD(\"_do_print\", function (output) {\n          this.car.print(output);\n\n          if (this.cdr) {\n            output.comma();\n\n            if (output.should_break()) {\n              output.newline();\n              output.indent();\n            }\n\n            this.cdr.print(output);\n          }\n        });\n        DEFPRINT(AST_Seq, function (self, output) {\n          self._do_print(output); // var p = output.parent();\n          // if (p instanceof AST_Statement) {\n          //     output.with_indent(output.next_indent(), function(){\n          //         self._do_print(output);\n          //     });\n          // } else {\n          //     self._do_print(output);\n          // }\n\n        });\n        DEFPRINT(AST_Dot, function (self, output) {\n          var expr = self.expression;\n          expr.print(output);\n\n          if (expr instanceof AST_Number && expr.getValue() >= 0) {\n            if (!/[xa-f.)]/i.test(output.last())) {\n              output.print(\".\");\n            }\n          }\n\n          output.print(\".\"); // the name after dot would be mapped about here.\n\n          output.add_mapping(self.end);\n          output.print_name(self.property);\n        });\n        DEFPRINT(AST_Sub, function (self, output) {\n          self.expression.print(output);\n          output.print(\"[\");\n          self.property.print(output);\n          output.print(\"]\");\n        });\n        DEFPRINT(AST_UnaryPrefix, function (self, output) {\n          var op = self.operator;\n          output.print(op);\n\n          if (/^[a-z]/i.test(op) || /[+-]$/.test(op) && self.expression instanceof AST_UnaryPrefix && /^[+-]/.test(self.expression.operator)) {\n            output.space();\n          }\n\n          self.expression.print(output);\n        });\n        DEFPRINT(AST_UnaryPostfix, function (self, output) {\n          self.expression.print(output);\n          output.print(self.operator);\n        });\n        DEFPRINT(AST_Binary, function (self, output) {\n          var op = self.operator;\n          self.left.print(output);\n\n          if (op[0] == \">\"\n          /* \">>\" \">>>\" \">\" \">=\" */\n          && self.left instanceof AST_UnaryPostfix && self.left.operator == \"--\") {\n            // space is mandatory to avoid outputting -->\n            output.print(\" \");\n          } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n          }\n\n          output.print(op);\n\n          if ((op == \"<\" || op == \"<<\") && self.right instanceof AST_UnaryPrefix && self.right.operator == \"!\" && self.right.expression instanceof AST_UnaryPrefix && self.right.expression.operator == \"--\") {\n            // space is mandatory to avoid outputting <!--\n            output.print(\" \");\n          } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n          }\n\n          self.right.print(output);\n        });\n        DEFPRINT(AST_Conditional, function (self, output) {\n          self.condition.print(output);\n          output.space();\n          output.print(\"?\");\n          output.space();\n          self.consequent.print(output);\n          output.space();\n          output.colon();\n          self.alternative.print(output);\n        });\n        /* -----[ literals ]----- */\n\n        DEFPRINT(AST_Array, function (self, output) {\n          output.with_square(function () {\n            var a = self.elements,\n                len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function (exp, i) {\n              if (i) output.comma();\n              exp.print(output); // If the final element is a hole, we need to make sure it\n              // doesn't look like a trailing comma, by inserting an actual\n              // trailing comma.\n\n              if (i === len - 1 && exp instanceof AST_Hole) output.comma();\n            });\n            if (len > 0) output.space();\n          });\n        });\n        DEFPRINT(AST_Object, function (self, output) {\n          if (self.properties.length > 0) output.with_block(function () {\n            self.properties.forEach(function (prop, i) {\n              if (i) {\n                output.print(\",\");\n                output.newline();\n              }\n\n              output.indent();\n              prop.print(output);\n            });\n            output.newline();\n          });else output.print(\"{}\");\n        });\n\n        function print_property_name(key, quote, output) {\n          if (output.option(\"quote_keys\")) {\n            output.print_string(key + \"\");\n          } else if ((typeof key == \"number\" || !output.option(\"beautify\") && +key + \"\" == key) && parseFloat(key) >= 0) {\n            output.print(make_num(key));\n          } else if (RESERVED_WORDS(key) ? output.option(\"screw_ie8\") : is_identifier_string(key)) {\n            if (quote && output.option(\"keep_quoted_props\")) {\n              output.print_string(key, quote);\n            } else {\n              output.print_name(key);\n            }\n          } else {\n            output.print_string(key, quote);\n          }\n        }\n\n        DEFPRINT(AST_ObjectKeyVal, function (self, output) {\n          print_property_name(self.key, self.quote, output);\n          output.colon();\n          self.value.print(output);\n        });\n        AST_ObjectProperty.DEFMETHOD(\"_print_getter_setter\", function (type, output) {\n          output.print(type);\n          output.space();\n          print_property_name(this.key.name, this.quote, output);\n\n          this.value._do_print(output, true);\n        });\n        DEFPRINT(AST_ObjectSetter, function (self, output) {\n          self._print_getter_setter(\"set\", output);\n        });\n        DEFPRINT(AST_ObjectGetter, function (self, output) {\n          self._print_getter_setter(\"get\", output);\n        });\n        DEFPRINT(AST_Symbol, function (self, output) {\n          var def = self.definition();\n          output.print_name(def ? def.mangled_name || def.name : self.name);\n        });\n        DEFPRINT(AST_Hole, noop);\n        DEFPRINT(AST_This, function (self, output) {\n          output.print(\"this\");\n        });\n        DEFPRINT(AST_Constant, function (self, output) {\n          output.print(self.getValue());\n        });\n        DEFPRINT(AST_String, function (self, output) {\n          output.print_string(self.getValue(), self.quote, in_directive);\n        });\n        DEFPRINT(AST_Number, function (self, output) {\n          if (use_asm && self.start && self.start.raw != null) {\n            output.print(self.start.raw);\n          } else {\n            output.print(make_num(self.getValue()));\n          }\n        });\n\n        function regexp_safe_literal(code) {\n          return [0x5c, // \\\n          0x2f, // /\n          0x2e, // .\n          0x2b, // +\n          0x2a, // *\n          0x3f, // ?\n          0x28, // (\n          0x29, // )\n          0x5b, // [\n          0x5d, // ]\n          0x7b, // {\n          0x7d, // }\n          0x24, // $\n          0x5e, // ^\n          0x3a, // :\n          0x7c, // |\n          0x21, // !\n          0x0a, // \\n\n          0x0d, // \\r\n          0x00, // \\0\n          0xfeff, // Unicode BOM\n          0x2028, // unicode \"line separator\"\n          0x2029 // unicode \"paragraph separator\"\n          ].indexOf(code) < 0;\n        }\n\n        ;\n        DEFPRINT(AST_RegExp, function (self, output) {\n          var str = self.getValue().toString();\n\n          if (output.option(\"ascii_only\")) {\n            str = output.to_ascii(str);\n          } else if (output.option(\"unescape_regexps\")) {\n            str = str.split(\"\\\\\\\\\").map(function (str) {\n              return str.replace(/\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}/g, function (s) {\n                var code = parseInt(s.substr(2), 16);\n                return regexp_safe_literal(code) ? String.fromCharCode(code) : s;\n              });\n            }).join(\"\\\\\\\\\");\n          }\n\n          output.print(str);\n          var p = output.parent();\n          if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self) output.print(\" \");\n        });\n\n        function force_statement(stat, output) {\n          if (output.option(\"bracketize\")) {\n            make_block(stat, output);\n          } else {\n            if (!stat || stat instanceof AST_EmptyStatement) output.force_semicolon();else stat.print(output);\n          }\n        }\n\n        ; // self should be AST_New.  decide if we want to show parens or not.\n\n        function need_constructor_parens(self, output) {\n          // Always print parentheses with arguments\n          if (self.args.length > 0) return true;\n          return output.option(\"beautify\");\n        }\n\n        ;\n\n        function best_of(a) {\n          var best = a[0],\n              len = best.length;\n\n          for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n              best = a[i];\n              len = best.length;\n            }\n          }\n\n          return best;\n        }\n\n        ;\n\n        function make_num(num) {\n          var str = num.toString(10),\n              a = [str.replace(/^0\\./, \".\").replace('e+', 'e')],\n              m;\n\n          if (Math.floor(num) === num) {\n            if (num >= 0) {\n              a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n              \"0\" + num.toString(8)); // same.\n            } else {\n              a.push(\"-0x\" + (-num).toString(16).toLowerCase(), // probably pointless\n              \"-0\" + (-num).toString(8)); // same.\n            }\n\n            if (m = /^(.*?)(0+)$/.exec(num)) {\n              a.push(m[1] + \"e\" + m[2].length);\n            }\n          } else if (m = /^0?\\.(0+)(.*)$/.exec(num)) {\n            a.push(m[2] + \"e-\" + (m[1].length + m[2].length), str.substr(str.indexOf(\".\")));\n          }\n\n          return best_of(a);\n        }\n\n        ;\n\n        function make_block(stmt, output) {\n          if (!stmt || stmt instanceof AST_EmptyStatement) output.print(\"{}\");else if (stmt instanceof AST_BlockStatement) stmt.print(output);else output.with_block(function () {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n          });\n        }\n\n        ;\n        /* -----[ source map generators ]----- */\n\n        function DEFMAP(nodetype, generator) {\n          nodetype.DEFMETHOD(\"add_source_map\", function (stream) {\n            generator(this, stream);\n          });\n        }\n\n        ; // We could easily add info for ALL nodes, but it seems to me that\n        // would be quite wasteful, hence this noop in the base class.\n\n        DEFMAP(AST_Node, noop);\n\n        function basic_sourcemap_gen(self, output) {\n          output.add_mapping(self.start);\n        }\n\n        ; // XXX: I'm not exactly sure if we need it for all of these nodes,\n        // or if we should add even more.\n\n        DEFMAP(AST_Directive, basic_sourcemap_gen);\n        DEFMAP(AST_Debugger, basic_sourcemap_gen);\n        DEFMAP(AST_Symbol, basic_sourcemap_gen);\n        DEFMAP(AST_Jump, basic_sourcemap_gen);\n        DEFMAP(AST_StatementWithBody, basic_sourcemap_gen);\n        DEFMAP(AST_LabeledStatement, noop); // since the label symbol will mark it\n\n        DEFMAP(AST_Lambda, basic_sourcemap_gen);\n        DEFMAP(AST_Switch, basic_sourcemap_gen);\n        DEFMAP(AST_SwitchBranch, basic_sourcemap_gen);\n        DEFMAP(AST_BlockStatement, basic_sourcemap_gen);\n        DEFMAP(AST_Toplevel, noop);\n        DEFMAP(AST_New, basic_sourcemap_gen);\n        DEFMAP(AST_Try, basic_sourcemap_gen);\n        DEFMAP(AST_Catch, basic_sourcemap_gen);\n        DEFMAP(AST_Finally, basic_sourcemap_gen);\n        DEFMAP(AST_Definitions, basic_sourcemap_gen);\n        DEFMAP(AST_Constant, basic_sourcemap_gen);\n        DEFMAP(AST_ObjectSetter, function (self, output) {\n          output.add_mapping(self.start, self.key.name);\n        });\n        DEFMAP(AST_ObjectGetter, function (self, output) {\n          output.add_mapping(self.start, self.key.name);\n        });\n        DEFMAP(AST_ObjectProperty, function (self, output) {\n          output.add_mapping(self.start, self.key);\n        });\n      })();\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n\n      \"use strict\";\n\n      function Compressor(options, false_by_default) {\n        if (!(this instanceof Compressor)) return new Compressor(options, false_by_default);\n        TreeTransformer.call(this, this.before, this.after);\n        this.options = defaults(options, {\n          angular: false,\n          booleans: !false_by_default,\n          cascade: !false_by_default,\n          collapse_vars: !false_by_default,\n          comparisons: !false_by_default,\n          conditionals: !false_by_default,\n          dead_code: !false_by_default,\n          drop_console: false,\n          drop_debugger: !false_by_default,\n          evaluate: !false_by_default,\n          expression: false,\n          global_defs: {},\n          hoist_funs: !false_by_default,\n          hoist_vars: false,\n          if_return: !false_by_default,\n          join_vars: !false_by_default,\n          keep_fargs: true,\n          keep_fnames: false,\n          keep_infinity: false,\n          loops: !false_by_default,\n          negate_iife: !false_by_default,\n          passes: 1,\n          properties: !false_by_default,\n          pure_getters: !false_by_default && \"strict\",\n          pure_funcs: null,\n          reduce_vars: !false_by_default,\n          screw_ie8: true,\n          sequences: !false_by_default,\n          side_effects: !false_by_default,\n          switches: !false_by_default,\n          top_retain: null,\n          toplevel: !!(options && options[\"top_retain\"]),\n          unsafe: false,\n          unsafe_comps: false,\n          unsafe_math: false,\n          unsafe_proto: false,\n          unsafe_regexp: false,\n          unused: !false_by_default,\n          warnings: true\n        }, true);\n        var pure_funcs = this.options[\"pure_funcs\"];\n\n        if (typeof pure_funcs == \"function\") {\n          this.pure_funcs = pure_funcs;\n        } else {\n          this.pure_funcs = pure_funcs ? function (node) {\n            return pure_funcs.indexOf(node.expression.print_to_string()) < 0;\n          } : return_true;\n        }\n\n        var top_retain = this.options[\"top_retain\"];\n\n        if (top_retain instanceof RegExp) {\n          this.top_retain = function (def) {\n            return top_retain.test(def.name);\n          };\n        } else if (typeof top_retain == \"function\") {\n          this.top_retain = top_retain;\n        } else if (top_retain) {\n          if (typeof top_retain == \"string\") {\n            top_retain = top_retain.split(/,/);\n          }\n\n          this.top_retain = function (def) {\n            return top_retain.indexOf(def.name) >= 0;\n          };\n        }\n\n        var sequences = this.options[\"sequences\"];\n        this.sequences_limit = sequences == 1 ? 200 : sequences | 0;\n        this.warnings_produced = {};\n      }\n\n      ;\n      Compressor.prototype = new TreeTransformer();\n      merge(Compressor.prototype, {\n        option: function (key) {\n          return this.options[key];\n        },\n        compress: function (node) {\n          if (this.option(\"expression\")) {\n            node = node.process_expression(true);\n          }\n\n          var passes = +this.options.passes || 1;\n\n          for (var pass = 0; pass < passes && pass < 3; ++pass) {\n            if (pass > 0 || this.option(\"reduce_vars\")) node.reset_opt_flags(this, true);\n            node = node.transform(this);\n          }\n\n          if (this.option(\"expression\")) {\n            node = node.process_expression(false);\n          }\n\n          return node;\n        },\n        info: function () {\n          if (this.options.warnings == \"verbose\") {\n            AST_Node.warn.apply(AST_Node, arguments);\n          }\n        },\n        warn: function (text, props) {\n          if (this.options.warnings) {\n            // only emit unique warnings\n            var message = string_template(text, props);\n\n            if (!(message in this.warnings_produced)) {\n              this.warnings_produced[message] = true;\n              AST_Node.warn.apply(AST_Node, arguments);\n            }\n          }\n        },\n        clear_warnings: function () {\n          this.warnings_produced = {};\n        },\n        before: function (node, descend, in_list) {\n          if (node._squeezed) return node;\n          var was_scope = false;\n\n          if (node instanceof AST_Scope) {\n            node = node.hoist_declarations(this);\n            was_scope = true;\n          } // Before https://github.com/mishoo/UglifyJS2/pull/1602 AST_Node.optimize()\n          // would call AST_Node.transform() if a different instance of AST_Node is\n          // produced after OPT().\n          // This corrupts TreeWalker.stack, which cause AST look-ups to malfunction.\n          // Migrate and defer all children's AST_Node.transform() to below, which\n          // will now happen after this parent AST_Node has been properly substituted\n          // thus gives a consistent AST snapshot.\n\n\n          descend(node, this); // Existing code relies on how AST_Node.optimize() worked, and omitting the\n          // following replacement call would result in degraded efficiency of both\n          // output and performance.\n\n          descend(node, this);\n          var opt = node.optimize(this);\n\n          if (was_scope && opt instanceof AST_Scope) {\n            opt.drop_unused(this);\n            descend(opt, this);\n          }\n\n          if (opt === node) opt._squeezed = true;\n          return opt;\n        }\n      });\n\n      (function () {\n        function OPT(node, optimizer) {\n          node.DEFMETHOD(\"optimize\", function (compressor) {\n            var self = this;\n            if (self._optimized) return self;\n            if (compressor.has_directive(\"use asm\")) return self;\n            var opt = optimizer(self, compressor);\n            opt._optimized = true;\n            return opt;\n          });\n        }\n\n        ;\n        OPT(AST_Node, function (self, compressor) {\n          return self;\n        });\n        AST_Node.DEFMETHOD(\"equivalent_to\", function (node) {\n          return this.TYPE == node.TYPE && this.print_to_string() == node.print_to_string();\n        });\n        AST_Node.DEFMETHOD(\"process_expression\", function (insert, compressor) {\n          var self = this;\n          var tt = new TreeTransformer(function (node) {\n            if (insert && node instanceof AST_SimpleStatement) {\n              return make_node(AST_Return, node, {\n                value: node.body\n              });\n            }\n\n            if (!insert && node instanceof AST_Return) {\n              if (compressor) {\n                var value = node.value && node.value.drop_side_effect_free(compressor, true);\n                return value ? make_node(AST_SimpleStatement, node, {\n                  body: value\n                }) : make_node(AST_EmptyStatement, node);\n              }\n\n              return make_node(AST_SimpleStatement, node, {\n                body: node.value || make_node(AST_UnaryPrefix, node, {\n                  operator: \"void\",\n                  expression: make_node(AST_Number, node, {\n                    value: 0\n                  })\n                })\n              });\n            }\n\n            if (node instanceof AST_Lambda && node !== self) {\n              return node;\n            }\n\n            if (node instanceof AST_Block) {\n              var index = node.body.length - 1;\n\n              if (index >= 0) {\n                node.body[index] = node.body[index].transform(tt);\n              }\n            }\n\n            if (node instanceof AST_If) {\n              node.body = node.body.transform(tt);\n\n              if (node.alternative) {\n                node.alternative = node.alternative.transform(tt);\n              }\n            }\n\n            if (node instanceof AST_With) {\n              node.body = node.body.transform(tt);\n            }\n\n            return node;\n          });\n          return self.transform(tt);\n        });\n        AST_Node.DEFMETHOD(\"reset_opt_flags\", function (compressor, rescan) {\n          var reduce_vars = rescan && compressor.option(\"reduce_vars\");\n          var toplevel = compressor.option(\"toplevel\");\n          var safe_ids = Object.create(null);\n          var suppressor = new TreeWalker(function (node) {\n            if (node instanceof AST_Symbol) {\n              var d = node.definition();\n              if (node instanceof AST_SymbolRef) d.references.push(node);\n              d.fixed = false;\n            }\n          });\n          var tw = new TreeWalker(function (node, descend) {\n            node._squeezed = false;\n            node._optimized = false;\n\n            if (reduce_vars) {\n              if (node instanceof AST_Toplevel) node.globals.each(reset_def);\n              if (node instanceof AST_Scope) node.variables.each(reset_def);\n\n              if (node instanceof AST_SymbolRef) {\n                var d = node.definition();\n                d.references.push(node);\n\n                if (d.fixed === undefined || !is_safe(d) || is_modified(node, 0, node.fixed_value() instanceof AST_Lambda)) {\n                  d.fixed = false;\n                } else {\n                  var parent = tw.parent();\n\n                  if (parent instanceof AST_Assign && parent.operator == \"=\" && node === parent.right || parent instanceof AST_Call && node !== parent.expression || parent instanceof AST_Return && node === parent.value && node.scope !== d.scope || parent instanceof AST_VarDef && node === parent.value) {\n                    d.escaped = true;\n                  }\n                }\n              }\n\n              if (node instanceof AST_SymbolCatch) {\n                node.definition().fixed = false;\n              }\n\n              if (node instanceof AST_VarDef) {\n                var d = node.name.definition();\n\n                if (d.fixed == null) {\n                  if (node.value) {\n                    d.fixed = function () {\n                      return node.value;\n                    };\n\n                    mark(d, false);\n                    descend();\n                  } else {\n                    d.fixed = null;\n                  }\n\n                  mark(d, true);\n                  return true;\n                } else if (node.value) {\n                  d.fixed = false;\n                }\n              }\n\n              if (node instanceof AST_Defun) {\n                var d = node.name.definition();\n\n                if (!toplevel && d.global || is_safe(d)) {\n                  d.fixed = false;\n                } else {\n                  d.fixed = node;\n                  mark(d, true);\n                }\n\n                var save_ids = safe_ids;\n                safe_ids = Object.create(null);\n                descend();\n                safe_ids = save_ids;\n                return true;\n              }\n\n              if (node instanceof AST_Function) {\n                push();\n                var iife;\n\n                if (!node.name && (iife = tw.parent()) instanceof AST_Call && iife.expression === node) {\n                  // Virtually turn IIFE parameters into variable definitions:\n                  //   (function(a,b) {...})(c,d) => (function() {var a=c,b=d; ...})()\n                  // So existing transformation rules can work on them.\n                  node.argnames.forEach(function (arg, i) {\n                    var d = arg.definition();\n\n                    if (!node.uses_arguments && d.fixed === undefined) {\n                      d.fixed = function () {\n                        return iife.args[i] || make_node(AST_Undefined, iife);\n                      };\n\n                      mark(d, true);\n                    } else {\n                      d.fixed = false;\n                    }\n                  });\n                }\n\n                descend();\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_Accessor) {\n                var save_ids = safe_ids;\n                safe_ids = Object.create(null);\n                descend();\n                safe_ids = save_ids;\n                return true;\n              }\n\n              if (node instanceof AST_Binary && (node.operator == \"&&\" || node.operator == \"||\")) {\n                node.left.walk(tw);\n                push();\n                node.right.walk(tw);\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_Conditional) {\n                node.condition.walk(tw);\n                push();\n                node.consequent.walk(tw);\n                pop();\n                push();\n                node.alternative.walk(tw);\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_If || node instanceof AST_DWLoop) {\n                node.condition.walk(tw);\n                push();\n                node.body.walk(tw);\n                pop();\n\n                if (node.alternative) {\n                  push();\n                  node.alternative.walk(tw);\n                  pop();\n                }\n\n                return true;\n              }\n\n              if (node instanceof AST_LabeledStatement) {\n                push();\n                node.body.walk(tw);\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_For) {\n                if (node.init) node.init.walk(tw);\n                push();\n                if (node.condition) node.condition.walk(tw);\n                node.body.walk(tw);\n                if (node.step) node.step.walk(tw);\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_ForIn) {\n                node.init.walk(suppressor);\n                node.object.walk(tw);\n                push();\n                node.body.walk(tw);\n                pop();\n                return true;\n              }\n\n              if (node instanceof AST_Try) {\n                push();\n                walk_body(node, tw);\n                pop();\n\n                if (node.bcatch) {\n                  push();\n                  node.bcatch.walk(tw);\n                  pop();\n                }\n\n                if (node.bfinally) node.bfinally.walk(tw);\n                return true;\n              }\n\n              if (node instanceof AST_SwitchBranch) {\n                push();\n                descend();\n                pop();\n                return true;\n              }\n            }\n          });\n          this.walk(tw);\n\n          function mark(def, safe) {\n            safe_ids[def.id] = safe;\n          }\n\n          function is_safe(def) {\n            if (safe_ids[def.id]) {\n              if (def.fixed == null) {\n                var orig = def.orig[0];\n                if (orig instanceof AST_SymbolFunarg || orig.name == \"arguments\") return false;\n                def.fixed = make_node(AST_Undefined, orig);\n              }\n\n              return true;\n            }\n          }\n\n          function push() {\n            safe_ids = Object.create(safe_ids);\n          }\n\n          function pop() {\n            safe_ids = Object.getPrototypeOf(safe_ids);\n          }\n\n          function reset_def(def) {\n            def.escaped = false;\n\n            if (def.scope.uses_eval) {\n              def.fixed = false;\n            } else if (toplevel || !def.global || def.orig[0] instanceof AST_SymbolConst) {\n              def.fixed = undefined;\n            } else {\n              def.fixed = false;\n            }\n\n            def.references = [];\n            def.should_replace = undefined;\n          }\n\n          function is_modified(node, level, func) {\n            var parent = tw.parent(level);\n\n            if (is_lhs(node, parent) || !func && parent instanceof AST_Call && parent.expression === node) {\n              return true;\n            } else if (parent instanceof AST_PropAccess && parent.expression === node) {\n              return !func && is_modified(parent, level + 1);\n            }\n          }\n        });\n        AST_SymbolRef.DEFMETHOD(\"fixed_value\", function () {\n          var fixed = this.definition().fixed;\n          if (!fixed || fixed instanceof AST_Node) return fixed;\n          return fixed();\n        });\n\n        function is_reference_const(ref) {\n          if (!(ref instanceof AST_SymbolRef)) return false;\n          var orig = ref.definition().orig;\n\n          for (var i = orig.length; --i >= 0;) {\n            if (orig[i] instanceof AST_SymbolConst) return true;\n          }\n        }\n\n        function find_variable(compressor, name) {\n          var scope,\n              i = 0;\n\n          while (scope = compressor.parent(i++)) {\n            if (scope instanceof AST_Scope) break;\n\n            if (scope instanceof AST_Catch) {\n              scope = scope.argname.definition().scope;\n              break;\n            }\n          }\n\n          return scope.find_variable(name);\n        }\n\n        function make_node(ctor, orig, props) {\n          if (!props) props = {};\n\n          if (orig) {\n            if (!props.start) props.start = orig.start;\n            if (!props.end) props.end = orig.end;\n          }\n\n          return new ctor(props);\n        }\n\n        ;\n\n        function make_node_from_constant(val, orig) {\n          switch (typeof val) {\n            case \"string\":\n              return make_node(AST_String, orig, {\n                value: val\n              });\n\n            case \"number\":\n              if (isNaN(val)) return make_node(AST_NaN, orig);\n\n              if (isFinite(val)) {\n                return 1 / val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                  operator: \"-\",\n                  expression: make_node(AST_Number, orig, {\n                    value: -val\n                  })\n                }) : make_node(AST_Number, orig, {\n                  value: val\n                });\n              }\n\n              return val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                operator: \"-\",\n                expression: make_node(AST_Infinity, orig)\n              }) : make_node(AST_Infinity, orig);\n\n            case \"boolean\":\n              return make_node(val ? AST_True : AST_False, orig);\n\n            case \"undefined\":\n              return make_node(AST_Undefined, orig);\n\n            default:\n              if (val === null) {\n                return make_node(AST_Null, orig, {\n                  value: null\n                });\n              }\n\n              if (val instanceof RegExp) {\n                return make_node(AST_RegExp, orig, {\n                  value: val\n                });\n              }\n\n              throw new Error(string_template(\"Can't handle constant of type: {type}\", {\n                type: typeof val\n              }));\n          }\n        }\n\n        ; // we shouldn't compress (1,func)(something) to\n        // func(something) because that changes the meaning of\n        // the func (becomes lexical instead of global).\n\n        function maintain_this_binding(parent, orig, val) {\n          if (parent instanceof AST_UnaryPrefix && parent.operator == \"delete\" || parent instanceof AST_Call && parent.expression === orig && (val instanceof AST_PropAccess || val instanceof AST_SymbolRef && val.name == \"eval\")) {\n            return make_node(AST_Seq, orig, {\n              car: make_node(AST_Number, orig, {\n                value: 0\n              }),\n              cdr: val\n            });\n          }\n\n          return val;\n        }\n\n        function as_statement_array(thing) {\n          if (thing === null) return [];\n          if (thing instanceof AST_BlockStatement) return thing.body;\n          if (thing instanceof AST_EmptyStatement) return [];\n          if (thing instanceof AST_Statement) return [thing];\n          throw new Error(\"Can't convert thing to statement array\");\n        }\n\n        ;\n\n        function is_empty(thing) {\n          if (thing === null) return true;\n          if (thing instanceof AST_EmptyStatement) return true;\n          if (thing instanceof AST_BlockStatement) return thing.body.length == 0;\n          return false;\n        }\n\n        ;\n\n        function loop_body(x) {\n          if (x instanceof AST_Switch) return x;\n\n          if (x instanceof AST_For || x instanceof AST_ForIn || x instanceof AST_DWLoop) {\n            return x.body instanceof AST_BlockStatement ? x.body : x;\n          }\n\n          return x;\n        }\n\n        ;\n\n        function is_iife_call(node) {\n          if (node instanceof AST_Call && !(node instanceof AST_New)) {\n            return node.expression instanceof AST_Function || is_iife_call(node.expression);\n          }\n\n          return false;\n        }\n\n        function tighten_body(statements, compressor) {\n          var CHANGED,\n              max_iter = 10;\n\n          do {\n            CHANGED = false;\n\n            if (compressor.option(\"angular\")) {\n              statements = process_for_angular(statements);\n            }\n\n            statements = eliminate_spurious_blocks(statements);\n\n            if (compressor.option(\"dead_code\")) {\n              statements = eliminate_dead_code(statements, compressor);\n            }\n\n            if (compressor.option(\"if_return\")) {\n              statements = handle_if_return(statements, compressor);\n            }\n\n            if (compressor.sequences_limit > 0) {\n              statements = sequencesize(statements, compressor);\n            }\n\n            if (compressor.option(\"join_vars\")) {\n              statements = join_consecutive_vars(statements, compressor);\n            }\n\n            if (compressor.option(\"collapse_vars\")) {\n              statements = collapse_single_use_vars(statements, compressor);\n            }\n          } while (CHANGED && max_iter-- > 0);\n\n          return statements;\n\n          function collapse_single_use_vars(statements, compressor) {\n            // Iterate statements backwards looking for a statement with a var/const\n            // declaration immediately preceding it. Grab the rightmost var definition\n            // and if it has exactly one reference then attempt to replace its reference\n            // in the statement with the var value and then erase the var definition.\n            var self = compressor.self();\n            var var_defs_removed = false;\n            var toplevel = compressor.option(\"toplevel\");\n\n            for (var stat_index = statements.length; --stat_index >= 0;) {\n              var stat = statements[stat_index];\n              if (stat instanceof AST_Definitions) continue; // Process child blocks of statement if present.\n\n              [stat, stat.body, stat.alternative, stat.bcatch, stat.bfinally].forEach(function (node) {\n                node && node.body && collapse_single_use_vars(node.body, compressor);\n              }); // The variable definition must precede a statement.\n\n              if (stat_index <= 0) break;\n              var prev_stat_index = stat_index - 1;\n              var prev_stat = statements[prev_stat_index];\n              if (!(prev_stat instanceof AST_Definitions)) continue;\n              var var_defs = prev_stat.definitions;\n              if (var_defs == null) continue;\n              var var_names_seen = {};\n              var side_effects_encountered = false;\n              var lvalues_encountered = false;\n              var lvalues = {}; // Scan variable definitions from right to left.\n\n              for (var var_defs_index = var_defs.length; --var_defs_index >= 0;) {\n                // Obtain var declaration and var name with basic sanity check.\n                var var_decl = var_defs[var_defs_index];\n                if (var_decl.value == null) break;\n                var var_name = var_decl.name.name;\n                if (!var_name || !var_name.length) break; // Bail if we've seen a var definition of same name before.\n\n                if (var_name in var_names_seen) break;\n                var_names_seen[var_name] = true; // Only interested in cases with just one reference to the variable.\n\n                var def = self.find_variable && self.find_variable(var_name);\n\n                if (!def || !def.references || def.references.length !== 1 || var_name == \"arguments\" || !toplevel && def.global) {\n                  side_effects_encountered = true;\n                  continue;\n                }\n\n                var ref = def.references[0]; // Don't replace ref if eval() or with statement in scope.\n\n                if (ref.scope.uses_eval || ref.scope.uses_with) break; // Constant single use vars can be replaced in any scope.\n\n                if (var_decl.value.is_constant()) {\n                  var ctt = new TreeTransformer(function (node) {\n                    var parent = ctt.parent();\n\n                    if (parent instanceof AST_IterationStatement && (parent.condition === node || parent.init === node)) {\n                      return node;\n                    }\n\n                    if (node === ref) return replace_var(node, parent, true);\n                  });\n                  stat.transform(ctt);\n                  continue;\n                } // Restrict var replacement to constants if side effects encountered.\n\n\n                if (side_effects_encountered |= lvalues_encountered) continue;\n                var value_has_side_effects = var_decl.value.has_side_effects(compressor); // Non-constant single use vars can only be replaced in same scope.\n\n                if (ref.scope !== self) {\n                  side_effects_encountered |= value_has_side_effects;\n                  continue;\n                } // Detect lvalues in var value.\n\n\n                var tw = new TreeWalker(function (node) {\n                  if (node instanceof AST_SymbolRef && is_lvalue(node, tw.parent())) {\n                    lvalues[node.name] = lvalues_encountered = true;\n                  }\n                });\n                var_decl.value.walk(tw); // Replace the non-constant single use var in statement if side effect free.\n\n                var unwind = false;\n                var tt = new TreeTransformer(function preorder(node) {\n                  if (unwind) return node;\n                  var parent = tt.parent();\n\n                  if (node instanceof AST_Lambda || node instanceof AST_Try || node instanceof AST_With || node instanceof AST_Case || node instanceof AST_IterationStatement || parent instanceof AST_If && node !== parent.condition || parent instanceof AST_Conditional && node !== parent.condition || node instanceof AST_SymbolRef && value_has_side_effects && !are_references_in_scope(node.definition(), self) || parent instanceof AST_Binary && (parent.operator == \"&&\" || parent.operator == \"||\") && node === parent.right || parent instanceof AST_Switch && node !== parent.expression) {\n                    return side_effects_encountered = unwind = true, node;\n                  }\n\n                  function are_references_in_scope(def, scope) {\n                    if (def.orig.length === 1 && def.orig[0] instanceof AST_SymbolDefun) return true;\n                    if (def.scope !== scope) return false;\n                    var refs = def.references;\n\n                    for (var i = 0, len = refs.length; i < len; i++) {\n                      if (refs[i].scope !== scope) return false;\n                    }\n\n                    return true;\n                  }\n                }, function postorder(node) {\n                  if (unwind) return node;\n                  if (node === ref) return unwind = true, replace_var(node, tt.parent(), false);\n                  if (side_effects_encountered |= node.has_side_effects(compressor)) return unwind = true, node;\n\n                  if (lvalues_encountered && node instanceof AST_SymbolRef && node.name in lvalues) {\n                    side_effects_encountered = true;\n                    return unwind = true, node;\n                  }\n                });\n                stat.transform(tt);\n              }\n            } // Remove extraneous empty statments in block after removing var definitions.\n            // Leave at least one statement in `statements`.\n\n\n            if (var_defs_removed) for (var i = statements.length; --i >= 0;) {\n              if (statements.length > 1 && statements[i] instanceof AST_EmptyStatement) statements.splice(i, 1);\n            }\n            return statements;\n\n            function is_lvalue(node, parent) {\n              return node instanceof AST_SymbolRef && is_lhs(node, parent);\n            }\n\n            function replace_var(node, parent, is_constant) {\n              if (is_lvalue(node, parent)) return node; // Remove var definition and return its value to the TreeTransformer to replace.\n\n              var value = maintain_this_binding(parent, node, var_decl.value);\n              var_decl.value = null;\n              var_defs.splice(var_defs_index, 1);\n\n              if (var_defs.length === 0) {\n                statements[prev_stat_index] = make_node(AST_EmptyStatement, self);\n                var_defs_removed = true;\n              } // Further optimize statement after substitution.\n\n\n              stat.reset_opt_flags(compressor);\n              compressor.info(\"Collapsing \" + (is_constant ? \"constant\" : \"variable\") + \" \" + var_name + \" [{file}:{line},{col}]\", node.start);\n              CHANGED = true;\n              return value;\n            }\n          }\n\n          function process_for_angular(statements) {\n            function has_inject(comment) {\n              return /@ngInject/.test(comment.value);\n            }\n\n            function make_arguments_names_list(func) {\n              return func.argnames.map(function (sym) {\n                return make_node(AST_String, sym, {\n                  value: sym.name\n                });\n              });\n            }\n\n            function make_array(orig, elements) {\n              return make_node(AST_Array, orig, {\n                elements: elements\n              });\n            }\n\n            function make_injector(func, name) {\n              return make_node(AST_SimpleStatement, func, {\n                body: make_node(AST_Assign, func, {\n                  operator: \"=\",\n                  left: make_node(AST_Dot, name, {\n                    expression: make_node(AST_SymbolRef, name, name),\n                    property: \"$inject\"\n                  }),\n                  right: make_array(func, make_arguments_names_list(func))\n                })\n              });\n            }\n\n            function check_expression(body) {\n              if (body && body.args) {\n                // if this is a function call check all of arguments passed\n                body.args.forEach(function (argument, index, array) {\n                  var comments = argument.start.comments_before; // if the argument is function preceded by @ngInject\n\n                  if (argument instanceof AST_Lambda && comments.length && has_inject(comments[0])) {\n                    // replace the function with an array of names of its parameters and function at the end\n                    array[index] = make_array(argument, make_arguments_names_list(argument).concat(argument));\n                  }\n                }); // if this is chained call check previous one recursively\n\n                if (body.expression && body.expression.expression) {\n                  check_expression(body.expression.expression);\n                }\n              }\n            }\n\n            return statements.reduce(function (a, stat) {\n              a.push(stat);\n\n              if (stat.body && stat.body.args) {\n                check_expression(stat.body);\n              } else {\n                var token = stat.start;\n                var comments = token.comments_before;\n\n                if (comments && comments.length > 0) {\n                  var last = comments.pop();\n\n                  if (has_inject(last)) {\n                    // case 1: defun\n                    if (stat instanceof AST_Defun) {\n                      a.push(make_injector(stat, stat.name));\n                    } else if (stat instanceof AST_Definitions) {\n                      stat.definitions.forEach(function (def) {\n                        if (def.value && def.value instanceof AST_Lambda) {\n                          a.push(make_injector(def.value, def.name));\n                        }\n                      });\n                    } else {\n                      compressor.warn(\"Unknown statement marked with @ngInject [{file}:{line},{col}]\", token);\n                    }\n                  }\n                }\n              }\n\n              return a;\n            }, []);\n          }\n\n          function eliminate_spurious_blocks(statements) {\n            var seen_dirs = [];\n            return statements.reduce(function (a, stat) {\n              if (stat instanceof AST_BlockStatement) {\n                CHANGED = true;\n                a.push.apply(a, eliminate_spurious_blocks(stat.body));\n              } else if (stat instanceof AST_EmptyStatement) {\n                CHANGED = true;\n              } else if (stat instanceof AST_Directive) {\n                if (seen_dirs.indexOf(stat.value) < 0) {\n                  a.push(stat);\n                  seen_dirs.push(stat.value);\n                } else {\n                  CHANGED = true;\n                }\n              } else {\n                a.push(stat);\n              }\n\n              return a;\n            }, []);\n          }\n\n          ;\n\n          function handle_if_return(statements, compressor) {\n            var self = compressor.self();\n            var multiple_if_returns = has_multiple_if_returns(statements);\n            var in_lambda = self instanceof AST_Lambda;\n            var ret = []; // Optimized statements, build from tail to front\n\n            loop: for (var i = statements.length; --i >= 0;) {\n              var stat = statements[i];\n\n              switch (true) {\n                case in_lambda && stat instanceof AST_Return && !stat.value && ret.length == 0:\n                  CHANGED = true; // note, ret.length is probably always zero\n                  // because we drop unreachable code before this\n                  // step.  nevertheless, it's good to check.\n\n                  continue loop;\n\n                case stat instanceof AST_If:\n                  if (stat.body instanceof AST_Return) {\n                    //---\n                    // pretty silly case, but:\n                    // if (foo()) return; return; ==> foo(); return;\n                    if ((in_lambda && ret.length == 0 || ret[0] instanceof AST_Return && !ret[0].value) && !stat.body.value && !stat.alternative) {\n                      CHANGED = true;\n                      var cond = make_node(AST_SimpleStatement, stat.condition, {\n                        body: stat.condition\n                      });\n                      ret.unshift(cond);\n                      continue loop;\n                    } //---\n                    // if (foo()) return x; return y; ==> return foo() ? x : y;\n\n\n                    if (ret[0] instanceof AST_Return && stat.body.value && ret[0].value && !stat.alternative) {\n                      CHANGED = true;\n                      stat = stat.clone();\n                      stat.alternative = ret[0];\n                      ret[0] = stat.transform(compressor);\n                      continue loop;\n                    } //---\n                    // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;\n\n\n                    if (multiple_if_returns && (ret.length == 0 || ret[0] instanceof AST_Return) && stat.body.value && !stat.alternative && in_lambda) {\n                      CHANGED = true;\n                      stat = stat.clone();\n                      stat.alternative = ret[0] || make_node(AST_Return, stat, {\n                        value: null\n                      });\n                      ret[0] = stat.transform(compressor);\n                      continue loop;\n                    } //---\n                    // if (foo()) return; [ else x... ]; y... ==> if (!foo()) { x...; y... }\n\n\n                    if (!stat.body.value && in_lambda) {\n                      CHANGED = true;\n                      stat = stat.clone();\n                      stat.condition = stat.condition.negate(compressor);\n                      var body = as_statement_array(stat.alternative).concat(ret);\n                      var funs = extract_functions_from_statement_array(body);\n                      stat.body = make_node(AST_BlockStatement, stat, {\n                        body: body\n                      });\n                      stat.alternative = null;\n                      ret = funs.concat([stat.transform(compressor)]);\n                      continue loop;\n                    } //---\n                    // if (a) return b; if (c) return d; e; ==> return a ? b : c ? d : void e;\n                    //\n                    // if sequences is not enabled, this can lead to an endless loop (issue #866).\n                    // however, with sequences on this helps producing slightly better output for\n                    // the example code.\n\n\n                    if (compressor.option(\"sequences\") && i > 0 && statements[i - 1] instanceof AST_If && statements[i - 1].body instanceof AST_Return && ret.length == 1 && in_lambda && ret[0] instanceof AST_SimpleStatement && !stat.alternative) {\n                      CHANGED = true;\n                      ret.push(make_node(AST_Return, ret[0], {\n                        value: null\n                      }).transform(compressor));\n                      ret.unshift(stat);\n                      continue loop;\n                    }\n                  }\n\n                  var ab = aborts(stat.body);\n                  var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n\n                  if (ab && (ab instanceof AST_Return && !ab.value && in_lambda || ab instanceof AST_Continue && self === loop_body(lct) || ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct)) {\n                    if (ab.label) {\n                      remove(ab.label.thedef.references, ab);\n                    }\n\n                    CHANGED = true;\n                    var body = as_statement_array(stat.body).slice(0, -1);\n                    stat = stat.clone();\n                    stat.condition = stat.condition.negate(compressor);\n                    stat.body = make_node(AST_BlockStatement, stat, {\n                      body: as_statement_array(stat.alternative).concat(ret)\n                    });\n                    stat.alternative = make_node(AST_BlockStatement, stat, {\n                      body: body\n                    });\n                    ret = [stat.transform(compressor)];\n                    continue loop;\n                  }\n\n                  var ab = aborts(stat.alternative);\n                  var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n\n                  if (ab && (ab instanceof AST_Return && !ab.value && in_lambda || ab instanceof AST_Continue && self === loop_body(lct) || ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct)) {\n                    if (ab.label) {\n                      remove(ab.label.thedef.references, ab);\n                    }\n\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.body = make_node(AST_BlockStatement, stat.body, {\n                      body: as_statement_array(stat.body).concat(ret)\n                    });\n                    stat.alternative = make_node(AST_BlockStatement, stat.alternative, {\n                      body: as_statement_array(stat.alternative).slice(0, -1)\n                    });\n                    ret = [stat.transform(compressor)];\n                    continue loop;\n                  }\n\n                  ret.unshift(stat);\n                  break;\n\n                default:\n                  ret.unshift(stat);\n                  break;\n              }\n            }\n\n            return ret;\n\n            function has_multiple_if_returns(statements) {\n              var n = 0;\n\n              for (var i = statements.length; --i >= 0;) {\n                var stat = statements[i];\n\n                if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                  if (++n > 1) return true;\n                }\n              }\n\n              return false;\n            }\n          }\n\n          ;\n\n          function eliminate_dead_code(statements, compressor) {\n            var has_quit = false;\n            var orig = statements.length;\n            var self = compressor.self();\n            statements = statements.reduce(function (a, stat) {\n              if (has_quit) {\n                extract_declarations_from_unreachable_code(compressor, stat, a);\n              } else {\n                if (stat instanceof AST_LoopControl) {\n                  var lct = compressor.loopcontrol_target(stat);\n\n                  if (stat instanceof AST_Break && !(lct instanceof AST_IterationStatement) && loop_body(lct) === self || stat instanceof AST_Continue && loop_body(lct) === self) {\n                    if (stat.label) {\n                      remove(stat.label.thedef.references, stat);\n                    }\n                  } else {\n                    a.push(stat);\n                  }\n                } else {\n                  a.push(stat);\n                }\n\n                if (aborts(stat)) has_quit = true;\n              }\n\n              return a;\n            }, []);\n            CHANGED = statements.length != orig;\n            return statements;\n          }\n\n          ;\n\n          function sequencesize(statements, compressor) {\n            if (statements.length < 2) return statements;\n            var seq = [],\n                ret = [];\n\n            function push_seq() {\n              seq = AST_Seq.from_array(seq);\n              if (seq) ret.push(make_node(AST_SimpleStatement, seq, {\n                body: seq\n              }));\n              seq = [];\n            }\n\n            ;\n            statements.forEach(function (stat) {\n              if (stat instanceof AST_SimpleStatement) {\n                if (seqLength(seq) >= compressor.sequences_limit) push_seq();\n                var body = stat.body;\n                if (seq.length > 0) body = body.drop_side_effect_free(compressor);\n                if (body) seq.push(body);\n              } else {\n                push_seq();\n                ret.push(stat);\n              }\n            });\n            push_seq();\n            ret = sequencesize_2(ret, compressor);\n            CHANGED = ret.length != statements.length;\n            return ret;\n          }\n\n          ;\n\n          function seqLength(a) {\n            for (var len = 0, i = 0; i < a.length; ++i) {\n              var stat = a[i];\n\n              if (stat instanceof AST_Seq) {\n                len += stat.len();\n              } else {\n                len++;\n              }\n            }\n\n            return len;\n          }\n\n          ;\n\n          function sequencesize_2(statements, compressor) {\n            function cons_seq(right) {\n              ret.pop();\n              var left = prev.body;\n\n              if (left instanceof AST_Seq) {\n                left.add(right);\n              } else {\n                left = AST_Seq.cons(left, right);\n              }\n\n              return left.transform(compressor);\n            }\n\n            ;\n            var ret = [],\n                prev = null;\n            statements.forEach(function (stat) {\n              if (prev) {\n                if (stat instanceof AST_For) {\n                  var opera = {};\n\n                  try {\n                    prev.body.walk(new TreeWalker(function (node) {\n                      if (node instanceof AST_Binary && node.operator == \"in\") throw opera;\n                    }));\n\n                    if (stat.init && !(stat.init instanceof AST_Definitions)) {\n                      stat.init = cons_seq(stat.init);\n                    } else if (!stat.init) {\n                      stat.init = prev.body.drop_side_effect_free(compressor);\n                      ret.pop();\n                    }\n                  } catch (ex) {\n                    if (ex !== opera) throw ex;\n                  }\n                } else if (stat instanceof AST_If) {\n                  stat.condition = cons_seq(stat.condition);\n                } else if (stat instanceof AST_With) {\n                  stat.expression = cons_seq(stat.expression);\n                } else if (stat instanceof AST_Exit && stat.value) {\n                  stat.value = cons_seq(stat.value);\n                } else if (stat instanceof AST_Exit) {\n                  stat.value = cons_seq(make_node(AST_Undefined, stat).transform(compressor));\n                } else if (stat instanceof AST_Switch) {\n                  stat.expression = cons_seq(stat.expression);\n                }\n              }\n\n              ret.push(stat);\n              prev = stat instanceof AST_SimpleStatement ? stat : null;\n            });\n            return ret;\n          }\n\n          ;\n\n          function join_consecutive_vars(statements, compressor) {\n            var prev = null;\n            return statements.reduce(function (a, stat) {\n              if (stat instanceof AST_Definitions && prev && prev.TYPE == stat.TYPE) {\n                prev.definitions = prev.definitions.concat(stat.definitions);\n                CHANGED = true;\n              } else if (stat instanceof AST_For && prev instanceof AST_Var && (!stat.init || stat.init.TYPE == prev.TYPE)) {\n                CHANGED = true;\n                a.pop();\n\n                if (stat.init) {\n                  stat.init.definitions = prev.definitions.concat(stat.init.definitions);\n                } else {\n                  stat.init = prev;\n                }\n\n                a.push(stat);\n                prev = stat;\n              } else {\n                prev = stat;\n                a.push(stat);\n              }\n\n              return a;\n            }, []);\n          }\n\n          ;\n        }\n\n        ;\n\n        function extract_functions_from_statement_array(statements) {\n          var funs = [];\n\n          for (var i = statements.length - 1; i >= 0; --i) {\n            var stat = statements[i];\n\n            if (stat instanceof AST_Defun) {\n              statements.splice(i, 1);\n              funs.unshift(stat);\n            }\n          }\n\n          return funs;\n        }\n\n        function extract_declarations_from_unreachable_code(compressor, stat, target) {\n          if (!(stat instanceof AST_Defun)) {\n            compressor.warn(\"Dropping unreachable code [{file}:{line},{col}]\", stat.start);\n          }\n\n          stat.walk(new TreeWalker(function (node) {\n            if (node instanceof AST_Definitions) {\n              compressor.warn(\"Declarations in unreachable code! [{file}:{line},{col}]\", node.start);\n              node.remove_initializers();\n              target.push(node);\n              return true;\n            }\n\n            if (node instanceof AST_Defun) {\n              target.push(node);\n              return true;\n            }\n\n            if (node instanceof AST_Scope) {\n              return true;\n            }\n          }));\n        }\n\n        ;\n\n        function is_undefined(node, compressor) {\n          return node.is_undefined || node instanceof AST_Undefined || node instanceof AST_UnaryPrefix && node.operator == \"void\" && !node.expression.has_side_effects(compressor);\n        } // may_throw_on_access()\n        // returns true if this node may be null, undefined or contain `AST_Accessor`\n\n\n        (function (def) {\n          AST_Node.DEFMETHOD(\"may_throw_on_access\", function (compressor) {\n            var pure_getters = compressor.option(\"pure_getters\");\n            return !pure_getters || this._throw_on_access(pure_getters);\n          });\n\n          function is_strict(pure_getters) {\n            return /strict/.test(pure_getters);\n          }\n\n          def(AST_Node, is_strict);\n          def(AST_Null, return_true);\n          def(AST_Undefined, return_true);\n          def(AST_Constant, return_false);\n          def(AST_Array, return_false);\n          def(AST_Object, function (pure_getters) {\n            if (!is_strict(pure_getters)) return false;\n\n            for (var i = this.properties.length; --i >= 0;) if (this.properties[i].value instanceof AST_Accessor) return true;\n\n            return false;\n          });\n          def(AST_Function, return_false);\n          def(AST_UnaryPostfix, return_false);\n          def(AST_UnaryPrefix, function () {\n            return this.operator == \"void\";\n          });\n          def(AST_Binary, function (pure_getters) {\n            switch (this.operator) {\n              case \"&&\":\n                return this.left._throw_on_access(pure_getters);\n\n              case \"||\":\n                return this.left._throw_on_access(pure_getters) && this.right._throw_on_access(pure_getters);\n\n              default:\n                return false;\n            }\n          });\n          def(AST_Assign, function (pure_getters) {\n            return this.operator == \"=\" && this.right._throw_on_access(pure_getters);\n          });\n          def(AST_Conditional, function (pure_getters) {\n            return this.consequent._throw_on_access(pure_getters) || this.alternative._throw_on_access(pure_getters);\n          });\n          def(AST_Seq, function (pure_getters) {\n            return this.cdr._throw_on_access(pure_getters);\n          });\n          def(AST_SymbolRef, function (pure_getters) {\n            if (this.is_undefined) return true;\n            if (!is_strict(pure_getters)) return false;\n            var fixed = this.fixed_value();\n            return !fixed || fixed._throw_on_access(pure_getters);\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"_throw_on_access\", func);\n        });\n        /* -----[ boolean/negation helpers ]----- */\n        // methods to determine whether an expression has a boolean result type\n\n\n        (function (def) {\n          var unary_bool = [\"!\", \"delete\"];\n          var binary_bool = [\"in\", \"instanceof\", \"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">=\", \">\"];\n          def(AST_Node, return_false);\n          def(AST_UnaryPrefix, function () {\n            return member(this.operator, unary_bool);\n          });\n          def(AST_Binary, function () {\n            return member(this.operator, binary_bool) || (this.operator == \"&&\" || this.operator == \"||\") && this.left.is_boolean() && this.right.is_boolean();\n          });\n          def(AST_Conditional, function () {\n            return this.consequent.is_boolean() && this.alternative.is_boolean();\n          });\n          def(AST_Assign, function () {\n            return this.operator == \"=\" && this.right.is_boolean();\n          });\n          def(AST_Seq, function () {\n            return this.cdr.is_boolean();\n          });\n          def(AST_True, return_true);\n          def(AST_False, return_true);\n        })(function (node, func) {\n          node.DEFMETHOD(\"is_boolean\", func);\n        }); // methods to determine if an expression has a numeric result type\n\n\n        (function (def) {\n          def(AST_Node, return_false);\n          def(AST_Number, return_true);\n          var unary = makePredicate(\"+ - ~ ++ --\");\n          def(AST_Unary, function () {\n            return unary(this.operator);\n          });\n          var binary = makePredicate(\"- * / % & | ^ << >> >>>\");\n          def(AST_Binary, function (compressor) {\n            return binary(this.operator) || this.operator == \"+\" && this.left.is_number(compressor) && this.right.is_number(compressor);\n          });\n          def(AST_Assign, function (compressor) {\n            return binary(this.operator.slice(0, -1)) || this.operator == \"=\" && this.right.is_number(compressor);\n          });\n          def(AST_Seq, function (compressor) {\n            return this.cdr.is_number(compressor);\n          });\n          def(AST_Conditional, function (compressor) {\n            return this.consequent.is_number(compressor) && this.alternative.is_number(compressor);\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"is_number\", func);\n        }); // methods to determine if an expression has a string result type\n\n\n        (function (def) {\n          def(AST_Node, return_false);\n          def(AST_String, return_true);\n          def(AST_UnaryPrefix, function () {\n            return this.operator == \"typeof\";\n          });\n          def(AST_Binary, function (compressor) {\n            return this.operator == \"+\" && (this.left.is_string(compressor) || this.right.is_string(compressor));\n          });\n          def(AST_Assign, function (compressor) {\n            return (this.operator == \"=\" || this.operator == \"+=\") && this.right.is_string(compressor);\n          });\n          def(AST_Seq, function (compressor) {\n            return this.cdr.is_string(compressor);\n          });\n          def(AST_Conditional, function (compressor) {\n            return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"is_string\", func);\n        });\n\n        var unary_side_effects = makePredicate(\"delete ++ --\");\n\n        function is_lhs(node, parent) {\n          if (parent instanceof AST_Unary && unary_side_effects(parent.operator)) return parent.expression;\n          if (parent instanceof AST_Assign && parent.left === node) return node;\n        }\n\n        (function (def) {\n          AST_Node.DEFMETHOD(\"resolve_defines\", function (compressor) {\n            if (!compressor.option(\"global_defs\")) return;\n\n            var def = this._find_defs(compressor, \"\");\n\n            if (def) {\n              var node,\n                  parent = this,\n                  level = 0;\n\n              do {\n                node = parent;\n                parent = compressor.parent(level++);\n              } while (parent instanceof AST_PropAccess && parent.expression === node);\n\n              if (is_lhs(node, parent)) {\n                compressor.warn('global_defs ' + this.print_to_string() + ' redefined [{file}:{line},{col}]', this.start);\n              } else {\n                return def;\n              }\n            }\n          });\n\n          function to_node(value, orig) {\n            if (value instanceof AST_Node) return make_node(value.CTOR, orig, value);\n            if (Array.isArray(value)) return make_node(AST_Array, orig, {\n              elements: value.map(function (value) {\n                return to_node(value, orig);\n              })\n            });\n\n            if (value && typeof value == \"object\") {\n              var props = [];\n\n              for (var key in value) {\n                props.push(make_node(AST_ObjectKeyVal, orig, {\n                  key: key,\n                  value: to_node(value[key], orig)\n                }));\n              }\n\n              return make_node(AST_Object, orig, {\n                properties: props\n              });\n            }\n\n            return make_node_from_constant(value, orig);\n          }\n\n          def(AST_Node, noop);\n          def(AST_Dot, function (compressor, suffix) {\n            return this.expression._find_defs(compressor, \".\" + this.property + suffix);\n          });\n          def(AST_SymbolRef, function (compressor, suffix) {\n            if (!this.global()) return;\n            var name;\n            var defines = compressor.option(\"global_defs\");\n\n            if (defines && HOP(defines, name = this.name + suffix)) {\n              var node = to_node(defines[name], this);\n              var top = compressor.find_parent(AST_Toplevel);\n              node.walk(new TreeWalker(function (node) {\n                if (node instanceof AST_SymbolRef) {\n                  node.scope = top;\n                  node.thedef = top.def_global(node);\n                }\n              }));\n              return node;\n            }\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"_find_defs\", func);\n        });\n\n        function best_of_expression(ast1, ast2) {\n          return ast1.print_to_string().length > ast2.print_to_string().length ? ast2 : ast1;\n        }\n\n        function best_of_statement(ast1, ast2) {\n          return best_of_expression(make_node(AST_SimpleStatement, ast1, {\n            body: ast1\n          }), make_node(AST_SimpleStatement, ast2, {\n            body: ast2\n          })).body;\n        }\n\n        function best_of(compressor, ast1, ast2) {\n          return (first_in_statement(compressor) ? best_of_statement : best_of_expression)(ast1, ast2);\n        } // methods to evaluate a constant expression\n\n\n        (function (def) {\n          // If the node has been successfully reduced to a constant,\n          // then its value is returned; otherwise the element itself\n          // is returned.\n          // They can be distinguished as constant value is never a\n          // descendant of AST_Node.\n          AST_Node.DEFMETHOD(\"evaluate\", function (compressor) {\n            if (!compressor.option(\"evaluate\")) return this;\n\n            try {\n              var val = this._eval(compressor);\n\n              return !val || val instanceof RegExp || typeof val != \"object\" ? val : this;\n            } catch (ex) {\n              if (ex !== def) throw ex;\n              return this;\n            }\n          });\n          var unaryPrefix = makePredicate(\"! ~ - + void\");\n          AST_Node.DEFMETHOD(\"is_constant\", function () {\n            // Accomodate when compress option evaluate=false\n            // as well as the common constant expressions !0 and -1\n            if (this instanceof AST_Constant) {\n              return !(this instanceof AST_RegExp);\n            } else {\n              return this instanceof AST_UnaryPrefix && this.expression instanceof AST_Constant && unaryPrefix(this.operator);\n            }\n          }); // Obtain the constant value of an expression already known to be constant.\n          // Result only valid iff this.is_constant() is true.\n\n          AST_Node.DEFMETHOD(\"constant_value\", function (compressor) {\n            // Accomodate when option evaluate=false.\n            if (this instanceof AST_Constant && !(this instanceof AST_RegExp)) {\n              return this.value;\n            } // Accomodate the common constant expressions !0 and -1 when option evaluate=false.\n\n\n            if (this instanceof AST_UnaryPrefix && this.expression instanceof AST_Constant) switch (this.operator) {\n              case \"!\":\n                return !this.expression.value;\n\n              case \"~\":\n                return ~this.expression.value;\n\n              case \"-\":\n                return -this.expression.value;\n\n              case \"+\":\n                return +this.expression.value;\n\n              default:\n                throw new Error(string_template(\"Cannot evaluate unary expression {value}\", {\n                  value: this.print_to_string()\n                }));\n            }\n            var result = this.evaluate(compressor);\n\n            if (result !== this) {\n              return result;\n            }\n\n            throw new Error(string_template(\"Cannot evaluate constant [{file}:{line},{col}]\", this.start));\n          });\n          def(AST_Statement, function () {\n            throw new Error(string_template(\"Cannot evaluate a statement [{file}:{line},{col}]\", this.start));\n          });\n          def(AST_Lambda, function () {\n            throw def;\n          });\n\n          function ev(node, compressor) {\n            if (!compressor) throw new Error(\"Compressor must be passed\");\n            return node._eval(compressor);\n          }\n\n          ;\n          def(AST_Node, function () {\n            throw def; // not constant\n          });\n          def(AST_Constant, function () {\n            return this.getValue();\n          });\n          def(AST_Array, function (compressor) {\n            if (compressor.option(\"unsafe\")) {\n              return this.elements.map(function (element) {\n                return ev(element, compressor);\n              });\n            }\n\n            throw def;\n          });\n          def(AST_Object, function (compressor) {\n            if (compressor.option(\"unsafe\")) {\n              var val = {};\n\n              for (var i = 0, len = this.properties.length; i < len; i++) {\n                var prop = this.properties[i];\n                var key = prop.key;\n\n                if (key instanceof AST_Symbol) {\n                  key = key.name;\n                } else if (key instanceof AST_Node) {\n                  key = ev(key, compressor);\n                }\n\n                if (typeof Object.prototype[key] === 'function') {\n                  throw def;\n                }\n\n                val[key] = ev(prop.value, compressor);\n              }\n\n              return val;\n            }\n\n            throw def;\n          });\n          def(AST_UnaryPrefix, function (compressor) {\n            var e = this.expression;\n\n            switch (this.operator) {\n              case \"!\":\n                return !ev(e, compressor);\n\n              case \"typeof\":\n                // Function would be evaluated to an array and so typeof would\n                // incorrectly return 'object'. Hence making is a special case.\n                if (e instanceof AST_Function) return typeof function () {};\n                e = ev(e, compressor); // typeof <RegExp> returns \"object\" or \"function\" on different platforms\n                // so cannot evaluate reliably\n\n                if (e instanceof RegExp) throw def;\n                return typeof e;\n\n              case \"void\":\n                return void ev(e, compressor);\n\n              case \"~\":\n                return ~ev(e, compressor);\n\n              case \"-\":\n                return -ev(e, compressor);\n\n              case \"+\":\n                return +ev(e, compressor);\n            }\n\n            throw def;\n          });\n          def(AST_Binary, function (c) {\n            var left = this.left,\n                right = this.right,\n                result;\n\n            switch (this.operator) {\n              case \"&&\":\n                result = ev(left, c) && ev(right, c);\n                break;\n\n              case \"||\":\n                result = ev(left, c) || ev(right, c);\n                break;\n\n              case \"|\":\n                result = ev(left, c) | ev(right, c);\n                break;\n\n              case \"&\":\n                result = ev(left, c) & ev(right, c);\n                break;\n\n              case \"^\":\n                result = ev(left, c) ^ ev(right, c);\n                break;\n\n              case \"+\":\n                result = ev(left, c) + ev(right, c);\n                break;\n\n              case \"*\":\n                result = ev(left, c) * ev(right, c);\n                break;\n\n              case \"/\":\n                result = ev(left, c) / ev(right, c);\n                break;\n\n              case \"%\":\n                result = ev(left, c) % ev(right, c);\n                break;\n\n              case \"-\":\n                result = ev(left, c) - ev(right, c);\n                break;\n\n              case \"<<\":\n                result = ev(left, c) << ev(right, c);\n                break;\n\n              case \">>\":\n                result = ev(left, c) >> ev(right, c);\n                break;\n\n              case \">>>\":\n                result = ev(left, c) >>> ev(right, c);\n                break;\n\n              case \"==\":\n                result = ev(left, c) == ev(right, c);\n                break;\n\n              case \"===\":\n                result = ev(left, c) === ev(right, c);\n                break;\n\n              case \"!=\":\n                result = ev(left, c) != ev(right, c);\n                break;\n\n              case \"!==\":\n                result = ev(left, c) !== ev(right, c);\n                break;\n\n              case \"<\":\n                result = ev(left, c) < ev(right, c);\n                break;\n\n              case \"<=\":\n                result = ev(left, c) <= ev(right, c);\n                break;\n\n              case \">\":\n                result = ev(left, c) > ev(right, c);\n                break;\n\n              case \">=\":\n                result = ev(left, c) >= ev(right, c);\n                break;\n\n              default:\n                throw def;\n            }\n\n            if (isNaN(result) && c.find_parent(AST_With)) {\n              // leave original expression as is\n              throw def;\n            }\n\n            return result;\n          });\n          def(AST_Conditional, function (compressor) {\n            return ev(this.condition, compressor) ? ev(this.consequent, compressor) : ev(this.alternative, compressor);\n          });\n          def(AST_SymbolRef, function (compressor) {\n            if (!compressor.option(\"reduce_vars\") || this._evaluating) throw def;\n            this._evaluating = true;\n\n            try {\n              var fixed = this.fixed_value();\n              if (!fixed) throw def;\n              var value = ev(fixed, compressor);\n              if (!HOP(fixed, \"_eval\")) fixed._eval = function () {\n                return value;\n              };\n              if (value && typeof value == \"object\" && this.definition().escaped) throw def;\n              return value;\n            } finally {\n              this._evaluating = false;\n            }\n          });\n          def(AST_PropAccess, function (compressor) {\n            if (compressor.option(\"unsafe\")) {\n              var key = this.property;\n\n              if (key instanceof AST_Node) {\n                key = ev(key, compressor);\n              }\n\n              var val = ev(this.expression, compressor);\n\n              if (val && HOP(val, key)) {\n                return val[key];\n              }\n            }\n\n            throw def;\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"_eval\", func);\n        }); // method to negate an expression\n\n\n        (function (def) {\n          function basic_negation(exp) {\n            return make_node(AST_UnaryPrefix, exp, {\n              operator: \"!\",\n              expression: exp\n            });\n          }\n\n          function best(orig, alt, first_in_statement) {\n            var negated = basic_negation(orig);\n\n            if (first_in_statement) {\n              var stat = make_node(AST_SimpleStatement, alt, {\n                body: alt\n              });\n              return best_of_expression(negated, stat) === stat ? alt : negated;\n            }\n\n            return best_of_expression(negated, alt);\n          }\n\n          def(AST_Node, function () {\n            return basic_negation(this);\n          });\n          def(AST_Statement, function () {\n            throw new Error(\"Cannot negate a statement\");\n          });\n          def(AST_Function, function () {\n            return basic_negation(this);\n          });\n          def(AST_UnaryPrefix, function () {\n            if (this.operator == \"!\") return this.expression;\n            return basic_negation(this);\n          });\n          def(AST_Seq, function (compressor) {\n            var self = this.clone();\n            self.cdr = self.cdr.negate(compressor);\n            return self;\n          });\n          def(AST_Conditional, function (compressor, first_in_statement) {\n            var self = this.clone();\n            self.consequent = self.consequent.negate(compressor);\n            self.alternative = self.alternative.negate(compressor);\n            return best(this, self, first_in_statement);\n          });\n          def(AST_Binary, function (compressor, first_in_statement) {\n            var self = this.clone(),\n                op = this.operator;\n\n            if (compressor.option(\"unsafe_comps\")) {\n              switch (op) {\n                case \"<=\":\n                  self.operator = \">\";\n                  return self;\n\n                case \"<\":\n                  self.operator = \">=\";\n                  return self;\n\n                case \">=\":\n                  self.operator = \"<\";\n                  return self;\n\n                case \">\":\n                  self.operator = \"<=\";\n                  return self;\n              }\n            }\n\n            switch (op) {\n              case \"==\":\n                self.operator = \"!=\";\n                return self;\n\n              case \"!=\":\n                self.operator = \"==\";\n                return self;\n\n              case \"===\":\n                self.operator = \"!==\";\n                return self;\n\n              case \"!==\":\n                self.operator = \"===\";\n                return self;\n\n              case \"&&\":\n                self.operator = \"||\";\n                self.left = self.left.negate(compressor, first_in_statement);\n                self.right = self.right.negate(compressor);\n                return best(this, self, first_in_statement);\n\n              case \"||\":\n                self.operator = \"&&\";\n                self.left = self.left.negate(compressor, first_in_statement);\n                self.right = self.right.negate(compressor);\n                return best(this, self, first_in_statement);\n            }\n\n            return basic_negation(this);\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"negate\", function (compressor, first_in_statement) {\n            return func.call(this, compressor, first_in_statement);\n          });\n        });\n\n        AST_Call.DEFMETHOD(\"has_pure_annotation\", function (compressor) {\n          if (!compressor.option(\"side_effects\")) return false;\n          if (this.pure !== undefined) return this.pure;\n          var pure = false;\n          var comments, last_comment;\n\n          if (this.start && (comments = this.start.comments_before) && comments.length && /[@#]__PURE__/.test((last_comment = comments[comments.length - 1]).value)) {\n            pure = last_comment;\n          }\n\n          return this.pure = pure;\n        }); // determine if expression has side effects\n\n        (function (def) {\n          def(AST_Node, return_true);\n          def(AST_EmptyStatement, return_false);\n          def(AST_Constant, return_false);\n          def(AST_This, return_false);\n          def(AST_Call, function (compressor) {\n            if (!this.has_pure_annotation(compressor) && compressor.pure_funcs(this)) return true;\n\n            for (var i = this.args.length; --i >= 0;) {\n              if (this.args[i].has_side_effects(compressor)) return true;\n            }\n\n            return false;\n          });\n\n          function any(list, compressor) {\n            for (var i = list.length; --i >= 0;) if (list[i].has_side_effects(compressor)) return true;\n\n            return false;\n          }\n\n          def(AST_Block, function (compressor) {\n            return any(this.body, compressor);\n          });\n          def(AST_Switch, function (compressor) {\n            return this.expression.has_side_effects(compressor) || any(this.body, compressor);\n          });\n          def(AST_Case, function (compressor) {\n            return this.expression.has_side_effects(compressor) || any(this.body, compressor);\n          });\n          def(AST_Try, function (compressor) {\n            return any(this.body, compressor) || this.bcatch && this.bcatch.has_side_effects(compressor) || this.bfinally && this.bfinally.has_side_effects(compressor);\n          });\n          def(AST_If, function (compressor) {\n            return this.condition.has_side_effects(compressor) || this.body && this.body.has_side_effects(compressor) || this.alternative && this.alternative.has_side_effects(compressor);\n          });\n          def(AST_LabeledStatement, function (compressor) {\n            return this.body.has_side_effects(compressor);\n          });\n          def(AST_SimpleStatement, function (compressor) {\n            return this.body.has_side_effects(compressor);\n          });\n          def(AST_Defun, return_true);\n          def(AST_Function, return_false);\n          def(AST_Binary, function (compressor) {\n            return this.left.has_side_effects(compressor) || this.right.has_side_effects(compressor);\n          });\n          def(AST_Assign, return_true);\n          def(AST_Conditional, function (compressor) {\n            return this.condition.has_side_effects(compressor) || this.consequent.has_side_effects(compressor) || this.alternative.has_side_effects(compressor);\n          });\n          def(AST_Unary, function (compressor) {\n            return unary_side_effects(this.operator) || this.expression.has_side_effects(compressor);\n          });\n          def(AST_SymbolRef, function (compressor) {\n            return this.undeclared();\n          });\n          def(AST_Object, function (compressor) {\n            return any(this.properties, compressor);\n          });\n          def(AST_ObjectProperty, function (compressor) {\n            return this.value.has_side_effects(compressor);\n          });\n          def(AST_Array, function (compressor) {\n            return any(this.elements, compressor);\n          });\n          def(AST_Dot, function (compressor) {\n            return this.expression.may_throw_on_access(compressor) || this.expression.has_side_effects(compressor);\n          });\n          def(AST_Sub, function (compressor) {\n            return this.expression.may_throw_on_access(compressor) || this.expression.has_side_effects(compressor) || this.property.has_side_effects(compressor);\n          });\n          def(AST_Seq, function (compressor) {\n            return this.car.has_side_effects(compressor) || this.cdr.has_side_effects(compressor);\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"has_side_effects\", func);\n        }); // tell me if a statement aborts\n\n\n        function aborts(thing) {\n          return thing && thing.aborts();\n        }\n\n        ;\n\n        (function (def) {\n          def(AST_Statement, return_null);\n          def(AST_Jump, return_this);\n\n          function block_aborts() {\n            var n = this.body.length;\n            return n > 0 && aborts(this.body[n - 1]);\n          }\n\n          ;\n          def(AST_BlockStatement, block_aborts);\n          def(AST_SwitchBranch, block_aborts);\n          def(AST_If, function () {\n            return this.alternative && aborts(this.body) && aborts(this.alternative) && this;\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"aborts\", func);\n        });\n        /* -----[ optimizers ]----- */\n\n\n        OPT(AST_Directive, function (self, compressor) {\n          if (compressor.has_directive(self.value) !== self) {\n            return make_node(AST_EmptyStatement, self);\n          }\n\n          return self;\n        });\n        OPT(AST_Debugger, function (self, compressor) {\n          if (compressor.option(\"drop_debugger\")) return make_node(AST_EmptyStatement, self);\n          return self;\n        });\n        OPT(AST_LabeledStatement, function (self, compressor) {\n          if (self.body instanceof AST_Break && compressor.loopcontrol_target(self.body) === self.body) {\n            return make_node(AST_EmptyStatement, self);\n          }\n\n          return self.label.references.length == 0 ? self.body : self;\n        });\n        OPT(AST_Block, function (self, compressor) {\n          self.body = tighten_body(self.body, compressor);\n          return self;\n        });\n        OPT(AST_BlockStatement, function (self, compressor) {\n          self.body = tighten_body(self.body, compressor);\n\n          switch (self.body.length) {\n            case 1:\n              return self.body[0];\n\n            case 0:\n              return make_node(AST_EmptyStatement, self);\n          }\n\n          return self;\n        });\n        AST_Scope.DEFMETHOD(\"drop_unused\", function (compressor) {\n          var self = this;\n          if (compressor.has_directive(\"use asm\")) return self;\n          var toplevel = compressor.option(\"toplevel\");\n\n          if (compressor.option(\"unused\") && (!(self instanceof AST_Toplevel) || toplevel) && !self.uses_eval && !self.uses_with) {\n            var assign_as_unused = !/keep_assign/.test(compressor.option(\"unused\"));\n            var drop_funcs = /funcs/.test(toplevel);\n            var drop_vars = /vars/.test(toplevel);\n\n            if (!(self instanceof AST_Toplevel) || toplevel == true) {\n              drop_funcs = drop_vars = true;\n            }\n\n            var in_use = [];\n            var in_use_ids = Object.create(null); // avoid expensive linear scans of in_use\n\n            if (self instanceof AST_Toplevel && compressor.top_retain) {\n              self.variables.each(function (def) {\n                if (compressor.top_retain(def) && !(def.id in in_use_ids)) {\n                  in_use_ids[def.id] = true;\n                  in_use.push(def);\n                }\n              });\n            }\n\n            var initializations = new Dictionary(); // pass 1: find out which symbols are directly used in\n            // this scope (not in nested scopes).\n\n            var scope = this;\n            var tw = new TreeWalker(function (node, descend) {\n              if (node !== self) {\n                if (node instanceof AST_Defun) {\n                  if (!drop_funcs && scope === self) {\n                    var node_def = node.name.definition();\n\n                    if (!(node_def.id in in_use_ids)) {\n                      in_use_ids[node_def.id] = true;\n                      in_use.push(node_def);\n                    }\n                  }\n\n                  initializations.add(node.name.name, node);\n                  return true; // don't go in nested scopes\n                }\n\n                if (node instanceof AST_Definitions && scope === self) {\n                  node.definitions.forEach(function (def) {\n                    if (!drop_vars) {\n                      var node_def = def.name.definition();\n\n                      if (!(node_def.id in in_use_ids)) {\n                        in_use_ids[node_def.id] = true;\n                        in_use.push(node_def);\n                      }\n                    }\n\n                    if (def.value) {\n                      initializations.add(def.name.name, def.value);\n\n                      if (def.value.has_side_effects(compressor)) {\n                        def.value.walk(tw);\n                      }\n                    }\n                  });\n                  return true;\n                }\n\n                if (assign_as_unused && node instanceof AST_Assign && node.operator == \"=\" && node.left instanceof AST_SymbolRef && !is_reference_const(node.left) && scope === self) {\n                  node.right.walk(tw);\n                  return true;\n                }\n\n                if (node instanceof AST_SymbolRef) {\n                  var node_def = node.definition();\n\n                  if (!(node_def.id in in_use_ids)) {\n                    in_use_ids[node_def.id] = true;\n                    in_use.push(node_def);\n                  }\n\n                  return true;\n                }\n\n                if (node instanceof AST_Scope) {\n                  var save_scope = scope;\n                  scope = node;\n                  descend();\n                  scope = save_scope;\n                  return true;\n                }\n              }\n            });\n            self.walk(tw); // pass 2: for every used symbol we need to walk its\n            // initialization code to figure out if it uses other\n            // symbols (that may not be in_use).\n\n            for (var i = 0; i < in_use.length; ++i) {\n              in_use[i].orig.forEach(function (decl) {\n                // undeclared globals will be instanceof AST_SymbolRef\n                var init = initializations.get(decl.name);\n                if (init) init.forEach(function (init) {\n                  var tw = new TreeWalker(function (node) {\n                    if (node instanceof AST_SymbolRef) {\n                      var node_def = node.definition();\n\n                      if (!(node_def.id in in_use_ids)) {\n                        in_use_ids[node_def.id] = true;\n                        in_use.push(node_def);\n                      }\n                    }\n                  });\n                  init.walk(tw);\n                });\n              });\n            } // pass 3: we should drop declarations not in_use\n\n\n            var tt = new TreeTransformer(function before(node, descend, in_list) {\n              if (node instanceof AST_Function && node.name && !compressor.option(\"keep_fnames\")) {\n                var def = node.name.definition(); // any declarations with same name will overshadow\n                // name of this anonymous function and can therefore\n                // never be used anywhere\n\n                if (!(def.id in in_use_ids) || def.orig.length > 1) node.name = null;\n              }\n\n              if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {\n                var trim = !compressor.option(\"keep_fargs\");\n\n                for (var a = node.argnames, i = a.length; --i >= 0;) {\n                  var sym = a[i];\n\n                  if (!(sym.definition().id in in_use_ids)) {\n                    sym.__unused = true;\n\n                    if (trim) {\n                      a.pop();\n                      compressor[sym.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused function argument {name} [{file}:{line},{col}]\", {\n                        name: sym.name,\n                        file: sym.start.file,\n                        line: sym.start.line,\n                        col: sym.start.col\n                      });\n                    }\n                  } else {\n                    trim = false;\n                  }\n                }\n              }\n\n              if (drop_funcs && node instanceof AST_Defun && node !== self) {\n                if (!(node.name.definition().id in in_use_ids)) {\n                  compressor[node.name.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused function {name} [{file}:{line},{col}]\", {\n                    name: node.name.name,\n                    file: node.name.start.file,\n                    line: node.name.start.line,\n                    col: node.name.start.col\n                  });\n                  return make_node(AST_EmptyStatement, node);\n                }\n\n                return node;\n              }\n\n              if (drop_vars && node instanceof AST_Definitions && !(tt.parent() instanceof AST_ForIn && tt.parent().init === node)) {\n                var def = node.definitions.filter(function (def) {\n                  if (def.value) def.value = def.value.transform(tt);\n                  var sym = def.name.definition();\n                  if (sym.id in in_use_ids) return true;\n\n                  if (sym.orig[0] instanceof AST_SymbolCatch) {\n                    def.value = def.value && def.value.drop_side_effect_free(compressor);\n                    return true;\n                  }\n\n                  var w = {\n                    name: def.name.name,\n                    file: def.name.start.file,\n                    line: def.name.start.line,\n                    col: def.name.start.col\n                  };\n\n                  if (def.value && (def._unused_side_effects = def.value.drop_side_effect_free(compressor))) {\n                    compressor.warn(\"Side effects in initialization of unused variable {name} [{file}:{line},{col}]\", w);\n                    return true;\n                  }\n\n                  compressor[def.name.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused variable {name} [{file}:{line},{col}]\", w);\n                  return false;\n                }); // place uninitialized names at the start\n\n                def = mergeSort(def, function (a, b) {\n                  if (!a.value && b.value) return -1;\n                  if (!b.value && a.value) return 1;\n                  return 0;\n                }); // for unused names whose initialization has\n                // side effects, we can cascade the init. code\n                // into the next one, or next statement.\n\n                var side_effects = [];\n\n                for (var i = 0; i < def.length;) {\n                  var x = def[i];\n\n                  if (x._unused_side_effects) {\n                    side_effects.push(x._unused_side_effects);\n                    def.splice(i, 1);\n                  } else {\n                    if (side_effects.length > 0) {\n                      side_effects.push(x.value);\n                      x.value = AST_Seq.from_array(side_effects);\n                      side_effects = [];\n                    }\n\n                    ++i;\n                  }\n                }\n\n                if (side_effects.length > 0) {\n                  side_effects = make_node(AST_BlockStatement, node, {\n                    body: [make_node(AST_SimpleStatement, node, {\n                      body: AST_Seq.from_array(side_effects)\n                    })]\n                  });\n                } else {\n                  side_effects = null;\n                }\n\n                if (def.length == 0 && !side_effects) {\n                  return make_node(AST_EmptyStatement, node);\n                }\n\n                if (def.length == 0) {\n                  return in_list ? MAP.splice(side_effects.body) : side_effects;\n                }\n\n                node.definitions = def;\n\n                if (side_effects) {\n                  side_effects.body.unshift(node);\n                  return in_list ? MAP.splice(side_effects.body) : side_effects;\n                }\n\n                return node;\n              }\n\n              if (drop_vars && assign_as_unused && node instanceof AST_Assign && node.operator == \"=\" && node.left instanceof AST_SymbolRef) {\n                var def = node.left.definition();\n\n                if (!(def.id in in_use_ids) && self.variables.get(def.name) === def) {\n                  return maintain_this_binding(tt.parent(), node, node.right.transform(tt));\n                }\n              } // certain combination of unused name + side effect leads to:\n              //    https://github.com/mishoo/UglifyJS2/issues/44\n              //    https://github.com/mishoo/UglifyJS2/issues/1830\n              // that's an invalid AST.\n              // We fix it at this stage by moving the `var` outside the `for`.\n\n\n              if (node instanceof AST_For) {\n                descend(node, this);\n\n                if (node.init instanceof AST_BlockStatement) {\n                  var block = node.init;\n                  node.init = block.body.pop();\n                  block.body.push(node);\n                  return in_list ? MAP.splice(block.body) : block;\n                } else if (is_empty(node.init)) {\n                  node.init = null;\n                }\n\n                return node;\n              }\n\n              if (node instanceof AST_LabeledStatement && node.body instanceof AST_For) {\n                descend(node, this);\n\n                if (node.body instanceof AST_BlockStatement) {\n                  var block = node.body;\n                  node.body = block.body.pop();\n                  block.body.push(node);\n                  return in_list ? MAP.splice(block.body) : block;\n                }\n\n                return node;\n              }\n\n              if (node instanceof AST_Scope && node !== self) return node;\n            });\n            self.transform(tt);\n          }\n        });\n        AST_Scope.DEFMETHOD(\"hoist_declarations\", function (compressor) {\n          var self = this;\n          if (compressor.has_directive(\"use asm\")) return self;\n          var hoist_funs = compressor.option(\"hoist_funs\");\n          var hoist_vars = compressor.option(\"hoist_vars\");\n\n          if (hoist_funs || hoist_vars) {\n            var dirs = [];\n            var hoisted = [];\n            var vars = new Dictionary(),\n                vars_found = 0,\n                var_decl = 0; // let's count var_decl first, we seem to waste a lot of\n            // space if we hoist `var` when there's only one.\n\n            self.walk(new TreeWalker(function (node) {\n              if (node instanceof AST_Scope && node !== self) return true;\n\n              if (node instanceof AST_Var) {\n                ++var_decl;\n                return true;\n              }\n            }));\n            hoist_vars = hoist_vars && var_decl > 1;\n            var tt = new TreeTransformer(function before(node) {\n              if (node !== self) {\n                if (node instanceof AST_Directive) {\n                  dirs.push(node);\n                  return make_node(AST_EmptyStatement, node);\n                }\n\n                if (node instanceof AST_Defun && hoist_funs) {\n                  hoisted.push(node);\n                  return make_node(AST_EmptyStatement, node);\n                }\n\n                if (node instanceof AST_Var && hoist_vars) {\n                  node.definitions.forEach(function (def) {\n                    vars.set(def.name.name, def);\n                    ++vars_found;\n                  });\n                  var seq = node.to_assignments(compressor);\n                  var p = tt.parent();\n\n                  if (p instanceof AST_ForIn && p.init === node) {\n                    if (seq == null) {\n                      var def = node.definitions[0].name;\n                      return make_node(AST_SymbolRef, def, def);\n                    }\n\n                    return seq;\n                  }\n\n                  if (p instanceof AST_For && p.init === node) {\n                    return seq;\n                  }\n\n                  if (!seq) return make_node(AST_EmptyStatement, node);\n                  return make_node(AST_SimpleStatement, node, {\n                    body: seq\n                  });\n                }\n\n                if (node instanceof AST_Scope) return node; // to avoid descending in nested scopes\n              }\n            });\n            self = self.transform(tt);\n\n            if (vars_found > 0) {\n              // collect only vars which don't show up in self's arguments list\n              var defs = [];\n              vars.each(function (def, name) {\n                if (self instanceof AST_Lambda && find_if(function (x) {\n                  return x.name == def.name.name;\n                }, self.argnames)) {\n                  vars.del(name);\n                } else {\n                  def = def.clone();\n                  def.value = null;\n                  defs.push(def);\n                  vars.set(name, def);\n                }\n              });\n\n              if (defs.length > 0) {\n                // try to merge in assignments\n                for (var i = 0; i < self.body.length;) {\n                  if (self.body[i] instanceof AST_SimpleStatement) {\n                    var expr = self.body[i].body,\n                        sym,\n                        assign;\n\n                    if (expr instanceof AST_Assign && expr.operator == \"=\" && (sym = expr.left) instanceof AST_Symbol && vars.has(sym.name)) {\n                      var def = vars.get(sym.name);\n                      if (def.value) break;\n                      def.value = expr.right;\n                      remove(defs, def);\n                      defs.push(def);\n                      self.body.splice(i, 1);\n                      continue;\n                    }\n\n                    if (expr instanceof AST_Seq && (assign = expr.car) instanceof AST_Assign && assign.operator == \"=\" && (sym = assign.left) instanceof AST_Symbol && vars.has(sym.name)) {\n                      var def = vars.get(sym.name);\n                      if (def.value) break;\n                      def.value = assign.right;\n                      remove(defs, def);\n                      defs.push(def);\n                      self.body[i].body = expr.cdr;\n                      continue;\n                    }\n                  }\n\n                  if (self.body[i] instanceof AST_EmptyStatement) {\n                    self.body.splice(i, 1);\n                    continue;\n                  }\n\n                  if (self.body[i] instanceof AST_BlockStatement) {\n                    var tmp = [i, 1].concat(self.body[i].body);\n                    self.body.splice.apply(self.body, tmp);\n                    continue;\n                  }\n\n                  break;\n                }\n\n                defs = make_node(AST_Var, self, {\n                  definitions: defs\n                });\n                hoisted.push(defs);\n              }\n\n              ;\n            }\n\n            self.body = dirs.concat(hoisted, self.body);\n          }\n\n          return self;\n        }); // drop_side_effect_free()\n        // remove side-effect-free parts which only affects return value\n\n        (function (def) {\n          // Drop side-effect-free elements from an array of expressions.\n          // Returns an array of expressions with side-effects or null\n          // if all elements were dropped. Note: original array may be\n          // returned if nothing changed.\n          function trim(nodes, compressor, first_in_statement) {\n            var ret = [],\n                changed = false;\n\n            for (var i = 0, len = nodes.length; i < len; i++) {\n              var node = nodes[i].drop_side_effect_free(compressor, first_in_statement);\n              changed |= node !== nodes[i];\n\n              if (node) {\n                ret.push(node);\n                first_in_statement = false;\n              }\n            }\n\n            return changed ? ret.length ? ret : null : nodes;\n          }\n\n          def(AST_Node, return_this);\n          def(AST_Constant, return_null);\n          def(AST_This, return_null);\n          def(AST_Call, function (compressor, first_in_statement) {\n            if (!this.has_pure_annotation(compressor) && compressor.pure_funcs(this)) {\n              if (this.expression instanceof AST_Function && (!this.expression.name || !this.expression.name.definition().references.length)) {\n                var node = this.clone();\n                node.expression = node.expression.process_expression(false, compressor);\n                return node;\n              }\n\n              return this;\n            }\n\n            if (this.pure) {\n              compressor.warn(\"Dropping __PURE__ call [{file}:{line},{col}]\", this.start);\n              this.pure.value = this.pure.value.replace(/[@#]__PURE__/g, ' ');\n            }\n\n            var args = trim(this.args, compressor, first_in_statement);\n            return args && AST_Seq.from_array(args);\n          });\n          def(AST_Accessor, return_null);\n          def(AST_Function, return_null);\n          def(AST_Binary, function (compressor, first_in_statement) {\n            var right = this.right.drop_side_effect_free(compressor);\n            if (!right) return this.left.drop_side_effect_free(compressor, first_in_statement);\n\n            switch (this.operator) {\n              case \"&&\":\n              case \"||\":\n                if (right === this.right) return this;\n                var node = this.clone();\n                node.right = right;\n                return node;\n\n              default:\n                var left = this.left.drop_side_effect_free(compressor, first_in_statement);\n                if (!left) return this.right.drop_side_effect_free(compressor, first_in_statement);\n                return make_node(AST_Seq, this, {\n                  car: left,\n                  cdr: right\n                });\n            }\n          });\n          def(AST_Assign, return_this);\n          def(AST_Conditional, function (compressor) {\n            var consequent = this.consequent.drop_side_effect_free(compressor);\n            var alternative = this.alternative.drop_side_effect_free(compressor);\n            if (consequent === this.consequent && alternative === this.alternative) return this;\n            if (!consequent) return alternative ? make_node(AST_Binary, this, {\n              operator: \"||\",\n              left: this.condition,\n              right: alternative\n            }) : this.condition.drop_side_effect_free(compressor);\n            if (!alternative) return make_node(AST_Binary, this, {\n              operator: \"&&\",\n              left: this.condition,\n              right: consequent\n            });\n            var node = this.clone();\n            node.consequent = consequent;\n            node.alternative = alternative;\n            return node;\n          });\n          def(AST_Unary, function (compressor, first_in_statement) {\n            if (unary_side_effects(this.operator)) return this;\n            if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef) return null;\n            var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n\n            if (first_in_statement && this instanceof AST_UnaryPrefix && is_iife_call(expression)) {\n              if (expression === this.expression && this.operator.length === 1) return this;\n              return make_node(AST_UnaryPrefix, this, {\n                operator: this.operator.length === 1 ? this.operator : \"!\",\n                expression: expression\n              });\n            }\n\n            return expression;\n          });\n          def(AST_SymbolRef, function () {\n            return this.undeclared() ? this : null;\n          });\n          def(AST_Object, function (compressor, first_in_statement) {\n            var values = trim(this.properties, compressor, first_in_statement);\n            return values && AST_Seq.from_array(values);\n          });\n          def(AST_ObjectProperty, function (compressor, first_in_statement) {\n            return this.value.drop_side_effect_free(compressor, first_in_statement);\n          });\n          def(AST_Array, function (compressor, first_in_statement) {\n            var values = trim(this.elements, compressor, first_in_statement);\n            return values && AST_Seq.from_array(values);\n          });\n          def(AST_Dot, function (compressor, first_in_statement) {\n            if (this.expression.may_throw_on_access(compressor)) return this;\n            return this.expression.drop_side_effect_free(compressor, first_in_statement);\n          });\n          def(AST_Sub, function (compressor, first_in_statement) {\n            if (this.expression.may_throw_on_access(compressor)) return this;\n            var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n            if (!expression) return this.property.drop_side_effect_free(compressor, first_in_statement);\n            var property = this.property.drop_side_effect_free(compressor);\n            if (!property) return expression;\n            return make_node(AST_Seq, this, {\n              car: expression,\n              cdr: property\n            });\n          });\n          def(AST_Seq, function (compressor) {\n            var cdr = this.cdr.drop_side_effect_free(compressor);\n            if (cdr === this.cdr) return this;\n            if (!cdr) return this.car;\n            return make_node(AST_Seq, this, {\n              car: this.car,\n              cdr: cdr\n            });\n          });\n        })(function (node, func) {\n          node.DEFMETHOD(\"drop_side_effect_free\", func);\n        });\n\n        OPT(AST_SimpleStatement, function (self, compressor) {\n          if (compressor.option(\"side_effects\")) {\n            var body = self.body;\n            var node = body.drop_side_effect_free(compressor, true);\n\n            if (!node) {\n              compressor.warn(\"Dropping side-effect-free statement [{file}:{line},{col}]\", self.start);\n              return make_node(AST_EmptyStatement, self);\n            }\n\n            if (node !== body) {\n              return make_node(AST_SimpleStatement, self, {\n                body: node\n              });\n            }\n          }\n\n          return self;\n        });\n        OPT(AST_DWLoop, function (self, compressor) {\n          if (!compressor.option(\"loops\")) return self;\n          var cond = self.condition.evaluate(compressor);\n\n          if (cond !== self.condition) {\n            if (cond) {\n              return make_node(AST_For, self, {\n                body: self.body\n              });\n            }\n\n            if (compressor.option(\"dead_code\") && self instanceof AST_While) {\n              var a = [];\n              extract_declarations_from_unreachable_code(compressor, self.body, a);\n              return make_node(AST_BlockStatement, self, {\n                body: a\n              }).optimize(compressor);\n            }\n\n            if (self instanceof AST_Do) {\n              var has_loop_control = false;\n              var tw = new TreeWalker(function (node) {\n                if (node instanceof AST_Scope || has_loop_control) return true;\n                if (node instanceof AST_LoopControl && tw.loopcontrol_target(node) === self) return has_loop_control = true;\n              });\n              var parent = compressor.parent();\n              (parent instanceof AST_LabeledStatement ? parent : self).walk(tw);\n              if (!has_loop_control) return self.body;\n            }\n          }\n\n          if (self instanceof AST_While) {\n            return make_node(AST_For, self, self).optimize(compressor);\n          }\n\n          return self;\n        });\n\n        function if_break_in_loop(self, compressor) {\n          function drop_it(rest) {\n            rest = as_statement_array(rest);\n\n            if (self.body instanceof AST_BlockStatement) {\n              self.body = self.body.clone();\n              self.body.body = rest.concat(self.body.body.slice(1));\n              self.body = self.body.transform(compressor);\n            } else {\n              self.body = make_node(AST_BlockStatement, self.body, {\n                body: rest\n              }).transform(compressor);\n            }\n\n            if_break_in_loop(self, compressor);\n          }\n\n          var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;\n\n          if (first instanceof AST_If) {\n            if (first.body instanceof AST_Break && compressor.loopcontrol_target(first.body) === compressor.self()) {\n              if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                  left: self.condition,\n                  operator: \"&&\",\n                  right: first.condition.negate(compressor)\n                });\n              } else {\n                self.condition = first.condition.negate(compressor);\n              }\n\n              drop_it(first.alternative);\n            } else if (first.alternative instanceof AST_Break && compressor.loopcontrol_target(first.alternative) === compressor.self()) {\n              if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                  left: self.condition,\n                  operator: \"&&\",\n                  right: first.condition\n                });\n              } else {\n                self.condition = first.condition;\n              }\n\n              drop_it(first.body);\n            }\n          }\n        }\n\n        ;\n        OPT(AST_For, function (self, compressor) {\n          if (!compressor.option(\"loops\")) return self;\n\n          if (self.condition) {\n            var cond = self.condition.evaluate(compressor);\n\n            if (compressor.option(\"dead_code\") && !cond) {\n              var a = [];\n\n              if (self.init instanceof AST_Statement) {\n                a.push(self.init);\n              } else if (self.init) {\n                a.push(make_node(AST_SimpleStatement, self.init, {\n                  body: self.init\n                }));\n              }\n\n              extract_declarations_from_unreachable_code(compressor, self.body, a);\n              return make_node(AST_BlockStatement, self, {\n                body: a\n              }).optimize(compressor);\n            }\n\n            if (cond !== self.condition) {\n              cond = make_node_from_constant(cond, self.condition).transform(compressor);\n              self.condition = best_of_expression(cond, self.condition);\n            }\n          }\n\n          if_break_in_loop(self, compressor);\n          return self;\n        });\n        OPT(AST_If, function (self, compressor) {\n          if (is_empty(self.alternative)) self.alternative = null;\n          if (!compressor.option(\"conditionals\")) return self; // if condition can be statically determined, warn and drop\n          // one of the blocks.  note, statically determined implies\n          // “has no side effects”; also it doesn't work for cases like\n          // `x && true`, though it probably should.\n\n          var cond = self.condition.evaluate(compressor);\n\n          if (cond !== self.condition) {\n            if (cond) {\n              compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.condition.start);\n\n              if (compressor.option(\"dead_code\")) {\n                var a = [];\n\n                if (self.alternative) {\n                  extract_declarations_from_unreachable_code(compressor, self.alternative, a);\n                }\n\n                a.push(self.body);\n                return make_node(AST_BlockStatement, self, {\n                  body: a\n                }).optimize(compressor);\n              }\n            } else {\n              compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.condition.start);\n\n              if (compressor.option(\"dead_code\")) {\n                var a = [];\n                extract_declarations_from_unreachable_code(compressor, self.body, a);\n                if (self.alternative) a.push(self.alternative);\n                return make_node(AST_BlockStatement, self, {\n                  body: a\n                }).optimize(compressor);\n              }\n            }\n\n            cond = make_node_from_constant(cond, self.condition).transform(compressor);\n            self.condition = best_of_expression(cond, self.condition);\n          }\n\n          var negated = self.condition.negate(compressor);\n          var self_condition_length = self.condition.print_to_string().length;\n          var negated_length = negated.print_to_string().length;\n          var negated_is_best = negated_length < self_condition_length;\n\n          if (self.alternative && negated_is_best) {\n            negated_is_best = false; // because we already do the switch here.\n            // no need to swap values of self_condition_length and negated_length\n            // here because they are only used in an equality comparison later on.\n\n            self.condition = negated;\n            var tmp = self.body;\n            self.body = self.alternative || make_node(AST_EmptyStatement, self);\n            self.alternative = tmp;\n          }\n\n          if (is_empty(self.body) && is_empty(self.alternative)) {\n            return make_node(AST_SimpleStatement, self.condition, {\n              body: self.condition.clone()\n            }).optimize(compressor);\n          }\n\n          if (self.body instanceof AST_SimpleStatement && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n              body: make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: self.body.body,\n                alternative: self.alternative.body\n              })\n            }).optimize(compressor);\n          }\n\n          if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {\n            if (self_condition_length === negated_length && !negated_is_best && self.condition instanceof AST_Binary && self.condition.operator == \"||\") {\n              // although the code length of self.condition and negated are the same,\n              // negated does not require additional surrounding parentheses.\n              // see https://github.com/mishoo/UglifyJS2/issues/979\n              negated_is_best = true;\n            }\n\n            if (negated_is_best) return make_node(AST_SimpleStatement, self, {\n              body: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: negated,\n                right: self.body.body\n              })\n            }).optimize(compressor);\n            return make_node(AST_SimpleStatement, self, {\n              body: make_node(AST_Binary, self, {\n                operator: \"&&\",\n                left: self.condition,\n                right: self.body.body\n              })\n            }).optimize(compressor);\n          }\n\n          if (self.body instanceof AST_EmptyStatement && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n              body: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: self.condition,\n                right: self.alternative.body\n              })\n            }).optimize(compressor);\n          }\n\n          if (self.body instanceof AST_Exit && self.alternative instanceof AST_Exit && self.body.TYPE == self.alternative.TYPE) {\n            return make_node(self.body.CTOR, self, {\n              value: make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: self.body.value || make_node(AST_Undefined, self.body),\n                alternative: self.alternative.value || make_node(AST_Undefined, self.alternative)\n              }).transform(compressor)\n            }).optimize(compressor);\n          }\n\n          if (self.body instanceof AST_If && !self.body.alternative && !self.alternative) {\n            self = make_node(AST_If, self, {\n              condition: make_node(AST_Binary, self.condition, {\n                operator: \"&&\",\n                left: self.condition,\n                right: self.body.condition\n              }),\n              body: self.body.body,\n              alternative: null\n            });\n          }\n\n          if (aborts(self.body)) {\n            if (self.alternative) {\n              var alt = self.alternative;\n              self.alternative = null;\n              return make_node(AST_BlockStatement, self, {\n                body: [self, alt]\n              }).optimize(compressor);\n            }\n          }\n\n          if (aborts(self.alternative)) {\n            var body = self.body;\n            self.body = self.alternative;\n            self.condition = negated_is_best ? negated : self.condition.negate(compressor);\n            self.alternative = null;\n            return make_node(AST_BlockStatement, self, {\n              body: [self, body]\n            }).optimize(compressor);\n          }\n\n          return self;\n        });\n        OPT(AST_Switch, function (self, compressor) {\n          if (!compressor.option(\"switches\")) return self;\n          var branch;\n          var value = self.expression.evaluate(compressor);\n\n          if (value !== self.expression) {\n            var expression = make_node_from_constant(value, self.expression).transform(compressor);\n            self.expression = best_of_expression(expression, self.expression);\n          }\n\n          if (!compressor.option(\"dead_code\")) return self;\n          var decl = [];\n          var body = [];\n          var default_branch;\n          var exact_match;\n\n          for (var i = 0, len = self.body.length; i < len && !exact_match; i++) {\n            branch = self.body[i];\n\n            if (branch instanceof AST_Default) {\n              if (!default_branch) {\n                default_branch = branch;\n              } else {\n                eliminate_branch(branch, body[body.length - 1]);\n              }\n            } else if (value !== self.expression) {\n              var exp = branch.expression.evaluate(compressor);\n\n              if (exp === value) {\n                exact_match = branch;\n\n                if (default_branch) {\n                  var default_index = body.indexOf(default_branch);\n                  body.splice(default_index, 1);\n                  eliminate_branch(default_branch, body[default_index - 1]);\n                  default_branch = null;\n                }\n              } else if (exp !== branch.expression) {\n                eliminate_branch(branch, body[body.length - 1]);\n                continue;\n              }\n            }\n\n            if (aborts(branch)) {\n              var prev = body[body.length - 1];\n\n              if (aborts(prev) && prev.body.length == branch.body.length && make_node(AST_BlockStatement, prev, prev).equivalent_to(make_node(AST_BlockStatement, branch, branch))) {\n                prev.body = [];\n              }\n            }\n\n            body.push(branch);\n          }\n\n          while (i < len) eliminate_branch(self.body[i++], body[body.length - 1]);\n\n          if (body.length > 0) {\n            body[0].body = decl.concat(body[0].body);\n          }\n\n          self.body = body;\n\n          while (branch = body[body.length - 1]) {\n            var stat = branch.body[branch.body.length - 1];\n            if (stat instanceof AST_Break && compressor.loopcontrol_target(stat) === self) branch.body.pop();\n            if (branch.body.length || branch instanceof AST_Case && (default_branch || branch.expression.has_side_effects(compressor))) break;\n            if (body.pop() === default_branch) default_branch = null;\n          }\n\n          if (body.length == 0) {\n            return make_node(AST_BlockStatement, self, {\n              body: decl.concat(make_node(AST_SimpleStatement, self.expression, {\n                body: self.expression\n              }))\n            }).optimize(compressor);\n          }\n\n          if (body.length == 1 && (body[0] === exact_match || body[0] === default_branch)) {\n            var has_break = false;\n            var tw = new TreeWalker(function (node) {\n              if (has_break || node instanceof AST_Lambda || node instanceof AST_SimpleStatement) return true;\n              if (node instanceof AST_Break && tw.loopcontrol_target(node) === self) has_break = true;\n            });\n            self.walk(tw);\n\n            if (!has_break) {\n              body = body[0].body.slice();\n              body.unshift(make_node(AST_SimpleStatement, self.expression, {\n                body: self.expression\n              }));\n              return make_node(AST_BlockStatement, self, {\n                body: body\n              }).optimize(compressor);\n            }\n          }\n\n          return self;\n\n          function eliminate_branch(branch, prev) {\n            if (prev && !aborts(prev)) {\n              prev.body = prev.body.concat(branch.body);\n            } else {\n              extract_declarations_from_unreachable_code(compressor, branch, decl);\n            }\n          }\n        });\n        OPT(AST_Try, function (self, compressor) {\n          self.body = tighten_body(self.body, compressor);\n          if (self.bcatch && self.bfinally && all(self.bfinally.body, is_empty)) self.bfinally = null;\n\n          if (all(self.body, is_empty)) {\n            var body = [];\n            if (self.bcatch) extract_declarations_from_unreachable_code(compressor, self.bcatch, body);\n            if (self.bfinally) body = body.concat(self.bfinally.body);\n            return make_node(AST_BlockStatement, self, {\n              body: body\n            }).optimize(compressor);\n          }\n\n          return self;\n        });\n        AST_Definitions.DEFMETHOD(\"remove_initializers\", function () {\n          this.definitions.forEach(function (def) {\n            def.value = null;\n          });\n        });\n        AST_Definitions.DEFMETHOD(\"to_assignments\", function (compressor) {\n          var reduce_vars = compressor.option(\"reduce_vars\");\n          var assignments = this.definitions.reduce(function (a, def) {\n            if (def.value) {\n              var name = make_node(AST_SymbolRef, def.name, def.name);\n              a.push(make_node(AST_Assign, def, {\n                operator: \"=\",\n                left: name,\n                right: def.value\n              }));\n              if (reduce_vars) name.definition().fixed = false;\n            }\n\n            return a;\n          }, []);\n          if (assignments.length == 0) return null;\n          return AST_Seq.from_array(assignments);\n        });\n        OPT(AST_Definitions, function (self, compressor) {\n          if (self.definitions.length == 0) return make_node(AST_EmptyStatement, self);\n          return self;\n        });\n        OPT(AST_Call, function (self, compressor) {\n          var exp = self.expression;\n\n          if (compressor.option(\"reduce_vars\") && exp instanceof AST_SymbolRef) {\n            var def = exp.definition();\n            var fixed = exp.fixed_value();\n\n            if (fixed instanceof AST_Defun) {\n              def.fixed = fixed = make_node(AST_Function, fixed, fixed).clone(true);\n            }\n\n            if (fixed instanceof AST_Function) {\n              exp = fixed;\n\n              if (compressor.option(\"unused\") && def.references.length == 1 && !(def.scope.uses_arguments && def.orig[0] instanceof AST_SymbolFunarg) && !def.scope.uses_eval && compressor.find_parent(AST_Scope) === def.scope) {\n                self.expression = exp;\n              }\n            }\n          }\n\n          if (compressor.option(\"unused\") && exp instanceof AST_Function && !exp.uses_arguments && !exp.uses_eval) {\n            var pos = 0,\n                last = 0;\n\n            for (var i = 0, len = self.args.length; i < len; i++) {\n              var trim = i >= exp.argnames.length;\n\n              if (trim || exp.argnames[i].__unused) {\n                var node = self.args[i].drop_side_effect_free(compressor);\n\n                if (node) {\n                  self.args[pos++] = node;\n                } else if (!trim) {\n                  self.args[pos++] = make_node(AST_Number, self.args[i], {\n                    value: 0\n                  });\n                  continue;\n                }\n              } else {\n                self.args[pos++] = self.args[i];\n              }\n\n              last = pos;\n            }\n\n            self.args.length = last;\n          }\n\n          if (compressor.option(\"unsafe\")) {\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n              switch (exp.name) {\n                case \"Array\":\n                  if (self.args.length != 1) {\n                    return make_node(AST_Array, self, {\n                      elements: self.args\n                    }).optimize(compressor);\n                  }\n\n                  break;\n\n                case \"Object\":\n                  if (self.args.length == 0) {\n                    return make_node(AST_Object, self, {\n                      properties: []\n                    });\n                  }\n\n                  break;\n\n                case \"String\":\n                  if (self.args.length == 0) return make_node(AST_String, self, {\n                    value: \"\"\n                  });\n                  if (self.args.length <= 1) return make_node(AST_Binary, self, {\n                    left: self.args[0],\n                    operator: \"+\",\n                    right: make_node(AST_String, self, {\n                      value: \"\"\n                    })\n                  }).optimize(compressor);\n                  break;\n\n                case \"Number\":\n                  if (self.args.length == 0) return make_node(AST_Number, self, {\n                    value: 0\n                  });\n                  if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                    expression: self.args[0],\n                    operator: \"+\"\n                  }).optimize(compressor);\n\n                case \"Boolean\":\n                  if (self.args.length == 0) return make_node(AST_False, self);\n                  if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                    expression: make_node(AST_UnaryPrefix, self, {\n                      expression: self.args[0],\n                      operator: \"!\"\n                    }),\n                    operator: \"!\"\n                  }).optimize(compressor);\n                  break;\n\n                case \"Function\":\n                  // new Function() => function(){}\n                  if (self.args.length == 0) return make_node(AST_Function, self, {\n                    argnames: [],\n                    body: []\n                  });\n\n                  if (all(self.args, function (x) {\n                    return x instanceof AST_String;\n                  })) {\n                    // quite a corner-case, but we can handle it:\n                    //   https://github.com/mishoo/UglifyJS2/issues/203\n                    // if the code argument is a constant, then we can minify it.\n                    try {\n                      var code = \"(function(\" + self.args.slice(0, -1).map(function (arg) {\n                        return arg.value;\n                      }).join(\",\") + \"){\" + self.args[self.args.length - 1].value + \"})()\";\n                      var ast = parse(code);\n                      ast.figure_out_scope({\n                        screw_ie8: compressor.option(\"screw_ie8\")\n                      });\n                      var comp = new Compressor(compressor.options);\n                      ast = ast.transform(comp);\n                      ast.figure_out_scope({\n                        screw_ie8: compressor.option(\"screw_ie8\")\n                      });\n                      ast.mangle_names();\n                      var fun;\n\n                      try {\n                        ast.walk(new TreeWalker(function (node) {\n                          if (node instanceof AST_Lambda) {\n                            fun = node;\n                            throw ast;\n                          }\n                        }));\n                      } catch (ex) {\n                        if (ex !== ast) throw ex;\n                      }\n\n                      ;\n                      if (!fun) return self;\n                      var args = fun.argnames.map(function (arg, i) {\n                        return make_node(AST_String, self.args[i], {\n                          value: arg.print_to_string()\n                        });\n                      });\n                      var code = OutputStream();\n\n                      AST_BlockStatement.prototype._codegen.call(fun, fun, code);\n\n                      code = code.toString().replace(/^\\{|\\}$/g, \"\");\n                      args.push(make_node(AST_String, self.args[self.args.length - 1], {\n                        value: code\n                      }));\n                      self.args = args;\n                      return self;\n                    } catch (ex) {\n                      if (ex instanceof JS_Parse_Error) {\n                        compressor.warn(\"Error parsing code passed to new Function [{file}:{line},{col}]\", self.args[self.args.length - 1].start);\n                        compressor.warn(ex.toString());\n                      } else {\n                        console.log(ex);\n                        throw ex;\n                      }\n                    }\n                  }\n\n                  break;\n              }\n            } else if (exp instanceof AST_Dot && exp.property == \"toString\" && self.args.length == 0) {\n              return make_node(AST_Binary, self, {\n                left: make_node(AST_String, self, {\n                  value: \"\"\n                }),\n                operator: \"+\",\n                right: exp.expression\n              }).optimize(compressor);\n            } else if (exp instanceof AST_Dot && exp.expression instanceof AST_Array && exp.property == \"join\") EXIT: {\n              var separator;\n\n              if (self.args.length > 0) {\n                separator = self.args[0].evaluate(compressor);\n                if (separator === self.args[0]) break EXIT; // not a constant\n              }\n\n              var elements = [];\n              var consts = [];\n              exp.expression.elements.forEach(function (el) {\n                var value = el.evaluate(compressor);\n\n                if (value !== el) {\n                  consts.push(value);\n                } else {\n                  if (consts.length > 0) {\n                    elements.push(make_node(AST_String, self, {\n                      value: consts.join(separator)\n                    }));\n                    consts.length = 0;\n                  }\n\n                  elements.push(el);\n                }\n              });\n\n              if (consts.length > 0) {\n                elements.push(make_node(AST_String, self, {\n                  value: consts.join(separator)\n                }));\n              }\n\n              if (elements.length == 0) return make_node(AST_String, self, {\n                value: \"\"\n              });\n\n              if (elements.length == 1) {\n                if (elements[0].is_string(compressor)) {\n                  return elements[0];\n                }\n\n                return make_node(AST_Binary, elements[0], {\n                  operator: \"+\",\n                  left: make_node(AST_String, self, {\n                    value: \"\"\n                  }),\n                  right: elements[0]\n                });\n              }\n\n              if (separator == \"\") {\n                var first;\n\n                if (elements[0].is_string(compressor) || elements[1].is_string(compressor)) {\n                  first = elements.shift();\n                } else {\n                  first = make_node(AST_String, self, {\n                    value: \"\"\n                  });\n                }\n\n                return elements.reduce(function (prev, el) {\n                  return make_node(AST_Binary, el, {\n                    operator: \"+\",\n                    left: prev,\n                    right: el\n                  });\n                }, first).optimize(compressor);\n              } // need this awkward cloning to not affect original element\n              // best_of will decide which one to get through.\n\n\n              var node = self.clone();\n              node.expression = node.expression.clone();\n              node.expression.expression = node.expression.expression.clone();\n              node.expression.expression.elements = elements;\n              return best_of(compressor, self, node);\n            } else if (exp instanceof AST_Dot && exp.expression.is_string(compressor) && exp.property == \"charAt\") {\n              var arg = self.args[0];\n              var index = arg ? arg.evaluate(compressor) : 0;\n\n              if (index !== arg) {\n                return make_node(AST_Sub, exp, {\n                  expression: exp.expression,\n                  property: make_node_from_constant(index | 0, arg || exp)\n                }).optimize(compressor);\n              }\n            }\n          }\n\n          if (exp instanceof AST_Function) {\n            if (exp.body[0] instanceof AST_Return) {\n              var value = exp.body[0].value;\n\n              if (!value || value.is_constant()) {\n                var args = self.args.concat(value || make_node(AST_Undefined, self));\n                return AST_Seq.from_array(args).transform(compressor);\n              }\n            }\n\n            if (compressor.option(\"side_effects\") && all(exp.body, is_empty)) {\n              var args = self.args.concat(make_node(AST_Undefined, self));\n              return AST_Seq.from_array(args).transform(compressor);\n            }\n          }\n\n          if (compressor.option(\"drop_console\")) {\n            if (exp instanceof AST_PropAccess) {\n              var name = exp.expression;\n\n              while (name.expression) {\n                name = name.expression;\n              }\n\n              if (name instanceof AST_SymbolRef && name.name == \"console\" && name.undeclared()) {\n                return make_node(AST_Undefined, self).optimize(compressor);\n              }\n            }\n          }\n\n          if (compressor.option(\"negate_iife\") && compressor.parent() instanceof AST_SimpleStatement && is_iife_call(self)) {\n            return self.negate(compressor, true);\n          }\n\n          return self;\n        });\n        OPT(AST_New, function (self, compressor) {\n          if (compressor.option(\"unsafe\")) {\n            var exp = self.expression;\n\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n              switch (exp.name) {\n                case \"Object\":\n                case \"RegExp\":\n                case \"Function\":\n                case \"Error\":\n                case \"Array\":\n                  return make_node(AST_Call, self, self).transform(compressor);\n              }\n            }\n          }\n\n          return self;\n        });\n        OPT(AST_Seq, function (self, compressor) {\n          if (!compressor.option(\"side_effects\")) return self;\n          self.car = self.car.drop_side_effect_free(compressor, first_in_statement(compressor));\n          if (!self.car) return maintain_this_binding(compressor.parent(), self, self.cdr);\n\n          if (compressor.option(\"cascade\")) {\n            var left;\n\n            if (self.car instanceof AST_Assign && !self.car.left.has_side_effects(compressor)) {\n              left = self.car.left;\n            } else if (self.car instanceof AST_Unary && (self.car.operator == \"++\" || self.car.operator == \"--\")) {\n              left = self.car.expression;\n            }\n\n            if (left && !(left instanceof AST_SymbolRef && (left.definition().orig[0] instanceof AST_SymbolLambda || is_reference_const(left)))) {\n              var parent, field;\n              var cdr = self.cdr;\n\n              while (true) {\n                if (cdr.equivalent_to(left)) {\n                  var car = self.car instanceof AST_UnaryPostfix ? make_node(AST_UnaryPrefix, self.car, {\n                    operator: self.car.operator,\n                    expression: left\n                  }) : self.car;\n\n                  if (parent) {\n                    parent[field] = car;\n                    return self.cdr;\n                  }\n\n                  return car;\n                }\n\n                if (cdr instanceof AST_Binary && !(cdr instanceof AST_Assign)) {\n                  if (cdr.left.is_constant()) {\n                    if (cdr.operator == \"||\" || cdr.operator == \"&&\") break;\n                    field = \"right\";\n                  } else {\n                    field = \"left\";\n                  }\n                } else if (cdr instanceof AST_Call || cdr instanceof AST_Unary && !unary_side_effects(cdr.operator)) {\n                  field = \"expression\";\n                } else break;\n\n                parent = cdr;\n                cdr = cdr[field];\n              }\n            }\n          }\n\n          if (is_undefined(self.cdr, compressor)) {\n            return make_node(AST_UnaryPrefix, self, {\n              operator: \"void\",\n              expression: self.car\n            });\n          }\n\n          return self;\n        });\n        AST_Unary.DEFMETHOD(\"lift_sequences\", function (compressor) {\n          if (compressor.option(\"sequences\")) {\n            if (this.expression instanceof AST_Seq) {\n              var seq = this.expression;\n              var x = seq.to_array();\n              var e = this.clone();\n              e.expression = x.pop();\n              x.push(e);\n              seq = AST_Seq.from_array(x).transform(compressor);\n              return seq;\n            }\n          }\n\n          return this;\n        });\n        OPT(AST_UnaryPostfix, function (self, compressor) {\n          return self.lift_sequences(compressor);\n        });\n        OPT(AST_UnaryPrefix, function (self, compressor) {\n          var e = self.expression;\n\n          if (self.operator == \"delete\" && !(e instanceof AST_SymbolRef || e instanceof AST_PropAccess || e instanceof AST_NaN || e instanceof AST_Infinity || e instanceof AST_Undefined)) {\n            if (e instanceof AST_Seq) {\n              e = e.to_array();\n              e.push(make_node(AST_True, self));\n              return AST_Seq.from_array(e).optimize(compressor);\n            }\n\n            return make_node(AST_Seq, self, {\n              car: e,\n              cdr: make_node(AST_True, self)\n            }).optimize(compressor);\n          }\n\n          var seq = self.lift_sequences(compressor);\n\n          if (seq !== self) {\n            return seq;\n          }\n\n          if (compressor.option(\"side_effects\") && self.operator == \"void\") {\n            e = e.drop_side_effect_free(compressor);\n\n            if (e) {\n              self.expression = e;\n              return self;\n            } else {\n              return make_node(AST_Undefined, self).optimize(compressor);\n            }\n          }\n\n          if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n            switch (self.operator) {\n              case \"!\":\n                if (e instanceof AST_UnaryPrefix && e.operator == \"!\") {\n                  // !!foo ==> foo, if we're in boolean context\n                  return e.expression;\n                }\n\n                if (e instanceof AST_Binary) {\n                  self = best_of(compressor, self, e.negate(compressor, first_in_statement(compressor)));\n                }\n\n                break;\n\n              case \"typeof\":\n                // typeof always returns a non-empty string, thus it's\n                // always true in booleans\n                compressor.warn(\"Boolean expression always true [{file}:{line},{col}]\", self.start);\n                return (e instanceof AST_SymbolRef ? make_node(AST_True, self) : make_node(AST_Seq, self, {\n                  car: e,\n                  cdr: make_node(AST_True, self)\n                })).optimize(compressor);\n            }\n          }\n\n          if (self.operator == \"-\" && e instanceof AST_Infinity) {\n            e = e.transform(compressor);\n          }\n\n          if (e instanceof AST_Binary && (self.operator == \"+\" || self.operator == \"-\") && (e.operator == \"*\" || e.operator == \"/\" || e.operator == \"%\")) {\n            return make_node(AST_Binary, self, {\n              operator: e.operator,\n              left: make_node(AST_UnaryPrefix, e.left, {\n                operator: self.operator,\n                expression: e.left\n              }),\n              right: e.right\n            });\n          } // avoids infinite recursion of numerals\n\n\n          if (self.operator != \"-\" || !(e instanceof AST_Number || e instanceof AST_Infinity)) {\n            var ev = self.evaluate(compressor);\n\n            if (ev !== self) {\n              ev = make_node_from_constant(ev, self).optimize(compressor);\n              return best_of(compressor, ev, self);\n            }\n          }\n\n          return self;\n        });\n        AST_Binary.DEFMETHOD(\"lift_sequences\", function (compressor) {\n          if (compressor.option(\"sequences\")) {\n            if (this.left instanceof AST_Seq) {\n              var seq = this.left;\n              var x = seq.to_array();\n              var e = this.clone();\n              e.left = x.pop();\n              x.push(e);\n              return AST_Seq.from_array(x).optimize(compressor);\n            }\n\n            if (this.right instanceof AST_Seq && !this.left.has_side_effects(compressor)) {\n              var assign = this.operator == \"=\" && this.left instanceof AST_SymbolRef;\n              var root = this.right.clone();\n              var cursor,\n                  seq = root;\n\n              while (assign || !seq.car.has_side_effects(compressor)) {\n                cursor = seq;\n\n                if (seq.cdr instanceof AST_Seq) {\n                  seq = seq.cdr = seq.cdr.clone();\n                } else break;\n              }\n\n              if (cursor) {\n                var e = this.clone();\n                e.right = cursor.cdr;\n                cursor.cdr = e;\n                return root.optimize(compressor);\n              }\n            }\n          }\n\n          return this;\n        });\n        var commutativeOperators = makePredicate(\"== === != !== * & | ^\");\n        OPT(AST_Binary, function (self, compressor) {\n          function reversible() {\n            return self.left.is_constant() || self.right.is_constant() || !self.left.has_side_effects(compressor) && !self.right.has_side_effects(compressor);\n          }\n\n          function reverse(op) {\n            if (reversible()) {\n              if (op) self.operator = op;\n              var tmp = self.left;\n              self.left = self.right;\n              self.right = tmp;\n            }\n          }\n\n          if (commutativeOperators(self.operator)) {\n            if (self.right.is_constant() && !self.left.is_constant()) {\n              // if right is a constant, whatever side effects the\n              // left side might have could not influence the\n              // result.  hence, force switch.\n              if (!(self.left instanceof AST_Binary && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                reverse();\n              }\n            }\n          }\n\n          self = self.lift_sequences(compressor);\n          if (compressor.option(\"comparisons\")) switch (self.operator) {\n            case \"===\":\n            case \"!==\":\n              if (self.left.is_string(compressor) && self.right.is_string(compressor) || self.left.is_number(compressor) && self.right.is_number(compressor) || self.left.is_boolean() && self.right.is_boolean()) {\n                self.operator = self.operator.substr(0, 2);\n              }\n\n            // XXX: intentionally falling down to the next case\n\n            case \"==\":\n            case \"!=\":\n              // \"undefined\" == typeof x => undefined === x\n              if (self.left instanceof AST_String && self.left.value == \"undefined\" && self.right instanceof AST_UnaryPrefix && self.right.operator == \"typeof\") {\n                var expr = self.right.expression;\n\n                if (expr instanceof AST_SymbolRef ? !expr.undeclared() : !(expr instanceof AST_PropAccess) || compressor.option(\"screw_ie8\")) {\n                  self.right = expr;\n                  self.left = make_node(AST_Undefined, self.left).optimize(compressor);\n                  if (self.operator.length == 2) self.operator += \"=\";\n                }\n              }\n\n              break;\n          }\n\n          if (compressor.option(\"booleans\") && self.operator == \"+\" && compressor.in_boolean_context()) {\n            var ll = self.left.evaluate(compressor);\n            var rr = self.right.evaluate(compressor);\n\n            if (ll && typeof ll == \"string\") {\n              compressor.warn(\"+ in boolean context always true [{file}:{line},{col}]\", self.start);\n              return make_node(AST_Seq, self, {\n                car: self.right,\n                cdr: make_node(AST_True, self)\n              }).optimize(compressor);\n            }\n\n            if (rr && typeof rr == \"string\") {\n              compressor.warn(\"+ in boolean context always true [{file}:{line},{col}]\", self.start);\n              return make_node(AST_Seq, self, {\n                car: self.left,\n                cdr: make_node(AST_True, self)\n              }).optimize(compressor);\n            }\n          }\n\n          if (compressor.option(\"comparisons\") && self.is_boolean()) {\n            if (!(compressor.parent() instanceof AST_Binary) || compressor.parent() instanceof AST_Assign) {\n              var negated = make_node(AST_UnaryPrefix, self, {\n                operator: \"!\",\n                expression: self.negate(compressor, first_in_statement(compressor))\n              });\n              self = best_of(compressor, self, negated);\n            }\n\n            if (compressor.option(\"unsafe_comps\")) {\n              switch (self.operator) {\n                case \"<\":\n                  reverse(\">\");\n                  break;\n\n                case \"<=\":\n                  reverse(\">=\");\n                  break;\n              }\n            }\n          }\n\n          if (self.operator == \"+\") {\n            if (self.right instanceof AST_String && self.right.getValue() == \"\" && self.left.is_string(compressor)) {\n              return self.left;\n            }\n\n            if (self.left instanceof AST_String && self.left.getValue() == \"\" && self.right.is_string(compressor)) {\n              return self.right;\n            }\n\n            if (self.left instanceof AST_Binary && self.left.operator == \"+\" && self.left.left instanceof AST_String && self.left.left.getValue() == \"\" && self.right.is_string(compressor)) {\n              self.left = self.left.right;\n              return self.transform(compressor);\n            }\n          }\n\n          if (compressor.option(\"evaluate\")) {\n            switch (self.operator) {\n              case \"&&\":\n                var ll = self.left.evaluate(compressor);\n\n                if (!ll) {\n                  compressor.warn(\"Condition left of && always false [{file}:{line},{col}]\", self.start);\n                  return maintain_this_binding(compressor.parent(), self, self.left).optimize(compressor);\n                } else if (ll !== self.left) {\n                  compressor.warn(\"Condition left of && always true [{file}:{line},{col}]\", self.start);\n                  return maintain_this_binding(compressor.parent(), self, self.right).optimize(compressor);\n                }\n\n                if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n                  var rr = self.right.evaluate(compressor);\n\n                  if (!rr) {\n                    compressor.warn(\"Boolean && always false [{file}:{line},{col}]\", self.start);\n                    return make_node(AST_Seq, self, {\n                      car: self.left,\n                      cdr: make_node(AST_False, self)\n                    }).optimize(compressor);\n                  } else if (rr !== self.right) {\n                    compressor.warn(\"Dropping side-effect-free && in boolean context [{file}:{line},{col}]\", self.start);\n                    return self.left.optimize(compressor);\n                  }\n                }\n\n                break;\n\n              case \"||\":\n                var ll = self.left.evaluate(compressor);\n\n                if (!ll) {\n                  compressor.warn(\"Condition left of || always false [{file}:{line},{col}]\", self.start);\n                  return maintain_this_binding(compressor.parent(), self, self.right).optimize(compressor);\n                } else if (ll !== self.left) {\n                  compressor.warn(\"Condition left of || always true [{file}:{line},{col}]\", self.start);\n                  return maintain_this_binding(compressor.parent(), self, self.left).optimize(compressor);\n                }\n\n                if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n                  var rr = self.right.evaluate(compressor);\n\n                  if (!rr) {\n                    compressor.warn(\"Dropping side-effect-free || in boolean context [{file}:{line},{col}]\", self.start);\n                    return self.left.optimize(compressor);\n                  } else if (rr !== self.right) {\n                    compressor.warn(\"Boolean || always true [{file}:{line},{col}]\", self.start);\n                    return make_node(AST_Seq, self, {\n                      car: self.left,\n                      cdr: make_node(AST_True, self)\n                    }).optimize(compressor);\n                  }\n                }\n\n                break;\n            }\n\n            var associative = true;\n\n            switch (self.operator) {\n              case \"+\":\n                // \"foo\" + (\"bar\" + x) => \"foobar\" + x\n                if (self.left instanceof AST_Constant && self.right instanceof AST_Binary && self.right.operator == \"+\" && self.right.left instanceof AST_Constant && self.right.is_string(compressor)) {\n                  self = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: make_node(AST_String, self.left, {\n                      value: \"\" + self.left.getValue() + self.right.left.getValue(),\n                      start: self.left.start,\n                      end: self.right.left.end\n                    }),\n                    right: self.right.right\n                  });\n                } // (x + \"foo\") + \"bar\" => x + \"foobar\"\n\n\n                if (self.right instanceof AST_Constant && self.left instanceof AST_Binary && self.left.operator == \"+\" && self.left.right instanceof AST_Constant && self.left.is_string(compressor)) {\n                  self = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: self.left.left,\n                    right: make_node(AST_String, self.right, {\n                      value: \"\" + self.left.right.getValue() + self.right.getValue(),\n                      start: self.left.right.start,\n                      end: self.right.end\n                    })\n                  });\n                } // (x + \"foo\") + (\"bar\" + y) => (x + \"foobar\") + y\n\n\n                if (self.left instanceof AST_Binary && self.left.operator == \"+\" && self.left.is_string(compressor) && self.left.right instanceof AST_Constant && self.right instanceof AST_Binary && self.right.operator == \"+\" && self.right.left instanceof AST_Constant && self.right.is_string(compressor)) {\n                  self = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: make_node(AST_Binary, self.left, {\n                      operator: \"+\",\n                      left: self.left.left,\n                      right: make_node(AST_String, self.left.right, {\n                        value: \"\" + self.left.right.getValue() + self.right.left.getValue(),\n                        start: self.left.right.start,\n                        end: self.right.left.end\n                      })\n                    }),\n                    right: self.right.right\n                  });\n                } // a + -b => a - b\n\n\n                if (self.right instanceof AST_UnaryPrefix && self.right.operator == \"-\" && self.left.is_number(compressor)) {\n                  self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.left,\n                    right: self.right.expression\n                  });\n                  break;\n                } // -a + b => b - a\n\n\n                if (self.left instanceof AST_UnaryPrefix && self.left.operator == \"-\" && reversible() && self.right.is_number(compressor)) {\n                  self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.right,\n                    right: self.left.expression\n                  });\n                  break;\n                }\n\n              case \"*\":\n                associative = compressor.option(\"unsafe_math\");\n\n              case \"&\":\n              case \"|\":\n              case \"^\":\n                // a + +b => +b + a\n                if (self.left.is_number(compressor) && self.right.is_number(compressor) && reversible() && !(self.left instanceof AST_Binary && self.left.operator != self.operator && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                  var reversed = make_node(AST_Binary, self, {\n                    operator: self.operator,\n                    left: self.right,\n                    right: self.left\n                  });\n\n                  if (self.right instanceof AST_Constant && !(self.left instanceof AST_Constant)) {\n                    self = best_of(compressor, reversed, self);\n                  } else {\n                    self = best_of(compressor, self, reversed);\n                  }\n                }\n\n                if (associative && self.is_number(compressor)) {\n                  // a + (b + c) => (a + b) + c\n                  if (self.right instanceof AST_Binary && self.right.operator == self.operator) {\n                    self = make_node(AST_Binary, self, {\n                      operator: self.operator,\n                      left: make_node(AST_Binary, self.left, {\n                        operator: self.operator,\n                        left: self.left,\n                        right: self.right.left,\n                        start: self.left.start,\n                        end: self.right.left.end\n                      }),\n                      right: self.right.right\n                    });\n                  } // (n + 2) + 3 => 5 + n\n                  // (2 * n) * 3 => 6 + n\n\n\n                  if (self.right instanceof AST_Constant && self.left instanceof AST_Binary && self.left.operator == self.operator) {\n                    if (self.left.left instanceof AST_Constant) {\n                      self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                          operator: self.operator,\n                          left: self.left.left,\n                          right: self.right,\n                          start: self.left.left.start,\n                          end: self.right.end\n                        }),\n                        right: self.left.right\n                      });\n                    } else if (self.left.right instanceof AST_Constant) {\n                      self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                          operator: self.operator,\n                          left: self.left.right,\n                          right: self.right,\n                          start: self.left.right.start,\n                          end: self.right.end\n                        }),\n                        right: self.left.left\n                      });\n                    }\n                  } // (a | 1) | (2 | d) => (3 | a) | b\n\n\n                  if (self.left instanceof AST_Binary && self.left.operator == self.operator && self.left.right instanceof AST_Constant && self.right instanceof AST_Binary && self.right.operator == self.operator && self.right.left instanceof AST_Constant) {\n                    self = make_node(AST_Binary, self, {\n                      operator: self.operator,\n                      left: make_node(AST_Binary, self.left, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left.left, {\n                          operator: self.operator,\n                          left: self.left.right,\n                          right: self.right.left,\n                          start: self.left.right.start,\n                          end: self.right.left.end\n                        }),\n                        right: self.left.left\n                      }),\n                      right: self.right.right\n                    });\n                  }\n                }\n\n            }\n          } // x && (y && z)  ==>  x && y && z\n          // x || (y || z)  ==>  x || y || z\n          // x + (\"y\" + z)  ==>  x + \"y\" + z\n          // \"x\" + (y + \"z\")==>  \"x\" + y + \"z\"\n\n\n          if (self.right instanceof AST_Binary && self.right.operator == self.operator && (self.operator == \"&&\" || self.operator == \"||\" || self.operator == \"+\" && (self.right.left.is_string(compressor) || self.left.is_string(compressor) && self.right.right.is_string(compressor)))) {\n            self.left = make_node(AST_Binary, self.left, {\n              operator: self.operator,\n              left: self.left,\n              right: self.right.left\n            });\n            self.right = self.right.right;\n            return self.transform(compressor);\n          }\n\n          var ev = self.evaluate(compressor);\n\n          if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n          }\n\n          return self;\n        });\n        OPT(AST_SymbolRef, function (self, compressor) {\n          var def = self.resolve_defines(compressor);\n\n          if (def) {\n            return def.optimize(compressor);\n          } // testing against !self.scope.uses_with first is an optimization\n\n\n          if (compressor.option(\"screw_ie8\") && self.undeclared() && (!self.scope.uses_with || !compressor.find_parent(AST_With))) {\n            switch (self.name) {\n              case \"undefined\":\n                return make_node(AST_Undefined, self).optimize(compressor);\n\n              case \"NaN\":\n                return make_node(AST_NaN, self).optimize(compressor);\n\n              case \"Infinity\":\n                return make_node(AST_Infinity, self).optimize(compressor);\n            }\n          }\n\n          if (compressor.option(\"evaluate\") && compressor.option(\"reduce_vars\") && is_lhs(self, compressor.parent()) !== self) {\n            var d = self.definition();\n            var fixed = self.fixed_value();\n\n            if (fixed) {\n              if (d.should_replace === undefined) {\n                var init = fixed.evaluate(compressor);\n\n                if (init !== fixed && (compressor.option(\"unsafe_regexp\") || !(init instanceof RegExp))) {\n                  init = make_node_from_constant(init, fixed);\n                  var value = init.optimize(compressor).print_to_string().length;\n                  var fn;\n\n                  if (has_symbol_ref(fixed)) {\n                    fn = function () {\n                      var result = init.optimize(compressor);\n                      return result === init ? result.clone(true) : result;\n                    };\n                  } else {\n                    value = Math.min(value, fixed.print_to_string().length);\n\n                    fn = function () {\n                      var result = best_of_expression(init.optimize(compressor), fixed);\n                      return result === init || result === fixed ? result.clone(true) : result;\n                    };\n                  }\n\n                  var name = d.name.length;\n                  var overhead = 0;\n\n                  if (compressor.option(\"unused\") && (!d.global || compressor.option(\"toplevel\"))) {\n                    overhead = (name + 2 + value) / d.references.length;\n                  }\n\n                  d.should_replace = value <= name + overhead ? fn : false;\n                } else {\n                  d.should_replace = false;\n                }\n              }\n\n              if (d.should_replace) {\n                return d.should_replace();\n              }\n            }\n          }\n\n          return self;\n\n          function has_symbol_ref(value) {\n            var found;\n            value.walk(new TreeWalker(function (node) {\n              if (node instanceof AST_SymbolRef) found = true;\n              if (found) return true;\n            }));\n            return found;\n          }\n        });\n\n        function is_atomic(lhs, self) {\n          return lhs instanceof AST_SymbolRef || lhs.TYPE === self.TYPE;\n        }\n\n        OPT(AST_Undefined, function (self, compressor) {\n          if (compressor.option(\"unsafe\")) {\n            var undef = find_variable(compressor, \"undefined\");\n\n            if (undef) {\n              var ref = make_node(AST_SymbolRef, self, {\n                name: \"undefined\",\n                scope: undef.scope,\n                thedef: undef\n              });\n              ref.is_undefined = true;\n              return ref;\n            }\n          }\n\n          var lhs = is_lhs(compressor.self(), compressor.parent());\n          if (lhs && is_atomic(lhs, self)) return self;\n          return make_node(AST_UnaryPrefix, self, {\n            operator: \"void\",\n            expression: make_node(AST_Number, self, {\n              value: 0\n            })\n          });\n        });\n        OPT(AST_Infinity, function (self, compressor) {\n          var lhs = is_lhs(compressor.self(), compressor.parent());\n          if (lhs && is_atomic(lhs, self)) return self;\n          if (compressor.option(\"keep_infinity\") && !(lhs && !is_atomic(lhs, self)) && !find_variable(compressor, \"Infinity\")) return self;\n          return make_node(AST_Binary, self, {\n            operator: \"/\",\n            left: make_node(AST_Number, self, {\n              value: 1\n            }),\n            right: make_node(AST_Number, self, {\n              value: 0\n            })\n          });\n        });\n        OPT(AST_NaN, function (self, compressor) {\n          var lhs = is_lhs(compressor.self(), compressor.parent());\n\n          if (lhs && !is_atomic(lhs, self) || find_variable(compressor, \"NaN\")) {\n            return make_node(AST_Binary, self, {\n              operator: \"/\",\n              left: make_node(AST_Number, self, {\n                value: 0\n              }),\n              right: make_node(AST_Number, self, {\n                value: 0\n              })\n            });\n          }\n\n          return self;\n        });\n        var ASSIGN_OPS = ['+', '-', '/', '*', '%', '>>', '<<', '>>>', '|', '^', '&'];\n        var ASSIGN_OPS_COMMUTATIVE = ['*', '|', '^', '&'];\n        OPT(AST_Assign, function (self, compressor) {\n          self = self.lift_sequences(compressor);\n\n          if (self.operator == \"=\" && self.left instanceof AST_SymbolRef && self.right instanceof AST_Binary) {\n            // x = expr1 OP expr2\n            if (self.right.left instanceof AST_SymbolRef && self.right.left.name == self.left.name && member(self.right.operator, ASSIGN_OPS)) {\n              // x = x - 2  --->  x -= 2\n              self.operator = self.right.operator + \"=\";\n              self.right = self.right.right;\n            } else if (self.right.right instanceof AST_SymbolRef && self.right.right.name == self.left.name && member(self.right.operator, ASSIGN_OPS_COMMUTATIVE) && !self.right.left.has_side_effects(compressor)) {\n              // x = 2 & x  --->  x &= 2\n              self.operator = self.right.operator + \"=\";\n              self.right = self.right.left;\n            }\n          }\n\n          return self;\n        });\n        OPT(AST_Conditional, function (self, compressor) {\n          if (!compressor.option(\"conditionals\")) return self;\n\n          if (self.condition instanceof AST_Seq) {\n            var car = self.condition.car;\n            self.condition = self.condition.cdr;\n            return AST_Seq.cons(car, self);\n          }\n\n          var cond = self.condition.evaluate(compressor);\n\n          if (cond !== self.condition) {\n            if (cond) {\n              compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.start);\n              return maintain_this_binding(compressor.parent(), self, self.consequent);\n            } else {\n              compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.start);\n              return maintain_this_binding(compressor.parent(), self, self.alternative);\n            }\n          }\n\n          var negated = cond.negate(compressor, first_in_statement(compressor));\n\n          if (best_of(compressor, cond, negated) === negated) {\n            self = make_node(AST_Conditional, self, {\n              condition: negated,\n              consequent: self.alternative,\n              alternative: self.consequent\n            });\n          }\n\n          var condition = self.condition;\n          var consequent = self.consequent;\n          var alternative = self.alternative; // x?x:y --> x||y\n\n          if (condition instanceof AST_SymbolRef && consequent instanceof AST_SymbolRef && condition.definition() === consequent.definition()) {\n            return make_node(AST_Binary, self, {\n              operator: \"||\",\n              left: condition,\n              right: alternative\n            });\n          } // if (foo) exp = something; else exp = something_else;\n          //                   |\n          //                   v\n          // exp = foo ? something : something_else;\n\n\n          if (consequent instanceof AST_Assign && alternative instanceof AST_Assign && consequent.operator == alternative.operator && consequent.left.equivalent_to(alternative.left) && (!self.condition.has_side_effects(compressor) || consequent.operator == \"=\" && !consequent.left.has_side_effects(compressor))) {\n            return make_node(AST_Assign, self, {\n              operator: consequent.operator,\n              left: consequent.left,\n              right: make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: consequent.right,\n                alternative: alternative.right\n              })\n            });\n          } // x ? y(a) : y(b) --> y(x ? a : b)\n\n\n          if (consequent instanceof AST_Call && alternative.TYPE === consequent.TYPE && consequent.args.length == 1 && alternative.args.length == 1 && consequent.expression.equivalent_to(alternative.expression) && !consequent.expression.has_side_effects(compressor)) {\n            consequent.args[0] = make_node(AST_Conditional, self, {\n              condition: self.condition,\n              consequent: consequent.args[0],\n              alternative: alternative.args[0]\n            });\n            return consequent;\n          } // x?y?z:a:a --> x&&y?z:a\n\n\n          if (consequent instanceof AST_Conditional && consequent.alternative.equivalent_to(alternative)) {\n            return make_node(AST_Conditional, self, {\n              condition: make_node(AST_Binary, self, {\n                left: self.condition,\n                operator: \"&&\",\n                right: consequent.condition\n              }),\n              consequent: consequent.consequent,\n              alternative: alternative\n            });\n          } // x ? y : y --> x, y\n\n\n          if (consequent.equivalent_to(alternative)) {\n            return make_node(AST_Seq, self, {\n              car: self.condition,\n              cdr: consequent\n            }).optimize(compressor);\n          }\n\n          if (is_true(self.consequent)) {\n            if (is_false(self.alternative)) {\n              // c ? true : false ---> !!c\n              return booleanize(self.condition);\n            } // c ? true : x ---> !!c || x\n\n\n            return make_node(AST_Binary, self, {\n              operator: \"||\",\n              left: booleanize(self.condition),\n              right: self.alternative\n            });\n          }\n\n          if (is_false(self.consequent)) {\n            if (is_true(self.alternative)) {\n              // c ? false : true ---> !c\n              return booleanize(self.condition.negate(compressor));\n            } // c ? false : x ---> !c && x\n\n\n            return make_node(AST_Binary, self, {\n              operator: \"&&\",\n              left: booleanize(self.condition.negate(compressor)),\n              right: self.alternative\n            });\n          }\n\n          if (is_true(self.alternative)) {\n            // c ? x : true ---> !c || x\n            return make_node(AST_Binary, self, {\n              operator: \"||\",\n              left: booleanize(self.condition.negate(compressor)),\n              right: self.consequent\n            });\n          }\n\n          if (is_false(self.alternative)) {\n            // c ? x : false ---> !!c && x\n            return make_node(AST_Binary, self, {\n              operator: \"&&\",\n              left: booleanize(self.condition),\n              right: self.consequent\n            });\n          }\n\n          return self;\n\n          function booleanize(node) {\n            if (node.is_boolean()) return node; // !!expression\n\n            return make_node(AST_UnaryPrefix, node, {\n              operator: \"!\",\n              expression: node.negate(compressor)\n            });\n          } // AST_True or !0\n\n\n          function is_true(node) {\n            return node instanceof AST_True || node instanceof AST_UnaryPrefix && node.operator == \"!\" && node.expression instanceof AST_Constant && !node.expression.value;\n          } // AST_False or !1\n\n\n          function is_false(node) {\n            return node instanceof AST_False || node instanceof AST_UnaryPrefix && node.operator == \"!\" && node.expression instanceof AST_Constant && !!node.expression.value;\n          }\n        });\n        OPT(AST_Boolean, function (self, compressor) {\n          if (compressor.option(\"booleans\")) {\n            var p = compressor.parent();\n\n            if (p instanceof AST_Binary && (p.operator == \"==\" || p.operator == \"!=\")) {\n              compressor.warn(\"Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]\", {\n                operator: p.operator,\n                value: self.value,\n                file: p.start.file,\n                line: p.start.line,\n                col: p.start.col\n              });\n              return make_node(AST_Number, self, {\n                value: +self.value\n              });\n            }\n\n            return make_node(AST_UnaryPrefix, self, {\n              operator: \"!\",\n              expression: make_node(AST_Number, self, {\n                value: 1 - self.value\n              })\n            });\n          }\n\n          return self;\n        });\n        OPT(AST_Sub, function (self, compressor) {\n          var prop = self.property;\n\n          if (prop instanceof AST_String && compressor.option(\"properties\")) {\n            prop = prop.getValue();\n\n            if (RESERVED_WORDS(prop) ? compressor.option(\"screw_ie8\") : is_identifier_string(prop)) {\n              return make_node(AST_Dot, self, {\n                expression: self.expression,\n                property: prop\n              }).optimize(compressor);\n            }\n\n            var v = parseFloat(prop);\n\n            if (!isNaN(v) && v.toString() == prop) {\n              self.property = make_node(AST_Number, self.property, {\n                value: v\n              });\n            }\n          }\n\n          var ev = self.evaluate(compressor);\n\n          if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n          }\n\n          return self;\n        });\n        OPT(AST_Dot, function (self, compressor) {\n          var def = self.resolve_defines(compressor);\n\n          if (def) {\n            return def.optimize(compressor);\n          }\n\n          var prop = self.property;\n\n          if (RESERVED_WORDS(prop) && !compressor.option(\"screw_ie8\")) {\n            return make_node(AST_Sub, self, {\n              expression: self.expression,\n              property: make_node(AST_String, self, {\n                value: prop\n              })\n            }).optimize(compressor);\n          }\n\n          if (compressor.option(\"unsafe_proto\") && self.expression instanceof AST_Dot && self.expression.property == \"prototype\") {\n            var exp = self.expression.expression;\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) switch (exp.name) {\n              case \"Array\":\n                self.expression = make_node(AST_Array, self.expression, {\n                  elements: []\n                });\n                break;\n\n              case \"Object\":\n                self.expression = make_node(AST_Object, self.expression, {\n                  properties: []\n                });\n                break;\n\n              case \"String\":\n                self.expression = make_node(AST_String, self.expression, {\n                  value: \"\"\n                });\n                break;\n            }\n          }\n\n          var ev = self.evaluate(compressor);\n\n          if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n          }\n\n          return self;\n        });\n\n        function literals_in_boolean_context(self, compressor) {\n          if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n            return best_of(compressor, self, make_node(AST_Seq, self, {\n              car: self,\n              cdr: make_node(AST_True, self)\n            }).optimize(compressor));\n          }\n\n          return self;\n        }\n\n        ;\n        OPT(AST_Array, literals_in_boolean_context);\n        OPT(AST_Object, literals_in_boolean_context);\n        OPT(AST_RegExp, literals_in_boolean_context);\n        OPT(AST_Return, function (self, compressor) {\n          if (self.value && is_undefined(self.value, compressor)) {\n            self.value = null;\n          }\n\n          return self;\n        });\n        OPT(AST_VarDef, function (self, compressor) {\n          var defines = compressor.option(\"global_defs\");\n\n          if (defines && HOP(defines, self.name.name)) {\n            compressor.warn('global_defs ' + self.name.name + ' redefined [{file}:{line},{col}]', self.start);\n          }\n\n          return self;\n        });\n      })();\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n\n      \"use strict\"; // a small wrapper around fitzgen's source-map library\n\n\n      function SourceMap(options) {\n        options = defaults(options, {\n          file: null,\n          root: null,\n          orig: null,\n          orig_line_diff: 0,\n          dest_line_diff: 0\n        });\n        var generator = new MOZ_SourceMap.SourceMapGenerator({\n          file: options.file,\n          sourceRoot: options.root\n        });\n        var orig_map = options.orig && new MOZ_SourceMap.SourceMapConsumer(options.orig);\n\n        if (orig_map && Array.isArray(options.orig.sources)) {\n          orig_map._sources.toArray().forEach(function (source) {\n            var sourceContent = orig_map.sourceContentFor(source, true);\n\n            if (sourceContent) {\n              generator.setSourceContent(source, sourceContent);\n            }\n          });\n        }\n\n        function add(source, gen_line, gen_col, orig_line, orig_col, name) {\n          if (orig_map) {\n            var info = orig_map.originalPositionFor({\n              line: orig_line,\n              column: orig_col\n            });\n\n            if (info.source === null) {\n              return;\n            }\n\n            source = info.source;\n            orig_line = info.line;\n            orig_col = info.column;\n            name = info.name || name;\n          }\n\n          generator.addMapping({\n            generated: {\n              line: gen_line + options.dest_line_diff,\n              column: gen_col\n            },\n            original: {\n              line: orig_line + options.orig_line_diff,\n              column: orig_col\n            },\n            source: source,\n            name: name\n          });\n        }\n\n        ;\n        return {\n          add: add,\n          get: function () {\n            return generator;\n          },\n          toString: function () {\n            return JSON.stringify(generator.toJSON());\n          }\n        };\n      }\n\n      ;\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n      \"use strict\";\n\n      (function () {\n        var normalize_directives = function (body) {\n          var in_directive = true;\n\n          for (var i = 0; i < body.length; i++) {\n            if (in_directive && body[i] instanceof AST_Statement && body[i].body instanceof AST_String) {\n              body[i] = new AST_Directive({\n                start: body[i].start,\n                end: body[i].end,\n                value: body[i].body.value\n              });\n            } else if (in_directive && !(body[i] instanceof AST_Statement && body[i].body instanceof AST_String)) {\n              in_directive = false;\n            }\n          }\n\n          return body;\n        };\n\n        var MOZ_TO_ME = {\n          Program: function (M) {\n            return new AST_Toplevel({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              body: normalize_directives(M.body.map(from_moz))\n            });\n          },\n          FunctionDeclaration: function (M) {\n            return new AST_Defun({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              name: from_moz(M.id),\n              argnames: M.params.map(from_moz),\n              body: normalize_directives(from_moz(M.body).body)\n            });\n          },\n          FunctionExpression: function (M) {\n            return new AST_Function({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              name: from_moz(M.id),\n              argnames: M.params.map(from_moz),\n              body: normalize_directives(from_moz(M.body).body)\n            });\n          },\n          ExpressionStatement: function (M) {\n            return new AST_SimpleStatement({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              body: from_moz(M.expression)\n            });\n          },\n          TryStatement: function (M) {\n            var handlers = M.handlers || [M.handler];\n\n            if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {\n              throw new Error(\"Multiple catch clauses are not supported.\");\n            }\n\n            return new AST_Try({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              body: from_moz(M.block).body,\n              bcatch: from_moz(handlers[0]),\n              bfinally: M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null\n            });\n          },\n          Property: function (M) {\n            var key = M.key;\n            var args = {\n              start: my_start_token(key),\n              end: my_end_token(M.value),\n              key: key.type == \"Identifier\" ? key.name : key.value,\n              value: from_moz(M.value)\n            };\n            if (M.kind == \"init\") return new AST_ObjectKeyVal(args);\n            args.key = new AST_SymbolAccessor({\n              name: args.key\n            });\n            args.value = new AST_Accessor(args.value);\n            if (M.kind == \"get\") return new AST_ObjectGetter(args);\n            if (M.kind == \"set\") return new AST_ObjectSetter(args);\n          },\n          ArrayExpression: function (M) {\n            return new AST_Array({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              elements: M.elements.map(function (elem) {\n                return elem === null ? new AST_Hole() : from_moz(elem);\n              })\n            });\n          },\n          ObjectExpression: function (M) {\n            return new AST_Object({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              properties: M.properties.map(function (prop) {\n                prop.type = \"Property\";\n                return from_moz(prop);\n              })\n            });\n          },\n          SequenceExpression: function (M) {\n            return AST_Seq.from_array(M.expressions.map(from_moz));\n          },\n          MemberExpression: function (M) {\n            return new (M.computed ? AST_Sub : AST_Dot)({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              property: M.computed ? from_moz(M.property) : M.property.name,\n              expression: from_moz(M.object)\n            });\n          },\n          SwitchCase: function (M) {\n            return new (M.test ? AST_Case : AST_Default)({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              expression: from_moz(M.test),\n              body: M.consequent.map(from_moz)\n            });\n          },\n          VariableDeclaration: function (M) {\n            return new (M.kind === \"const\" ? AST_Const : AST_Var)({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              definitions: M.declarations.map(from_moz)\n            });\n          },\n          Literal: function (M) {\n            var val = M.value,\n                args = {\n              start: my_start_token(M),\n              end: my_end_token(M)\n            };\n            if (val === null) return new AST_Null(args);\n\n            switch (typeof val) {\n              case \"string\":\n                args.value = val;\n                return new AST_String(args);\n\n              case \"number\":\n                args.value = val;\n                return new AST_Number(args);\n\n              case \"boolean\":\n                return new (val ? AST_True : AST_False)(args);\n\n              default:\n                var rx = M.regex;\n\n                if (rx && rx.pattern) {\n                  // RegExpLiteral as per ESTree AST spec\n                  args.value = new RegExp(rx.pattern, rx.flags).toString();\n                } else {\n                  // support legacy RegExp\n                  args.value = M.regex && M.raw ? M.raw : val;\n                }\n\n                return new AST_RegExp(args);\n            }\n          },\n          Identifier: function (M) {\n            var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n            return new (p.type == \"LabeledStatement\" ? AST_Label : p.type == \"VariableDeclarator\" && p.id === M ? p.kind == \"const\" ? AST_SymbolConst : AST_SymbolVar : p.type == \"FunctionExpression\" ? p.id === M ? AST_SymbolLambda : AST_SymbolFunarg : p.type == \"FunctionDeclaration\" ? p.id === M ? AST_SymbolDefun : AST_SymbolFunarg : p.type == \"CatchClause\" ? AST_SymbolCatch : p.type == \"BreakStatement\" || p.type == \"ContinueStatement\" ? AST_LabelRef : AST_SymbolRef)({\n              start: my_start_token(M),\n              end: my_end_token(M),\n              name: M.name\n            });\n          }\n        };\n\n        MOZ_TO_ME.UpdateExpression = MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {\n          var prefix = \"prefix\" in M ? M.prefix : M.type == \"UnaryExpression\" ? true : false;\n          return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({\n            start: my_start_token(M),\n            end: my_end_token(M),\n            operator: M.operator,\n            expression: from_moz(M.argument)\n          });\n        };\n\n        map(\"EmptyStatement\", AST_EmptyStatement);\n        map(\"BlockStatement\", AST_BlockStatement, \"body@body\");\n        map(\"IfStatement\", AST_If, \"test>condition, consequent>body, alternate>alternative\");\n        map(\"LabeledStatement\", AST_LabeledStatement, \"label>label, body>body\");\n        map(\"BreakStatement\", AST_Break, \"label>label\");\n        map(\"ContinueStatement\", AST_Continue, \"label>label\");\n        map(\"WithStatement\", AST_With, \"object>expression, body>body\");\n        map(\"SwitchStatement\", AST_Switch, \"discriminant>expression, cases@body\");\n        map(\"ReturnStatement\", AST_Return, \"argument>value\");\n        map(\"ThrowStatement\", AST_Throw, \"argument>value\");\n        map(\"WhileStatement\", AST_While, \"test>condition, body>body\");\n        map(\"DoWhileStatement\", AST_Do, \"test>condition, body>body\");\n        map(\"ForStatement\", AST_For, \"init>init, test>condition, update>step, body>body\");\n        map(\"ForInStatement\", AST_ForIn, \"left>init, right>object, body>body\");\n        map(\"DebuggerStatement\", AST_Debugger);\n        map(\"VariableDeclarator\", AST_VarDef, \"id>name, init>value\");\n        map(\"CatchClause\", AST_Catch, \"param>argname, body%body\");\n        map(\"ThisExpression\", AST_This);\n        map(\"BinaryExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n        map(\"LogicalExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n        map(\"AssignmentExpression\", AST_Assign, \"operator=operator, left>left, right>right\");\n        map(\"ConditionalExpression\", AST_Conditional, \"test>condition, consequent>consequent, alternate>alternative\");\n        map(\"NewExpression\", AST_New, \"callee>expression, arguments@args\");\n        map(\"CallExpression\", AST_Call, \"callee>expression, arguments@args\");\n        def_to_moz(AST_Toplevel, function To_Moz_Program(M) {\n          return to_moz_scope(\"Program\", M);\n        });\n        def_to_moz(AST_Defun, function To_Moz_FunctionDeclaration(M) {\n          return {\n            type: \"FunctionDeclaration\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            body: to_moz_scope(\"BlockStatement\", M)\n          };\n        });\n        def_to_moz(AST_Function, function To_Moz_FunctionExpression(M) {\n          return {\n            type: \"FunctionExpression\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            body: to_moz_scope(\"BlockStatement\", M)\n          };\n        });\n        def_to_moz(AST_Directive, function To_Moz_Directive(M) {\n          return {\n            type: \"ExpressionStatement\",\n            expression: {\n              type: \"Literal\",\n              value: M.value\n            }\n          };\n        });\n        def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {\n          return {\n            type: \"ExpressionStatement\",\n            expression: to_moz(M.body)\n          };\n        });\n        def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {\n          return {\n            type: \"SwitchCase\",\n            test: to_moz(M.expression),\n            consequent: M.body.map(to_moz)\n          };\n        });\n        def_to_moz(AST_Try, function To_Moz_TryStatement(M) {\n          return {\n            type: \"TryStatement\",\n            block: to_moz_block(M),\n            handler: to_moz(M.bcatch),\n            guardedHandlers: [],\n            finalizer: to_moz(M.bfinally)\n          };\n        });\n        def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n          return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            guard: null,\n            body: to_moz_block(M)\n          };\n        });\n        def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {\n          return {\n            type: \"VariableDeclaration\",\n            kind: M instanceof AST_Const ? \"const\" : \"var\",\n            declarations: M.definitions.map(to_moz)\n          };\n        });\n        def_to_moz(AST_Seq, function To_Moz_SequenceExpression(M) {\n          return {\n            type: \"SequenceExpression\",\n            expressions: M.to_array().map(to_moz)\n          };\n        });\n        def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {\n          var isComputed = M instanceof AST_Sub;\n          return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: isComputed,\n            property: isComputed ? to_moz(M.property) : {\n              type: \"Identifier\",\n              name: M.property\n            }\n          };\n        });\n        def_to_moz(AST_Unary, function To_Moz_Unary(M) {\n          return {\n            type: M.operator == \"++\" || M.operator == \"--\" ? \"UpdateExpression\" : \"UnaryExpression\",\n            operator: M.operator,\n            prefix: M instanceof AST_UnaryPrefix,\n            argument: to_moz(M.expression)\n          };\n        });\n        def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n          return {\n            type: M.operator == \"&&\" || M.operator == \"||\" ? \"LogicalExpression\" : \"BinaryExpression\",\n            left: to_moz(M.left),\n            operator: M.operator,\n            right: to_moz(M.right)\n          };\n        });\n        def_to_moz(AST_Array, function To_Moz_ArrayExpression(M) {\n          return {\n            type: \"ArrayExpression\",\n            elements: M.elements.map(to_moz)\n          };\n        });\n        def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {\n          return {\n            type: \"ObjectExpression\",\n            properties: M.properties.map(to_moz)\n          };\n        });\n        def_to_moz(AST_ObjectProperty, function To_Moz_Property(M) {\n          var key = {\n            type: \"Literal\",\n            value: M.key instanceof AST_SymbolAccessor ? M.key.name : M.key\n          };\n          var kind;\n\n          if (M instanceof AST_ObjectKeyVal) {\n            kind = \"init\";\n          } else if (M instanceof AST_ObjectGetter) {\n            kind = \"get\";\n          } else if (M instanceof AST_ObjectSetter) {\n            kind = \"set\";\n          }\n\n          return {\n            type: \"Property\",\n            kind: kind,\n            key: key,\n            value: to_moz(M.value)\n          };\n        });\n        def_to_moz(AST_Symbol, function To_Moz_Identifier(M) {\n          var def = M.definition();\n          return {\n            type: \"Identifier\",\n            name: def ? def.mangled_name || def.name : M.name\n          };\n        });\n        def_to_moz(AST_RegExp, function To_Moz_RegExpLiteral(M) {\n          var value = M.value;\n          return {\n            type: \"Literal\",\n            value: value,\n            raw: value.toString(),\n            regex: {\n              pattern: value.source,\n              flags: value.toString().match(/[gimuy]*$/)[0]\n            }\n          };\n        });\n        def_to_moz(AST_Constant, function To_Moz_Literal(M) {\n          var value = M.value;\n\n          if (typeof value === 'number' && (value < 0 || value === 0 && 1 / value < 0)) {\n            return {\n              type: \"UnaryExpression\",\n              operator: \"-\",\n              prefix: true,\n              argument: {\n                type: \"Literal\",\n                value: -value,\n                raw: M.start.raw\n              }\n            };\n          }\n\n          return {\n            type: \"Literal\",\n            value: value,\n            raw: M.start.raw\n          };\n        });\n        def_to_moz(AST_Atom, function To_Moz_Atom(M) {\n          return {\n            type: \"Identifier\",\n            name: String(M.value)\n          };\n        });\n        AST_Boolean.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n        AST_Null.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n        AST_Hole.DEFMETHOD(\"to_mozilla_ast\", function To_Moz_ArrayHole() {\n          return null;\n        });\n        AST_Block.DEFMETHOD(\"to_mozilla_ast\", AST_BlockStatement.prototype.to_mozilla_ast);\n        AST_Lambda.DEFMETHOD(\"to_mozilla_ast\", AST_Function.prototype.to_mozilla_ast);\n        /* -----[ tools ]----- */\n\n        function raw_token(moznode) {\n          if (moznode.type == \"Literal\") {\n            return moznode.raw != null ? moznode.raw : moznode.value + \"\";\n          }\n        }\n\n        function my_start_token(moznode) {\n          var loc = moznode.loc,\n              start = loc && loc.start;\n          var range = moznode.range;\n          return new AST_Token({\n            file: loc && loc.source,\n            line: start && start.line,\n            col: start && start.column,\n            pos: range ? range[0] : moznode.start,\n            endline: start && start.line,\n            endcol: start && start.column,\n            endpos: range ? range[0] : moznode.start,\n            raw: raw_token(moznode)\n          });\n        }\n\n        ;\n\n        function my_end_token(moznode) {\n          var loc = moznode.loc,\n              end = loc && loc.end;\n          var range = moznode.range;\n          return new AST_Token({\n            file: loc && loc.source,\n            line: end && end.line,\n            col: end && end.column,\n            pos: range ? range[1] : moznode.end,\n            endline: end && end.line,\n            endcol: end && end.column,\n            endpos: range ? range[1] : moznode.end,\n            raw: raw_token(moznode)\n          });\n        }\n\n        ;\n\n        function map(moztype, mytype, propmap) {\n          var moz_to_me = \"function From_Moz_\" + moztype + \"(M){\\n\";\n          moz_to_me += \"return new U2.\" + mytype.name + \"({\\n\" + \"start: my_start_token(M),\\n\" + \"end: my_end_token(M)\";\n          var me_to_moz = \"function To_Moz_\" + moztype + \"(M){\\n\";\n          me_to_moz += \"return {\\n\" + \"type: \" + JSON.stringify(moztype);\n          if (propmap) propmap.split(/\\s*,\\s*/).forEach(function (prop) {\n            var m = /([a-z0-9$_]+)(=|@|>|%)([a-z0-9$_]+)/i.exec(prop);\n            if (!m) throw new Error(\"Can't understand property map: \" + prop);\n            var moz = m[1],\n                how = m[2],\n                my = m[3];\n            moz_to_me += \",\\n\" + my + \": \";\n            me_to_moz += \",\\n\" + moz + \": \";\n\n            switch (how) {\n              case \"@\":\n                moz_to_me += \"M.\" + moz + \".map(from_moz)\";\n                me_to_moz += \"M.\" + my + \".map(to_moz)\";\n                break;\n\n              case \">\":\n                moz_to_me += \"from_moz(M.\" + moz + \")\";\n                me_to_moz += \"to_moz(M.\" + my + \")\";\n                break;\n\n              case \"=\":\n                moz_to_me += \"M.\" + moz;\n                me_to_moz += \"M.\" + my;\n                break;\n\n              case \"%\":\n                moz_to_me += \"from_moz(M.\" + moz + \").body\";\n                me_to_moz += \"to_moz_block(M)\";\n                break;\n\n              default:\n                throw new Error(\"Can't understand operator in propmap: \" + prop);\n            }\n          });\n          moz_to_me += \"\\n})\\n}\";\n          me_to_moz += \"\\n}\\n}\"; //moz_to_me = parse(moz_to_me).print_to_string({ beautify: true });\n          //me_to_moz = parse(me_to_moz).print_to_string({ beautify: true });\n          //console.log(moz_to_me);\n\n          moz_to_me = new Function(\"U2\", \"my_start_token\", \"my_end_token\", \"from_moz\", \"return(\" + moz_to_me + \")\")(exports, my_start_token, my_end_token, from_moz);\n          me_to_moz = new Function(\"to_moz\", \"to_moz_block\", \"to_moz_scope\", \"return(\" + me_to_moz + \")\")(to_moz, to_moz_block, to_moz_scope);\n          MOZ_TO_ME[moztype] = moz_to_me;\n          def_to_moz(mytype, me_to_moz);\n        }\n\n        ;\n        var FROM_MOZ_STACK = null;\n\n        function from_moz(node) {\n          FROM_MOZ_STACK.push(node);\n          var ret = node != null ? MOZ_TO_ME[node.type](node) : null;\n          FROM_MOZ_STACK.pop();\n          return ret;\n        }\n\n        ;\n\n        AST_Node.from_mozilla_ast = function (node) {\n          var save_stack = FROM_MOZ_STACK;\n          FROM_MOZ_STACK = [];\n          var ast = from_moz(node);\n          FROM_MOZ_STACK = save_stack;\n          return ast;\n        };\n\n        function set_moz_loc(mynode, moznode, myparent) {\n          var start = mynode.start;\n          var end = mynode.end;\n\n          if (start.pos != null && end.endpos != null) {\n            moznode.range = [start.pos, end.endpos];\n          }\n\n          if (start.line) {\n            moznode.loc = {\n              start: {\n                line: start.line,\n                column: start.col\n              },\n              end: end.endline ? {\n                line: end.endline,\n                column: end.endcol\n              } : null\n            };\n\n            if (start.file) {\n              moznode.loc.source = start.file;\n            }\n          }\n\n          return moznode;\n        }\n\n        ;\n\n        function def_to_moz(mytype, handler) {\n          mytype.DEFMETHOD(\"to_mozilla_ast\", function () {\n            return set_moz_loc(this, handler(this));\n          });\n        }\n\n        ;\n\n        function to_moz(node) {\n          return node != null ? node.to_mozilla_ast() : null;\n        }\n\n        ;\n\n        function to_moz_block(node) {\n          return {\n            type: \"BlockStatement\",\n            body: node.body.map(to_moz)\n          };\n        }\n\n        ;\n\n        function to_moz_scope(type, node) {\n          var body = node.body.map(to_moz);\n\n          if (node.body[0] instanceof AST_SimpleStatement && node.body[0].body instanceof AST_String) {\n            body.unshift(to_moz(new AST_EmptyStatement(node.body[0])));\n          }\n\n          return {\n            type: type,\n            body: body\n          };\n        }\n\n        ;\n      })();\n      /***********************************************************************\n      \n        A JavaScript tokenizer / parser / beautifier / compressor.\n        https://github.com/mishoo/UglifyJS2\n      \n        -------------------------------- (C) ---------------------------------\n      \n                                 Author: Mihai Bazon\n                               <mihai.bazon@gmail.com>\n                             http://mihai.bazon.net/blog\n      \n        Distributed under the BSD license:\n      \n          Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n      \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions\n          are met:\n      \n              * Redistributions of source code must retain the above\n                copyright notice, this list of conditions and the following\n                disclaimer.\n      \n              * Redistributions in binary form must reproduce the above\n                copyright notice, this list of conditions and the following\n                disclaimer in the documentation and/or other materials\n                provided with the distribution.\n      \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n          EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n          PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n          OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n          PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n          PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n          TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n          THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n          SUCH DAMAGE.\n      \n       ***********************************************************************/\n\n\n      \"use strict\";\n\n      function find_builtins() {\n        // NaN will be included due to Number.NaN\n        var a = [\"null\", \"true\", \"false\", \"Infinity\", \"-Infinity\", \"undefined\"];\n        [Object, Array, Function, Number, String, Boolean, Error, Math, Date, RegExp].forEach(function (ctor) {\n          Object.getOwnPropertyNames(ctor).map(add);\n\n          if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n          }\n        });\n\n        function add(name) {\n          push_uniq(a, name);\n        }\n\n        return a;\n      }\n\n      function mangle_properties(ast, options) {\n        options = defaults(options, {\n          cache: null,\n          debug: false,\n          ignore_quoted: false,\n          only_cache: false,\n          regex: null,\n          reserved: null\n        });\n        var reserved = options.reserved;\n        if (reserved == null) reserved = find_builtins();\n        var cache = options.cache;\n\n        if (cache == null) {\n          cache = {\n            cname: -1,\n            props: new Dictionary()\n          };\n        }\n\n        var regex = options.regex;\n        var ignore_quoted = options.ignore_quoted; // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n        // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n        // the same as passing an empty string.\n\n        var debug = options.debug !== false;\n        var debug_name_suffix;\n\n        if (debug) {\n          debug_name_suffix = options.debug === true ? \"\" : options.debug;\n        }\n\n        var names_to_mangle = [];\n        var unmangleable = [];\n        var ignored = {}; // step 1: find candidates to mangle\n\n        ast.walk(new TreeWalker(function (node) {\n          if (node instanceof AST_ObjectKeyVal) {\n            add(node.key, ignore_quoted && node.quote);\n          } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            add(node.key.name);\n          } else if (node instanceof AST_Dot) {\n            add(node.property);\n          } else if (node instanceof AST_Sub) {\n            addStrings(node.property, ignore_quoted);\n          }\n        })); // step 2: transform the tree, renaming properties\n\n        return ast.transform(new TreeTransformer(function (node) {\n          if (node instanceof AST_ObjectKeyVal) {\n            if (!(ignore_quoted && node.quote)) node.key = mangle(node.key);\n          } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter\n            node.key.name = mangle(node.key.name);\n          } else if (node instanceof AST_Dot) {\n            node.property = mangle(node.property);\n          } else if (node instanceof AST_Sub) {\n            if (!ignore_quoted) node.property = mangleStrings(node.property);\n          } // else if (node instanceof AST_String) {\n          //     if (should_mangle(node.value)) {\n          //         AST_Node.warn(\n          //             \"Found \\\"{prop}\\\" property candidate for mangling in an arbitrary string [{file}:{line},{col}]\", {\n          //                 file : node.start.file,\n          //                 line : node.start.line,\n          //                 col  : node.start.col,\n          //                 prop : node.value\n          //             }\n          //         );\n          //     }\n          // }\n\n        })); // only function declarations after this line\n\n        function can_mangle(name) {\n          if (unmangleable.indexOf(name) >= 0) return false;\n          if (reserved.indexOf(name) >= 0) return false;\n\n          if (options.only_cache) {\n            return cache.props.has(name);\n          }\n\n          if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n          return true;\n        }\n\n        function should_mangle(name) {\n          if (ignore_quoted && name in ignored) return false;\n          if (regex && !regex.test(name)) return false;\n          if (reserved.indexOf(name) >= 0) return false;\n          return cache.props.has(name) || names_to_mangle.indexOf(name) >= 0;\n        }\n\n        function add(name, ignore) {\n          if (ignore) {\n            ignored[name] = true;\n            return;\n          }\n\n          if (can_mangle(name)) push_uniq(names_to_mangle, name);\n\n          if (!should_mangle(name)) {\n            push_uniq(unmangleable, name);\n          }\n        }\n\n        function mangle(name) {\n          if (!should_mangle(name)) {\n            return name;\n          }\n\n          var mangled = cache.props.get(name);\n\n          if (!mangled) {\n            if (debug) {\n              // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n              var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n              if (can_mangle(debug_mangled) && !(ignore_quoted && debug_mangled in ignored)) {\n                mangled = debug_mangled;\n              }\n            } // either debug mode is off, or it is on and we could not use the mangled name\n\n\n            if (!mangled) {\n              // note can_mangle() does not check if the name collides with the 'ignored' set\n              // (filled with quoted properties when ignore_quoted set). Make sure we add this\n              // check so we don't collide with a quoted name.\n              do {\n                mangled = base54(++cache.cname);\n              } while (!can_mangle(mangled) || ignore_quoted && mangled in ignored);\n            }\n\n            cache.props.set(name, mangled);\n          }\n\n          return mangled;\n        }\n\n        function addStrings(node, ignore) {\n          var out = {};\n\n          try {\n            (function walk(node) {\n              node.walk(new TreeWalker(function (node) {\n                if (node instanceof AST_Seq) {\n                  walk(node.cdr);\n                  return true;\n                }\n\n                if (node instanceof AST_String) {\n                  add(node.value, ignore);\n                  return true;\n                }\n\n                if (node instanceof AST_Conditional) {\n                  walk(node.consequent);\n                  walk(node.alternative);\n                  return true;\n                }\n\n                throw out;\n              }));\n            })(node);\n          } catch (ex) {\n            if (ex !== out) throw ex;\n          }\n        }\n\n        function mangleStrings(node) {\n          return node.transform(new TreeTransformer(function (node) {\n            if (node instanceof AST_Seq) {\n              node.cdr = mangleStrings(node.cdr);\n            } else if (node instanceof AST_String) {\n              node.value = mangle(node.value);\n            } else if (node instanceof AST_Conditional) {\n              node.consequent = mangleStrings(node.consequent);\n              node.alternative = mangleStrings(node.alternative);\n            }\n\n            return node;\n          }));\n        }\n      }\n\n      exports[\"Compressor\"] = Compressor;\n      exports[\"DefaultsError\"] = DefaultsError;\n      exports[\"Dictionary\"] = Dictionary;\n      exports[\"JS_Parse_Error\"] = JS_Parse_Error;\n      exports[\"MAP\"] = MAP;\n      exports[\"OutputStream\"] = OutputStream;\n      exports[\"SourceMap\"] = SourceMap;\n      exports[\"TreeTransformer\"] = TreeTransformer;\n      exports[\"TreeWalker\"] = TreeWalker;\n      exports[\"base54\"] = base54;\n      exports[\"defaults\"] = defaults;\n      exports[\"mangle_properties\"] = mangle_properties;\n      exports[\"merge\"] = merge;\n      exports[\"parse\"] = parse;\n      exports[\"push_uniq\"] = push_uniq;\n      exports[\"string_template\"] = string_template;\n      exports[\"tokenizer\"] = tokenizer;\n      exports[\"is_identifier\"] = is_identifier;\n      exports[\"SymbolDef\"] = SymbolDef;\n\n      AST_Node.warn_function = function (txt) {\n        logger.error(\"uglifyjs WARN: \" + txt);\n      };\n\n      exports.AST_Node.warn_function = function (txt) {\n        console.error(\"WARN: %s\", txt);\n      };\n\n      function read_source_map(code) {\n        var match = /\\n\\/\\/# sourceMappingURL=data:application\\/json(;.*?)?;base64,(.*)/.exec(code);\n\n        if (!match) {\n          exports.AST_Node.warn(\"inline source map not found\");\n          return null;\n        }\n\n        return JSON.parse(new Buffer(match[2], \"base64\"));\n      }\n\n      exports.minify = function (files, options, name) {\n        options = exports.defaults(options, {\n          compress: {},\n          fromString: false,\n          inSourceMap: null,\n          mangle: {},\n          mangleProperties: false,\n          nameCache: null,\n          outFileName: null,\n          output: null,\n          outSourceMap: null,\n          parse: {},\n          sourceMapInline: false,\n          sourceMapUrl: null,\n          sourceRoot: null,\n          spidermonkey: false,\n          warnings: false\n        });\n        exports.base54.reset();\n        var inMap = options.inSourceMap;\n\n        if (typeof inMap == \"string\" && inMap != \"inline\") {\n          inMap = JSON.parse(rjsFile.readFile(inMap, \"utf8\"));\n        } // 1. parse\n\n\n        var toplevel = null,\n            sourcesContent = {};\n\n        if (options.spidermonkey) {\n          if (inMap == \"inline\") {\n            throw new Error(\"inline source map only works with built-in parser\");\n          }\n\n          toplevel = exports.AST_Node.from_mozilla_ast(files);\n        } else {\n          var addFile = function (file, fileUrl) {\n            var code = options.fromString ? file : rjsFile.readFile(file, \"utf8\");\n\n            if (inMap == \"inline\") {\n              inMap = read_source_map(code);\n            }\n\n            sourcesContent[fileUrl] = code;\n            toplevel = exports.parse(code, {\n              filename: fileUrl,\n              toplevel: toplevel,\n              bare_returns: options.parse ? options.parse.bare_returns : undefined\n            });\n          };\n\n          if (!options.fromString) {\n            files = exports.simple_glob(files);\n\n            if (inMap == \"inline\" && files.length > 1) {\n              throw new Error(\"inline source map only works with singular input\");\n            }\n          }\n\n          [].concat(files).forEach(function (files, i) {\n            if (typeof files === 'string') {\n              addFile(files, options.fromString ? i : files);\n            } else {\n              for (var fileUrl in files) {\n                addFile(files[fileUrl], fileUrl);\n              }\n            }\n          });\n        }\n\n        if (options.wrap) {\n          toplevel = toplevel.wrap_commonjs(options.wrap, options.exportAll);\n        } // 2. compress\n\n\n        if (options.compress) {\n          var compress = {\n            warnings: options.warnings\n          };\n          exports.merge(compress, options.compress);\n          toplevel.figure_out_scope(options.mangle);\n          var sq = exports.Compressor(compress);\n          toplevel = sq.compress(toplevel);\n        } // 3. mangle properties\n\n\n        if (options.mangleProperties || options.nameCache) {\n          options.mangleProperties.cache = exports.readNameCache(options.nameCache, \"props\");\n          toplevel = exports.mangle_properties(toplevel, options.mangleProperties);\n          exports.writeNameCache(options.nameCache, \"props\", options.mangleProperties.cache);\n        } // 4. mangle\n\n\n        if (options.mangle) {\n          toplevel.figure_out_scope(options.mangle);\n          toplevel.compute_char_frequency(options.mangle);\n          toplevel.mangle_names(options.mangle);\n        } // 5. output\n\n\n        var output = {\n          max_line_len: 32000\n        };\n\n        if (options.outSourceMap || options.sourceMapInline) {\n          output.source_map = exports.SourceMap({\n            // prefer outFileName, otherwise use outSourceMap without .map suffix\n            file: options.outFileName || (typeof options.outSourceMap === 'string' ? options.outSourceMap.replace(/\\.map$/i, '') : null),\n            orig: inMap,\n            root: options.sourceRoot\n          });\n\n          if (options.sourceMapIncludeSources) {\n            for (var file in sourcesContent) {\n              if (sourcesContent.hasOwnProperty(file)) {\n                output.source_map.get().setSourceContent(file, sourcesContent[file]);\n              }\n            }\n          }\n        }\n\n        if (options.output) {\n          exports.merge(output, options.output);\n        }\n\n        var stream = exports.OutputStream(output);\n        toplevel.print(stream);\n        var source_map = output.source_map;\n\n        if (source_map) {\n          source_map = source_map + \"\";\n        }\n\n        var mappingUrlPrefix = \"\\n//# sourceMappingURL=\";\n\n        if (options.sourceMapInline) {\n          stream += mappingUrlPrefix + \"data:application/json;charset=utf-8;base64,\" + new Buffer(source_map).toString(\"base64\");\n        } else if (options.outSourceMap && typeof options.outSourceMap === \"string\" && options.sourceMapUrl !== false) {\n          stream += mappingUrlPrefix + (typeof options.sourceMapUrl === \"string\" ? options.sourceMapUrl : options.outSourceMap);\n        }\n\n        return {\n          code: stream + \"\",\n          map: source_map\n        };\n      }; // exports.describe_ast = function() {\n      //     function doitem(ctor) {\n      //         var sub = {};\n      //         ctor.SUBCLASSES.forEach(function(ctor){\n      //             sub[ctor.TYPE] = doitem(ctor);\n      //         });\n      //         var ret = {};\n      //         if (ctor.SELF_PROPS.length > 0) ret.props = ctor.SELF_PROPS;\n      //         if (ctor.SUBCLASSES.length > 0) ret.sub = sub;\n      //         return ret;\n      //     }\n      //     return doitem(exports.AST_Node).sub;\n      // }\n\n\n      exports.describe_ast = function () {\n        var out = exports.OutputStream({\n          beautify: true\n        });\n\n        function doitem(ctor) {\n          out.print(\"AST_\" + ctor.TYPE);\n          var props = ctor.SELF_PROPS.filter(function (prop) {\n            return !/^\\$/.test(prop);\n          });\n\n          if (props.length > 0) {\n            out.space();\n            out.with_parens(function () {\n              props.forEach(function (prop, i) {\n                if (i) out.space();\n                out.print(prop);\n              });\n            });\n          }\n\n          if (ctor.documentation) {\n            out.space();\n            out.print_string(ctor.documentation);\n          }\n\n          if (ctor.SUBCLASSES.length > 0) {\n            out.space();\n            out.with_block(function () {\n              ctor.SUBCLASSES.forEach(function (ctor, i) {\n                out.indent();\n                doitem(ctor);\n                out.newline();\n              });\n            });\n          }\n        }\n\n        ;\n        doitem(exports.AST_Node);\n        return out + \"\";\n      };\n\n      function readReservedFile(filename, reserved) {\n        if (!reserved) {\n          reserved = {\n            vars: [],\n            props: []\n          };\n        }\n\n        var data = rjsFile.readFile(filename, \"utf8\");\n        data = JSON.parse(data);\n\n        if (data.vars) {\n          data.vars.forEach(function (name) {\n            exports.push_uniq(reserved.vars, name);\n          });\n        }\n\n        if (data.props) {\n          data.props.forEach(function (name) {\n            exports.push_uniq(reserved.props, name);\n          });\n        }\n\n        return reserved;\n      }\n\n      exports.readReservedFile = readReservedFile;\n\n      exports.readDefaultReservedFile = function (reserved) {\n        return readReservedFile(require.resolve(\"./domprops.json\"), reserved);\n      };\n\n      exports.readNameCache = function (filename, key) {\n        var cache = null;\n\n        if (filename) {\n          try {\n            var cache = rjsFile.readFile(filename, \"utf8\");\n            cache = JSON.parse(cache)[key];\n            if (!cache) throw \"init\";\n            cache.props = exports.Dictionary.fromObject(cache.props);\n          } catch (ex) {\n            cache = {\n              cname: -1,\n              props: new exports.Dictionary()\n            };\n          }\n        }\n\n        return cache;\n      };\n\n      exports.writeNameCache = function (filename, key, cache) {\n        if (filename) {\n          var data;\n\n          try {\n            data = rjsFile.readFile(filename, \"utf8\");\n            data = JSON.parse(data);\n          } catch (ex) {\n            data = {};\n          }\n\n          data[key] = {\n            cname: cache.cname,\n            props: cache.props.toObject()\n          };\n          rjsFile.writeFile(filename, JSON.stringify(data, null, 2), \"utf8\");\n        }\n      }; // A file glob function that only supports \"*\" and \"?\" wildcards in the basename.\n      // Example: \"foo/bar/*baz??.*.js\"\n      // Argument `glob` may be a string or an array of strings.\n      // Returns an array of strings. Garbage in, garbage out.\n\n\n      exports.simple_glob = function simple_glob(glob) {\n        if (Array.isArray(glob)) {\n          return [].concat.apply([], glob.map(simple_glob));\n        }\n\n        if (glob.match(/\\*|\\?/)) {\n          var dir = path.dirname(glob);\n\n          try {\n            var entries = fs.readdirSync(dir);\n          } catch (ex) {}\n\n          if (entries) {\n            var pattern = \"^\" + path.basename(glob).replace(/[.+^$[\\]\\\\(){}]/g, \"\\\\$&\").replace(/\\*/g, \"[^/\\\\\\\\]*\").replace(/\\?/g, \"[^/\\\\\\\\]\") + \"$\";\n            var mod = process.platform === \"win32\" ? \"i\" : \"\";\n            var rx = new RegExp(pattern, mod);\n            var results = entries.filter(function (name) {\n              return rx.test(name);\n            }).map(function (name) {\n              return path.join(dir, name);\n            });\n            if (results.length) return results;\n          }\n        }\n\n        return [glob];\n      };\n    });\n    /*jslint plusplus: true */\n\n    /*global define: false */\n\n    define('parse', ['./esprimaAdapter', 'lang'], function (esprima, lang) {\n      'use strict';\n\n      function arrayToString(ary) {\n        var output = '[';\n\n        if (ary) {\n          ary.forEach(function (item, i) {\n            output += (i > 0 ? ',' : '') + '\"' + lang.jsEscape(item) + '\"';\n          });\n        }\n\n        output += ']';\n        return output;\n      } //This string is saved off because JSLint complains\n      //about obj.arguments use, as 'reserved word'\n\n\n      var argPropName = 'arguments',\n          //Default object to use for \"scope\" checking for UMD identifiers.\n      emptyScope = {},\n          mixin = lang.mixin,\n          hasProp = lang.hasProp; //From an esprima example for traversing its ast.\n\n      function traverse(object, visitor) {\n        var child;\n\n        if (!object) {\n          return;\n        }\n\n        if (visitor.call(null, object) === false) {\n          return false;\n        }\n\n        for (var i = 0, keys = Object.keys(object); i < keys.length; i++) {\n          child = object[keys[i]];\n\n          if (typeof child === 'object' && child !== null) {\n            if (traverse(child, visitor) === false) {\n              return false;\n            }\n          }\n        }\n      } //Like traverse, but visitor returning false just\n      //stops that subtree analysis, not the rest of tree\n      //visiting.\n\n\n      function traverseBroad(object, visitor) {\n        var child;\n\n        if (!object) {\n          return;\n        }\n\n        if (visitor.call(null, object) === false) {\n          return false;\n        }\n\n        for (var i = 0, keys = Object.keys(object); i < keys.length; i++) {\n          child = object[key];\n\n          if (typeof child === 'object' && child !== null) {\n            traverseBroad(child, visitor);\n          }\n        }\n      }\n      /**\n       * Pulls out dependencies from an array literal with just string members.\n       * If string literals, will just return those string values in an array,\n       * skipping other items in the array.\n       *\n       * @param {Node} node an AST node.\n       *\n       * @returns {Array} an array of strings.\n       * If null is returned, then it means the input node was not a valid\n       * dependency.\n       */\n\n\n      function getValidDeps(node) {\n        if (!node || node.type !== 'ArrayExpression' || !node.elements) {\n          return;\n        }\n\n        var deps = [];\n        node.elements.some(function (elem) {\n          if (elem.type === 'Literal') {\n            deps.push(elem.value);\n          }\n        });\n        return deps.length ? deps : undefined;\n      } // Detects regular or arrow function expressions as the desired expression\n      // type.\n\n\n      function isFnExpression(node) {\n        return node && (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression');\n      }\n      /**\n       * Main parse function. Returns a string of any valid require or\n       * define/require.def calls as part of one JavaScript source string.\n       * @param {String} moduleName the module name that represents this file.\n       * It is used to create a default define if there is not one already for the\n       * file. This allows properly tracing dependencies for builds. Otherwise, if\n       * the file just has a require() call, the file dependencies will not be\n       * properly reflected: the file will come before its dependencies.\n       * @param {String} moduleName\n       * @param {String} fileName\n       * @param {String} fileContents\n       * @param {Object} options optional options. insertNeedsDefine: true will\n       * add calls to require.needsDefine() if appropriate.\n       * @returns {String} JS source string or null, if no require or\n       * define/require.def calls are found.\n       */\n\n\n      function parse(moduleName, fileName, fileContents, options) {\n        options = options || {}; //Set up source input\n\n        var i,\n            moduleCall,\n            depString,\n            moduleDeps = [],\n            result = '',\n            moduleList = [],\n            needsDefine = true,\n            astRoot = esprima.parse(fileContents);\n        parse.recurse(astRoot, function (callName, config, name, deps, node, factoryIdentifier, fnExpScope) {\n          if (!deps) {\n            deps = [];\n          }\n\n          if (callName === 'define' && (!name || name === moduleName)) {\n            needsDefine = false;\n          }\n\n          if (!name) {\n            //If there is no module name, the dependencies are for\n            //this file/default module name.\n            moduleDeps = moduleDeps.concat(deps);\n          } else {\n            moduleList.push({\n              name: name,\n              deps: deps\n            });\n          }\n\n          if (callName === 'define' && factoryIdentifier && hasProp(fnExpScope, factoryIdentifier)) {\n            return factoryIdentifier;\n          } //If define was found, no need to dive deeper, unless\n          //the config explicitly wants to dig deeper.\n\n\n          return !!options.findNestedDependencies;\n        }, options);\n\n        if (options.insertNeedsDefine && needsDefine) {\n          result += 'require.needsDefine(\"' + moduleName + '\");';\n        }\n\n        if (moduleDeps.length || moduleList.length) {\n          for (i = 0; i < moduleList.length; i++) {\n            moduleCall = moduleList[i];\n\n            if (result) {\n              result += '\\n';\n            } //If this is the main module for this file, combine any\n            //\"anonymous\" dependencies (could come from a nested require\n            //call) with this module.\n\n\n            if (moduleCall.name === moduleName) {\n              moduleCall.deps = moduleCall.deps.concat(moduleDeps);\n              moduleDeps = [];\n            }\n\n            depString = arrayToString(moduleCall.deps);\n            result += 'define(\"' + moduleCall.name + '\",' + depString + ');';\n          }\n\n          if (moduleDeps.length) {\n            if (result) {\n              result += '\\n';\n            }\n\n            depString = arrayToString(moduleDeps);\n            result += 'define(\"' + moduleName + '\",' + depString + ');';\n          }\n        }\n\n        return result || null;\n      }\n\n      parse.traverse = traverse;\n      parse.traverseBroad = traverseBroad;\n      parse.isFnExpression = isFnExpression;\n      /**\n       * Handles parsing a file recursively for require calls.\n       * @param {Array} parentNode the AST node to start with.\n       * @param {Function} onMatch function to call on a parse match.\n       * @param {Object} [options] This is normally the build config options if\n       * it is passed.\n       * @param {Object} [fnExpScope] holds list of function expresssion\n       * argument identifiers, set up internally, not passed in\n       */\n\n      parse.recurse = function (object, onMatch, options, fnExpScope) {\n        //Like traverse, but skips if branches that would not be processed\n        //after has application that results in tests of true or false boolean\n        //literal values.\n        var keys,\n            child,\n            result,\n            i,\n            params,\n            param,\n            tempObject,\n            hasHas = options && options.has;\n        fnExpScope = fnExpScope || emptyScope;\n\n        if (!object) {\n          return;\n        } //If has replacement has resulted in if(true){} or if(false){}, take\n        //the appropriate branch and skip the other one.\n\n\n        if (hasHas && object.type === 'IfStatement' && object.test.type && object.test.type === 'Literal') {\n          if (object.test.value) {\n            //Take the if branch\n            this.recurse(object.consequent, onMatch, options, fnExpScope);\n          } else {\n            //Take the else branch\n            this.recurse(object.alternate, onMatch, options, fnExpScope);\n          }\n        } else {\n          result = this.parseNode(object, onMatch, fnExpScope);\n\n          if (result === false) {\n            return;\n          } else if (typeof result === 'string') {\n            return result;\n          } //Build up a \"scope\" object that informs nested recurse calls if\n          //the define call references an identifier that is likely a UMD\n          //wrapped function expression argument.\n          //Catch (function(a) {... wrappers\n\n\n          if (object.type === 'ExpressionStatement' && object.expression && object.expression.type === 'CallExpression' && object.expression.callee && isFnExpression(object.expression.callee)) {\n            tempObject = object.expression.callee;\n          } // Catch !function(a) {... wrappers\n\n\n          if (object.type === 'UnaryExpression' && object.argument && object.argument.type === 'CallExpression' && object.argument.callee && isFnExpression(object.argument.callee)) {\n            tempObject = object.argument.callee;\n          }\n\n          if (tempObject && tempObject.params && tempObject.params.length) {\n            params = tempObject.params;\n            fnExpScope = mixin({}, fnExpScope, true);\n\n            for (i = 0; i < params.length; i++) {\n              param = params[i];\n\n              if (param.type === 'Identifier') {\n                fnExpScope[param.name] = true;\n              }\n            }\n          }\n\n          for (i = 0, keys = Object.keys(object); i < keys.length; i++) {\n            child = object[keys[i]];\n\n            if (typeof child === 'object' && child !== null) {\n              result = this.recurse(child, onMatch, options, fnExpScope);\n\n              if (typeof result === 'string' && hasProp(fnExpScope, result)) {\n                //The result was still in fnExpScope so break. Otherwise,\n                //was a return from a a tree that had a UMD definition,\n                //but now out of that scope so keep siblings.\n                break;\n              }\n            }\n          } //Check for an identifier for a factory function identifier being\n          //passed in as a function expression, indicating a UMD-type of\n          //wrapping.\n\n\n          if (typeof result === 'string') {\n            if (hasProp(fnExpScope, result)) {\n              //result still in scope, keep jumping out indicating the\n              //identifier still in use.\n              return result;\n            }\n\n            return;\n          }\n        }\n      };\n      /**\n       * Determines if the file defines the require/define module API.\n       * Specifically, it looks for the `define.amd = ` expression.\n       * @param {String} fileName\n       * @param {String} fileContents\n       * @returns {Boolean}\n       */\n\n\n      parse.definesRequire = function (fileName, fileContents) {\n        var foundDefine = false,\n            foundDefineAmd = false;\n        traverse(esprima.parse(fileContents), function (node) {\n          // Look for a top level declaration of a define, like\n          // var requirejs, require, define, off Program body.\n          if (node.type === 'Program' && node.body && node.body.length) {\n            foundDefine = node.body.some(function (bodyNode) {\n              // var define\n              if (bodyNode.type === 'VariableDeclaration') {\n                var decls = bodyNode.declarations;\n\n                if (decls) {\n                  var hasVarDefine = decls.some(function (declNode) {\n                    return declNode.type === 'VariableDeclarator' && declNode.id && declNode.id.type === 'Identifier' && declNode.id.name === 'define';\n                  });\n\n                  if (hasVarDefine) {\n                    return true;\n                  }\n                }\n              } // function define() {}\n\n\n              if (bodyNode.type === 'FunctionDeclaration' && bodyNode.id && bodyNode.id.type === 'Identifier' && bodyNode.id.name === 'define') {\n                return true;\n              }\n            });\n          } // Need define variable found first, before detecting define.amd.\n\n\n          if (foundDefine && parse.hasDefineAmd(node)) {\n            foundDefineAmd = true; //Stop traversal\n\n            return false;\n          }\n        });\n        return foundDefine && foundDefineAmd;\n      };\n      /**\n       * Finds require(\"\") calls inside a CommonJS anonymous module wrapped in a\n       * define(function(require, exports, module){}) wrapper. These dependencies\n       * will be added to a modified define() call that lists the dependencies\n       * on the outside of the function.\n       * @param {String} fileName\n       * @param {String|Object} fileContents: a string of contents, or an already\n       * parsed AST tree.\n       * @returns {Array} an array of module names that are dependencies. Always\n       * returns an array, but could be of length zero.\n       */\n\n\n      parse.getAnonDeps = function (fileName, fileContents) {\n        var astRoot = typeof fileContents === 'string' ? esprima.parse(fileContents) : fileContents,\n            defFunc = this.findAnonDefineFactory(astRoot);\n        return parse.getAnonDepsFromNode(defFunc);\n      };\n      /**\n       * Finds require(\"\") calls inside a CommonJS anonymous module wrapped\n       * in a define function, given an AST node for the definition function.\n       * @param {Node} node the AST node for the definition function.\n       * @returns {Array} and array of dependency names. Can be of zero length.\n       */\n\n\n      parse.getAnonDepsFromNode = function (node) {\n        var deps = [],\n            funcArgLength;\n\n        if (node) {\n          this.findRequireDepNames(node, deps); //If no deps, still add the standard CommonJS require, exports,\n          //module, in that order, to the deps, but only if specified as\n          //function args. In particular, if exports is used, it is favored\n          //over the return value of the function, so only add it if asked.\n\n          funcArgLength = node.params && node.params.length;\n\n          if (funcArgLength) {\n            deps = (funcArgLength > 1 ? [\"require\", \"exports\", \"module\"] : [\"require\"]).concat(deps);\n          }\n        }\n\n        return deps;\n      };\n\n      parse.isDefineNodeWithArgs = function (node) {\n        return node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'define' && node[argPropName];\n      };\n      /**\n       * Finds the function in define(function (require, exports, module){});\n       * @param {Array} node\n       * @returns {Boolean}\n       */\n\n\n      parse.findAnonDefineFactory = function (node) {\n        var match;\n        traverse(node, function (node) {\n          var arg0, arg1;\n\n          if (parse.isDefineNodeWithArgs(node)) {\n            //Just the factory function passed to define\n            arg0 = node[argPropName][0];\n\n            if (isFnExpression(arg0)) {\n              match = arg0;\n              return false;\n            } //A string literal module ID followed by the factory function.\n\n\n            arg1 = node[argPropName][1];\n\n            if (arg0.type === 'Literal' && isFnExpression(arg1)) {\n              match = arg1;\n              return false;\n            }\n          }\n        });\n        return match;\n      };\n      /**\n       * Finds any config that is passed to requirejs. That includes calls to\n       * require/requirejs.config(), as well as require({}, ...) and\n       * requirejs({}, ...)\n       * @param {String} fileContents\n       *\n       * @returns {Object} a config details object with the following properties:\n       * - config: {Object} the config object found. Can be undefined if no\n       * config found.\n       * - range: {Array} the start index and end index in the contents where\n       * the config was found. Can be undefined if no config found.\n       * Can throw an error if the config in the file cannot be evaluated in\n       * a build context to valid JavaScript.\n       */\n\n\n      parse.findConfig = function (fileContents) {\n        /*jslint evil: true */\n        var jsConfig,\n            foundConfig,\n            stringData,\n            foundRange,\n            quote,\n            quoteMatch,\n            quoteRegExp = /(:\\s|\\[\\s*)(['\"])/,\n            astRoot = esprima.parse(fileContents, {\n          loc: true\n        });\n        traverse(astRoot, function (node) {\n          var arg,\n              requireType = parse.hasRequire(node);\n\n          if (requireType && (requireType === 'require' || requireType === 'requirejs' || requireType === 'requireConfig' || requireType === 'requirejsConfig')) {\n            arg = node[argPropName] && node[argPropName][0];\n\n            if (arg && arg.type === 'ObjectExpression') {\n              stringData = parse.nodeToString(fileContents, arg);\n              jsConfig = stringData.value;\n              foundRange = stringData.range;\n              return false;\n            }\n          } else {\n            arg = parse.getRequireObjectLiteral(node);\n\n            if (arg) {\n              stringData = parse.nodeToString(fileContents, arg);\n              jsConfig = stringData.value;\n              foundRange = stringData.range;\n              return false;\n            }\n          }\n        });\n\n        if (jsConfig) {\n          // Eval the config\n          quoteMatch = quoteRegExp.exec(jsConfig);\n          quote = quoteMatch && quoteMatch[2] || '\"';\n          foundConfig = eval('(' + jsConfig + ')');\n        }\n\n        return {\n          config: foundConfig,\n          range: foundRange,\n          quote: quote\n        };\n      };\n      /** Returns the node for the object literal assigned to require/requirejs,\n       * for holding a declarative config.\n       */\n\n\n      parse.getRequireObjectLiteral = function (node) {\n        if (node.id && node.id.type === 'Identifier' && (node.id.name === 'require' || node.id.name === 'requirejs') && node.init && node.init.type === 'ObjectExpression') {\n          return node.init;\n        }\n      };\n      /**\n       * Renames require/requirejs/define calls to be ns + '.' + require/requirejs/define\n       * Does *not* do .config calls though. See pragma.namespace for the complete\n       * set of namespace transforms. This function is used because require calls\n       * inside a define() call should not be renamed, so a simple regexp is not\n       * good enough.\n       * @param  {String} fileContents the contents to transform.\n       * @param  {String} ns the namespace, *not* including trailing dot.\n       * @return {String} the fileContents with the namespace applied\n       */\n\n\n      parse.renameNamespace = function (fileContents, ns) {\n        var lines,\n            locs = [],\n            astRoot = esprima.parse(fileContents, {\n          loc: true\n        });\n        parse.recurse(astRoot, function (callName, config, name, deps, node) {\n          locs.push(node.loc); //Do not recurse into define functions, they should be using\n          //local defines.\n\n          return callName !== 'define';\n        }, {});\n\n        if (locs.length) {\n          lines = fileContents.split('\\n'); //Go backwards through the found locs, adding in the namespace name\n          //in front.\n\n          locs.reverse();\n          locs.forEach(function (loc) {\n            var startIndex = loc.start.column,\n                //start.line is 1-based, not 0 based.\n            lineIndex = loc.start.line - 1,\n                line = lines[lineIndex];\n            lines[lineIndex] = line.substring(0, startIndex) + ns + '.' + line.substring(startIndex, line.length);\n          });\n          fileContents = lines.join('\\n');\n        }\n\n        return fileContents;\n      };\n      /**\n       * Finds all dependencies specified in dependency arrays and inside\n       * simplified commonjs wrappers.\n       * @param {String} fileName\n       * @param {String} fileContents\n       *\n       * @returns {Array} an array of dependency strings. The dependencies\n       * have not been normalized, they may be relative IDs.\n       */\n\n\n      parse.findDependencies = function (fileName, fileContents, options) {\n        var dependencies = [],\n            astRoot = esprima.parse(fileContents);\n        parse.recurse(astRoot, function (callName, config, name, deps) {\n          if (deps) {\n            dependencies = dependencies.concat(deps);\n          }\n        }, options);\n        return dependencies;\n      };\n      /**\n       * Finds only CJS dependencies, ones that are the form\n       * require('stringLiteral')\n       */\n\n\n      parse.findCjsDependencies = function (fileName, fileContents) {\n        var dependencies = [];\n        traverse(esprima.parse(fileContents), function (node) {\n          var arg;\n\n          if (node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'require' && node[argPropName] && node[argPropName].length === 1) {\n            arg = node[argPropName][0];\n\n            if (arg.type === 'Literal') {\n              dependencies.push(arg.value);\n            }\n          }\n        });\n        return dependencies;\n      }; //function define() {}\n\n\n      parse.hasDefDefine = function (node) {\n        return node.type === 'FunctionDeclaration' && node.id && node.id.type === 'Identifier' && node.id.name === 'define';\n      }; //define.amd = ...\n\n\n      parse.hasDefineAmd = function (node) {\n        return node && node.type === 'AssignmentExpression' && node.left && node.left.type === 'MemberExpression' && node.left.object && node.left.object.name === 'define' && node.left.property && node.left.property.name === 'amd';\n      }; //define.amd reference, as in: if (define.amd)\n\n\n      parse.refsDefineAmd = function (node) {\n        return node && node.type === 'MemberExpression' && node.object && node.object.name === 'define' && node.object.type === 'Identifier' && node.property && node.property.name === 'amd' && node.property.type === 'Identifier';\n      }; //require(), requirejs(), require.config() and requirejs.config()\n\n\n      parse.hasRequire = function (node) {\n        var callName,\n            c = node && node.callee;\n\n        if (node && node.type === 'CallExpression' && c) {\n          if (c.type === 'Identifier' && (c.name === 'require' || c.name === 'requirejs')) {\n            //A require/requirejs({}, ...) call\n            callName = c.name;\n          } else if (c.type === 'MemberExpression' && c.object && c.object.type === 'Identifier' && (c.object.name === 'require' || c.object.name === 'requirejs') && c.property && c.property.name === 'config') {\n            // require/requirejs.config({}) call\n            callName = c.object.name + 'Config';\n          }\n        }\n\n        return callName;\n      }; //define()\n\n\n      parse.hasDefine = function (node) {\n        return node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'define';\n      };\n      /**\n       * If there is a named define in the file, returns the name. Does not\n       * scan for mulitple names, just the first one.\n       */\n\n\n      parse.getNamedDefine = function (fileContents) {\n        var name;\n        traverse(esprima.parse(fileContents), function (node) {\n          if (node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'define' && node[argPropName] && node[argPropName][0] && node[argPropName][0].type === 'Literal') {\n            name = node[argPropName][0].value;\n            return false;\n          }\n        });\n        return name;\n      };\n      /**\n       * Finds all the named define module IDs in a file.\n       */\n\n\n      parse.getAllNamedDefines = function (fileContents, excludeMap) {\n        var names = [];\n        parse.recurse(esprima.parse(fileContents), function (callName, config, name, deps, node, factoryIdentifier, fnExpScope) {\n          if (callName === 'define' && name) {\n            if (!excludeMap.hasOwnProperty(name)) {\n              names.push(name);\n            }\n          } //If a UMD definition that points to a factory that is an Identifier,\n          //indicate processing should not traverse inside the UMD definition.\n\n\n          if (callName === 'define' && factoryIdentifier && hasProp(fnExpScope, factoryIdentifier)) {\n            return factoryIdentifier;\n          } //If define was found, no need to dive deeper, unless\n          //the config explicitly wants to dig deeper.\n\n\n          return true;\n        }, {});\n        return names;\n      };\n      /**\n       * Determines if define(), require({}|[]) or requirejs was called in the\n       * file. Also finds out if define() is declared and if define.amd is called.\n       */\n\n\n      parse.usesAmdOrRequireJs = function (fileName, fileContents) {\n        var uses;\n        traverse(esprima.parse(fileContents), function (node) {\n          var type, callName, arg;\n\n          if (parse.hasDefDefine(node)) {\n            //function define() {}\n            type = 'declaresDefine';\n          } else if (parse.hasDefineAmd(node)) {\n            type = 'defineAmd';\n          } else {\n            callName = parse.hasRequire(node);\n\n            if (callName) {\n              arg = node[argPropName] && node[argPropName][0];\n\n              if (arg && (arg.type === 'ObjectExpression' || arg.type === 'ArrayExpression')) {\n                type = callName;\n              }\n            } else if (parse.hasDefine(node)) {\n              type = 'define';\n            }\n          }\n\n          if (type) {\n            if (!uses) {\n              uses = {};\n            }\n\n            uses[type] = true;\n          }\n        });\n        return uses;\n      };\n      /**\n       * Determines if require(''), exports.x =, module.exports =,\n       * __dirname, __filename are used. So, not strictly traditional CommonJS,\n       * also checks for Node variants.\n       */\n\n\n      parse.usesCommonJs = function (fileName, fileContents) {\n        var uses = null,\n            assignsExports = false;\n        traverse(esprima.parse(fileContents), function (node) {\n          var type,\n              exp = node.expression || node.init;\n\n          if (node.type === 'Identifier' && (node.name === '__dirname' || node.name === '__filename')) {\n            type = node.name.substring(2);\n          } else if (node.type === 'VariableDeclarator' && node.id && node.id.type === 'Identifier' && node.id.name === 'exports') {\n            //Hmm, a variable assignment for exports, so does not use cjs\n            //exports.\n            type = 'varExports';\n          } else if (exp && exp.type === 'AssignmentExpression' && exp.left && exp.left.type === 'MemberExpression' && exp.left.object) {\n            if (exp.left.object.name === 'module' && exp.left.property && exp.left.property.name === 'exports') {\n              type = 'moduleExports';\n            } else if (exp.left.object.name === 'exports' && exp.left.property) {\n              type = 'exports';\n            } else if (exp.left.object.type === 'MemberExpression' && exp.left.object.object.name === 'module' && exp.left.object.property.name === 'exports' && exp.left.object.property.type === 'Identifier') {\n              type = 'moduleExports';\n            }\n          } else if (node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'require' && node[argPropName] && node[argPropName].length === 1 && node[argPropName][0].type === 'Literal') {\n            type = 'require';\n          }\n\n          if (type) {\n            if (type === 'varExports') {\n              assignsExports = true;\n            } else if (type !== 'exports' || !assignsExports) {\n              if (!uses) {\n                uses = {};\n              }\n\n              uses[type] = true;\n            }\n          }\n        });\n        return uses;\n      };\n\n      parse.findRequireDepNames = function (node, deps) {\n        traverse(node, function (node) {\n          var arg;\n\n          if (node && node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'require' && node[argPropName] && node[argPropName].length === 1) {\n            arg = node[argPropName][0];\n\n            if (arg.type === 'Literal') {\n              deps.push(arg.value);\n            }\n          }\n        });\n      };\n      /**\n       * Determines if a specific node is a valid require or define/require.def\n       * call.\n       * @param {Array} node\n       * @param {Function} onMatch a function to call when a match is found.\n       * It is passed the match name, and the config, name, deps possible args.\n       * The config, name and deps args are not normalized.\n       * @param {Object} fnExpScope an object whose keys are all function\n       * expression identifiers that should be in scope. Useful for UMD wrapper\n       * detection to avoid parsing more into the wrapped UMD code.\n       *\n       * @returns {String} a JS source string with the valid require/define call.\n       * Otherwise null.\n       */\n\n\n      parse.parseNode = function (node, onMatch, fnExpScope) {\n        var name,\n            deps,\n            cjsDeps,\n            arg,\n            factory,\n            exp,\n            refsDefine,\n            bodyNode,\n            args = node && node[argPropName],\n            callName = parse.hasRequire(node),\n            isUmd = false;\n\n        if (callName === 'require' || callName === 'requirejs') {\n          //A plain require/requirejs call\n          arg = node[argPropName] && node[argPropName][0];\n\n          if (arg && arg.type !== 'ArrayExpression') {\n            if (arg.type === 'ObjectExpression') {\n              //A config call, try the second arg.\n              arg = node[argPropName][1];\n            }\n          }\n\n          deps = getValidDeps(arg);\n\n          if (!deps) {\n            return;\n          }\n\n          return onMatch(\"require\", null, null, deps, node);\n        } else if (parse.hasDefine(node) && args && args.length) {\n          name = args[0];\n          deps = args[1];\n          factory = args[2];\n\n          if (name.type === 'ArrayExpression') {\n            //No name, adjust args\n            factory = deps;\n            deps = name;\n            name = null;\n          } else if (isFnExpression(name)) {\n            //Just the factory, no name or deps\n            factory = name;\n            name = deps = null;\n          } else if (name.type === 'Identifier' && args.length === 1 && hasProp(fnExpScope, name.name)) {\n            //define(e) where e is a UMD identifier for the factory\n            //function.\n            isUmd = true;\n            factory = name;\n            name = null;\n          } else if (name.type !== 'Literal') {\n            //An object literal, just null out\n            name = deps = factory = null;\n          }\n\n          if (name && name.type === 'Literal' && deps) {\n            if (isFnExpression(deps)) {\n              //deps is the factory\n              factory = deps;\n              deps = null;\n            } else if (deps.type === 'ObjectExpression') {\n              //deps is object literal, null out\n              deps = factory = null;\n            } else if (deps.type === 'Identifier') {\n              if (args.length === 2) {\n                //define('id', factory)\n                deps = factory = null;\n              } else if (args.length === 3 && isFnExpression(factory)) {\n                //define('id', depsIdentifier, factory)\n                //Since identifier, cannot know the deps, but do not\n                //error out, assume they are taken care of outside of\n                //static parsing.\n                deps = null;\n              }\n            }\n          }\n\n          if (deps && deps.type === 'ArrayExpression') {\n            deps = getValidDeps(deps);\n          } else if (isFnExpression(factory)) {\n            //If no deps and a factory function, could be a commonjs sugar\n            //wrapper, scan the function for dependencies.\n            cjsDeps = parse.getAnonDepsFromNode(factory);\n\n            if (cjsDeps.length) {\n              deps = cjsDeps;\n            }\n          } else if (deps || factory && !isUmd) {\n            //Does not match the shape of an AMD call.\n            return;\n          } //Just save off the name as a string instead of an AST object.\n\n\n          if (name && name.type === 'Literal') {\n            name = name.value;\n          }\n\n          return onMatch(\"define\", null, name, deps, node, factory && factory.type === 'Identifier' ? factory.name : undefined, fnExpScope);\n        } else if (node.type === 'CallExpression' && node.callee && isFnExpression(node.callee) && node.callee.body && node.callee.body.body && node.callee.body.body.length === 1 && node.callee.body.body[0].type === 'IfStatement') {\n          bodyNode = node.callee.body.body[0]; //Look for a define(Identifier) case, but only if inside an\n          //if that has a define.amd test\n\n          if (bodyNode.consequent && bodyNode.consequent.body) {\n            exp = bodyNode.consequent.body[0];\n\n            if (exp.type === 'ExpressionStatement' && exp.expression && parse.hasDefine(exp.expression) && exp.expression.arguments && exp.expression.arguments.length === 1 && exp.expression.arguments[0].type === 'Identifier') {\n              //Calls define(Identifier) as first statement in body.\n              //Confirm the if test references define.amd\n              traverse(bodyNode.test, function (node) {\n                if (parse.refsDefineAmd(node)) {\n                  refsDefine = true;\n                  return false;\n                }\n              });\n\n              if (refsDefine) {\n                return onMatch(\"define\", null, null, null, exp.expression, exp.expression.arguments[0].name, fnExpScope);\n              }\n            }\n          }\n        }\n      };\n      /**\n       * Converts an AST node into a JS source string by extracting\n       * the node's location from the given contents string. Assumes\n       * esprima.parse() with loc was done.\n       * @param {String} contents\n       * @param {Object} node\n       * @returns {String} a JS source string.\n       */\n\n\n      parse.nodeToString = function (contents, node) {\n        var extracted,\n            loc = node.loc,\n            lines = contents.split('\\n'),\n            firstLine = loc.start.line > 1 ? lines.slice(0, loc.start.line - 1).join('\\n') + '\\n' : '',\n            preamble = firstLine + lines[loc.start.line - 1].substring(0, loc.start.column);\n\n        if (loc.start.line === loc.end.line) {\n          extracted = lines[loc.start.line - 1].substring(loc.start.column, loc.end.column);\n        } else {\n          extracted = lines[loc.start.line - 1].substring(loc.start.column) + '\\n' + lines.slice(loc.start.line, loc.end.line - 1).join('\\n') + '\\n' + lines[loc.end.line - 1].substring(0, loc.end.column);\n        }\n\n        return {\n          value: extracted,\n          range: [preamble.length, preamble.length + extracted.length]\n        };\n      };\n      /**\n       * Extracts license comments from JS text.\n       * @param {String} fileName\n       * @param {String} contents\n       * @returns {String} a string of license comments.\n       */\n\n\n      parse.getLicenseComments = function (fileName, contents) {\n        var commentNode,\n            refNode,\n            subNode,\n            value,\n            i,\n            j,\n            //xpconnect's Reflect does not support comment or range, but\n        //prefer continued operation vs strict parity of operation,\n        //as license comments can be expressed in other ways, like\n        //via wrap args, or linked via sourcemaps.\n        ast = esprima.parse(contents, {\n          comment: true,\n          range: true\n        }),\n            result = '',\n            existsMap = {},\n            lineEnd = contents.indexOf('\\r') === -1 ? '\\n' : '\\r\\n';\n\n        if (ast.comments) {\n          for (i = 0; i < ast.comments.length; i++) {\n            commentNode = ast.comments[i];\n\n            if (commentNode.type === 'Line') {\n              value = '//' + commentNode.value + lineEnd;\n              refNode = commentNode;\n\n              if (i + 1 >= ast.comments.length) {\n                value += lineEnd;\n              } else {\n                //Look for immediately adjacent single line comments\n                //since it could from a multiple line comment made out\n                //of single line comments. Like this comment.\n                for (j = i + 1; j < ast.comments.length; j++) {\n                  subNode = ast.comments[j];\n\n                  if (subNode.type === 'Line' && subNode.range[0] === refNode.range[1] + 1) {\n                    //Adjacent single line comment. Collect it.\n                    value += '//' + subNode.value + lineEnd;\n                    refNode = subNode;\n                  } else {\n                    //No more single line comment blocks. Break out\n                    //and continue outer looping.\n                    break;\n                  }\n                }\n\n                value += lineEnd;\n                i = j - 1;\n              }\n            } else {\n              value = '/*' + commentNode.value + '*/' + lineEnd + lineEnd;\n            }\n\n            if (!existsMap[value] && (value.indexOf('license') !== -1 || commentNode.type === 'Block' && value.indexOf('/*!') === 0 || value.indexOf('opyright') !== -1 || value.indexOf('(c)') !== -1)) {\n              result += value;\n              existsMap[value] = true;\n            }\n          }\n        }\n\n        return result;\n      };\n\n      return parse;\n    });\n    /*global define */\n\n    define('transform', ['./esprimaAdapter', './parse', 'logger', 'lang'], function (esprima, parse, logger, lang) {\n      'use strict';\n\n      var transform,\n          baseIndentRegExp = /^([ \\t]+)/,\n          indentRegExp = /\\{[\\r\\n]+([ \\t]+)/,\n          keyRegExp = /^[_A-Za-z]([A-Za-z\\d_]*)$/,\n          bulkIndentRegExps = {\n        '\\n': /\\n/g,\n        '\\r\\n': /\\r\\n/g\n      };\n\n      function applyIndent(str, indent, lineReturn) {\n        var regExp = bulkIndentRegExps[lineReturn];\n        return str.replace(regExp, '$&' + indent);\n      }\n\n      transform = {\n        toTransport: function (namespace, moduleName, path, contents, onFound, options) {\n          options = options || {};\n\n          var astRoot,\n              contentLines,\n              modLine,\n              foundAnon,\n              scanCount = 0,\n              scanReset = false,\n              defineInfos = [],\n              applySourceUrl = function (contents) {\n            if (options.useSourceUrl) {\n              contents = 'eval(\"' + lang.jsEscape(contents) + '\\\\n//# sourceURL=' + (path.indexOf('/') === 0 ? '' : '/') + path + '\");\\n';\n            }\n\n            return contents;\n          };\n\n          try {\n            astRoot = esprima.parse(contents, {\n              loc: true\n            });\n          } catch (e) {\n            logger.trace('toTransport skipping ' + path + ': ' + e.toString());\n            return contents;\n          } //Find the define calls and their position in the files.\n\n\n          parse.traverse(astRoot, function (node) {\n            var args,\n                firstArg,\n                firstArgLoc,\n                factoryNode,\n                needsId,\n                depAction,\n                foundId,\n                init,\n                sourceUrlData,\n                range,\n                namespaceExists = false; // If a bundle script with a define declaration, do not\n            // parse any further at this level. Likely a built layer\n            // by some other tool.\n\n            if (node.type === 'VariableDeclarator' && node.id && node.id.name === 'define' && node.id.type === 'Identifier') {\n              init = node.init;\n\n              if (init && init.callee && init.callee.type === 'CallExpression' && init.callee.callee && init.callee.callee.type === 'Identifier' && init.callee.callee.name === 'require' && init.callee.arguments && init.callee.arguments.length === 1 && init.callee.arguments[0].type === 'Literal' && init.callee.arguments[0].value && init.callee.arguments[0].value.indexOf('amdefine') !== -1) {// the var define = require('amdefine')(module) case,\n                // keep going in that case.\n              } else {\n                return false;\n              }\n            }\n\n            namespaceExists = namespace && node.type === 'CallExpression' && node.callee && node.callee.object && node.callee.object.type === 'Identifier' && node.callee.object.name === namespace && node.callee.property.type === 'Identifier' && node.callee.property.name === 'define';\n\n            if (namespaceExists || parse.isDefineNodeWithArgs(node)) {\n              //The arguments are where its at.\n              args = node.arguments;\n\n              if (!args || !args.length) {\n                return;\n              }\n\n              firstArg = args[0];\n              firstArgLoc = firstArg.loc;\n\n              if (args.length === 1) {\n                if (firstArg.type === 'Identifier') {\n                  //The define(factory) case, but\n                  //only allow it if one Identifier arg,\n                  //to limit impact of false positives.\n                  needsId = true;\n                  depAction = 'empty';\n                } else if (parse.isFnExpression(firstArg)) {\n                  //define(function(){})\n                  factoryNode = firstArg;\n                  needsId = true;\n                  depAction = 'scan';\n                } else if (firstArg.type === 'ObjectExpression') {\n                  //define({});\n                  needsId = true;\n                  depAction = 'skip';\n                } else if (firstArg.type === 'Literal' && typeof firstArg.value === 'number') {\n                  //define('12345');\n                  needsId = true;\n                  depAction = 'skip';\n                } else if (firstArg.type === 'UnaryExpression' && firstArg.operator === '-' && firstArg.argument && firstArg.argument.type === 'Literal' && typeof firstArg.argument.value === 'number') {\n                  //define('-12345');\n                  needsId = true;\n                  depAction = 'skip';\n                } else if (firstArg.type === 'MemberExpression' && firstArg.object && firstArg.property && firstArg.property.type === 'Identifier') {\n                  //define(this.key);\n                  needsId = true;\n                  depAction = 'empty';\n                }\n              } else if (firstArg.type === 'ArrayExpression') {\n                //define([], ...);\n                needsId = true;\n                depAction = 'skip';\n              } else if (firstArg.type === 'Literal' && typeof firstArg.value === 'string') {\n                //define('string', ....)\n                //Already has an ID.\n                needsId = false;\n\n                if (args.length === 2 && parse.isFnExpression(args[1])) {\n                  //Needs dependency scanning.\n                  factoryNode = args[1];\n                  depAction = 'scan';\n                } else {\n                  depAction = 'skip';\n                }\n              } else {\n                //Unknown define entity, keep looking, even\n                //in the subtree for this node.\n                return;\n              }\n\n              range = {\n                foundId: foundId,\n                needsId: needsId,\n                depAction: depAction,\n                namespaceExists: namespaceExists,\n                node: node,\n                defineLoc: node.loc,\n                firstArgLoc: firstArgLoc,\n                factoryNode: factoryNode,\n                sourceUrlData: sourceUrlData\n              }; //Only transform ones that do not have IDs. If it has an\n              //ID but no dependency array, assume it is something like\n              //a phonegap implementation, that has its own internal\n              //define that cannot handle dependency array constructs,\n              //and if it is a named module, then it means it has been\n              //set for transport form.\n\n              if (range.needsId) {\n                if (foundAnon) {\n                  logger.trace(path + ' has more than one anonymous ' + 'define. May be a built file from another ' + 'build system like, Ender. Skipping normalization.');\n                  defineInfos = [];\n                  return false;\n                } else {\n                  foundAnon = range;\n                  defineInfos.push(range);\n                }\n              } else if (depAction === 'scan') {\n                scanCount += 1;\n\n                if (scanCount > 1) {\n                  //Just go back to an array that just has the\n                  //anon one, since this is an already optimized\n                  //file like the phonegap one.\n                  if (!scanReset) {\n                    defineInfos = foundAnon ? [foundAnon] : [];\n                    scanReset = true;\n                  }\n                } else {\n                  defineInfos.push(range);\n                }\n              }\n            }\n          });\n\n          if (!defineInfos.length) {\n            return applySourceUrl(contents);\n          } //Reverse the matches, need to start from the bottom of\n          //the file to modify it, so that the ranges are still true\n          //further up.\n\n\n          defineInfos.reverse();\n          contentLines = contents.split('\\n');\n\n          modLine = function (loc, contentInsertion) {\n            var startIndex = loc.start.column,\n                //start.line is 1-based, not 0 based.\n            lineIndex = loc.start.line - 1,\n                line = contentLines[lineIndex];\n            contentLines[lineIndex] = line.substring(0, startIndex) + contentInsertion + line.substring(startIndex, line.length);\n          };\n\n          defineInfos.forEach(function (info) {\n            var deps,\n                contentInsertion = '',\n                depString = ''; //Do the modifications \"backwards\", in other words, start with the\n            //one that is farthest down and work up, so that the ranges in the\n            //defineInfos still apply. So that means deps, id, then namespace.\n\n            if (info.needsId && moduleName) {\n              contentInsertion += \"'\" + moduleName + \"',\";\n            }\n\n            if (info.depAction === 'scan') {\n              deps = parse.getAnonDepsFromNode(info.factoryNode);\n\n              if (deps.length) {\n                depString = '[' + deps.map(function (dep) {\n                  return \"'\" + dep + \"'\";\n                }) + ']';\n              } else {\n                depString = '[]';\n              }\n\n              depString += ',';\n\n              if (info.factoryNode) {\n                //Already have a named module, need to insert the\n                //dependencies after the name.\n                modLine(info.factoryNode.loc, depString);\n              } else {\n                contentInsertion += depString;\n              }\n            }\n\n            if (contentInsertion) {\n              modLine(info.firstArgLoc, contentInsertion);\n            } //Do namespace last so that ui does not mess upthe parenRange\n            //used above.\n\n\n            if (namespace && !info.namespaceExists) {\n              modLine(info.defineLoc, namespace + '.');\n            } //Notify any listener for the found info\n\n\n            if (onFound) {\n              onFound(info);\n            }\n          });\n          contents = contentLines.join('\\n');\n          return applySourceUrl(contents);\n        },\n\n        /**\n         * Modify the contents of a require.config/requirejs.config call. This\n         * call will LOSE any existing comments that are in the config string.\n         *\n         * @param  {String} fileContents String that may contain a config call\n         * @param  {Function} onConfig Function called when the first config\n         * call is found. It will be passed an Object which is the current\n         * config, and the onConfig function should return an Object to use\n         * as the config.\n         * @return {String} the fileContents with the config changes applied.\n         */\n        modifyConfig: function (fileContents, onConfig) {\n          var details = parse.findConfig(fileContents),\n              config = details.config;\n\n          if (config) {\n            config = onConfig(config);\n\n            if (config) {\n              return transform.serializeConfig(config, fileContents, details.range[0], details.range[1], {\n                quote: details.quote\n              });\n            }\n          }\n\n          return fileContents;\n        },\n        serializeConfig: function (config, fileContents, start, end, options) {\n          //Calculate base level of indent\n          var indent,\n              match,\n              configString,\n              outDentRegExp,\n              baseIndent = '',\n              startString = fileContents.substring(0, start),\n              existingConfigString = fileContents.substring(start, end),\n              lineReturn = existingConfigString.indexOf('\\r') === -1 ? '\\n' : '\\r\\n',\n              lastReturnIndex = startString.lastIndexOf('\\n'); //Get the basic amount of indent for the require config call.\n\n          if (lastReturnIndex === -1) {\n            lastReturnIndex = 0;\n          }\n\n          match = baseIndentRegExp.exec(startString.substring(lastReturnIndex + 1, start));\n\n          if (match && match[1]) {\n            baseIndent = match[1];\n          } //Calculate internal indentation for config\n\n\n          match = indentRegExp.exec(existingConfigString);\n\n          if (match && match[1]) {\n            indent = match[1];\n          }\n\n          if (!indent || indent.length < baseIndent) {\n            indent = '  ';\n          } else {\n            indent = indent.substring(baseIndent.length);\n          }\n\n          outDentRegExp = new RegExp('(' + lineReturn + ')' + indent, 'g');\n          configString = transform.objectToString(config, {\n            indent: indent,\n            lineReturn: lineReturn,\n            outDentRegExp: outDentRegExp,\n            quote: options && options.quote\n          }); //Add in the base indenting level.\n\n          configString = applyIndent(configString, baseIndent, lineReturn);\n          return startString + configString + fileContents.substring(end);\n        },\n\n        /**\n         * Tries converting a JS object to a string. This will likely suck, and\n         * is tailored to the type of config expected in a loader config call.\n         * So, hasOwnProperty fields, strings, numbers, arrays and functions,\n         * no weird recursively referenced stuff.\n         * @param  {Object} obj        the object to convert\n         * @param  {Object} options    options object with the following values:\n         *         {String} indent     the indentation to use for each level\n         *         {String} lineReturn the type of line return to use\n         *         {outDentRegExp} outDentRegExp the regexp to use to outdent functions\n         *         {String} quote      the quote type to use, ' or \". Optional. Default is \"\n         * @param  {String} totalIndent the total indent to print for this level\n         * @return {String}            a string representation of the object.\n         */\n        objectToString: function (obj, options, totalIndent) {\n          var startBrace,\n              endBrace,\n              nextIndent,\n              first = true,\n              value = '',\n              lineReturn = options.lineReturn,\n              indent = options.indent,\n              outDentRegExp = options.outDentRegExp,\n              quote = options.quote || '\"';\n          totalIndent = totalIndent || '';\n          nextIndent = totalIndent + indent;\n\n          if (obj === null) {\n            value = 'null';\n          } else if (obj === undefined) {\n            value = 'undefined';\n          } else if (typeof obj === 'number' || typeof obj === 'boolean') {\n            value = obj;\n          } else if (typeof obj === 'string') {\n            //Use double quotes in case the config may also work as JSON.\n            value = quote + lang.jsEscape(obj) + quote;\n          } else if (lang.isArray(obj)) {\n            lang.each(obj, function (item, i) {\n              value += (i !== 0 ? ',' + lineReturn : '') + nextIndent + transform.objectToString(item, options, nextIndent);\n            });\n            startBrace = '[';\n            endBrace = ']';\n          } else if (lang.isFunction(obj) || lang.isRegExp(obj)) {\n            //The outdent regexp just helps pretty up the conversion\n            //just in node. Rhino strips comments and does a different\n            //indent scheme for Function toString, so not really helpful\n            //there.\n            value = obj.toString().replace(outDentRegExp, '$1');\n          } else {\n            //An object\n            lang.eachProp(obj, function (v, prop) {\n              value += (first ? '' : ',' + lineReturn) + nextIndent + (keyRegExp.test(prop) ? prop : quote + lang.jsEscape(prop) + quote) + ': ' + transform.objectToString(v, options, nextIndent);\n              first = false;\n            });\n            startBrace = '{';\n            endBrace = '}';\n          }\n\n          if (startBrace) {\n            value = startBrace + lineReturn + value + lineReturn + totalIndent + endBrace;\n          }\n\n          return value;\n        }\n      };\n      return transform;\n    });\n    /*jslint regexp: true, plusplus: true  */\n\n    /*global define: false */\n\n    define('pragma', ['parse', 'logger'], function (parse, logger) {\n      'use strict';\n\n      function Temp() {}\n\n      function create(obj, mixin) {\n        Temp.prototype = obj;\n        var temp = new Temp(),\n            prop; //Avoid any extra memory hanging around\n\n        Temp.prototype = null;\n\n        if (mixin) {\n          for (prop in mixin) {\n            if (mixin.hasOwnProperty(prop) && !temp.hasOwnProperty(prop)) {\n              temp[prop] = mixin[prop];\n            }\n          }\n        }\n\n        return temp; // Object\n      }\n\n      var pragma = {\n        conditionalRegExp: /(exclude|include)Start\\s*\\(\\s*[\"'](\\w+)[\"']\\s*,(.*)\\)/,\n        useStrictRegExp: /(^|[^{]\\r?\\n)['\"]use strict['\"];/g,\n        hasRegExp: /has\\s*\\(\\s*['\"]([^'\"]+)['\"]\\s*\\)/g,\n        configRegExp: /(^|[^\\.])(requirejs|require)(\\.config)\\s*\\(/g,\n        nsWrapRegExp: /\\/\\*requirejs namespace: true \\*\\//,\n        apiDefRegExp: /var requirejs,\\s*require,\\s*define;/,\n        defineCheckRegExp: /typeof(\\s+|\\s*\\(\\s*)define(\\s*\\))?\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\.\\s*amd/g,\n        defineStringCheckRegExp: /typeof\\s+define\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\[\\s*[\"']amd[\"']\\s*\\]/g,\n        defineTypeFirstCheckRegExp: /\\s*[\"']function[\"']\\s*==(=?)\\s*typeof\\s+define\\s*&&\\s*define\\s*\\.\\s*amd/g,\n        defineJQueryRegExp: /typeof\\s+define\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*&&\\s*define\\s*\\.\\s*amd\\s*\\.\\s*jQuery/g,\n        defineHasRegExp: /typeof\\s+define\\s*==(=)?\\s*['\"]function['\"]\\s*&&\\s*typeof\\s+define\\.amd\\s*==(=)?\\s*['\"]object['\"]\\s*&&\\s*define\\.amd/g,\n        defineTernaryRegExp: /typeof\\s+define\\s*===?\\s*['\"]function[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*\\?\\s*define/,\n        defineExistsRegExp: /\\s+typeof\\s+define\\s*!==?\\s*['\"]undefined[\"']\\s*/,\n        defineExistsAndAmdRegExp: /typeof\\s+define\\s*!==?\\s*['\"]undefined[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*/,\n        amdefineRegExp: /if\\s*\\(\\s*typeof define\\s*\\!==\\s*['\"]function['\"]\\s*\\)\\s*\\{\\s*[^\\{\\}]+amdefine[^\\{\\}]+\\}/g,\n        removeStrict: function (contents, config) {\n          return config.useStrict ? contents : contents.replace(pragma.useStrictRegExp, '$1');\n        },\n        namespace: function (fileContents, ns, onLifecycleName) {\n          if (ns) {\n            //Namespace require/define calls\n            fileContents = fileContents.replace(pragma.configRegExp, '$1' + ns + '.$2$3(');\n            fileContents = parse.renameNamespace(fileContents, ns); //Namespace define ternary use:\n\n            fileContents = fileContents.replace(pragma.defineTernaryRegExp, \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd ? \" + ns + \".define\"); //Namespace define jquery use:\n\n            fileContents = fileContents.replace(pragma.defineJQueryRegExp, \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd && \" + ns + \".define.amd.jQuery\"); //Namespace has.js define use:\n\n            fileContents = fileContents.replace(pragma.defineHasRegExp, \"typeof \" + ns + \".define === 'function' && typeof \" + ns + \".define.amd === 'object' && \" + ns + \".define.amd\"); //Namespace async.js define use:\n\n            fileContents = fileContents.replace(pragma.defineExistsAndAmdRegExp, \"typeof \" + ns + \".define !== 'undefined' && \" + ns + \".define.amd\"); //Namespace define checks.\n            //Do these ones last, since they are a subset of the more specific\n            //checks above.\n\n            fileContents = fileContents.replace(pragma.defineCheckRegExp, \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd\");\n            fileContents = fileContents.replace(pragma.defineStringCheckRegExp, \"typeof \" + ns + \".define === 'function' && \" + ns + \".define['amd']\");\n            fileContents = fileContents.replace(pragma.defineTypeFirstCheckRegExp, \"'function' === typeof \" + ns + \".define && \" + ns + \".define.amd\");\n            fileContents = fileContents.replace(pragma.defineExistsRegExp, \"typeof \" + ns + \".define !== 'undefined'\"); //Check for require.js with the require/define definitions\n\n            if (pragma.apiDefRegExp.test(fileContents) && fileContents.indexOf(\"if (!\" + ns + \" || !\" + ns + \".requirejs)\") === -1) {\n              //Wrap the file contents in a typeof check, and a function\n              //to contain the API globals.\n              fileContents = \"var \" + ns + \";(function () { if (!\" + ns + \" || !\" + ns + \".requirejs) {\\n\" + \"if (!\" + ns + \") { \" + ns + ' = {}; } else { require = ' + ns + '; }\\n' + fileContents + \"\\n\" + ns + \".requirejs = requirejs;\" + ns + \".require = require;\" + ns + \".define = define;\\n\" + \"}\\n}());\";\n            } //Finally, if the file wants a special wrapper because it ties\n            //in to the requirejs internals in a way that would not fit\n            //the above matches, do that. Look for /*requirejs namespace: true*/\n\n\n            if (pragma.nsWrapRegExp.test(fileContents)) {\n              //Remove the pragma.\n              fileContents = fileContents.replace(pragma.nsWrapRegExp, ''); //Alter the contents.\n\n              fileContents = '(function () {\\n' + 'var require = ' + ns + '.require,' + 'requirejs = ' + ns + '.requirejs,' + 'define = ' + ns + '.define;\\n' + fileContents + '\\n}());';\n            }\n          }\n\n          return fileContents;\n        },\n\n        /**\n         * processes the fileContents for some //>> conditional statements\n         */\n        process: function (fileName, fileContents, config, onLifecycleName, pluginCollector) {\n          /*jslint evil: true */\n          var foundIndex = -1,\n              startIndex = 0,\n              lineEndIndex,\n              conditionLine,\n              matches,\n              type,\n              marker,\n              condition,\n              isTrue,\n              endRegExp,\n              endMatches,\n              endMarkerIndex,\n              shouldInclude,\n              startLength,\n              lifecycleHas,\n              deps,\n              i,\n              dep,\n              moduleName,\n              collectorMod,\n              lifecyclePragmas,\n              pragmas = config.pragmas,\n              hasConfig = config.has,\n              //Legacy arg defined to help in dojo conversion script. Remove later\n          //when dojo no longer needs conversion:\n          kwArgs = pragmas; //Mix in a specific lifecycle scoped object, to allow targeting\n          //some pragmas/has tests to only when files are saved, or at different\n          //lifecycle events. Do not bother with kwArgs in this section, since\n          //the old dojo kwArgs were for all points in the build lifecycle.\n\n          if (onLifecycleName) {\n            lifecyclePragmas = config['pragmas' + onLifecycleName];\n            lifecycleHas = config['has' + onLifecycleName];\n\n            if (lifecyclePragmas) {\n              pragmas = create(pragmas || {}, lifecyclePragmas);\n            }\n\n            if (lifecycleHas) {\n              hasConfig = create(hasConfig || {}, lifecycleHas);\n            }\n          } //Replace has references if desired\n\n\n          if (hasConfig) {\n            fileContents = fileContents.replace(pragma.hasRegExp, function (match, test) {\n              if (hasConfig.hasOwnProperty(test)) {\n                return !!hasConfig[test];\n              }\n\n              return match;\n            });\n          }\n\n          if (!config.skipPragmas) {\n            while ((foundIndex = fileContents.indexOf(\"//>>\", startIndex)) !== -1) {\n              //Found a conditional. Get the conditional line.\n              lineEndIndex = fileContents.indexOf(\"\\n\", foundIndex);\n\n              if (lineEndIndex === -1) {\n                lineEndIndex = fileContents.length - 1;\n              } //Increment startIndex past the line so the next conditional search can be done.\n\n\n              startIndex = lineEndIndex + 1; //Break apart the conditional.\n\n              conditionLine = fileContents.substring(foundIndex, lineEndIndex + 1);\n              matches = conditionLine.match(pragma.conditionalRegExp);\n\n              if (matches) {\n                type = matches[1];\n                marker = matches[2];\n                condition = matches[3];\n                isTrue = false; //See if the condition is true.\n\n                try {\n                  isTrue = !!eval(\"(\" + condition + \")\");\n                } catch (e) {\n                  throw \"Error in file: \" + fileName + \". Conditional comment: \" + conditionLine + \" failed with this error: \" + e;\n                } //Find the endpoint marker.\n\n\n                endRegExp = new RegExp('\\\\/\\\\/\\\\>\\\\>\\\\s*' + type + 'End\\\\(\\\\s*[\\'\"]' + marker + '[\\'\"]\\\\s*\\\\)', \"g\");\n                endMatches = endRegExp.exec(fileContents.substring(startIndex, fileContents.length));\n\n                if (endMatches) {\n                  endMarkerIndex = startIndex + endRegExp.lastIndex - endMatches[0].length; //Find the next line return based on the match position.\n\n                  lineEndIndex = fileContents.indexOf(\"\\n\", endMarkerIndex);\n\n                  if (lineEndIndex === -1) {\n                    lineEndIndex = fileContents.length - 1;\n                  } //Should we include the segment?\n\n\n                  shouldInclude = type === \"exclude\" && !isTrue || type === \"include\" && isTrue; //Remove the conditional comments, and optionally remove the content inside\n                  //the conditional comments.\n\n                  startLength = startIndex - foundIndex;\n                  fileContents = fileContents.substring(0, foundIndex) + (shouldInclude ? fileContents.substring(startIndex, endMarkerIndex) : \"\") + fileContents.substring(lineEndIndex + 1, fileContents.length); //Move startIndex to foundIndex, since that is the new position in the file\n                  //where we need to look for more conditionals in the next while loop pass.\n\n                  startIndex = foundIndex;\n                } else {\n                  throw \"Error in file: \" + fileName + \". Cannot find end marker for conditional comment: \" + conditionLine;\n                }\n              }\n            }\n          } //If need to find all plugin resources to optimize, do that now,\n          //before namespacing, since the namespacing will change the API\n          //names.\n          //If there is a plugin collector, scan the file for plugin resources.\n\n\n          if (config.optimizeAllPluginResources && pluginCollector) {\n            try {\n              deps = parse.findDependencies(fileName, fileContents);\n\n              if (deps.length) {\n                for (i = 0; i < deps.length; i++) {\n                  dep = deps[i];\n\n                  if (dep.indexOf('!') !== -1) {\n                    moduleName = dep.split('!')[0];\n                    collectorMod = pluginCollector[moduleName];\n\n                    if (!collectorMod) {\n                      collectorMod = pluginCollector[moduleName] = [];\n                    }\n\n                    collectorMod.push(dep);\n                  }\n                }\n              }\n            } catch (eDep) {\n              logger.error('Parse error looking for plugin resources in ' + fileName + ', skipping.');\n            }\n          } //Strip amdefine use for node-shared modules.\n\n\n          if (!config.keepAmdefine) {\n            fileContents = fileContents.replace(pragma.amdefineRegExp, '');\n          } //Do namespacing\n\n\n          if (onLifecycleName === 'OnSave' && config.namespace) {\n            fileContents = pragma.namespace(fileContents, config.namespace, onLifecycleName);\n          }\n\n          return pragma.removeStrict(fileContents, config);\n        }\n      };\n      return pragma;\n    });\n\n    if (env === 'browser') {\n      /*jslint strict: false */\n\n      /*global define: false */\n      define('browser/optimize', {});\n    }\n\n    if (env === 'node') {\n      /*jslint strict: false */\n\n      /*global define: false */\n      define('node/optimize', {});\n    }\n\n    if (env === 'rhino') {\n      /*jslint sloppy: true, plusplus: true */\n\n      /*global define, java, Packages, com */\n      define('rhino/optimize', ['logger', 'env!env/file'], function (logger, file) {\n        //Add .reduce to Rhino so UglifyJS can run in Rhino,\n        //inspired by https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/reduce\n        //but rewritten for brevity, and to be good enough for use by UglifyJS.\n        if (!Array.prototype.reduce) {\n          Array.prototype.reduce = function (fn\n          /*, initialValue */\n          ) {\n            var i = 0,\n                length = this.length,\n                accumulator;\n\n            if (arguments.length >= 2) {\n              accumulator = arguments[1];\n            } else {\n              if (length) {\n                while (!(i in this)) {\n                  i++;\n                }\n\n                accumulator = this[i++];\n              }\n            }\n\n            for (; i < length; i++) {\n              if (i in this) {\n                accumulator = fn.call(undefined, accumulator, this[i], i, this);\n              }\n            }\n\n            return accumulator;\n          };\n        }\n\n        var JSSourceFilefromCode,\n            optimize,\n            mapRegExp = /\"file\":\"[^\"]+\"/; //Bind to Closure compiler, but if it is not available, do not sweat it.\n\n        try {\n          // Try older closure compiler that worked on Java 6\n          JSSourceFilefromCode = java.lang.Class.forName('com.google.javascript.jscomp.JSSourceFile').getMethod('fromCode', [java.lang.String, java.lang.String]);\n        } catch (e) {\n          try {\n            // Try for newer closure compiler that needs Java 7+\n            JSSourceFilefromCode = java.lang.Class.forName('com.google.javascript.jscomp.SourceFile').getMethod('fromCode', [java.lang.String, java.lang.String]);\n          } catch (e) {\n            try {\n              // Try Nashorn style\n              var stringClass = Java.type(\"java.lang.String\").class;\n              JSSourceFilefromCode = Java.type(\"com.google.javascript.jscomp.SourceFile\").class.getMethod(\"fromCode\", [stringClass, stringClass]);\n            } catch (e) {}\n          }\n        } //Helper for closure compiler, because of weird Java-JavaScript interactions.\n\n\n        function closurefromCode(filename, content) {\n          return JSSourceFilefromCode.invoke(null, [filename, content]);\n        }\n\n        function getFileWriter(fileName, encoding) {\n          var outFile = new java.io.File(fileName),\n              outWriter,\n              parentDir;\n          parentDir = outFile.getAbsoluteFile().getParentFile();\n\n          if (!parentDir.exists()) {\n            if (!parentDir.mkdirs()) {\n              throw \"Could not create directory: \" + parentDir.getAbsolutePath();\n            }\n          }\n\n          if (encoding) {\n            outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile), encoding);\n          } else {\n            outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile));\n          }\n\n          return new java.io.BufferedWriter(outWriter);\n        }\n\n        optimize = {\n          closure: function (fileName, fileContents, outFileName, keepLines, config) {\n            config = config || {};\n            var result,\n                mappings,\n                optimized,\n                compressed,\n                baseName,\n                writer,\n                outBaseName,\n                outFileNameMap,\n                outFileNameMapContent,\n                srcOutFileName,\n                concatNameMap,\n                jscomp = Packages.com.google.javascript.jscomp,\n                flags = Packages.com.google.common.flags,\n                //Set up source input\n            jsSourceFile = closurefromCode(String(fileName), String(fileContents)),\n                sourceListArray = new java.util.ArrayList(),\n                externList = new java.util.ArrayList(),\n                options,\n                option,\n                FLAG_compilation_level,\n                compiler,\n                externExportsPath,\n                Compiler = Packages.com.google.javascript.jscomp.Compiler,\n                CommandLineRunner = Packages.com.google.javascript.jscomp.CommandLineRunner;\n            logger.trace(\"Minifying file: \" + fileName);\n            baseName = new java.io.File(fileName).getName(); //Set up options\n\n            options = new jscomp.CompilerOptions();\n\n            for (option in config.CompilerOptions) {\n              // options are false by default and jslint wanted an if statement in this for loop\n              if (config.CompilerOptions[option]) {\n                options[option] = config.CompilerOptions[option];\n              }\n            }\n\n            options.prettyPrint = keepLines || options.prettyPrint;\n            FLAG_compilation_level = jscomp.CompilationLevel[config.CompilationLevel || 'SIMPLE_OPTIMIZATIONS'];\n            FLAG_compilation_level.setOptionsForCompilationLevel(options);\n\n            if (config.generateSourceMaps) {\n              mappings = new java.util.ArrayList();\n              mappings.add(new com.google.javascript.jscomp.SourceMap.LocationMapping(fileName, baseName + \".src.js\"));\n              options.setSourceMapLocationMappings(mappings);\n              options.setSourceMapOutputPath(fileName + \".map\");\n            } //If we need to pass an externs file to Closure so that it does not create aliases\n            //for certain symbols, do so here.\n\n\n            externList.addAll(CommandLineRunner.getDefaultExterns());\n\n            if (config.externExportsPath) {\n              externExportsPath = config.externExportsPath;\n              externList.add(jscomp.SourceFile.fromFile(externExportsPath));\n            } //Trigger the compiler\n\n\n            Compiler.setLoggingLevel(Packages.java.util.logging.Level[config.loggingLevel || 'WARNING']);\n            compiler = new Compiler(); //fill the sourceArrrayList; we need the ArrayList because the only overload of compile\n            //accepting the getDefaultExterns return value (a List) also wants the sources as a List\n\n            sourceListArray.add(jsSourceFile);\n            result = compiler.compile(externList, sourceListArray, options);\n\n            if (result.success) {\n              optimized = String(compiler.toSource());\n\n              if (config.generateSourceMaps && result.sourceMap && outFileName) {\n                outBaseName = new java.io.File(outFileName).getName();\n                srcOutFileName = outFileName + \".src.js\";\n                outFileNameMap = outFileName + \".map\"; //If previous .map file exists, move it to the \".src.js\"\n                //location. Need to update the sourceMappingURL part in the\n                //src.js file too.\n\n                if (file.exists(outFileNameMap)) {\n                  concatNameMap = outFileNameMap.replace(/\\.map$/, '.src.js.map');\n                  file.saveFile(concatNameMap, file.readFile(outFileNameMap));\n                  file.saveFile(srcOutFileName, fileContents.replace(/\\/\\# sourceMappingURL=(.+).map/, '/# sourceMappingURL=$1.src.js.map'));\n                } else {\n                  file.saveUtf8File(srcOutFileName, fileContents);\n                }\n\n                writer = getFileWriter(outFileNameMap, \"utf-8\");\n                result.sourceMap.appendTo(writer, outFileName);\n                writer.close(); //Not sure how better to do this, but right now the .map file\n                //leaks the full OS path in the \"file\" property. Manually\n                //modify it to not do that.\n\n                file.saveFile(outFileNameMap, file.readFile(outFileNameMap).replace(mapRegExp, '\"file\":\"' + baseName + '\"'));\n                fileContents = optimized + \"\\n//# sourceMappingURL=\" + outBaseName + \".map\";\n              } else {\n                fileContents = optimized;\n              }\n\n              return fileContents;\n            } else {\n              throw new Error('Cannot closure compile file: ' + fileName + '. Skipping it.');\n            }\n\n            return fileContents;\n          }\n        };\n        return optimize;\n      });\n    }\n\n    if (env === 'xpconnect') {\n      define('xpconnect/optimize', {});\n    }\n    /*jslint plusplus: true, nomen: true, regexp: true */\n\n    /*global define: false */\n\n\n    define('optimize', ['lang', 'logger', 'env!env/optimize', 'env!env/file', 'parse', 'pragma', 'uglifyjs', 'source-map'], function (lang, logger, envOptimize, file, parse, pragma, uglify, sourceMap) {\n      'use strict';\n\n      var optimize,\n          cssImportRegExp = /\\@import\\s+(url\\()?\\s*([^);]+)\\s*(\\))?([\\w, ]*)(;)?/ig,\n          cssCommentImportRegExp = /\\/\\*[^\\*]*@import[^\\*]*\\*\\//g,\n          cssUrlRegExp = /\\url\\(\\s*([^\\)]+)\\s*\\)?/g,\n          protocolRegExp = /^\\w+:/,\n          SourceMapGenerator = sourceMap.SourceMapGenerator,\n          SourceMapConsumer = sourceMap.SourceMapConsumer,\n          es5PlusGuidance = 'If the source uses ES2015 or later syntax, please pass \"optimize: \\'none\\'\" to r.js and use an ES2015+ compatible minifier after running r.js. The included UglifyJS only understands ES5 or earlier syntax.';\n      /**\n       * If an URL from a CSS url value contains start/end quotes, remove them.\n       * This is not done in the regexp, since my regexp fu is not that strong,\n       * and the CSS spec allows for ' and \" in the URL if they are backslash escaped.\n       * @param {String} url\n       */\n\n      function cleanCssUrlQuotes(url) {\n        //Make sure we are not ending in whitespace.\n        //Not very confident of the css regexps above that there will not be ending\n        //whitespace.\n        url = url.replace(/\\s+$/, \"\");\n\n        if (url.charAt(0) === \"'\" || url.charAt(0) === \"\\\"\") {\n          url = url.substring(1, url.length - 1);\n        }\n\n        return url;\n      }\n\n      function fixCssUrlPaths(fileName, path, contents, cssPrefix) {\n        return contents.replace(cssUrlRegExp, function (fullMatch, urlMatch) {\n          var firstChar,\n              hasProtocol,\n              parts,\n              i,\n              fixedUrlMatch = cleanCssUrlQuotes(urlMatch);\n          fixedUrlMatch = fixedUrlMatch.replace(lang.backSlashRegExp, \"/\"); //Only do the work for relative URLs. Skip things that start with / or #, or have\n          //a protocol.\n\n          firstChar = fixedUrlMatch.charAt(0);\n          hasProtocol = protocolRegExp.test(fixedUrlMatch);\n\n          if (firstChar !== \"/\" && firstChar !== \"#\" && !hasProtocol) {\n            //It is a relative URL, tack on the cssPrefix and path prefix\n            urlMatch = cssPrefix + path + fixedUrlMatch;\n          } else if (!hasProtocol) {\n            logger.trace(fileName + \"\\n  URL not a relative URL, skipping: \" + urlMatch);\n          } //Collapse .. and .\n\n\n          parts = urlMatch.split(\"/\");\n\n          for (i = parts.length - 1; i > 0; i--) {\n            if (parts[i] === \".\") {\n              parts.splice(i, 1);\n            } else if (parts[i] === \"..\") {\n              if (i !== 0 && parts[i - 1] !== \"..\") {\n                parts.splice(i - 1, 2);\n                i -= 1;\n              }\n            }\n          }\n\n          return \"url(\" + parts.join(\"/\") + \")\";\n        });\n      }\n      /**\n       * Inlines nested stylesheets that have @import calls in them.\n       * @param {String} fileName the file name\n       * @param {String} fileContents the file contents\n       * @param {String} cssImportIgnore comma delimited string of files to ignore\n       * @param {String} cssPrefix string to be prefixed before relative URLs\n       * @param {Object} included an object used to track the files already imported\n       */\n\n\n      function flattenCss(fileName, fileContents, cssImportIgnore, cssPrefix, included, topLevel) {\n        //Find the last slash in the name.\n        fileName = fileName.replace(lang.backSlashRegExp, \"/\");\n        var endIndex = fileName.lastIndexOf(\"/\"),\n            //Make a file path based on the last slash.\n        //If no slash, so must be just a file name. Use empty string then.\n        filePath = endIndex !== -1 ? fileName.substring(0, endIndex + 1) : \"\",\n            //store a list of merged files\n        importList = [],\n            skippedList = []; //First make a pass by removing any commented out @import calls.\n\n        fileContents = fileContents.replace(cssCommentImportRegExp, ''); //Make sure we have a delimited ignore list to make matching faster\n\n        if (cssImportIgnore && cssImportIgnore.charAt(cssImportIgnore.length - 1) !== \",\") {\n          cssImportIgnore += \",\";\n        }\n\n        fileContents = fileContents.replace(cssImportRegExp, function (fullMatch, urlStart, importFileName, urlEnd, mediaTypes) {\n          //Only process media type \"all\" or empty media type rules.\n          if (mediaTypes && mediaTypes.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') !== \"all\") {\n            skippedList.push(fileName);\n            return fullMatch;\n          }\n\n          importFileName = cleanCssUrlQuotes(importFileName); //Ignore the file import if it is part of an ignore list.\n\n          if (cssImportIgnore && cssImportIgnore.indexOf(importFileName + \",\") !== -1) {\n            return fullMatch;\n          } //Make sure we have a unix path for the rest of the operation.\n\n\n          importFileName = importFileName.replace(lang.backSlashRegExp, \"/\");\n\n          try {\n            //if a relative path, then tack on the filePath.\n            //If it is not a relative path, then the readFile below will fail,\n            //and we will just skip that import.\n            var fullImportFileName = importFileName.charAt(0) === \"/\" ? importFileName : filePath + importFileName,\n                importContents = file.readFile(fullImportFileName),\n                importEndIndex,\n                importPath,\n                flat; //Skip the file if it has already been included.\n\n            if (included[fullImportFileName]) {\n              return '';\n            }\n\n            included[fullImportFileName] = true; //Make sure to flatten any nested imports.\n\n            flat = flattenCss(fullImportFileName, importContents, cssImportIgnore, cssPrefix, included);\n            importContents = flat.fileContents;\n\n            if (flat.importList.length) {\n              importList.push.apply(importList, flat.importList);\n            }\n\n            if (flat.skippedList.length) {\n              skippedList.push.apply(skippedList, flat.skippedList);\n            } //Make the full import path\n\n\n            importEndIndex = importFileName.lastIndexOf(\"/\"); //Make a file path based on the last slash.\n            //If no slash, so must be just a file name. Use empty string then.\n\n            importPath = importEndIndex !== -1 ? importFileName.substring(0, importEndIndex + 1) : \"\"; //fix url() on relative import (#5)\n\n            importPath = importPath.replace(/^\\.\\//, ''); //Modify URL paths to match the path represented by this file.\n\n            importContents = fixCssUrlPaths(importFileName, importPath, importContents, cssPrefix);\n            importList.push(fullImportFileName);\n            return importContents;\n          } catch (e) {\n            logger.warn(fileName + \"\\n  Cannot inline css import, skipping: \" + importFileName);\n            return fullMatch;\n          }\n        });\n\n        if (cssPrefix && topLevel) {\n          //Modify URL paths to match the path represented by this file.\n          fileContents = fixCssUrlPaths(fileName, '', fileContents, cssPrefix);\n        }\n\n        return {\n          importList: importList,\n          skippedList: skippedList,\n          fileContents: fileContents\n        };\n      }\n\n      optimize = {\n        /**\n         * Optimizes a file that contains JavaScript content. Optionally collects\n         * plugin resources mentioned in a file, and then passes the content\n         * through an minifier if one is specified via config.optimize.\n         *\n         * @param {String} fileName the name of the file to optimize\n         * @param {String} fileContents the contents to optimize. If this is\n         * a null value, then fileName will be used to read the fileContents.\n         * @param {String} outFileName the name of the file to use for the\n         * saved optimized content.\n         * @param {Object} config the build config object.\n         * @param {Array} [pluginCollector] storage for any plugin resources\n         * found.\n         */\n        jsFile: function (fileName, fileContents, outFileName, config, pluginCollector) {\n          if (!fileContents) {\n            fileContents = file.readFile(fileName);\n          }\n\n          fileContents = optimize.js(fileName, fileContents, outFileName, config, pluginCollector);\n          file.saveUtf8File(outFileName, fileContents);\n        },\n\n        /**\n         * Optimizes a file that contains JavaScript content. Optionally collects\n         * plugin resources mentioned in a file, and then passes the content\n         * through an minifier if one is specified via config.optimize.\n         *\n         * @param {String} fileName the name of the file that matches the\n         * fileContents.\n         * @param {String} fileContents the string of JS to optimize.\n         * @param {Object} [config] the build config object.\n         * @param {Array} [pluginCollector] storage for any plugin resources\n         * found.\n         */\n        js: function (fileName, fileContents, outFileName, config, pluginCollector) {\n          var optFunc,\n              optConfig,\n              parts = String(config.optimize).split('.'),\n              optimizerName = parts[0],\n              keepLines = parts[1] === 'keepLines',\n              licenseContents = '';\n          config = config || {}; //Apply pragmas/namespace renaming\n\n          fileContents = pragma.process(fileName, fileContents, config, 'OnSave', pluginCollector); //Optimize the JS files if asked.\n\n          if (optimizerName && optimizerName !== 'none') {\n            optFunc = envOptimize[optimizerName] || optimize.optimizers[optimizerName];\n\n            if (!optFunc) {\n              throw new Error('optimizer with name of \"' + optimizerName + '\" not found for this environment');\n            }\n\n            optConfig = config[optimizerName] || {};\n\n            if (config.generateSourceMaps) {\n              optConfig.generateSourceMaps = !!config.generateSourceMaps;\n              optConfig._buildSourceMap = config._buildSourceMap;\n            }\n\n            try {\n              if (config.preserveLicenseComments) {\n                //Pull out any license comments for prepending after optimization.\n                try {\n                  licenseContents = parse.getLicenseComments(fileName, fileContents);\n                } catch (e) {\n                  throw new Error('Cannot parse file: ' + fileName + ' for comments. Skipping it. Error is:\\n' + e.toString());\n                }\n              }\n\n              if (config.generateSourceMaps && licenseContents) {\n                optConfig.preamble = licenseContents;\n                licenseContents = '';\n              }\n\n              fileContents = licenseContents + optFunc(fileName, fileContents, outFileName, keepLines, optConfig);\n\n              if (optConfig._buildSourceMap && optConfig._buildSourceMap !== config._buildSourceMap) {\n                config._buildSourceMap = optConfig._buildSourceMap;\n              }\n            } catch (e) {\n              if (config.throwWhen && config.throwWhen.optimize) {\n                throw e;\n              } else {\n                logger.error(e);\n              }\n            }\n          } else {\n            if (config._buildSourceMap) {\n              config._buildSourceMap = null;\n            }\n          }\n\n          return fileContents;\n        },\n\n        /**\n         * Optimizes one CSS file, inlining @import calls, stripping comments, and\n         * optionally removes line returns.\n         * @param {String} fileName the path to the CSS file to optimize\n         * @param {String} outFileName the path to save the optimized file.\n         * @param {Object} config the config object with the optimizeCss and\n         * cssImportIgnore options.\n         */\n        cssFile: function (fileName, outFileName, config) {\n          //Read in the file. Make sure we have a JS string.\n          var originalFileContents = file.readFile(fileName),\n              flat = flattenCss(fileName, originalFileContents, config.cssImportIgnore, config.cssPrefix, {}, true),\n              //Do not use the flattened CSS if there was one that was skipped.\n          fileContents = flat.skippedList.length ? originalFileContents : flat.fileContents,\n              startIndex,\n              endIndex,\n              buildText,\n              comment;\n\n          if (flat.skippedList.length) {\n            logger.warn('Cannot inline @imports for ' + fileName + ',\\nthe following files had media queries in them:\\n' + flat.skippedList.join('\\n'));\n          } //Do comment removal.\n\n\n          try {\n            if (config.optimizeCss.indexOf(\".keepComments\") === -1) {\n              startIndex = 0; //Get rid of comments.\n\n              while ((startIndex = fileContents.indexOf(\"/*\", startIndex)) !== -1) {\n                endIndex = fileContents.indexOf(\"*/\", startIndex + 2);\n\n                if (endIndex === -1) {\n                  throw \"Improper comment in CSS file: \" + fileName;\n                }\n\n                comment = fileContents.substring(startIndex, endIndex);\n\n                if (config.preserveLicenseComments && (comment.indexOf('license') !== -1 || comment.indexOf('opyright') !== -1 || comment.indexOf('(c)') !== -1)) {\n                  //Keep the comment, just increment the startIndex\n                  startIndex = endIndex;\n                } else {\n                  fileContents = fileContents.substring(0, startIndex) + fileContents.substring(endIndex + 2, fileContents.length);\n                  startIndex = 0;\n                }\n              }\n            } //Get rid of newlines.\n\n\n            if (config.optimizeCss.indexOf(\".keepLines\") === -1) {\n              fileContents = fileContents.replace(/[\\r\\n]/g, \" \");\n              fileContents = fileContents.replace(/\\s+/g, \" \");\n              fileContents = fileContents.replace(/\\{\\s/g, \"{\");\n              fileContents = fileContents.replace(/\\s\\}/g, \"}\");\n            } else {\n              //Remove multiple empty lines.\n              fileContents = fileContents.replace(/(\\r\\n)+/g, \"\\r\\n\");\n              fileContents = fileContents.replace(/(\\n)+/g, \"\\n\");\n            } //Remove unnecessary whitespace\n\n\n            if (config.optimizeCss.indexOf(\".keepWhitespace\") === -1) {\n              //Remove leading and trailing whitespace from lines\n              fileContents = fileContents.replace(/^[ \\t]+/gm, \"\");\n              fileContents = fileContents.replace(/[ \\t]+$/gm, \"\"); //Remove whitespace after semicolon, colon, curly brackets and commas\n\n              fileContents = fileContents.replace(/(;|:|\\{|}|,)[ \\t]+/g, \"$1\"); //Remove whitespace before opening curly brackets\n\n              fileContents = fileContents.replace(/[ \\t]+(\\{)/g, \"$1\"); //Truncate double whitespace\n\n              fileContents = fileContents.replace(/([ \\t])+/g, \"$1\"); //Remove empty lines\n\n              fileContents = fileContents.replace(/^[ \\t]*[\\r\\n]/gm, '');\n            }\n          } catch (e) {\n            fileContents = originalFileContents;\n            logger.error(\"Could not optimized CSS file: \" + fileName + \", error: \" + e);\n          }\n\n          file.saveUtf8File(outFileName, fileContents); //text output to stdout and/or written to build.txt file\n\n          buildText = \"\\n\" + outFileName.replace(config.dir, \"\") + \"\\n----------------\\n\";\n          flat.importList.push(fileName);\n          buildText += flat.importList.map(function (path) {\n            return path.replace(config.dir, \"\");\n          }).join(\"\\n\");\n          return {\n            importList: flat.importList,\n            buildText: buildText + \"\\n\"\n          };\n        },\n\n        /**\n         * Optimizes CSS files, inlining @import calls, stripping comments, and\n         * optionally removes line returns.\n         * @param {String} startDir the path to the top level directory\n         * @param {Object} config the config object with the optimizeCss and\n         * cssImportIgnore options.\n         */\n        css: function (startDir, config) {\n          var buildText = \"\",\n              importList = [],\n              shouldRemove = config.dir && config.removeCombined,\n              i,\n              fileName,\n              result,\n              fileList;\n\n          if (config.optimizeCss.indexOf(\"standard\") !== -1) {\n            fileList = file.getFilteredFileList(startDir, /\\.css$/, true);\n\n            if (fileList) {\n              for (i = 0; i < fileList.length; i++) {\n                fileName = fileList[i];\n                logger.trace(\"Optimizing (\" + config.optimizeCss + \") CSS file: \" + fileName);\n                result = optimize.cssFile(fileName, fileName, config);\n                buildText += result.buildText;\n\n                if (shouldRemove) {\n                  result.importList.pop();\n                  importList = importList.concat(result.importList);\n                }\n              }\n            }\n\n            if (shouldRemove) {\n              importList.forEach(function (path) {\n                if (file.exists(path)) {\n                  file.deleteFile(path);\n                }\n              });\n            }\n          }\n\n          return buildText;\n        },\n        optimizers: {\n          uglify: function (fileName, fileContents, outFileName, keepLines, config) {\n            var result,\n                existingMap,\n                resultMap,\n                finalMap,\n                sourceIndex,\n                uconfig = {},\n                existingMapPath = outFileName + '.map',\n                baseName = fileName && fileName.split('/').pop();\n            config = config || {};\n            lang.mixin(uconfig, config, true);\n            uconfig.fromString = true;\n\n            if (config.preamble) {\n              uconfig.output = {\n                preamble: config.preamble\n              };\n            }\n\n            if (config.generateSourceMaps && (outFileName || config._buildSourceMap)) {\n              uconfig.outSourceMap = baseName + '.map';\n\n              if (config._buildSourceMap) {\n                existingMap = JSON.parse(config._buildSourceMap);\n                uconfig.inSourceMap = existingMap;\n              } else if (file.exists(existingMapPath)) {\n                uconfig.inSourceMap = existingMapPath;\n                existingMap = JSON.parse(file.readFile(existingMapPath));\n              }\n            }\n\n            logger.trace(\"Uglify file: \" + fileName);\n\n            try {\n              //var tempContents = fileContents.replace(/\\/\\/\\# sourceMappingURL=.*$/, '');\n              result = uglify.minify(fileContents, uconfig, baseName + '.src.js');\n\n              if (uconfig.outSourceMap && result.map) {\n                resultMap = result.map;\n\n                if (!existingMap && !config._buildSourceMap) {\n                  file.saveFile(outFileName + '.src.js', fileContents);\n                }\n\n                fileContents = result.code;\n\n                if (config._buildSourceMap) {\n                  config._buildSourceMap = resultMap;\n                } else {\n                  file.saveFile(outFileName + '.map', resultMap);\n                }\n              } else {\n                fileContents = result.code;\n              }\n            } catch (e) {\n              var errorString = e.toString();\n              var isSyntaxError = /SyntaxError/.test(errorString);\n              throw new Error('Cannot uglify file: ' + fileName + '. Skipping it. Error is:\\n' + errorString + (isSyntaxError ? '\\n\\n' + es5PlusGuidance : ''));\n            }\n\n            return fileContents;\n          }\n        }\n      };\n      return optimize;\n    });\n    /*\n     * This file patches require.js to communicate with the build system.\n     */\n    //Using sloppy since this uses eval for some code like plugins,\n    //which may not be strict mode compliant. So if use strict is used\n    //below they will have strict rules applied and may cause an error.\n\n    /*jslint sloppy: true, nomen: true, plusplus: true, regexp: true */\n\n    /*global require, define: true */\n    //NOT asking for require as a dependency since the goal is to modify the\n    //global require below\n\n    define('requirePatch', ['env!env/file', 'pragma', 'parse', 'lang', 'logger', 'commonJs', 'prim'], function (file, pragma, parse, lang, logger, commonJs, prim) {\n      var allowRun = true,\n          hasProp = lang.hasProp,\n          falseProp = lang.falseProp,\n          getOwn = lang.getOwn,\n          // Used to strip out use strict from toString()'d functions for the\n      // shim config since they will explicitly want to not be bound by strict,\n      // but some envs, explicitly xpcshell, adds a use strict.\n      useStrictRegExp = /['\"]use strict['\"];/g,\n          //Absolute path if starts with /, \\, or x:\n      absoluteUrlRegExp = /^[\\/\\\\]|^\\w:/; //Turn off throwing on resolution conflict, that was just an older prim\n      //idea about finding errors early, but does not comply with how promises\n      //should operate.\n\n      prim.hideResolutionConflict = true; //This method should be called when the patches to require should take hold.\n\n      return function () {\n        if (!allowRun) {\n          return;\n        }\n\n        allowRun = false;\n        var layer,\n            pluginBuilderRegExp = /([\"']?)pluginBuilder([\"']?)\\s*[=\\:]\\s*[\"']([^'\"\\s]+)[\"']/,\n            oldNewContext = require.s.newContext,\n            oldDef,\n            //create local undefined values for module and exports,\n        //so that when files are evaled in this function they do not\n        //see the node values used for r.js\n        exports,\n            module;\n        /**\n         * Reset \"global\" build caches that are kept around between\n         * build layer builds. Useful to do when there are multiple\n         * top level requirejs.optimize() calls.\n         */\n\n        require._cacheReset = function () {\n          //Stored raw text caches, used by browser use.\n          require._cachedRawText = {}; //Stored cached file contents for reuse in other layers.\n\n          require._cachedFileContents = {}; //Store which cached files contain a require definition.\n\n          require._cachedDefinesRequireUrls = {};\n        };\n\n        require._cacheReset();\n        /**\n         * Makes sure the URL is something that can be supported by the\n         * optimization tool.\n         * @param {String} url\n         * @returns {Boolean}\n         */\n\n\n        require._isSupportedBuildUrl = function (url) {\n          //Ignore URLs with protocols, hosts or question marks, means either network\n          //access is needed to fetch it or it is too dynamic. Note that\n          //on Windows, full paths are used for some urls, which include\n          //the drive, like c:/something, so need to test for something other\n          //than just a colon.\n          if (url.indexOf(\"://\") === -1 && url.indexOf(\"?\") === -1 && url.indexOf('empty:') !== 0 && url.indexOf('//') !== 0) {\n            return true;\n          } else {\n            if (!layer.ignoredUrls[url]) {\n              if (url.indexOf('empty:') === -1) {\n                logger.info('Cannot optimize network URL, skipping: ' + url);\n              }\n\n              layer.ignoredUrls[url] = true;\n            }\n\n            return false;\n          }\n        };\n\n        function normalizeUrlWithBase(context, moduleName, url) {\n          //Adjust the URL if it was not transformed to use baseUrl, but only\n          //if the URL is not already an absolute path.\n          if (require.jsExtRegExp.test(moduleName) && !absoluteUrlRegExp.test(url)) {\n            url = (context.config.dir || context.config.dirBaseUrl) + url;\n          }\n\n          return url;\n        } //Overrides the new context call to add existing tracking features.\n\n\n        require.s.newContext = function (name) {\n          var context = oldNewContext(name),\n              oldEnable = context.enable,\n              moduleProto = context.Module.prototype,\n              oldInit = moduleProto.init,\n              oldCallPlugin = moduleProto.callPlugin; //Only do this for the context used for building.\n\n          if (name === '_') {\n            //For build contexts, do everything sync\n            context.nextTick = function (fn) {\n              fn();\n            };\n\n            context.needFullExec = {};\n            context.fullExec = {};\n            context.plugins = {};\n            context.buildShimExports = {}; //Override the shim exports function generator to just\n            //spit out strings that can be used in the stringified\n            //build output.\n\n            context.makeShimExports = function (value) {\n              var fn;\n\n              if (context.config.wrapShim) {\n                fn = function () {\n                  var str = 'return '; // If specifies an export that is just a global\n                  // name, no dot for a `this.` and such, then also\n                  // attach to the global, for `var a = {}` files\n                  // where the function closure would hide that from\n                  // the global object.\n\n                  if (value.exports && value.exports.indexOf('.') === -1) {\n                    str += 'root.' + value.exports + ' = ';\n                  }\n\n                  if (value.init) {\n                    str += '(' + value.init.toString().replace(useStrictRegExp, '') + '.apply(this, arguments))';\n                  }\n\n                  if (value.init && value.exports) {\n                    str += ' || ';\n                  }\n\n                  if (value.exports) {\n                    str += value.exports;\n                  }\n\n                  str += ';';\n                  return str;\n                };\n              } else {\n                fn = function () {\n                  return '(function (global) {\\n' + '    return function () {\\n' + '        var ret, fn;\\n' + (value.init ? '       fn = ' + value.init.toString().replace(useStrictRegExp, '') + ';\\n' + '        ret = fn.apply(global, arguments);\\n' : '') + (value.exports ? '        return ret || global.' + value.exports + ';\\n' : '        return ret;\\n') + '    };\\n' + '}(this))';\n                };\n              }\n\n              return fn;\n            };\n\n            context.enable = function (depMap, parent) {\n              var id = depMap.id,\n                  parentId = parent && parent.map.id,\n                  needFullExec = context.needFullExec,\n                  fullExec = context.fullExec,\n                  mod = getOwn(context.registry, id);\n\n              if (mod && !mod.defined) {\n                if (parentId && getOwn(needFullExec, parentId)) {\n                  needFullExec[id] = depMap;\n                }\n              } else if (getOwn(needFullExec, id) && falseProp(fullExec, id) || parentId && getOwn(needFullExec, parentId) && falseProp(fullExec, id)) {\n                context.require.undef(id);\n              }\n\n              return oldEnable.apply(context, arguments);\n            }; //Override load so that the file paths can be collected.\n\n\n            context.load = function (moduleName, url) {\n              /*jslint evil: true */\n              var contents, pluginBuilderMatch, builderName, shim, shimExports; //Do not mark the url as fetched if it is\n              //not an empty: URL, used by the optimizer.\n              //In that case we need to be sure to call\n              //load() for each module that is mapped to\n              //empty: so that dependencies are satisfied\n              //correctly.\n\n              if (url.indexOf('empty:') === 0) {\n                delete context.urlFetched[url];\n              } //Only handle urls that can be inlined, so that means avoiding some\n              //URLs like ones that require network access or may be too dynamic,\n              //like JSONP\n\n\n              if (require._isSupportedBuildUrl(url)) {\n                //Adjust the URL if it was not transformed to use baseUrl.\n                url = normalizeUrlWithBase(context, moduleName, url); //Save the module name to path  and path to module name mappings.\n\n                layer.buildPathMap[moduleName] = url;\n                layer.buildFileToModule[url] = moduleName;\n\n                if (hasProp(context.plugins, moduleName)) {\n                  //plugins need to have their source evaled as-is.\n                  context.needFullExec[moduleName] = true;\n                }\n\n                prim().start(function () {\n                  if (hasProp(require._cachedFileContents, url) && (falseProp(context.needFullExec, moduleName) || getOwn(context.fullExec, moduleName))) {\n                    contents = require._cachedFileContents[url]; //If it defines require, mark it so it can be hoisted.\n                    //Done here and in the else below, before the\n                    //else block removes code from the contents.\n                    //Related to #263\n\n                    if (!layer.existingRequireUrl && require._cachedDefinesRequireUrls[url]) {\n                      layer.existingRequireUrl = url;\n                    }\n                  } else {\n                    //Load the file contents, process for conditionals, then\n                    //evaluate it.\n                    return require._cacheReadAsync(url).then(function (text) {\n                      contents = text;\n\n                      if (context.config.cjsTranslate && (!context.config.shim || !lang.hasProp(context.config.shim, moduleName))) {\n                        contents = commonJs.convert(url, contents);\n                      } //If there is a read filter, run it now.\n\n\n                      if (context.config.onBuildRead) {\n                        contents = context.config.onBuildRead(moduleName, url, contents);\n                      }\n\n                      contents = pragma.process(url, contents, context.config, 'OnExecute'); //Find out if the file contains a require() definition. Need to know\n                      //this so we can inject plugins right after it, but before they are needed,\n                      //and to make sure this file is first, so that define calls work.\n\n                      try {\n                        if (!layer.existingRequireUrl && parse.definesRequire(url, contents)) {\n                          layer.existingRequireUrl = url;\n                          require._cachedDefinesRequireUrls[url] = true;\n                        }\n                      } catch (e1) {\n                        throw new Error('Parse error using esprima ' + 'for file: ' + url + '\\n' + e1);\n                      }\n                    }).then(function () {\n                      if (hasProp(context.plugins, moduleName)) {\n                        //This is a loader plugin, check to see if it has a build extension,\n                        //otherwise the plugin will act as the plugin builder too.\n                        pluginBuilderMatch = pluginBuilderRegExp.exec(contents);\n\n                        if (pluginBuilderMatch) {\n                          //Load the plugin builder for the plugin contents.\n                          builderName = context.makeModuleMap(pluginBuilderMatch[3], context.makeModuleMap(moduleName), null, true).id;\n                          return require._cacheReadAsync(context.nameToUrl(builderName));\n                        }\n                      }\n\n                      return contents;\n                    }).then(function (text) {\n                      contents = text; //Parse out the require and define calls.\n                      //Do this even for plugins in case they have their own\n                      //dependencies that may be separate to how the pluginBuilder works.\n\n                      try {\n                        if (falseProp(context.needFullExec, moduleName)) {\n                          contents = parse(moduleName, url, contents, {\n                            insertNeedsDefine: true,\n                            has: context.config.has,\n                            findNestedDependencies: context.config.findNestedDependencies\n                          });\n                        }\n                      } catch (e2) {\n                        throw new Error('Parse error using esprima ' + 'for file: ' + url + '\\n' + e2);\n                      }\n\n                      require._cachedFileContents[url] = contents;\n                    });\n                  }\n                }).then(function () {\n                  if (contents) {\n                    eval(contents);\n                  }\n\n                  try {\n                    //If have a string shim config, and this is\n                    //a fully executed module, try to see if\n                    //it created a variable in this eval scope\n                    if (getOwn(context.needFullExec, moduleName)) {\n                      shim = getOwn(context.config.shim, moduleName);\n\n                      if (shim && shim.exports) {\n                        shimExports = eval(shim.exports);\n\n                        if (typeof shimExports !== 'undefined') {\n                          context.buildShimExports[moduleName] = shimExports;\n                        }\n                      }\n                    } //Need to close out completion of this module\n                    //so that listeners will get notified that it is available.\n\n\n                    context.completeLoad(moduleName);\n                  } catch (e) {\n                    //Track which module could not complete loading.\n                    if (!e.moduleTree) {\n                      e.moduleTree = [];\n                    }\n\n                    e.moduleTree.push(moduleName);\n                    throw e;\n                  }\n                }).then(null, function (eOuter) {\n                  if (!eOuter.fileName) {\n                    eOuter.fileName = url;\n                  }\n\n                  throw eOuter;\n                }).end();\n              } else {\n                //With unsupported URLs still need to call completeLoad to\n                //finish loading.\n                context.completeLoad(moduleName);\n              }\n            }; //Marks module has having a name, and optionally executes the\n            //callback, but only if it meets certain criteria.\n\n\n            context.execCb = function (name, cb, args, exports) {\n              var buildShimExports = getOwn(layer.context.buildShimExports, name);\n\n              if (buildShimExports) {\n                return buildShimExports;\n              } else if (cb.__requireJsBuild || getOwn(layer.context.needFullExec, name)) {\n                return cb.apply(exports, args);\n              }\n\n              return undefined;\n            };\n\n            moduleProto.init = function (depMaps) {\n              if (context.needFullExec[this.map.id]) {\n                lang.each(depMaps, lang.bind(this, function (depMap) {\n                  if (typeof depMap === 'string') {\n                    depMap = context.makeModuleMap(depMap, this.map.isDefine ? this.map : this.map.parentMap, false, true);\n                  }\n\n                  if (!context.fullExec[depMap.id]) {\n                    context.require.undef(depMap.id);\n                  }\n                }));\n              }\n\n              return oldInit.apply(this, arguments);\n            };\n\n            moduleProto.callPlugin = function () {\n              var map = this.map,\n                  pluginMap = context.makeModuleMap(map.prefix),\n                  pluginId = pluginMap.id,\n                  pluginMod = getOwn(context.registry, pluginId);\n              context.plugins[pluginId] = true;\n              context.needFullExec[pluginId] = map; //If the module is not waiting to finish being defined,\n              //undef it and start over, to get full execution.\n\n              if (falseProp(context.fullExec, pluginId) && (!pluginMod || pluginMod.defined)) {\n                context.require.undef(pluginMap.id);\n              }\n\n              return oldCallPlugin.apply(this, arguments);\n            };\n          }\n\n          return context;\n        }; //Clear up the existing context so that the newContext modifications\n        //above will be active.\n\n\n        delete require.s.contexts._;\n        /** Reset state for each build layer pass. */\n\n        require._buildReset = function () {\n          var oldContext = require.s.contexts._; //Clear up the existing context.\n\n          delete require.s.contexts._; //Set up new context, so the layer object can hold onto it.\n\n          require({});\n\n          layer = require._layer = {\n            buildPathMap: {},\n            buildFileToModule: {},\n            buildFilePaths: [],\n            pathAdded: {},\n            modulesWithNames: {},\n            needsDefine: {},\n            existingRequireUrl: \"\",\n            ignoredUrls: {},\n            context: require.s.contexts._\n          }; //Return the previous context in case it is needed, like for\n          //the basic config object.\n\n          return oldContext;\n        };\n\n        require._buildReset(); //Override define() to catch modules that just define an object, so that\n        //a dummy define call is not put in the build file for them. They do\n        //not end up getting defined via context.execCb, so we need to catch them\n        //at the define call.\n\n\n        oldDef = define; //This function signature does not have to be exact, just match what we\n        //are looking for.\n\n        define = function (name) {\n          if (typeof name === \"string\" && falseProp(layer.needsDefine, name)) {\n            layer.modulesWithNames[name] = true;\n          }\n\n          return oldDef.apply(require, arguments);\n        };\n\n        define.amd = oldDef.amd; //Add some utilities for plugins\n\n        require._readFile = file.readFile;\n\n        require._fileExists = function (path) {\n          return file.exists(path);\n        }; //Called when execManager runs for a dependency. Used to figure out\n        //what order of execution.\n\n\n        require.onResourceLoad = function (context, map) {\n          var id = map.id,\n              url; // Fix up any maps that need to be normalized as part of the fullExec\n          // plumbing for plugins to participate in the build.\n\n          if (context.plugins && lang.hasProp(context.plugins, id)) {\n            lang.eachProp(context.needFullExec, function (value, prop) {\n              // For plugin entries themselves, they do not have a map\n              // value in needFullExec, just a \"true\" entry.\n              if (value !== true && value.prefix === id && value.unnormalized) {\n                var map = context.makeModuleMap(value.originalName, value.parentMap);\n                context.needFullExec[map.id] = map;\n              }\n            });\n          } //If build needed a full execution, indicate it\n          //has been done now. But only do it if the context is tracking\n          //that. Only valid for the context used in a build, not for\n          //other contexts being run, like for useLib, plain requirejs\n          //use in node/rhino.\n\n\n          if (context.needFullExec && getOwn(context.needFullExec, id)) {\n            context.fullExec[id] = map;\n          } //A plugin.\n\n\n          if (map.prefix) {\n            if (falseProp(layer.pathAdded, id)) {\n              layer.buildFilePaths.push(id); //For plugins the real path is not knowable, use the name\n              //for both module to file and file to module mappings.\n\n              layer.buildPathMap[id] = id;\n              layer.buildFileToModule[id] = id;\n              layer.modulesWithNames[id] = true;\n              layer.pathAdded[id] = true;\n            }\n          } else if (map.url && require._isSupportedBuildUrl(map.url)) {\n            //If the url has not been added to the layer yet, and it\n            //is from an actual file that was loaded, add it now.\n            url = normalizeUrlWithBase(context, id, map.url);\n\n            if (!layer.pathAdded[url] && getOwn(layer.buildPathMap, id)) {\n              //Remember the list of dependencies for this layer.\n              layer.buildFilePaths.push(url);\n              layer.pathAdded[url] = true;\n            }\n          }\n        }; //Called by output of the parse() function, when a file does not\n        //explicitly call define, probably just require, but the parse()\n        //function normalizes on define() for dependency mapping and file\n        //ordering works correctly.\n\n\n        require.needsDefine = function (moduleName) {\n          layer.needsDefine[moduleName] = true;\n        };\n      };\n    });\n    /*jslint */\n\n    /*global define: false, console: false */\n\n    define('commonJs', ['env!env/file', 'parse'], function (file, parse) {\n      'use strict';\n\n      var commonJs = {\n        //Set to false if you do not want this file to log. Useful in environments\n        //like node where you want the work to happen without noise.\n        useLog: true,\n        convertDir: function (commonJsPath, savePath) {\n          var fileList,\n              i,\n              jsFileRegExp = /\\.js$/,\n              fileName,\n              convertedFileName,\n              fileContents; //Get list of files to convert.\n\n          fileList = file.getFilteredFileList(commonJsPath, /\\w/, true); //Normalize on front slashes and make sure the paths do not end in a slash.\n\n          commonJsPath = commonJsPath.replace(/\\\\/g, \"/\");\n          savePath = savePath.replace(/\\\\/g, \"/\");\n\n          if (commonJsPath.charAt(commonJsPath.length - 1) === \"/\") {\n            commonJsPath = commonJsPath.substring(0, commonJsPath.length - 1);\n          }\n\n          if (savePath.charAt(savePath.length - 1) === \"/\") {\n            savePath = savePath.substring(0, savePath.length - 1);\n          } //Cycle through all the JS files and convert them.\n\n\n          if (!fileList || !fileList.length) {\n            if (commonJs.useLog) {\n              if (commonJsPath === \"convert\") {\n                //A request just to convert one file.\n                console.log('\\n\\n' + commonJs.convert(savePath, file.readFile(savePath)));\n              } else {\n                console.log(\"No files to convert in directory: \" + commonJsPath);\n              }\n            }\n          } else {\n            for (i = 0; i < fileList.length; i++) {\n              fileName = fileList[i];\n              convertedFileName = fileName.replace(commonJsPath, savePath); //Handle JS files.\n\n              if (jsFileRegExp.test(fileName)) {\n                fileContents = file.readFile(fileName);\n                fileContents = commonJs.convert(fileName, fileContents);\n                file.saveUtf8File(convertedFileName, fileContents);\n              } else {\n                //Just copy the file over.\n                file.copyFile(fileName, convertedFileName, true);\n              }\n            }\n          }\n        },\n\n        /**\n         * Does the actual file conversion.\n         *\n         * @param {String} fileName the name of the file.\n         *\n         * @param {String} fileContents the contents of a file :)\n         *\n         * @returns {String} the converted contents\n         */\n        convert: function (fileName, fileContents) {\n          //Strip out comments.\n          try {\n            var preamble = '',\n                commonJsProps = parse.usesCommonJs(fileName, fileContents); //First see if the module is not already RequireJS-formatted.\n\n            if (parse.usesAmdOrRequireJs(fileName, fileContents) || !commonJsProps) {\n              return fileContents;\n            }\n\n            if (commonJsProps.dirname || commonJsProps.filename) {\n              preamble = 'var __filename = module.uri || \"\", ' + '__dirname = __filename.substring(0, __filename.lastIndexOf(\"/\") + 1); ';\n            } //Construct the wrapper boilerplate.\n\n\n            fileContents = 'define(function (require, exports, module) {' + preamble + fileContents + '\\n});\\n';\n          } catch (e) {\n            console.log(\"commonJs.convert: COULD NOT CONVERT: \" + fileName + \", so skipping it. Error was: \" + e);\n            return fileContents;\n          }\n\n          return fileContents;\n        }\n      };\n      return commonJs;\n    });\n    /*jslint plusplus: true, nomen: true, regexp: true  */\n\n    /*global define, requirejs, java, process, console */\n\n    define('build', function (require) {\n      'use strict';\n\n      var build,\n          lang = require('lang'),\n          prim = require('prim'),\n          logger = require('logger'),\n          file = require('env!env/file'),\n          parse = require('parse'),\n          optimize = require('optimize'),\n          pragma = require('pragma'),\n          transform = require('transform'),\n          requirePatch = require('requirePatch'),\n          env = require('env'),\n          commonJs = require('commonJs'),\n          SourceMapGenerator = require('source-map').SourceMapGenerator,\n          hasProp = lang.hasProp,\n          getOwn = lang.getOwn,\n          falseProp = lang.falseProp,\n          endsWithSemiColonRegExp = /;\\s*$/,\n          endsWithSlashRegExp = /[\\/\\\\]$/,\n          resourceIsModuleIdRegExp = /^[\\w\\/\\\\\\.]+$/,\n          deepCopyProps = {\n        layer: true\n      }; //Deep copy a config object, but do not copy over the \"layer\" property,\n      //as it can be a deeply nested structure with a full requirejs context.\n\n\n      function copyConfig(obj) {\n        return lang.deeplikeCopy(obj, deepCopyProps);\n      }\n\n      prim.nextTick = function (fn) {\n        fn();\n      }; //Now map require to the outermost requirejs, now that we have\n      //local dependencies for this module. The rest of the require use is\n      //manipulating the requirejs loader.\n\n\n      require = requirejs; //Caching function for performance. Attached to\n      //require so it can be reused in requirePatch.js. _cachedRawText\n      //set up by requirePatch.js\n\n      require._cacheReadAsync = function (path, encoding) {\n        var d;\n\n        if (lang.hasProp(require._cachedRawText, path)) {\n          d = prim();\n          d.resolve(require._cachedRawText[path]);\n          return d.promise;\n        } else {\n          return file.readFileAsync(path, encoding).then(function (text) {\n            require._cachedRawText[path] = text;\n            return text;\n          });\n        }\n      };\n\n      function makeBuildBaseConfig() {\n        return {\n          appDir: \"\",\n          pragmas: {},\n          paths: {},\n          optimize: \"uglify\",\n          optimizeCss: \"standard.keepLines.keepWhitespace\",\n          inlineText: true,\n          isBuild: true,\n          optimizeAllPluginResources: false,\n          findNestedDependencies: false,\n          preserveLicenseComments: true,\n          writeBuildTxt: true,\n          //Some builds can take a while, up the default limit.\n          waitSeconds: 30,\n          //By default, all files/directories are copied, unless\n          //they match this regexp, by default just excludes .folders\n          dirExclusionRegExp: file.dirExclusionRegExp,\n          _buildPathToModuleIndex: {}\n        };\n      }\n      /**\n       * Some JS may not be valid if concatenated with other JS, in particular\n       * the style of omitting semicolons and rely on ASI. Add a semicolon in\n       * those cases.\n       */\n\n\n      function addSemiColon(text, config) {\n        if (config.skipSemiColonInsertion || endsWithSemiColonRegExp.test(text)) {\n          return text;\n        } else {\n          return text + \";\";\n        }\n      }\n\n      function endsWithSlash(dirName) {\n        if (dirName.charAt(dirName.length - 1) !== \"/\") {\n          dirName += \"/\";\n        }\n\n        return dirName;\n      }\n\n      function endsWithNewLine(text) {\n        if (text.charAt(text.length - 1) !== \"\\n\") {\n          text += \"\\n\";\n        }\n\n        return text;\n      } //Method used by plugin writeFile calls, defined up here to avoid\n      //jslint warning about \"making a function in a loop\".\n\n\n      function makeWriteFile(namespace, layer) {\n        function writeFile(name, contents) {\n          logger.trace('Saving plugin-optimized file: ' + name);\n          file.saveUtf8File(name, contents);\n        }\n\n        writeFile.asModule = function (moduleName, fileName, contents) {\n          writeFile(fileName, build.toTransport(namespace, moduleName, fileName, contents, layer));\n        };\n\n        return writeFile;\n      }\n      /**\n       * Appends singleContents to fileContents and returns the result.  If a sourceMapGenerator\n       * is provided, adds singleContents to the source map.\n       *\n       * @param {string} fileContents - The file contents to which to append singleContents\n       * @param {string} singleContents - The additional contents to append to fileContents\n       * @param {string} path - An absolute path of a file whose name to use in the source map.\n       * The file need not actually exist if the code in singleContents is generated.\n       * @param {{out: ?string, baseUrl: ?string}} config - The build configuration object.\n       * @param {?{_buildPath: ?string}} module - An object with module information.\n       * @param {?SourceMapGenerator} sourceMapGenerator - An instance of Mozilla's SourceMapGenerator,\n       * or null if no source map is being generated.\n       * @returns {string} fileContents with singleContents appended\n       */\n\n\n      function appendToFileContents(fileContents, singleContents, path, config, module, sourceMapGenerator) {\n        var refPath, sourceMapPath, resourcePath, pluginId, sourceMapLineNumber, lineCount, parts, i;\n\n        if (sourceMapGenerator) {\n          if (config.out) {\n            refPath = config.baseUrl;\n          } else if (module && module._buildPath) {\n            refPath = module._buildPath;\n          } else {\n            refPath = \"\";\n          }\n\n          parts = path.split('!');\n\n          if (parts.length === 1) {\n            //Not a plugin resource, fix the path\n            sourceMapPath = build.makeRelativeFilePath(refPath, path);\n          } else {\n            //Plugin resource. If it looks like just a plugin\n            //followed by a module ID, pull off the plugin\n            //and put it at the end of the name, otherwise\n            //just leave it alone.\n            pluginId = parts.shift();\n            resourcePath = parts.join('!');\n\n            if (resourceIsModuleIdRegExp.test(resourcePath)) {\n              sourceMapPath = build.makeRelativeFilePath(refPath, require.toUrl(resourcePath)) + '!' + pluginId;\n            } else {\n              sourceMapPath = path;\n            }\n          }\n\n          sourceMapLineNumber = fileContents.split('\\n').length - 1;\n          lineCount = singleContents.split('\\n').length;\n\n          for (i = 1; i <= lineCount; i += 1) {\n            sourceMapGenerator.addMapping({\n              generated: {\n                line: sourceMapLineNumber + i,\n                column: 0\n              },\n              original: {\n                line: i,\n                column: 0\n              },\n              source: sourceMapPath\n            });\n          } //Store the content of the original in the source\n          //map since other transforms later like minification\n          //can mess up translating back to the original\n          //source.\n\n\n          sourceMapGenerator.setSourceContent(sourceMapPath, singleContents);\n        }\n\n        fileContents += singleContents;\n        return fileContents;\n      }\n      /**\n       * Main API entry point into the build. The args argument can either be\n       * an array of arguments (like the onese passed on a command-line),\n       * or it can be a JavaScript object that has the format of a build profile\n       * file.\n       *\n       * If it is an object, then in addition to the normal properties allowed in\n       * a build profile file, the object should contain one other property:\n       *\n       * The object could also contain a \"buildFile\" property, which is a string\n       * that is the file path to a build profile that contains the rest\n       * of the build profile directives.\n       *\n       * This function does not return a status, it should throw an error if\n       * there is a problem completing the build.\n       */\n\n\n      build = function (args) {\n        var buildFile,\n            cmdConfig,\n            errorMsg,\n            errorStack,\n            stackMatch,\n            errorTree,\n            i,\n            j,\n            errorMod,\n            stackRegExp = /( {4}at[^\\n]+)\\n/,\n            standardIndent = '  ';\n        return prim().start(function () {\n          if (!args || lang.isArray(args)) {\n            if (!args || args.length < 1) {\n              logger.error(\"build.js buildProfile.js\\n\" + \"where buildProfile.js is the name of the build file (see example.build.js for hints on how to make a build file).\");\n              return undefined;\n            } //Next args can include a build file path as well as other build args.\n            //build file path comes first. If it does not contain an = then it is\n            //a build file path. Otherwise, just all build args.\n\n\n            if (args[0].indexOf(\"=\") === -1) {\n              buildFile = args[0];\n              args.splice(0, 1);\n            } //Remaining args are options to the build\n\n\n            cmdConfig = build.convertArrayToObject(args);\n            cmdConfig.buildFile = buildFile;\n          } else {\n            cmdConfig = args;\n          }\n\n          return build._run(cmdConfig);\n        }).then(null, function (e) {\n          var err;\n          errorMsg = e.toString();\n          errorTree = e.moduleTree;\n          stackMatch = stackRegExp.exec(errorMsg);\n\n          if (stackMatch) {\n            errorMsg += errorMsg.substring(0, stackMatch.index + stackMatch[0].length + 1);\n          } //If a module tree that shows what module triggered the error,\n          //print it out.\n\n\n          if (errorTree && errorTree.length > 0) {\n            errorMsg += '\\nIn module tree:\\n';\n\n            for (i = errorTree.length - 1; i > -1; i--) {\n              errorMod = errorTree[i];\n\n              if (errorMod) {\n                for (j = errorTree.length - i; j > -1; j--) {\n                  errorMsg += standardIndent;\n                }\n\n                errorMsg += errorMod + '\\n';\n              }\n            }\n\n            logger.error(errorMsg);\n          }\n\n          errorStack = e.stack;\n\n          if (typeof args === 'string' && args.indexOf('stacktrace=true') !== -1) {\n            errorMsg += '\\n' + errorStack;\n          } else {\n            if (!stackMatch && errorStack) {\n              //Just trim out the first \"at\" in the stack.\n              stackMatch = stackRegExp.exec(errorStack);\n\n              if (stackMatch) {\n                errorMsg += '\\n' + stackMatch[0] || '';\n              }\n            }\n          }\n\n          err = new Error(errorMsg);\n          err.originalError = e;\n          throw err;\n        });\n      };\n\n      build._run = function (cmdConfig) {\n        var buildPaths,\n            fileName,\n            fileNames,\n            paths,\n            i,\n            baseConfig,\n            config,\n            modules,\n            srcPath,\n            buildContext,\n            destPath,\n            moduleMap,\n            parentModuleMap,\n            context,\n            resources,\n            resource,\n            plugin,\n            fileContents,\n            pluginProcessed = {},\n            buildFileContents = \"\",\n            pluginCollector = {};\n        return prim().start(function () {\n          var prop; //Can now run the patches to require.js to allow it to be used for\n          //build generation. Do it here instead of at the top of the module\n          //because we want normal require behavior to load the build tool\n          //then want to switch to build mode.\n\n          requirePatch();\n          config = build.createConfig(cmdConfig);\n          paths = config.paths; //Remove the previous build dir, in case it contains source transforms,\n          //like the ones done with onBuildRead and onBuildWrite.\n\n          if (config.dir && !config.keepBuildDir && file.exists(config.dir)) {\n            file.deleteFile(config.dir);\n          }\n\n          if (!config.out && !config.cssIn) {\n            //This is not just a one-off file build but a full build profile, with\n            //lots of files to process.\n            //First copy all the baseUrl content\n            file.copyDir(config.appDir || config.baseUrl, config.dir, /\\w/, true); //Adjust baseUrl if config.appDir is in play, and set up build output paths.\n\n            buildPaths = {};\n\n            if (config.appDir) {\n              //All the paths should be inside the appDir, so just adjust\n              //the paths to use the dirBaseUrl\n              for (prop in paths) {\n                if (hasProp(paths, prop)) {\n                  buildPaths[prop] = paths[prop].replace(config.appDir, config.dir);\n                }\n              }\n            } else {\n              //If no appDir, then make sure to copy the other paths to this directory.\n              for (prop in paths) {\n                if (hasProp(paths, prop)) {\n                  //Set up build path for each path prefix, but only do so\n                  //if the path falls out of the current baseUrl\n                  if (paths[prop].indexOf(config.baseUrl) === 0) {\n                    buildPaths[prop] = paths[prop].replace(config.baseUrl, config.dirBaseUrl);\n                  } else {\n                    buildPaths[prop] = paths[prop] === 'empty:' ? 'empty:' : prop; //Make sure source path is fully formed with baseUrl,\n                    //if it is a relative URL.\n\n                    srcPath = paths[prop];\n\n                    if (srcPath.indexOf('/') !== 0 && srcPath.indexOf(':') === -1) {\n                      srcPath = config.baseUrl + srcPath;\n                    }\n\n                    destPath = config.dirBaseUrl + buildPaths[prop]; //Skip empty: paths\n\n                    if (srcPath !== 'empty:') {\n                      //If the srcPath is a directory, copy the whole directory.\n                      if (file.exists(srcPath) && file.isDirectory(srcPath)) {\n                        //Copy files to build area. Copy all files (the /\\w/ regexp)\n                        file.copyDir(srcPath, destPath, /\\w/, true);\n                      } else {\n                        //Try a .js extension\n                        srcPath += '.js';\n                        destPath += '.js';\n                        file.copyFile(srcPath, destPath);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } //Figure out source file location for each module layer. Do this by seeding require\n          //with source area configuration. This is needed so that later the module layers\n          //can be manually copied over to the source area, since the build may be\n          //require multiple times and the above copyDir call only copies newer files.\n\n\n          require({\n            baseUrl: config.baseUrl,\n            paths: paths,\n            packagePaths: config.packagePaths,\n            packages: config.packages\n          });\n\n          buildContext = require.s.contexts._;\n          modules = config.modules;\n\n          if (modules) {\n            modules.forEach(function (module) {\n              if (module.name) {\n                module._sourcePath = buildContext.nameToUrl(module.name); //If the module does not exist, and this is not a \"new\" module layer,\n                //as indicated by a true \"create\" property on the module, and\n                //it is not a plugin-loaded resource, and there is no\n                //'rawText' containing the module's source then throw an error.\n\n                if (!file.exists(module._sourcePath) && !module.create && module.name.indexOf('!') === -1 && (!config.rawText || !lang.hasProp(config.rawText, module.name))) {\n                  throw new Error(\"ERROR: module path does not exist: \" + module._sourcePath + \" for module named: \" + module.name + \". Path is relative to: \" + file.absPath('.'));\n                }\n              }\n            });\n          }\n\n          if (config.out) {\n            //Just set up the _buildPath for the module layer.\n            require(config);\n\n            if (!config.cssIn) {\n              config.modules[0]._buildPath = typeof config.out === 'function' ? 'FUNCTION' : config.out;\n            }\n          } else if (!config.cssIn) {\n            //Now set up the config for require to use the build area, and calculate the\n            //build file locations. Pass along any config info too.\n            baseConfig = {\n              baseUrl: config.dirBaseUrl,\n              paths: buildPaths\n            };\n            lang.mixin(baseConfig, config);\n\n            require(baseConfig);\n\n            if (modules) {\n              modules.forEach(function (module) {\n                if (module.name) {\n                  module._buildPath = buildContext.nameToUrl(module.name, null); //If buildPath and sourcePath are the same, throw since this\n                  //would result in modifying source. This condition can happen\n                  //with some more tricky paths: config and appDir/baseUrl\n                  //setting, which is a sign of incorrect config.\n\n                  if (module._buildPath === module._sourcePath && !config.allowSourceOverwrites) {\n                    throw new Error('Module ID \\'' + module.name + '\\' has a source path that is same as output path: ' + module._sourcePath + '. Stopping, config is malformed.');\n                  } // Copy the file, but only if it is not provided in rawText.\n\n\n                  if (!module.create && (!config.rawText || !lang.hasProp(config.rawText, module.name))) {\n                    file.copyFile(module._sourcePath, module._buildPath);\n                  }\n                }\n              });\n            }\n          } //Run CSS optimizations before doing JS module tracing, to allow\n          //things like text loader plugins loading CSS to get the optimized\n          //CSS.\n\n\n          if (config.optimizeCss && config.optimizeCss !== \"none\" && config.dir) {\n            buildFileContents += optimize.css(config.dir, config);\n          }\n        }).then(function () {\n          baseConfig = copyConfig(require.s.contexts._.config);\n        }).then(function () {\n          var actions = [];\n\n          if (modules) {\n            actions = modules.map(function (module, i) {\n              return function () {\n                //Save off buildPath to module index in a hash for quicker\n                //lookup later.\n                config._buildPathToModuleIndex[file.normalize(module._buildPath)] = i; //Call require to calculate dependencies.\n\n                return build.traceDependencies(module, config, baseConfig).then(function (layer) {\n                  module.layer = layer;\n                });\n              };\n            });\n            return prim.serial(actions);\n          }\n        }).then(function () {\n          var actions;\n\n          if (modules) {\n            //Now build up shadow layers for anything that should be excluded.\n            //Do this after tracing dependencies for each module, in case one\n            //of those modules end up being one of the excluded values.\n            actions = modules.map(function (module) {\n              return function () {\n                if (module.exclude) {\n                  module.excludeLayers = [];\n                  return prim.serial(module.exclude.map(function (exclude, i) {\n                    return function () {\n                      //See if it is already in the list of modules.\n                      //If not trace dependencies for it.\n                      var found = build.findBuildModule(exclude, modules);\n\n                      if (found) {\n                        module.excludeLayers[i] = found;\n                      } else {\n                        return build.traceDependencies({\n                          name: exclude\n                        }, config, baseConfig).then(function (layer) {\n                          module.excludeLayers[i] = {\n                            layer: layer\n                          };\n                        });\n                      }\n                    };\n                  }));\n                }\n              };\n            });\n            return prim.serial(actions);\n          }\n        }).then(function () {\n          if (modules) {\n            return prim.serial(modules.map(function (module) {\n              return function () {\n                if (module.exclude) {\n                  //module.exclude is an array of module names. For each one,\n                  //get the nested dependencies for it via a matching entry\n                  //in the module.excludeLayers array.\n                  module.exclude.forEach(function (excludeModule, i) {\n                    var excludeLayer = module.excludeLayers[i].layer,\n                        map = excludeLayer.buildFileToModule;\n                    excludeLayer.buildFilePaths.forEach(function (filePath) {\n                      build.removeModulePath(map[filePath], filePath, module.layer);\n                    });\n                  });\n                }\n\n                if (module.excludeShallow) {\n                  //module.excludeShallow is an array of module names.\n                  //shallow exclusions are just that module itself, and not\n                  //its nested dependencies.\n                  module.excludeShallow.forEach(function (excludeShallowModule) {\n                    var path = getOwn(module.layer.buildPathMap, excludeShallowModule);\n\n                    if (path) {\n                      build.removeModulePath(excludeShallowModule, path, module.layer);\n                    }\n                  });\n                } //Flatten them and collect the build output for each module.\n\n\n                return build.flattenModule(module, module.layer, config).then(function (builtModule) {\n                  var finalText, baseName; //Save it to a temp file for now, in case there are other layers that\n                  //contain optimized content that should not be included in later\n                  //layer optimizations. See issue #56.\n\n                  if (module._buildPath === 'FUNCTION') {\n                    module._buildText = builtModule.text;\n                    module._buildSourceMap = builtModule.sourceMap;\n                  } else {\n                    finalText = builtModule.text;\n\n                    if (builtModule.sourceMap) {\n                      baseName = module._buildPath.split('/');\n                      baseName = baseName.pop();\n                      finalText += '\\n//# sourceMappingURL=' + baseName + '.map';\n                      file.saveUtf8File(module._buildPath + '.map', builtModule.sourceMap);\n                    }\n\n                    file.saveUtf8File(module._buildPath + '-temp', finalText);\n                  }\n\n                  buildFileContents += builtModule.buildText;\n                });\n              };\n            }));\n          }\n        }).then(function () {\n          var moduleName,\n              outOrigSourceMap,\n              bundlesConfig = {},\n              bundlesConfigOutFile = config.bundlesConfigOutFile;\n\n          if (modules) {\n            //Now move the build layers to their final position.\n            modules.forEach(function (module) {\n              var entryConfig,\n                  finalPath = module._buildPath;\n\n              if (finalPath !== 'FUNCTION') {\n                if (file.exists(finalPath)) {\n                  file.deleteFile(finalPath);\n                }\n\n                file.renameFile(finalPath + '-temp', finalPath); //If bundles config should be written out, scan the\n                //built file for module IDs. Favor doing this reparse\n                //since tracking the IDs as the file is built has some\n                //edge cases around files that had more than one ID in\n                //them already, and likely loader plugin-written contents.\n\n                if (bundlesConfigOutFile) {\n                  entryConfig = bundlesConfig[module.name] = [];\n                  var bundleContents = file.readFile(finalPath);\n                  var excludeMap = {};\n                  excludeMap[module.name] = true;\n                  var parsedIds = parse.getAllNamedDefines(bundleContents, excludeMap);\n                  entryConfig.push.apply(entryConfig, parsedIds);\n                } //And finally, if removeCombined is specified, remove\n                //any of the files that were used in this layer.\n                //Be sure not to remove other build layers.\n\n\n                if (config.removeCombined && !config.out) {\n                  module.layer.buildFilePaths.forEach(function (path) {\n                    var isLayer = modules.some(function (mod) {\n                      return mod._buildPath === path;\n                    }),\n                        relPath = build.makeRelativeFilePath(config.dir, path);\n\n                    if (file.exists(path) && // not a build layer target\n                    !isLayer && // not outside the build directory\n                    relPath.indexOf('..') !== 0) {\n                      file.deleteFile(path);\n                    }\n                  });\n                }\n              } //Signal layer is done\n\n\n              if (config.onModuleBundleComplete) {\n                config.onModuleBundleComplete(module.onCompleteData);\n              }\n            }); //Write out bundles config, if it is wanted.\n\n            if (bundlesConfigOutFile) {\n              var text = file.readFile(bundlesConfigOutFile);\n              text = transform.modifyConfig(text, function (config) {\n                if (!config.bundles) {\n                  config.bundles = {};\n                }\n\n                lang.eachProp(bundlesConfig, function (value, prop) {\n                  config.bundles[prop] = value;\n                });\n                return config;\n              });\n              file.saveUtf8File(bundlesConfigOutFile, text);\n            }\n          } //If removeCombined in play, remove any empty directories that\n          //may now exist because of its use\n\n\n          if (config.removeCombined && !config.out && config.dir) {\n            file.deleteEmptyDirs(config.dir);\n          } //Do other optimizations.\n\n\n          if (config.out && !config.cssIn) {\n            //Just need to worry about one JS file.\n            fileName = config.modules[0]._buildPath;\n\n            if (fileName === 'FUNCTION') {\n              outOrigSourceMap = config.modules[0]._buildSourceMap;\n              config._buildSourceMap = outOrigSourceMap;\n              config.modules[0]._buildText = optimize.js((config.modules[0].name || config.modules[0].include[0] || fileName) + '.build.js', config.modules[0]._buildText, null, config);\n\n              if (config._buildSourceMap && config._buildSourceMap !== outOrigSourceMap) {\n                config.modules[0]._buildSourceMap = config._buildSourceMap;\n                config._buildSourceMap = null;\n              }\n            } else {\n              optimize.jsFile(fileName, null, fileName, config);\n            }\n          } else if (!config.cssIn) {\n            //Normal optimizations across modules.\n            //JS optimizations.\n            fileNames = file.getFilteredFileList(config.dir, /\\.js$/, true);\n            fileNames.forEach(function (fileName) {\n              var cfg, override, moduleIndex; //Generate the module name from the config.dir root.\n\n              moduleName = fileName.replace(config.dir, ''); //Get rid of the extension\n\n              moduleName = moduleName.substring(0, moduleName.length - 3); //If there is an override for a specific layer build module,\n              //and this file is that module, mix in the override for use\n              //by optimize.jsFile.\n\n              moduleIndex = getOwn(config._buildPathToModuleIndex, fileName); //Normalize, since getOwn could have returned undefined\n\n              moduleIndex = moduleIndex === 0 || moduleIndex > 0 ? moduleIndex : -1; //Try to avoid extra work if the other files do not need to\n              //be read. Build layers should be processed at the very\n              //least for optimization.\n\n              if (moduleIndex > -1 || !config.skipDirOptimize || config.normalizeDirDefines === \"all\" || config.cjsTranslate) {\n                //Convert the file to transport format, but without a name\n                //inserted (by passing null for moduleName) since the files are\n                //standalone, one module per file.\n                fileContents = file.readFile(fileName); //For builds, if wanting cjs translation, do it now, so that\n                //the individual modules can be loaded cross domain via\n                //plain script tags.\n\n                if (config.cjsTranslate && (!config.shim || !lang.hasProp(config.shim, moduleName))) {\n                  fileContents = commonJs.convert(fileName, fileContents);\n                }\n\n                if (moduleIndex === -1) {\n                  if (config.onBuildRead) {\n                    fileContents = config.onBuildRead(moduleName, fileName, fileContents);\n                  } //Only do transport normalization if this is not a build\n                  //layer (since it was already normalized) and if\n                  //normalizeDirDefines indicated all should be done.\n\n\n                  if (config.normalizeDirDefines === \"all\") {\n                    fileContents = build.toTransport(config.namespace, null, fileName, fileContents);\n                  }\n\n                  if (config.onBuildWrite) {\n                    fileContents = config.onBuildWrite(moduleName, fileName, fileContents);\n                  }\n                }\n\n                override = moduleIndex > -1 ? config.modules[moduleIndex].override : null;\n\n                if (override) {\n                  cfg = build.createOverrideConfig(config, override);\n                } else {\n                  cfg = config;\n                }\n\n                if (moduleIndex > -1 || !config.skipDirOptimize) {\n                  optimize.jsFile(fileName, fileContents, fileName, cfg, pluginCollector);\n                }\n              }\n            }); //Normalize all the plugin resources.\n\n            context = require.s.contexts._;\n\n            for (moduleName in pluginCollector) {\n              if (hasProp(pluginCollector, moduleName)) {\n                parentModuleMap = context.makeModuleMap(moduleName);\n                resources = pluginCollector[moduleName];\n\n                for (i = 0; i < resources.length; i++) {\n                  resource = resources[i];\n                  moduleMap = context.makeModuleMap(resource, parentModuleMap);\n\n                  if (falseProp(context.plugins, moduleMap.prefix)) {\n                    //Set the value in context.plugins so it\n                    //will be evaluated as a full plugin.\n                    context.plugins[moduleMap.prefix] = true; //Do not bother if the plugin is not available.\n\n                    if (!file.exists(require.toUrl(moduleMap.prefix + '.js'))) {\n                      continue;\n                    } //Rely on the require in the build environment\n                    //to be synchronous\n\n\n                    context.require([moduleMap.prefix]); //Now that the plugin is loaded, redo the moduleMap\n                    //since the plugin will need to normalize part of the path.\n\n\n                    moduleMap = context.makeModuleMap(resource, parentModuleMap);\n                  } //Only bother with plugin resources that can be handled\n                  //processed by the plugin, via support of the writeFile\n                  //method.\n\n\n                  if (falseProp(pluginProcessed, moduleMap.id)) {\n                    //Only do the work if the plugin was really loaded.\n                    //Using an internal access because the file may\n                    //not really be loaded.\n                    plugin = getOwn(context.defined, moduleMap.prefix);\n\n                    if (plugin && plugin.writeFile) {\n                      plugin.writeFile(moduleMap.prefix, moduleMap.name, require, makeWriteFile(config.namespace), context.config);\n                    }\n\n                    pluginProcessed[moduleMap.id] = true;\n                  }\n                }\n              }\n            } //console.log('PLUGIN COLLECTOR: ' + JSON.stringify(pluginCollector, null, \"  \"));\n            //All module layers are done, write out the build.txt file.\n\n\n            if (config.writeBuildTxt) {\n              file.saveUtf8File(config.dir + \"build.txt\", buildFileContents);\n            }\n          } //If just have one CSS file to optimize, do that here.\n\n\n          if (config.cssIn) {\n            buildFileContents += optimize.cssFile(config.cssIn, config.out, config).buildText;\n          }\n\n          if (typeof config.out === 'function') {\n            config.out(config.modules[0]._buildText, config.modules[0]._buildSourceMap);\n          } //Print out what was built into which layers.\n\n\n          if (buildFileContents) {\n            logger.info(buildFileContents);\n            return buildFileContents;\n          }\n\n          return '';\n        });\n      };\n      /**\n       * Converts command line args like \"paths.foo=../some/path\"\n       * result.paths = { foo: '../some/path' } where prop = paths,\n       * name = paths.foo and value = ../some/path, so it assumes the\n       * name=value splitting has already happened.\n       */\n\n\n      function stringDotToObj(result, name, value) {\n        var parts = name.split('.');\n        parts.forEach(function (prop, i) {\n          if (i === parts.length - 1) {\n            result[prop] = value;\n          } else {\n            if (falseProp(result, prop)) {\n              result[prop] = {};\n            }\n\n            result = result[prop];\n          }\n        });\n      }\n\n      build.objProps = {\n        paths: true,\n        wrap: true,\n        pragmas: true,\n        pragmasOnSave: true,\n        has: true,\n        hasOnSave: true,\n        uglify: true,\n        uglify2: true,\n        closure: true,\n        map: true,\n        throwWhen: true,\n        rawText: true\n      };\n\n      build.hasDotPropMatch = function (prop) {\n        var dotProp,\n            index = prop.indexOf('.');\n\n        if (index !== -1) {\n          dotProp = prop.substring(0, index);\n          return hasProp(build.objProps, dotProp);\n        }\n\n        return false;\n      };\n      /**\n       * Converts an array that has String members of \"name=value\"\n       * into an object, where the properties on the object are the names in the array.\n       * Also converts the strings \"true\" and \"false\" to booleans for the values.\n       * member name/value pairs, and converts some comma-separated lists into\n       * arrays.\n       * @param {Array} ary\n       */\n\n\n      build.convertArrayToObject = function (ary) {\n        var result = {},\n            i,\n            separatorIndex,\n            prop,\n            value,\n            needArray = {\n          \"include\": true,\n          \"exclude\": true,\n          \"excludeShallow\": true,\n          \"insertRequire\": true,\n          \"stubModules\": true,\n          \"deps\": true,\n          \"mainConfigFile\": true,\n          \"wrap.startFile\": true,\n          \"wrap.endFile\": true\n        };\n\n        for (i = 0; i < ary.length; i++) {\n          separatorIndex = ary[i].indexOf(\"=\");\n\n          if (separatorIndex === -1) {\n            throw \"Malformed name/value pair: [\" + ary[i] + \"]. Format should be name=value\";\n          }\n\n          value = ary[i].substring(separatorIndex + 1, ary[i].length);\n\n          if (value === \"true\") {\n            value = true;\n          } else if (value === \"false\") {\n            value = false;\n          }\n\n          prop = ary[i].substring(0, separatorIndex); //Convert to array if necessary\n\n          if (getOwn(needArray, prop)) {\n            value = value.split(\",\");\n          }\n\n          if (build.hasDotPropMatch(prop)) {\n            stringDotToObj(result, prop, value);\n          } else {\n            result[prop] = value;\n          }\n        }\n\n        return result; //Object\n      };\n\n      build.makeAbsPath = function (path, absFilePath) {\n        if (!absFilePath) {\n          return path;\n        } //Add abspath if necessary. If path starts with a slash or has a colon,\n        //then already is an abolute path.\n\n\n        if (path.indexOf('/') !== 0 && path.indexOf(':') === -1) {\n          path = absFilePath + (absFilePath.charAt(absFilePath.length - 1) === '/' ? '' : '/') + path;\n          path = file.normalize(path);\n        }\n\n        return path.replace(lang.backSlashRegExp, '/');\n      };\n\n      build.makeAbsObject = function (props, obj, absFilePath) {\n        var i, prop;\n\n        if (obj) {\n          for (i = 0; i < props.length; i++) {\n            prop = props[i];\n\n            if (hasProp(obj, prop) && typeof obj[prop] === 'string') {\n              obj[prop] = build.makeAbsPath(obj[prop], absFilePath);\n            }\n          }\n        }\n      };\n      /**\n       * For any path in a possible config, make it absolute relative\n       * to the absFilePath passed in.\n       */\n\n\n      build.makeAbsConfig = function (config, absFilePath) {\n        var props, prop, i;\n        props = [\"appDir\", \"dir\", \"baseUrl\"];\n\n        for (i = 0; i < props.length; i++) {\n          prop = props[i];\n\n          if (getOwn(config, prop)) {\n            //Add abspath if necessary, make sure these paths end in\n            //slashes\n            if (prop === \"baseUrl\") {\n              config.originalBaseUrl = config.baseUrl;\n\n              if (config.appDir) {\n                //If baseUrl with an appDir, the baseUrl is relative to\n                //the appDir, *not* the absFilePath. appDir and dir are\n                //made absolute before baseUrl, so this will work.\n                config.baseUrl = build.makeAbsPath(config.originalBaseUrl, config.appDir);\n              } else {\n                //The dir output baseUrl is same as regular baseUrl, both\n                //relative to the absFilePath.\n                config.baseUrl = build.makeAbsPath(config[prop], absFilePath);\n              }\n            } else {\n              config[prop] = build.makeAbsPath(config[prop], absFilePath);\n            }\n\n            config[prop] = endsWithSlash(config[prop]);\n          }\n        }\n\n        build.makeAbsObject(config.out === \"stdout\" ? [\"cssIn\"] : [\"out\", \"cssIn\"], config, absFilePath);\n        build.makeAbsObject([\"startFile\", \"endFile\"], config.wrap, absFilePath);\n        build.makeAbsObject([\"externExportsPath\"], config.closure, absFilePath);\n      };\n      /**\n       * Creates a relative path to targetPath from refPath.\n       * Only deals with file paths, not folders. If folders,\n       * make sure paths end in a trailing '/'.\n       */\n\n\n      build.makeRelativeFilePath = function (refPath, targetPath) {\n        var i,\n            dotLength,\n            finalParts,\n            length,\n            targetParts,\n            targetName,\n            refParts = refPath.split('/'),\n            hasEndSlash = endsWithSlashRegExp.test(targetPath),\n            dotParts = [];\n        targetPath = file.normalize(targetPath);\n\n        if (hasEndSlash && !endsWithSlashRegExp.test(targetPath)) {\n          targetPath += '/';\n        }\n\n        targetParts = targetPath.split('/'); //Pull off file name\n\n        targetName = targetParts.pop(); //Also pop off the ref file name to make the matches against\n        //targetParts equivalent.\n\n        refParts.pop();\n        length = refParts.length;\n\n        for (i = 0; i < length; i += 1) {\n          if (refParts[i] !== targetParts[i]) {\n            break;\n          }\n        } //Now i is the index in which they diverge.\n\n\n        finalParts = targetParts.slice(i);\n        dotLength = length - i;\n\n        for (i = 0; i > -1 && i < dotLength; i += 1) {\n          dotParts.push('..');\n        }\n\n        return dotParts.join('/') + (dotParts.length ? '/' : '') + finalParts.join('/') + (finalParts.length ? '/' : '') + targetName;\n      };\n\n      build.nestedMix = {\n        paths: true,\n        has: true,\n        hasOnSave: true,\n        pragmas: true,\n        pragmasOnSave: true\n      };\n      /**\n       * Mixes additional source config into target config, and merges some\n       * nested config, like paths, correctly.\n       */\n\n      function mixConfig(target, source, skipArrays) {\n        var prop, value, isArray, targetValue;\n\n        for (prop in source) {\n          if (hasProp(source, prop)) {\n            //If the value of the property is a plain object, then\n            //allow a one-level-deep mixing of it.\n            value = source[prop];\n            isArray = lang.isArray(value);\n\n            if (typeof value === 'object' && value && !isArray && !lang.isFunction(value) && !lang.isRegExp(value)) {\n              // TODO: need to generalize this work, maybe also reuse\n              // the work done in requirejs configure, perhaps move to\n              // just a deep copy/merge overall. However, given the\n              // amount of observable change, wait for a dot release.\n              // This change is in relation to #645\n              if (prop === 'map') {\n                if (!target.map) {\n                  target.map = {};\n                }\n\n                lang.deepMix(target.map, source.map);\n              } else {\n                target[prop] = lang.mixin({}, target[prop], value, true);\n              }\n            } else if (isArray) {\n              if (!skipArrays) {\n                // Some config, like packages, are arrays. For those,\n                // just merge the results.\n                targetValue = target[prop];\n\n                if (lang.isArray(targetValue)) {\n                  target[prop] = targetValue.concat(value);\n                } else {\n                  target[prop] = value;\n                }\n              }\n            } else {\n              target[prop] = value;\n            }\n          }\n        } //Set up log level since it can affect if errors are thrown\n        //or caught and passed to errbacks while doing config setup.\n\n\n        if (lang.hasProp(target, 'logLevel')) {\n          logger.logLevel(target.logLevel);\n        }\n      }\n      /**\n       * Converts a wrap.startFile or endFile to be start/end as a string.\n       * the startFile/endFile values can be arrays.\n       */\n\n\n      function flattenWrapFile(config, keyName, absFilePath) {\n        var wrap = config.wrap,\n            keyFileName = keyName + 'File',\n            keyMapName = '__' + keyName + 'Map';\n\n        if (typeof wrap[keyName] !== 'string' && wrap[keyFileName]) {\n          wrap[keyName] = '';\n\n          if (typeof wrap[keyFileName] === 'string') {\n            wrap[keyFileName] = [wrap[keyFileName]];\n          }\n\n          wrap[keyMapName] = [];\n          wrap[keyFileName].forEach(function (fileName) {\n            var absPath = build.makeAbsPath(fileName, absFilePath),\n                fileText = endsWithNewLine(file.readFile(absPath));\n            wrap[keyMapName].push(function (fileContents, cfg, sourceMapGenerator) {\n              return appendToFileContents(fileContents, fileText, absPath, cfg, null, sourceMapGenerator);\n            });\n            wrap[keyName] += fileText;\n          });\n        } else if (wrap[keyName] === null || wrap[keyName] === undefined) {\n          //Allow missing one, just set to empty string.\n          wrap[keyName] = '';\n        } else if (typeof wrap[keyName] === 'string') {\n          wrap[keyName] = endsWithNewLine(wrap[keyName]);\n          wrap[keyMapName] = [function (fileContents, cfg, sourceMapGenerator) {\n            var absPath = build.makeAbsPath(\"config-wrap-\" + keyName + \"-default.js\", absFilePath);\n            return appendToFileContents(fileContents, wrap[keyName], absPath, cfg, null, sourceMapGenerator);\n          }];\n        } else {\n          throw new Error('wrap.' + keyName + ' or wrap.' + keyFileName + ' malformed');\n        }\n      }\n\n      function normalizeWrapConfig(config, absFilePath) {\n        //Get any wrap text.\n        try {\n          if (config.wrap) {\n            if (config.wrap === true) {\n              //Use default values.\n              config.wrap = {\n                start: '(function () {\\n',\n                end: '}());',\n                __startMap: [function (fileContents, cfg, sourceMapGenerator) {\n                  return appendToFileContents(fileContents, \"(function () {\\n\", build.makeAbsPath(\"config-wrap-start-default.js\", absFilePath), cfg, null, sourceMapGenerator);\n                }],\n                __endMap: [function (fileContents, cfg, sourceMapGenerator) {\n                  return appendToFileContents(fileContents, \"}());\", build.makeAbsPath(\"config-wrap-end-default.js\", absFilePath), cfg, null, sourceMapGenerator);\n                }]\n              };\n            } else {\n              flattenWrapFile(config, 'start', absFilePath);\n              flattenWrapFile(config, 'end', absFilePath);\n            }\n          }\n        } catch (wrapError) {\n          throw new Error('Malformed wrap config: ' + wrapError.toString());\n        }\n      }\n      /**\n       * Creates a config object for an optimization build.\n       * It will also read the build profile if it is available, to create\n       * the configuration.\n       *\n       * @param {Object} cfg config options that take priority\n       * over defaults and ones in the build file. These options could\n       * be from a command line, for instance.\n       *\n       * @param {Object} the created config object.\n       */\n\n\n      build.createConfig = function (cfg) {\n        /*jslint evil: true */\n        var buildFileContents,\n            buildFileConfig,\n            mainConfig,\n            mainConfigFile,\n            mainConfigPath,\n            buildFile,\n            absFilePath,\n            config = {},\n            buildBaseConfig = makeBuildBaseConfig(); //Make sure all paths are relative to current directory.\n\n        absFilePath = file.absPath('.');\n        build.makeAbsConfig(cfg, absFilePath);\n        build.makeAbsConfig(buildBaseConfig, absFilePath);\n        lang.mixin(config, buildBaseConfig);\n        lang.mixin(config, cfg, true); //Set up log level early since it can affect if errors are thrown\n        //or caught and passed to errbacks, even while constructing config.\n\n        if (lang.hasProp(config, 'logLevel')) {\n          logger.logLevel(config.logLevel);\n        }\n\n        if (config.buildFile) {\n          //A build file exists, load it to get more config.\n          buildFile = file.absPath(config.buildFile); //Find the build file, and make sure it exists, if this is a build\n          //that has a build profile, and not just command line args with an in=path\n\n          if (!file.exists(buildFile)) {\n            throw new Error(\"ERROR: build file does not exist: \" + buildFile);\n          }\n\n          absFilePath = config.baseUrl = file.absPath(file.parent(buildFile)); //Load build file options.\n\n          buildFileContents = file.readFile(buildFile);\n\n          try {\n            //Be a bit lenient in the file ending in a ; or ending with\n            //a //# sourceMappingUrl comment, mostly for compiled languages\n            //that create a config, like typescript.\n            buildFileContents = buildFileContents.replace(/\\/\\/\\#[^\\n\\r]+[\\n\\r]*$/, '').trim().replace(/;$/, '');\n            buildFileConfig = eval(\"(\" + buildFileContents + \")\");\n            build.makeAbsConfig(buildFileConfig, absFilePath); //Mix in the config now so that items in mainConfigFile can\n            //be resolved relative to them if necessary, like if appDir\n            //is set here, but the baseUrl is in mainConfigFile. Will\n            //re-mix in the same build config later after mainConfigFile\n            //is processed, since build config should take priority.\n\n            mixConfig(config, buildFileConfig);\n          } catch (e) {\n            throw new Error(\"Build file \" + buildFile + \" is malformed: \" + e);\n          }\n        }\n\n        mainConfigFile = config.mainConfigFile || buildFileConfig && buildFileConfig.mainConfigFile;\n\n        if (mainConfigFile) {\n          if (typeof mainConfigFile === 'string') {\n            mainConfigFile = [mainConfigFile];\n          }\n\n          mainConfigFile.forEach(function (configFile) {\n            configFile = build.makeAbsPath(configFile, absFilePath);\n\n            if (!file.exists(configFile)) {\n              throw new Error(configFile + ' does not exist.');\n            }\n\n            try {\n              mainConfig = parse.findConfig(file.readFile(configFile)).config;\n            } catch (configError) {\n              throw new Error('The config in mainConfigFile ' + configFile + ' cannot be used because it cannot be evaluated' + ' correctly while running in the optimizer. Try only' + ' using a config that is also valid JSON, or do not use' + ' mainConfigFile and instead copy the config values needed' + ' into a build file or command line arguments given to the optimizer.\\n' + 'Source error from parsing: ' + configFile + ': ' + configError);\n            }\n\n            if (mainConfig) {\n              mainConfigPath = configFile.substring(0, configFile.lastIndexOf('/')); //Add in some existing config, like appDir, since they can be\n              //used inside the configFile -- paths and baseUrl are\n              //relative to them.\n\n              if (config.appDir && !mainConfig.appDir) {\n                mainConfig.appDir = config.appDir;\n              } //If no baseUrl, then use the directory holding the main config.\n\n\n              if (!mainConfig.baseUrl) {\n                mainConfig.baseUrl = mainConfigPath;\n              }\n\n              build.makeAbsConfig(mainConfig, mainConfigPath);\n              mixConfig(config, mainConfig);\n            }\n          });\n        } //Mix in build file config, but only after mainConfig has been mixed in.\n        //Since this is a re-application, skip array merging.\n\n\n        if (buildFileConfig) {\n          mixConfig(config, buildFileConfig, true);\n        } //Re-apply the override config values. Command line\n        //args should take precedence over build file values.\n        //Since this is a re-application, skip array merging.\n\n\n        mixConfig(config, cfg, true); //Fix paths to full paths so that they can be adjusted consistently\n        //lately to be in the output area.\n\n        lang.eachProp(config.paths, function (value, prop) {\n          if (lang.isArray(value)) {\n            throw new Error('paths fallback not supported in optimizer. ' + 'Please provide a build config path override ' + 'for ' + prop);\n          }\n\n          config.paths[prop] = build.makeAbsPath(value, config.baseUrl);\n        }); //Set final output dir\n\n        if (hasProp(config, \"baseUrl\")) {\n          if (config.appDir) {\n            if (!config.originalBaseUrl) {\n              throw new Error('Please set a baseUrl in the build config');\n            }\n\n            config.dirBaseUrl = build.makeAbsPath(config.originalBaseUrl, config.dir);\n          } else {\n            config.dirBaseUrl = config.dir || config.baseUrl;\n          } //Make sure dirBaseUrl ends in a slash, since it is\n          //concatenated with other strings.\n\n\n          config.dirBaseUrl = endsWithSlash(config.dirBaseUrl);\n        }\n\n        if (config.bundlesConfigOutFile) {\n          if (!config.dir) {\n            throw new Error('bundlesConfigOutFile can only be used with optimizations ' + 'that use \"dir\".');\n          }\n\n          config.bundlesConfigOutFile = build.makeAbsPath(config.bundlesConfigOutFile, config.dir);\n        } //If out=stdout, write output to STDOUT instead of a file.\n\n\n        if (config.out && config.out === 'stdout') {\n          config.out = function (content) {\n            var e = env.get();\n\n            if (e === 'rhino') {\n              var out = new java.io.PrintStream(java.lang.System.out, true, 'UTF-8');\n              out.println(content);\n            } else if (e === 'node') {\n              process.stdout.write(content, 'utf8');\n            } else {\n              console.log(content);\n            }\n          };\n        } //Check for errors in config\n\n\n        if (config.main) {\n          throw new Error('\"main\" passed as an option, but the ' + 'supported option is called \"name\".');\n        }\n\n        if (config.out && !config.name && !config.modules && !config.include && !config.cssIn) {\n          throw new Error('Missing either a \"name\", \"include\" or \"modules\" ' + 'option');\n        }\n\n        if (config.cssIn) {\n          if (config.dir || config.appDir) {\n            throw new Error('cssIn is only for the output of single file ' + 'CSS optimizations and is not compatible with \"dir\" or \"appDir\" configuration.');\n          }\n\n          if (!config.out) {\n            throw new Error('\"out\" option missing.');\n          }\n        }\n\n        if (!config.cssIn && !config.baseUrl) {\n          //Just use the current directory as the baseUrl\n          config.baseUrl = './';\n        }\n\n        if (!config.out && !config.dir) {\n          throw new Error('Missing either an \"out\" or \"dir\" config value. ' + 'If using \"appDir\" for a full project optimization, ' + 'use \"dir\". If you want to optimize to one file, ' + 'use \"out\".');\n        }\n\n        if (config.appDir && config.out) {\n          throw new Error('\"appDir\" is not compatible with \"out\". Use \"dir\" ' + 'instead. appDir is used to copy whole projects, ' + 'where \"out\" with \"baseUrl\" is used to just ' + 'optimize to one file.');\n        }\n\n        if (config.out && config.dir) {\n          throw new Error('The \"out\" and \"dir\" options are incompatible.' + ' Use \"out\" if you are targeting a single file' + ' for optimization, and \"dir\" if you want the appDir' + ' or baseUrl directories optimized.');\n        }\n\n        if (config.dir) {\n          // Make sure the output dir is not set to a parent of the\n          // source dir or the same dir, as it will result in source\n          // code deletion.\n          if (!config.allowSourceOverwrites && (config.dir === config.baseUrl || config.dir === config.appDir || config.baseUrl && build.makeRelativeFilePath(config.dir, config.baseUrl).indexOf('..') !== 0 || config.appDir && build.makeRelativeFilePath(config.dir, config.appDir).indexOf('..') !== 0)) {\n            throw new Error('\"dir\" is set to a parent or same directory as' + ' \"appDir\" or \"baseUrl\". This can result in' + ' the deletion of source code. Stopping. If' + ' you want to allow possible overwriting of' + ' source code, set \"allowSourceOverwrites\"' + ' to true in the build config, but do so at' + ' your own risk. In that case, you may want' + ' to also set \"keepBuildDir\" to true.');\n          }\n        }\n\n        if (config.insertRequire && !lang.isArray(config.insertRequire)) {\n          throw new Error('insertRequire should be a list of module IDs' + ' to insert in to a require([]) call.');\n        } //Support older configs with uglify2 settings, but now that uglify1 has\n        //been removed, just translate it to 'uglify' settings.\n\n\n        if (config.optimize === 'uglify2') {\n          config.optimize = 'uglify';\n        }\n\n        if (config.uglify2) {\n          config.uglify = config.uglify2;\n          delete config.uglify2;\n        }\n\n        if (config.generateSourceMaps) {\n          if (config.preserveLicenseComments && !(config.optimize === 'none' || config.optimize === 'uglify')) {\n            throw new Error('Cannot use preserveLicenseComments and ' + 'generateSourceMaps together, unless optimize is set ' + 'to \\'uglify\\'. Either explicitly set preserveLicenseComments ' + 'to false (default is true) or turn off generateSourceMaps. ' + 'If you want source maps with license comments, see: ' + 'http://requirejs.org/docs/errors.html#sourcemapcomments');\n          } else if (config.optimize !== 'none' && config.optimize !== 'closure' && config.optimize !== 'uglify') {\n            //Allow optimize: none to pass, since it is useful when toggling\n            //minification on and off to debug something, and it implicitly\n            //works, since it does not need a source map.\n            throw new Error('optimize: \"' + config.optimize + '\" does not support generateSourceMaps.');\n          }\n        }\n\n        if ((config.name || config.include) && !config.modules) {\n          //Just need to build one file, but may be part of a whole appDir/\n          //baseUrl copy, but specified on the command line, so cannot do\n          //the modules array setup. So create a modules section in that\n          //case.\n          config.modules = [{\n            name: config.name,\n            out: config.out,\n            create: config.create,\n            include: config.include,\n            exclude: config.exclude,\n            excludeShallow: config.excludeShallow,\n            insertRequire: config.insertRequire,\n            stubModules: config.stubModules\n          }];\n          delete config.stubModules;\n        } else if (config.modules && config.out) {\n          throw new Error('If the \"modules\" option is used, then there ' + 'should be a \"dir\" option set and \"out\" should ' + 'not be used since \"out\" is only for single file ' + 'optimization output.');\n        } else if (config.modules && config.name) {\n          throw new Error('\"name\" and \"modules\" options are incompatible. ' + 'Either use \"name\" if doing a single file ' + 'optimization, or \"modules\" if you want to target ' + 'more than one file for optimization.');\n        }\n\n        if (config.out && !config.cssIn) {\n          //Just one file to optimize.\n          //Does not have a build file, so set up some defaults.\n          //Optimizing CSS should not be allowed, unless explicitly\n          //asked for on command line. In that case the only task is\n          //to optimize a CSS file.\n          if (!cfg.optimizeCss) {\n            config.optimizeCss = \"none\";\n          }\n        } //Normalize cssPrefix\n\n\n        if (config.cssPrefix) {\n          //Make sure cssPrefix ends in a slash\n          config.cssPrefix = endsWithSlash(config.cssPrefix);\n        } else {\n          config.cssPrefix = '';\n        } //Cycle through modules and normalize\n\n\n        if (config.modules && config.modules.length) {\n          config.modules.forEach(function (mod) {\n            if (lang.isArray(mod) || typeof mod === 'string' || !mod) {\n              throw new Error('modules config item is malformed: it should' + ' be an object with a \\'name\\' property.');\n            } //Combine any local stubModules with global values.\n\n\n            if (config.stubModules) {\n              mod.stubModules = config.stubModules.concat(mod.stubModules || []);\n            } //Create a hash lookup for the stubModules config to make lookup\n            //cheaper later.\n\n\n            if (mod.stubModules) {\n              mod.stubModules._byName = {};\n              mod.stubModules.forEach(function (id) {\n                mod.stubModules._byName[id] = true;\n              });\n            } // Legacy command support, which allowed a single string ID\n            // for include.\n\n\n            if (typeof mod.include === 'string') {\n              mod.include = [mod.include];\n            } //Allow wrap config in overrides, but normalize it.\n\n\n            if (mod.override) {\n              normalizeWrapConfig(mod.override, absFilePath);\n            }\n          });\n        }\n\n        normalizeWrapConfig(config, absFilePath); //Do final input verification\n\n        if (config.context) {\n          throw new Error('The build argument \"context\" is not supported' + ' in a build. It should only be used in web' + ' pages.');\n        } //Set up normalizeDirDefines. If not explicitly set, if optimize \"none\",\n        //set to \"skip\" otherwise set to \"all\".\n\n\n        if (!hasProp(config, 'normalizeDirDefines')) {\n          if (config.optimize === 'none' || config.skipDirOptimize) {\n            config.normalizeDirDefines = 'skip';\n          } else {\n            config.normalizeDirDefines = 'all';\n          }\n        } //Set file.fileExclusionRegExp if desired\n\n\n        if (hasProp(config, 'fileExclusionRegExp')) {\n          if (typeof config.fileExclusionRegExp === \"string\") {\n            file.exclusionRegExp = new RegExp(config.fileExclusionRegExp);\n          } else {\n            file.exclusionRegExp = config.fileExclusionRegExp;\n          }\n        } else if (hasProp(config, 'dirExclusionRegExp')) {\n          //Set file.dirExclusionRegExp if desired, this is the old\n          //name for fileExclusionRegExp before 1.0.2. Support for backwards\n          //compatibility\n          file.exclusionRegExp = config.dirExclusionRegExp;\n        } //Track the deps, but in a different key, so that they are not loaded\n        //as part of config seeding before all config is in play (#648). Was\n        //going to merge this in with \"include\", but include is added after\n        //the \"name\" target. To preserve what r.js has done previously, make\n        //sure \"deps\" comes before the \"name\".\n\n\n        if (config.deps) {\n          config._depsInclude = config.deps;\n        } //Remove things that may cause problems in the build.\n        //deps already merged above\n\n\n        delete config.deps;\n        delete config.jQuery;\n        delete config.enforceDefine;\n        delete config.urlArgs;\n        return config;\n      };\n      /**\n       * finds the module being built/optimized with the given moduleName,\n       * or returns null.\n       * @param {String} moduleName\n       * @param {Array} modules\n       * @returns {Object} the module object from the build profile, or null.\n       */\n\n\n      build.findBuildModule = function (moduleName, modules) {\n        var i, module;\n\n        for (i = 0; i < modules.length; i++) {\n          module = modules[i];\n\n          if (module.name === moduleName) {\n            return module;\n          }\n        }\n\n        return null;\n      };\n      /**\n       * Removes a module name and path from a layer, if it is supposed to be\n       * excluded from the layer.\n       * @param {String} moduleName the name of the module\n       * @param {String} path the file path for the module\n       * @param {Object} layer the layer to remove the module/path from\n       */\n\n\n      build.removeModulePath = function (module, path, layer) {\n        var index = layer.buildFilePaths.indexOf(path);\n\n        if (index !== -1) {\n          layer.buildFilePaths.splice(index, 1);\n        }\n      };\n      /**\n       * Uses the module build config object to trace the dependencies for the\n       * given module.\n       *\n       * @param {Object} module the module object from the build config info.\n       * @param {Object} config the build config object.\n       * @param {Object} [baseLoaderConfig] the base loader config to use for env resets.\n       *\n       * @returns {Object} layer information about what paths and modules should\n       * be in the flattened module.\n       */\n\n\n      build.traceDependencies = function (module, config, baseLoaderConfig) {\n        var include,\n            override,\n            layer,\n            context,\n            oldContext,\n            rawTextByIds,\n            syncChecks = {\n          rhino: true,\n          node: true,\n          xpconnect: true\n        },\n            deferred = prim(); //Reset some state set up in requirePatch.js, and clean up require's\n        //current context.\n\n        oldContext = require._buildReset(); //Grab the reset layer and context after the reset, but keep the\n        //old config to reuse in the new context.\n\n        layer = require._layer;\n        context = layer.context; //Put back basic config, use a fresh object for it.\n\n        if (baseLoaderConfig) {\n          require(copyConfig(baseLoaderConfig));\n        }\n\n        logger.trace(\"\\nTracing dependencies for: \" + (module.name || (typeof module.out === 'function' ? 'FUNCTION' : module.out)));\n        include = config._depsInclude || [];\n        include = include.concat(module.name && !module.create ? [module.name] : []);\n\n        if (module.include) {\n          include = include.concat(module.include);\n        } //If there are overrides to basic config, set that up now.;\n\n\n        if (module.override) {\n          if (baseLoaderConfig) {\n            override = build.createOverrideConfig(baseLoaderConfig, module.override);\n          } else {\n            override = copyConfig(module.override);\n          }\n\n          require(override);\n        } //Now, populate the rawText cache with any values explicitly passed in\n        //via config.\n\n\n        rawTextByIds = require.s.contexts._.config.rawText;\n\n        if (rawTextByIds) {\n          lang.eachProp(rawTextByIds, function (contents, id) {\n            var url = require.toUrl(id) + '.js';\n            require._cachedRawText[url] = contents;\n          });\n        } //Configure the callbacks to be called.\n\n\n        deferred.reject.__requireJsBuild = true; //Use a wrapping function so can check for errors.\n\n        function includeFinished(value) {\n          //If a sync build environment, check for errors here, instead of\n          //in the then callback below, since some errors, like two IDs pointed\n          //to same URL but only one anon ID will leave the loader in an\n          //unresolved state since a setTimeout cannot be used to check for\n          //timeout.\n          var hasError = false;\n\n          if (syncChecks[env.get()]) {\n            try {\n              build.checkForErrors(context, layer);\n            } catch (e) {\n              hasError = true;\n              deferred.reject(e);\n            }\n          }\n\n          if (!hasError) {\n            deferred.resolve(value);\n          }\n        }\n\n        includeFinished.__requireJsBuild = true; //Figure out module layer dependencies by calling require to do the work.\n\n        require(include, includeFinished, deferred.reject); // If a sync env, then with the \"two IDs to same anon module path\"\n        // issue, the require never completes, need to check for errors\n        // here.\n\n\n        if (syncChecks[env.get()]) {\n          build.checkForErrors(context, layer);\n        }\n\n        return deferred.promise.then(function () {\n          //Reset config\n          if (module.override && baseLoaderConfig) {\n            require(copyConfig(baseLoaderConfig));\n          }\n\n          build.checkForErrors(context, layer);\n          return layer;\n        });\n      };\n\n      build.checkForErrors = function (context, layer) {\n        //Check to see if it all loaded. If not, then throw, and give\n        //a message on what is left.\n        var id,\n            prop,\n            mod,\n            idParts,\n            pluginId,\n            pluginResources,\n            errMessage = '',\n            failedPluginMap = {},\n            failedPluginIds = [],\n            errIds = [],\n            errUrlMap = {},\n            errUrlConflicts = {},\n            hasErrUrl = false,\n            hasUndefined = false,\n            defined = context.defined,\n            registry = context.registry;\n\n        function populateErrUrlMap(id, errUrl, skipNew) {\n          // Loader plugins do not have an errUrl, so skip them.\n          if (!errUrl) {\n            return;\n          }\n\n          if (!skipNew) {\n            errIds.push(id);\n          }\n\n          if (errUrlMap[errUrl]) {\n            hasErrUrl = true; //This error module has the same URL as another\n            //error module, could be misconfiguration.\n\n            if (!errUrlConflicts[errUrl]) {\n              errUrlConflicts[errUrl] = []; //Store the original module that had the same URL.\n\n              errUrlConflicts[errUrl].push(errUrlMap[errUrl]);\n            }\n\n            errUrlConflicts[errUrl].push(id);\n          } else if (!skipNew) {\n            errUrlMap[errUrl] = id;\n          }\n        }\n\n        for (id in registry) {\n          if (hasProp(registry, id) && id.indexOf('_@r') !== 0) {\n            hasUndefined = true;\n            mod = getOwn(registry, id);\n            idParts = id.split('!');\n            pluginId = idParts[0];\n\n            if (id.indexOf('_unnormalized') === -1 && mod && mod.enabled) {\n              populateErrUrlMap(id, mod.map.url);\n            } //Look for plugins that did not call load()\n            //But skip plugin IDs that were already inlined and called\n            //define() with a name.\n\n\n            if (!hasProp(layer.modulesWithNames, id) && idParts.length > 1) {\n              if (falseProp(failedPluginMap, pluginId)) {\n                failedPluginIds.push(pluginId);\n              }\n\n              pluginResources = failedPluginMap[pluginId];\n\n              if (!pluginResources) {\n                pluginResources = failedPluginMap[pluginId] = [];\n              }\n\n              pluginResources.push(id + (mod.error ? ': ' + mod.error : ''));\n            }\n          }\n        } // If have some modules that are not defined/stuck in the registry,\n        // then check defined modules for URL overlap.\n\n\n        if (hasUndefined) {\n          for (id in defined) {\n            if (hasProp(defined, id) && id.indexOf('!') === -1) {\n              populateErrUrlMap(id, require.toUrl(id) + '.js', true);\n            }\n          }\n        }\n\n        if (errIds.length || failedPluginIds.length) {\n          if (failedPluginIds.length) {\n            errMessage += 'Loader plugin' + (failedPluginIds.length === 1 ? '' : 's') + ' did not call ' + 'the load callback in the build:\\n' + failedPluginIds.map(function (pluginId) {\n              var pluginResources = failedPluginMap[pluginId];\n              return pluginId + ':\\n  ' + pluginResources.join('\\n  ');\n            }).join('\\n') + '\\n';\n          }\n\n          errMessage += 'Module loading did not complete for: ' + errIds.join(', ');\n\n          if (hasErrUrl) {\n            errMessage += '\\nThe following modules share the same URL. This ' + 'could be a misconfiguration if that URL only has ' + 'one anonymous module in it:';\n\n            for (prop in errUrlConflicts) {\n              if (hasProp(errUrlConflicts, prop)) {\n                errMessage += '\\n' + prop + ': ' + errUrlConflicts[prop].join(', ');\n              }\n            }\n          }\n\n          throw new Error(errMessage);\n        }\n      };\n\n      build.createOverrideConfig = function (config, override) {\n        var cfg = copyConfig(config),\n            oride = copyConfig(override);\n        lang.eachProp(oride, function (value, prop) {\n          if (hasProp(build.objProps, prop)) {\n            //An object property, merge keys. Start a new object\n            //so that source object in config does not get modified.\n            cfg[prop] = {};\n            lang.mixin(cfg[prop], config[prop], true);\n            lang.mixin(cfg[prop], override[prop], true);\n          } else {\n            cfg[prop] = override[prop];\n          }\n        });\n        return cfg;\n      };\n      /**\n       * Uses the module build config object to create an flattened version\n       * of the module, with deep dependencies included.\n       *\n       * @param {Object} module the module object from the build config info.\n       *\n       * @param {Object} layer the layer object returned from build.traceDependencies.\n       *\n       * @param {Object} the build config object.\n       *\n       * @returns {Object} with two properties: \"text\", the text of the flattened\n       * module, and \"buildText\", a string of text representing which files were\n       * included in the flattened module text.\n       */\n\n\n      build.flattenModule = function (module, layer, config) {\n        var fileContents,\n            sourceMapGenerator,\n            sourceMapBase,\n            buildFileContents = '';\n        return prim().start(function () {\n          var reqIndex,\n              currContents,\n              fileForSourceMap,\n              moduleName,\n              shim,\n              packageName,\n              parts,\n              builder,\n              writeApi,\n              namespace,\n              namespaceWithDot,\n              stubModulesByName,\n              context = layer.context,\n              onLayerEnds = [],\n              onLayerEndAdded = {},\n              pkgsMainMap = {}; //Use override settings, particularly for pragmas\n          //Do this before the var readings since it reads config values.\n\n          if (module.override) {\n            config = build.createOverrideConfig(config, module.override);\n          }\n\n          namespace = config.namespace || '';\n          namespaceWithDot = namespace ? namespace + '.' : '';\n          stubModulesByName = module.stubModules && module.stubModules._byName || {}; //Start build output for the module.\n\n          module.onCompleteData = {\n            name: module.name,\n            path: config.dir ? module._buildPath.replace(config.dir, \"\") : module._buildPath,\n            included: []\n          };\n          buildFileContents += \"\\n\" + module.onCompleteData.path + \"\\n----------------\\n\"; //If there was an existing file with require in it, hoist to the top.\n\n          if (layer.existingRequireUrl) {\n            reqIndex = layer.buildFilePaths.indexOf(layer.existingRequireUrl);\n\n            if (reqIndex !== -1) {\n              layer.buildFilePaths.splice(reqIndex, 1);\n              layer.buildFilePaths.unshift(layer.existingRequireUrl);\n            }\n          }\n\n          if (config.generateSourceMaps) {\n            sourceMapBase = config.dir || config.baseUrl;\n\n            if (module._buildPath === 'FUNCTION') {\n              fileForSourceMap = (module.name || module.include[0] || 'FUNCTION') + '.build.js';\n            } else if (config.out) {\n              fileForSourceMap = module._buildPath.split('/').pop();\n            } else {\n              fileForSourceMap = module._buildPath.replace(sourceMapBase, '');\n            }\n\n            sourceMapGenerator = new SourceMapGenerator({\n              file: fileForSourceMap\n            });\n          } //Create a reverse lookup for packages main module IDs to their package\n          //names, useful for knowing when to write out define() package main ID\n          //adapters.\n\n\n          lang.eachProp(layer.context.config.pkgs, function (value, prop) {\n            pkgsMainMap[value] = prop;\n          }); //Write the built module to disk, and build up the build output.\n\n          fileContents = \"\";\n\n          if (config.wrap && config.wrap.__startMap) {\n            config.wrap.__startMap.forEach(function (wrapFunction) {\n              fileContents = wrapFunction(fileContents, config, sourceMapGenerator);\n            });\n          }\n\n          return prim.serial(layer.buildFilePaths.map(function (path) {\n            return function () {\n              var singleContents = '';\n              moduleName = layer.buildFileToModule[path]; //If the moduleName is a package main, then hold on to the\n              //packageName in case an adapter needs to be written.\n\n              packageName = getOwn(pkgsMainMap, moduleName);\n              return prim().start(function () {\n                //Figure out if the module is a result of a build plugin, and if so,\n                //then delegate to that plugin.\n                parts = context.makeModuleMap(moduleName);\n                builder = parts.prefix && getOwn(context.defined, parts.prefix);\n\n                if (builder) {\n                  if (builder.onLayerEnd && falseProp(onLayerEndAdded, parts.prefix)) {\n                    onLayerEnds.push(builder);\n                    onLayerEndAdded[parts.prefix] = true;\n                  }\n\n                  if (builder.write) {\n                    writeApi = function (input) {\n                      singleContents += \"\\n\" + addSemiColon(input, config);\n\n                      if (config.onBuildWrite) {\n                        singleContents = config.onBuildWrite(moduleName, path, singleContents);\n                      }\n                    };\n\n                    writeApi.asModule = function (moduleName, input) {\n                      singleContents += \"\\n\" + addSemiColon(build.toTransport(namespace, moduleName, path, input, layer, {\n                        useSourceUrl: layer.context.config.useSourceUrl\n                      }), config);\n\n                      if (config.onBuildWrite) {\n                        singleContents = config.onBuildWrite(moduleName, path, singleContents);\n                      }\n                    };\n\n                    builder.write(parts.prefix, parts.name, writeApi, {\n                      name: module.onCompleteData.name,\n                      path: module.onCompleteData.path\n                    });\n                  }\n\n                  return;\n                } else {\n                  return prim().start(function () {\n                    if (hasProp(stubModulesByName, moduleName)) {\n                      //Just want to insert a simple module definition instead\n                      //of the source module. Useful for plugins that inline\n                      //all their resources.\n                      if (hasProp(layer.context.plugins, moduleName)) {\n                        //Slightly different content for plugins, to indicate\n                        //that dynamic loading will not work.\n                        return 'define({load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});';\n                      } else {\n                        return 'define({});';\n                      }\n                    } else {\n                      return require._cacheReadAsync(path);\n                    }\n                  }).then(function (text) {\n                    var hasPackageName;\n                    currContents = text;\n\n                    if (config.cjsTranslate && (!config.shim || !lang.hasProp(config.shim, moduleName))) {\n                      currContents = commonJs.convert(path, currContents);\n                    }\n\n                    if (config.onBuildRead) {\n                      currContents = config.onBuildRead(moduleName, path, currContents);\n                    }\n\n                    if (packageName) {\n                      hasPackageName = packageName === parse.getNamedDefine(currContents);\n                    }\n\n                    if (namespace) {\n                      currContents = pragma.namespace(currContents, namespace);\n                    }\n\n                    currContents = build.toTransport(namespace, moduleName, path, currContents, layer, {\n                      useSourceUrl: config.useSourceUrl\n                    });\n\n                    if (packageName && !hasPackageName) {\n                      currContents = addSemiColon(currContents, config) + '\\n';\n                      currContents += namespaceWithDot + \"define('\" + packageName + \"', ['\" + moduleName + \"'], function (main) { return main; });\\n\";\n                    }\n\n                    if (config.onBuildWrite) {\n                      currContents = config.onBuildWrite(moduleName, path, currContents);\n                    } //Semicolon is for files that are not well formed when\n                    //concatenated with other content.\n\n\n                    singleContents += addSemiColon(currContents, config);\n                  });\n                }\n              }).then(function () {\n                var shimDeps,\n                    shortPath = path.replace(config.dir, \"\");\n                module.onCompleteData.included.push(shortPath);\n                buildFileContents += shortPath + \"\\n\"; //Some files may not have declared a require module, and if so,\n                //put in a placeholder call so the require does not try to load them\n                //after the module is processed.\n                //If we have a name, but no defined module, then add in the placeholder.\n\n                if (moduleName && falseProp(layer.modulesWithNames, moduleName) && !config.skipModuleInsertion) {\n                  shim = config.shim && (getOwn(config.shim, moduleName) || packageName && getOwn(config.shim, packageName));\n\n                  if (shim) {\n                    shimDeps = lang.isArray(shim) ? shim : shim.deps;\n\n                    if (config.wrapShim) {\n                      singleContents = '(function(root) {\\n' + namespaceWithDot + 'define(\"' + moduleName + '\", ' + (shimDeps && shimDeps.length ? build.makeJsArrayString(shimDeps) + ', ' : '[], ') + 'function() {\\n' + '  return (function() {\\n' + singleContents + // Start with a \\n in case last line is a comment\n                      // in the singleContents, like a sourceURL comment.\n                      '\\n' + (shim.exportsFn ? shim.exportsFn() : '') + '\\n' + '  }).apply(root, arguments);\\n' + '});\\n' + '}(this));\\n';\n                    } else {\n                      singleContents += '\\n' + namespaceWithDot + 'define(\"' + moduleName + '\", ' + (shimDeps && shimDeps.length ? build.makeJsArrayString(shimDeps) + ', ' : '') + (shim.exportsFn ? shim.exportsFn() : 'function(){}') + ');\\n';\n                    }\n                  } else {\n                    singleContents += '\\n' + namespaceWithDot + 'define(\"' + moduleName + '\", function(){});\\n';\n                  }\n                } //Add line break at end of file, instead of at beginning,\n                //so source map line numbers stay correct, but still allow\n                //for some space separation between files in case ASI issues\n                //for concatenation would cause an error otherwise.\n\n\n                singleContents += '\\n'; //Add to the source map and to the final contents\n\n                fileContents = appendToFileContents(fileContents, singleContents, path, config, module, sourceMapGenerator);\n              });\n            };\n          })).then(function () {\n            if (onLayerEnds.length) {\n              onLayerEnds.forEach(function (builder, index) {\n                var path;\n\n                if (typeof module.out === 'string') {\n                  path = module.out;\n                } else if (typeof module._buildPath === 'string') {\n                  path = module._buildPath;\n                }\n\n                builder.onLayerEnd(function (input) {\n                  fileContents = appendToFileContents(fileContents, \"\\n\" + addSemiColon(input, config), 'onLayerEnd' + index + '.js', config, module, sourceMapGenerator);\n                }, {\n                  name: module.name,\n                  path: path\n                });\n              });\n            }\n\n            if (module.create) {\n              //The ID is for a created layer. Write out\n              //a module definition for it in case the\n              //built file is used with enforceDefine\n              //(#432)\n              fileContents = appendToFileContents(fileContents, '\\n' + namespaceWithDot + 'define(\"' + module.name + '\", function(){});\\n', 'module-create.js', config, module, sourceMapGenerator);\n            } //Add a require at the end to kick start module execution, if that\n            //was desired. Usually this is only specified when using small shim\n            //loaders like almond.\n\n\n            if (module.insertRequire) {\n              fileContents = appendToFileContents(fileContents, '\\n' + namespaceWithDot + 'require([\"' + module.insertRequire.join('\", \"') + '\"]);\\n', 'module-insertRequire.js', config, module, sourceMapGenerator);\n            }\n          });\n        }).then(function () {\n          if (config.wrap && config.wrap.__endMap) {\n            config.wrap.__endMap.forEach(function (wrapFunction) {\n              fileContents = wrapFunction(fileContents, config, sourceMapGenerator);\n            });\n          }\n\n          return {\n            text: fileContents,\n            buildText: buildFileContents,\n            sourceMap: sourceMapGenerator ? JSON.stringify(sourceMapGenerator.toJSON(), null, '  ') : undefined\n          };\n        });\n      }; //Converts an JS array of strings to a string representation.\n      //Not using JSON.stringify() for Rhino's sake.\n\n\n      build.makeJsArrayString = function (ary) {\n        return '[\"' + ary.map(function (item) {\n          //Escape any double quotes, backslashes\n          return lang.jsEscape(item);\n        }).join('\",\"') + '\"]';\n      };\n\n      build.toTransport = function (namespace, moduleName, path, contents, layer, options) {\n        var baseUrl = layer && layer.context.config.baseUrl;\n\n        function onFound(info) {\n          //Only mark this module as having a name if not a named module,\n          //or if a named module and the name matches expectations.\n          if (layer && (info.needsId || info.foundId === moduleName)) {\n            layer.modulesWithNames[moduleName] = true;\n          }\n        } //Convert path to be a local one to the baseUrl, useful for\n        //useSourceUrl.\n\n\n        if (baseUrl) {\n          path = path.replace(baseUrl, '');\n        }\n\n        return transform.toTransport(namespace, moduleName, path, contents, onFound, options);\n      };\n\n      return build;\n    });\n  }\n  /**\n   * Sets the default baseUrl for requirejs to be directory of top level\n   * script.\n   */\n\n\n  function setBaseUrl(fileName) {\n    //Use the file name's directory as the baseUrl if available.\n    dir = fileName.replace(/\\\\/g, '/');\n\n    if (dir.indexOf('/') !== -1) {\n      dir = dir.split('/');\n      dir.pop();\n      dir = dir.join('/'); //Make sure dir is JS-escaped, since it will be part of a JS string.\n\n      exec(\"require({baseUrl: '\" + dir.replace(/[\\\\\"']/g, '\\\\$&') + \"'});\");\n    }\n  }\n\n  function createRjsApi() {\n    //Create a method that will run the optimzer given an object\n    //config.\n    requirejs.optimize = function (config, callback, errback) {\n      if (!loadedOptimizedLib) {\n        loadLib();\n        loadedOptimizedLib = true;\n      } //Create the function that will be called once build modules\n      //have been loaded.\n\n\n      var runBuild = function (build, logger, quit) {\n        //Make sure config has a log level, and if not,\n        //make it \"silent\" by default.\n        config.logLevel = config.hasOwnProperty('logLevel') ? config.logLevel : logger.SILENT; //Reset build internals first in case this is part\n        //of a long-running server process that could have\n        //exceptioned out in a bad state. It is only defined\n        //after the first call though.\n\n        if (requirejs._buildReset) {\n          requirejs._buildReset();\n\n          requirejs._cacheReset();\n        }\n\n        function done(result) {\n          //And clean up, in case something else triggers\n          //a build in another pathway.\n          if (requirejs._buildReset) {\n            requirejs._buildReset();\n\n            requirejs._cacheReset();\n          } // Ensure errors get propagated to the errback\n\n\n          if (result instanceof Error) {\n            throw result;\n          }\n\n          return result;\n        }\n\n        errback = errback || function (err) {\n          // Using console here since logger may have\n          // turned off error logging. Since quit is\n          // called want to be sure a message is printed.\n          console.log(err);\n          quit(1);\n        };\n\n        build(config).then(done, done).then(callback, errback);\n      };\n\n      requirejs({\n        context: 'build'\n      }, ['build', 'logger', 'env!env/quit'], runBuild);\n    };\n\n    requirejs.tools = {\n      useLib: function (contextName, callback) {\n        if (!callback) {\n          callback = contextName;\n          contextName = 'uselib';\n        }\n\n        if (!useLibLoaded[contextName]) {\n          loadLib();\n          useLibLoaded[contextName] = true;\n        }\n\n        var req = requirejs({\n          context: contextName\n        });\n        req(['build'], function () {\n          callback(req);\n        });\n      }\n    };\n    requirejs.define = define;\n  } //If in Node, and included via a require('requirejs'), just export and\n  //THROW IT ON THE GROUND!\n\n\n  if (env === 'node' && reqMain !== module) {\n    setBaseUrl(path.resolve(reqMain ? reqMain.filename : '.'));\n    createRjsApi();\n    module.exports = requirejs;\n    return;\n  } else if (env === 'browser') {\n    //Only option is to use the API.\n    setBaseUrl(location.href);\n    createRjsApi();\n    return;\n  } else if ((env === 'rhino' || env === 'xpconnect') && //User sets up requirejsAsLib variable to indicate it is loaded\n  //via load() to be used as a library.\n  typeof requirejsAsLib !== 'undefined' && requirejsAsLib) {\n    //This script is loaded via rhino's load() method, expose the\n    //API and get out.\n    setBaseUrl(fileName);\n    createRjsApi();\n    return;\n  }\n\n  if (commandOption === 'o') {\n    //Do the optimizer work.\n    loadLib();\n    /*\n    * Create a build.js file that has the build options you want and pass that\n    * build file to this file to do the build. See example.build.js for more information.\n    */\n\n    /*jslint strict: false, nomen: false */\n\n    /*global require: false */\n\n    require({\n      baseUrl: require.s.contexts._.config.baseUrl,\n      //Use a separate context than the default context so that the\n      //build can use the default context.\n      context: 'build',\n      catchError: {\n        define: true\n      }\n    }, ['env!env/args', 'env!env/quit', 'logger', 'build'], function (args, quit, logger, build) {\n      build(args).then(function () {}, function (err) {\n        logger.error(err);\n        quit(1);\n      });\n    });\n  } else if (commandOption === 'v') {\n    console.log('r.js: ' + version + ', RequireJS: ' + this.requirejsVars.require.version + ', UglifyJS: 2.8.29');\n  } else if (commandOption === 'convert') {\n    loadLib();\n\n    this.requirejsVars.require(['env!env/args', 'commonJs', 'env!env/print'], function (args, commonJs, print) {\n      var srcDir, outDir;\n      srcDir = args[0];\n      outDir = args[1];\n\n      if (!srcDir || !outDir) {\n        print('Usage: path/to/commonjs/modules output/dir');\n        return;\n      }\n\n      commonJs.convertDir(args[0], args[1]);\n    });\n  } else {\n    //Just run an app\n    //Load the bundled libraries for use in the app.\n    if (commandOption === 'lib') {\n      loadLib();\n    }\n\n    setBaseUrl(fileName);\n\n    if (exists(fileName)) {\n      exec(readFile(fileName), fileName);\n    } else {\n      showHelp();\n    }\n  }\n})(typeof console !== 'undefined' ? console : undefined, typeof Packages !== 'undefined' || typeof window === 'undefined' && typeof Components !== 'undefined' && Components.interfaces ? Array.prototype.slice.call(arguments, 0) : [], typeof readFile !== 'undefined' ? readFile : undefined);","map":{"version":3,"sources":["C:/Users/joshc/node_modules/requirejs/bin/r.js"],"names":["requirejs","require","define","xpcUtil","console","args","readFileFunc","fileName","env","fs","vm","path","exec","rhinoContext","dir","nodeRequire","nodeDefine","exists","reqMain","loadedOptimizedLib","existsForNode","Cc","Ci","version","jsSuffixRegExp","commandOption","useLibLoaded","rhinoArgs","xpconnectArgs","readFile","showHelp","log","process","versions","node","existsSync","main","undefined","readFileSync","string","name","runInThisContext","requirejsVars","makeNodeWrapper","realpathSync","argv","indexOf","substring","Packages","importPackage","org","mozilla","javascript","ContextFactory","getGlobal","enterContext","evaluateString","load","script","readFully","java","io","File","print","apply","arguments","navigator","document","importScripts","self","eval","Components","classes","interfaces","utils","isWindows","cwd","FileUtils","getFile","normalize","i","part","ary","firstChar","charAt","replace","split","length","splice","join","xpfile","fullPath","e","Error","encoding","inStream","convertStream","readData","fileObj","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","value","close","global","setTimeout","req","s","head","baseElement","dataMain","src","interactiveScript","currentlyAddingScript","mainScript","subPath","commentRegExp","cjsRequireRegExp","currDirRegExp","op","Object","prototype","ostring","toString","hasOwn","hasOwnProperty","isBrowser","window","isWebWorker","readyRegExp","platform","defContextName","isOpera","opera","contexts","cfg","globalDefQueue","useInteractive","commentReplace","match","singlePrefix","isFunction","it","call","isArray","each","func","eachReverse","hasProp","obj","prop","getOwn","eachProp","mixin","target","source","force","deepStringMixin","RegExp","bind","fn","scripts","getElementsByTagName","defaultOnError","err","g","makeError","id","msg","requireModules","requireType","originalError","newContext","contextName","inCheckLoaded","Module","context","handlers","checkLoadedTimeoutId","config","waitSeconds","baseUrl","paths","bundles","pkgs","shim","registry","enabledRegistry","undefEvents","defQueue","defined","urlFetched","bundlesMap","requireCounter","unnormalizedCounter","trimDots","baseName","applyMap","pkgMain","mapValue","nameParts","j","nameSegment","lastIndex","foundMap","foundI","foundStarMap","starI","normalizedBaseParts","baseParts","map","starMap","nodeIdCompat","test","slice","concat","outerLoop","removeScript","scriptNode","getAttribute","parentNode","removeChild","hasPathFallback","pathConfig","shift","undef","makeRequire","skipMap","splitPrefix","prefix","index","makeModuleMap","parentModuleMap","isNormalized","url","pluginModule","suffix","parentName","originalName","isDefine","normalizedName","nameToUrl","parentMap","unnormalized","getModule","depMap","mod","on","defineEmitComplete","error","onError","errback","ids","notified","events","emit","takeGlobalQueue","queueItem","defQueueMap","push","usingExports","exports","module","uri","cleanRegistry","breakCycle","traced","processed","depMaps","depId","dep","depMatched","defineDep","check","checkLoaded","usingPathFallback","waitInterval","expired","startTime","Date","getTime","noLoads","reqCalls","stillLoading","needCycleCheck","modId","enabled","inited","fetched","depExports","pluginMaps","depCount","factory","options","ignore","enable","fetch","enableBuildCallback","deps","callPlugin","enabling","cjsModule","defining","execCb","requireMap","onResourceLoad","resLoadMaps","normalizedMap","defineEmitted","pluginMap","plugin","normalizedMod","bundleId","localRequire","fromText","text","textAlt","moduleName","moduleMap","hasInteractive","completeLoad","handler","undefed","cb","cbs","evt","callGetModule","removeListener","ieName","detachEvent","removeEventListener","getScriptData","currentTarget","srcElement","onScriptLoad","onScriptError","intakeDefines","nextTick","configure","urlArgs","objs","v","exportsFn","makeShimExports","packages","pkgObj","location","callback","ret","relMap","requireMod","__requireJsBuild","get","toUrl","moduleNamePlusExt","ext","lastIndexOf","segment","isRelative","specified","found","shExports","enforceDefine","skipExt","syms","parentModule","parentPath","jsExtRegExp","type","readyState","data","parents","key","optional","ctx","createNode","xhtml","createElementNS","createElement","scriptType","charset","async","setAttribute","attachEvent","addEventListener","onNodeCreated","insertBefore","appendChild","getInteractiveScript","skipDataMain","pop","amd","jQuery","xhr","XMLHttpRequest","open","send","onreadystatechange","responseText","nodeReq","def","syncTick","message","relModuleMap","oldTick","contents","suppress","nodeShim","warn","dirName","loadLib","pathRegExp","lang","isJavaObj","backSlashRegExp","Array","isRegExp","falseProp","_mixin","dest","override","parameters","l","deepMix","deeplikeCopy","ignoredProps","result","forEach","delegate","TMP","props","tmp","jsEscape","content","prim","p","hideResolutionConflict","JSON","stringify","notify","item","ok","fail","yes","no","finished","rejected","resolve","reject","start","promise","then","next","e2","end","serial","setImmediate","assert","jsLibRhinoArgs","jsLibXpConnectArgs","file","compile","frontSlash","status","mkDir","mkFullDir","exclusionRegExp","getLineSeparator","parent","parts","absPath","href","isFile","isDirectory","getFilteredFileList","startDir","regExpFilters","makeUnixPaths","copyDir","srcDir","destDir","regExpFilter","onlyCopyNew","copyFile","srcFileName","destFileName","renameFile","from","to","readFileAsync","d","statusText","saveUtf8File","fileContents","saveFile","browser","deleteFile","deleteEmptyDirs","windowsDriveRegExp","statSync","mkdirSync","currDir","first","files","topDir","regExpInclude","regExpExclude","dirFileArray","stat","filePath","dirFiles","include","exclude","readdirSync","dirFile","fileNames","copiedFiles","parentDir","mtime","dirname","writeFileSync","renameSync","lstatSync","rmdirSync","unlinkSync","lineSeparator","System","getProperty","getParentFile","getCanonicalPath","startDirIsJavaObject","listFiles","getPath","String","getName","destFile","srcFile","srcChannel","destChannel","lastModified","mkdirs","FileInputStream","getChannel","FileOutputStream","transferFrom","size","renameTo","input","BufferedReader","InputStreamReader","stringBuffer","line","StringBuffer","readLine","append","outFile","outWriter","os","getAbsoluteFile","getAbsolutePath","OutputStreamWriter","BufferedWriter","write","dirObj","create","startDirIsObject","directoryEntries","hasMoreElements","getNext","QueryInterface","nsILocalFile","leafName","lastModifiedTime","copyTo","toFile","moveTo","outStream","nsIFileOutputStream","nsIConverterOutputStream","writeString","remove","code","draining","exit","stdout","bufferSize","once","stderr","quit","logger","TRACE","INFO","WARN","ERROR","SILENT","level","logPrefix","logLevel","trace","_print","info","_sysPrint","webpackUniversalModuleDefinition","root","modules","installedModules","__webpack_require__","moduleId","loaded","m","c","defineProperty","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","parse","commentHandler","proxyDelegate","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","attach","isModule","sourceType","parser","jsx","JSXParser","Parser","program","parseModule","parseScript","ast","comments","tokens","tolerant","errors","errorHandler","parsingOptions","tokenize","tokenizer","Tokenizer","token","getNextToken","tolerate","syntax_1","Syntax","stack","leading","trailing","insertInnerComments","BlockStatement","body","innerComments","entry","offset","unshift","findTrailingComments","trailingComments","entry_1","firstComment","range","findLeadingComments","leadingComments","count","visitNode","Program","visitComment","loc","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForOfStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","__extends","extendStatics","setPrototypeOf","__proto__","b","__","constructor","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","TokenName","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","JSXNamespacedName","ns","namespace","JSXMemberExpression","expr","object","property","_super","parsePrimaryExpression","parseJSXRoot","startJSX","scanner","startMarker","lineNumber","lineStart","column","finishJSX","nextToken","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","valid","terminated","numeric","hex","eof","ch","Character","isDecimalDigit","charCodeAt","isHexDigit","str","substr","fromCharCode","parseInt","XHTMLEntities","lexJSX","cp","n1","n2","isIdentifierStart","isIdentifierPart","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","isLineTerminator","peekJSXToken","state","saveState","scanComments","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","identifier","name_2","parseJSXStringLiteralAttribute","raw","getTokenRaw","parseJSXExpressionAttribute","tolerateError","expression","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","argument","JSXSpreadAttribute","parseJSXAttributes","attributes","attribute","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","name_3","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","children","child","JSXText","container","parseComplexJSXElement","el","element","opening","JSXElement","closing","open_1","close_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","fromCodePoint","isWhiteSpace","isOctalDigit","openingElement","closingElement","elements","params","generator","operator","left","right","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","label","callee","param","superClass","ComputedMemberExpression","computed","consequent","alternate","Directive","directive","declaration","specifiers","local","exported","update","imported","meta","kind","isStatic","static","properties","method","shorthand","RegexLiteral","pattern","flags","regex","Script","expressions","StaticMemberExpression","discriminant","cases","tag","quasi","tail","quasis","block","finalizer","declarations","assert_1","error_handler_1","messages_1","scanner_1","ArrowParameterPlaceHolder","ErrorHandler","Scanner","trackComment","operatorPrecedence","lookahead","hasLineTerminator","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","values","_i","whole","idx","createError","unexpectedTokenError","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","isFutureReservedWord","UnexpectedReserved","isStrictModeReservedWord","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","t","nextRegexToken","scanRegExp","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","keyword","matchKeyword","matchContextualKeyword","matchAssign","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","octal","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","isGenerator","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","cooked","parseTemplateElement","parseExpression","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","parseSuper","parseUpdateExpression","parseUnaryExpression","isRestrictedWord","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","precedence","parseBinaryExpression","prec","markers","precedences","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseBlock","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parseArrayPattern","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseObjectPattern","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseExpressionStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","hasArgument","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","enumerable","writable","configurable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","StrictFunctionName","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","recordError","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","hexValue","toLowerCase","octalValue","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","len","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","restore","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescaped_1","unescaped","octToDec","scanTemplate","rawOffset","unescaped_2","testRegExp","astralSubstitute","$0","$1","$2","codePoint","exception","scanRegExpBody","classMarker","scanRegExpFlags","char","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","trackRange","trackLoc","buffer","reader","startRegex","esprima","Reflect","SourceMapGenerator","SourceMapConsumer","SourceNode","base64VLQ","util","ArraySet","MappingList","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","SourceMapGenerator_fromSourceMap","aSourceMapConsumer","sourceRoot","eachMapping","mapping","newMapping","generated","generatedLine","generatedColumn","relative","original","originalLine","originalColumn","addMapping","sources","sourceFile","sourceContentFor","setSourceContent","SourceMapGenerator_addMapping","_validateMapping","has","add","SourceMapGenerator_setSourceContent","aSourceFile","aSourceContent","toSetString","keys","applySourceMap","SourceMapGenerator_applySourceMap","aSourceMapPath","newSources","newNames","unsortedForEach","originalPositionFor","SourceMapGenerator_validateMapping","aGenerated","aOriginal","aSource","aName","_serializeMappings","SourceMapGenerator_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","nameIdx","sourceIdx","mappings","toArray","compareByGeneratedPositionsInflated","encode","_generateSourcesContent","SourceMapGenerator_generateSourcesContent","aSources","aSourceRoot","toJSON","SourceMapGenerator_toJSON","names","sourcesContent","SourceMapGenerator_toString","base64","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64VLQ_encode","encoded","digit","vlq","decode","base64VLQ_decode","aStr","aIndex","aOutParam","strLen","continuation","rest","intToCharMap","number","TypeError","charCode","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","aDefaultValue","urlRegexp","dataUrlRegexp","urlParse","aUrl","scheme","auth","host","port","urlGenerate","aParsedUrl","aPath","isAbsolute","up","aRoot","aPathUrl","aRootUrl","joined","supportsNullProto","identity","isProtoString","fromSetString","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","compareByGeneratedPositionsDeflated","onlyCompareGenerated","strcmp","aStr1","aStr2","_array","_set","fromArray","ArraySet_fromArray","aArray","aAllowDuplicates","set","ArraySet_size","getOwnPropertyNames","ArraySet_add","sStr","isDuplicate","ArraySet_has","ArraySet_indexOf","at","ArraySet_at","aIdx","ArraySet_toArray","generatedPositionAfter","lineA","lineB","columnA","columnB","_sorted","_last","MappingList_forEach","aCallback","aThisArg","MappingList_add","aMapping","MappingList_toArray","sort","binarySearch","quickSort","aSourceMap","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","SourceMapConsumer_charIsMappingSeparator","SourceMapConsumer_parseMappings","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","SourceMapConsumer_eachMapping","aContext","aOrder","order","_generatedMappings","_originalMappings","allGeneratedPositionsFor","SourceMapConsumer_allGeneratedPositionsFor","needle","_findMapping","lastColumn","consumer","SourceMapConsumer_fromSourceMap","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","Mapping","cachedSegments","temp","originalMappings","SourceMapConsumer_findMapping","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","search","computeColumnSpans","SourceMapConsumer_computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","SourceMapConsumer_originalPositionFor","hasContentsOfAllSources","BasicSourceMapConsumer_hasContentsOfAllSources","some","sc","SourceMapConsumer_sourceContentFor","nullOnMissing","fileUriAbsPath","generatedPositionFor","SourceMapConsumer_generatedPositionFor","lastOffset","_sections","offsetLine","offsetColumn","generatedOffset","IndexedSourceMapConsumer_originalPositionFor","sectionIndex","section","bias","IndexedSourceMapConsumer_hasContentsOfAllSources","every","IndexedSourceMapConsumer_sourceContentFor","IndexedSourceMapConsumer_generatedPositionFor","generatedPosition","IndexedSourceMapConsumer_parseMappings","sectionMappings","adjustedMapping","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","Math","floor","swap","x","y","randomIntInRange","low","high","round","random","doQuickSort","comparator","r","pivotIndex","pivot","q","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","SourceNode_fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","shiftNextLine","lineContents","newLine","lastGeneratedLine","lastMapping","addMappingWithCode","nextLine","SourceNode_add","aChunk","chunk","prepend","SourceNode_prepend","walk","SourceNode_walk","aFn","SourceNode_join","aSep","newChildren","replaceRight","SourceNode_replaceRight","aPattern","aReplacement","lastChild","SourceNode_setSourceContent","walkSourceContents","SourceNode_walkSourceContents","SourceNode_toString","toStringWithSourceMap","SourceNode_toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","MOZ_SourceMap","rjsFile","array_to_hash","a","characters","member","array","find_if","n","repeat_string","configure_error_stack","DefaultsError","defs","croak","defaults","HOP","merge","noop","return_false","return_true","return_this","return_null","MAP","f","backwards","top","doit","val","is_last","Last","AtTop","Splice","reverse","skip","at_top","last","push_uniq","string_template","mergeSort","ai","bi","_ms","set_difference","filter","set_intersection","makePredicate","words","cats","out","word","compareTo","arr","cat","Function","all","predicate","Dictionary","_values","_size","del","toObject","fromObject","dict","first_in_statement","AST_Statement","AST_Seq","car","AST_Call","AST_New","AST_Dot","AST_Sub","AST_Conditional","AST_Binary","AST_UnaryPostfix","DEFNODE","methods","AST_Node","self_props","PROPS","proto","initialize","ctor","BASE","SUBCLASSES","CTOR","SELF_PROPS","TYPE","DEFMETHOD","AST_Token","_clone","deep","clone","transform","TreeTransformer","$documentation","$propdoc","_walk","visitor","_visit","warn_function","txt","AST_Debugger","AST_Directive","scope","AST_SimpleStatement","walk_body","AST_Block","AST_BlockStatement","AST_EmptyStatement","AST_StatementWithBody","AST_LabeledStatement","TreeWalker","AST_LoopControl","thedef","references","AST_IterationStatement","AST_DWLoop","AST_Do","AST_While","AST_For","step","AST_ForIn","AST_With","AST_Scope","directives","variables","functions","uses_with","uses_eval","parent_scope","enclosed","cname","AST_Toplevel","globals","wrap_enclose","arg_parameter_pairs","pair","splitAt","wrapped_tl","before","wrap_commonjs","export_all","to_export","figure_out_scope","AST_SymbolDeclaration","definition","sym","AST_Assign","AST_SymbolRef","AST_String","AST_Lambda","argnames","uses_arguments","AST_Accessor","AST_Function","AST_Defun","AST_Jump","AST_Exit","AST_Return","AST_Throw","AST_Break","AST_Continue","AST_If","alternative","AST_Switch","AST_SwitchBranch","AST_Default","AST_Case","AST_Try","bcatch","bfinally","AST_Catch","argname","AST_Finally","AST_Definitions","definitions","AST_Var","AST_Const","AST_VarDef","cdr","$cons","seq","$from_array","cons","to_array","cell","AST_PropAccess","AST_Unary","AST_UnaryPrefix","AST_Array","AST_Object","AST_ObjectProperty","AST_ObjectKeyVal","AST_ObjectSetter","AST_ObjectGetter","AST_Symbol","AST_SymbolAccessor","AST_SymbolVar","AST_SymbolConst","AST_SymbolFunarg","AST_SymbolDefun","AST_SymbolLambda","AST_SymbolCatch","AST_Label","AST_LabelRef","AST_This","AST_Constant","getValue","AST_Number","literal","AST_RegExp","AST_Atom","AST_Null","AST_NaN","AST_Undefined","AST_Hole","AST_Infinity","AST_Boolean","AST_False","AST_True","descend","getPrototypeOf","find_parent","has_directive","st","in_boolean_context","loopcontrol_target","KEYWORDS","KEYWORDS_ATOM","RESERVED_WORDS","KEYWORDS_BEFORE_EXPRESSION","OPERATOR_CHARS","RE_HEX_NUMBER","RE_OCT_NUMBER","OPERATORS","WHITESPACE_CHARS","NEWLINE_CHARS","PUNC_BEFORE_EXPRESSION","PUNC_CHARS","REGEXP_MODIFIERS","UNICODE","letter","non_spacing_mark","space_combining_mark","connector_punctuation","is_letter","is_digit","is_alphanumeric_char","is_unicode_digit","is_unicode_combining_mark","is_unicode_connector_punctuation","is_identifier","is_identifier_start","is_identifier_char","is_identifier_string","parse_js_number","JS_Parse_Error","filename","pos","js_error","is_token","EX_EOF","$TEXT","html5_comments","shebang","S","tokpos","tokline","tokcol","newline_before","regex_allowed","comments_before","directive_stack","peek","signal_eof","in_string","forward","looking_at","find_eol","find","what","start_token","prev_was_dot","is_comment","UNARY_POSTFIX","endline","endcol","endpos","nlb","skip_whitespace","read_while","pred","parse_error","read_num","has_e","after_e","has_x","has_dot","next_token","isNaN","read_escaped_char","hex_bytes","read_octal_escape_sequence","read_string","with_eof_error","quote_char","tok","skip_line_comment","skip_multiline_comment","read_name","backslash","escaped","toUpperCase","read_regexp","regexp","prev_backslash","in_class","mods","read_operator","grow","bigger","handle_slash","handle_dot","read_word","eof_error","cont","ex","force_regexp","nc","add_directive","push_directives_stack","pop_directives_stack","UNARY_PREFIX","ASSIGNMENT","PRECEDENCE","STATEMENTS_WITH_LABELS","ATOMIC_START_TOKEN","bare_returns","cli","toplevel","prev","peeked","in_function","in_directives","in_loop","labels","is","token_error","unexpected","expect_token","punc","can_insert_semicolon","semicolon","parenthesised","exp","embed_tokens","handle_regexp","simple_statement","labeled_statement","block_","break_cont","for_","function_","if_","switch_body_","try_","var_","const_","as_symbol","ref","ldef","for_in","regular_for","lhs","in_statement","loop","cond","belse","cur","branch","vardefs","no_in","in_const","new_","allow_calls","newexp","expr_atom","expr_list","subscripts","as_atom_node","_make_symbol","array_","object_","allow_trailing_comma","allow_empty","create_accessor","as_property_name","as_name","noerror","maybe_unary","make_unary","is_assignable","expr_op","min_prec","expr_ops","maybe_conditional","maybe_assign","commas","after","_","tw","in_list","do_list","SymbolDef","orig","mangled_name","undeclared","next_id","unmangleable","keep_fnames","mangle","cache","screw_ie8","defun","next_mangled","save_scope","init_scope_vars","save_defun","save_labels","def_function","def_variable","mark_enclosed","find_variable","reference","prev_func","def_global","refs","symbol","base54","except","tricky_def","tricky_name","_default_mangler_options","lname","to_mangle","save_nesting","consider","print_to_string","chars","frequency","reset","freq","assign_to_global","func_arguments","nested_defuns","unreferenced","EXPECT_DIRECTIVE","is_some_comments","OutputStream","ascii_only","beautify","bracketize","indent_level","indent_start","inline_script","keep_quoted_props","max_line_len","preamble","preserve_line","quote_keys","quote_style","semicolons","source_map","space_colon","unescape_regexps","width","wrap_iife","comment_filter","regex_pos","indentation","current_col","current_line","current_pos","OUTPUT","to_ascii","make_string","dq","sq","quote_single","quote_double","encode_string","make_name","make_indent","back","might_need_space","might_need_semicolon","might_add_newline","ensure_line_len","requireSemicolonChars","target_line","space","indent","half","with_indent","next_indent","save_indentation","newline","force_semicolon","with_block","with_parens","with_square","comma","colon","add_mapping","cline","ccol","current_width","should_break","print_name","print_string","escape_directive","option","push_node","pop_node","DEFPRINT","nodetype","use_asm","in_directive","stream","force_parens","_codegen","prev_use_asm","add_comments","add_source_map","needs_parens","_readonly","output","_comments_dumped","PARENS","po","pp","so","sp","p1","need_constructor_parens","make_num","display_body","is_toplevel","allow_directives","stmt","force_statement","print_bracketed","make_block","_do_print_body","parenthesize_for_noin","nokeyword","_do_print","make_then","in_for","avoid_semicolon","noin","print_property_name","_print_getter_setter","regexp_safe_literal","best_of","best","DEFMAP","basic_sourcemap_gen","Compressor","false_by_default","angular","booleans","cascade","collapse_vars","comparisons","conditionals","dead_code","drop_console","drop_debugger","evaluate","global_defs","hoist_funs","hoist_vars","if_return","join_vars","keep_fargs","keep_infinity","loops","negate_iife","passes","pure_getters","pure_funcs","reduce_vars","sequences","side_effects","switches","top_retain","unsafe","unsafe_comps","unsafe_math","unsafe_proto","unsafe_regexp","unused","warnings","sequences_limit","warnings_produced","compress","process_expression","pass","reset_opt_flags","clear_warnings","_squeezed","was_scope","hoist_declarations","optimize","drop_unused","OPT","optimizer","compressor","_optimized","insert","tt","make_node","drop_side_effect_free","rescan","safe_ids","suppressor","fixed","reset_def","is_safe","is_modified","fixed_value","mark","save_ids","iife","safe","should_replace","is_lhs","is_reference_const","make_node_from_constant","isFinite","maintain_this_binding","as_statement_array","thing","is_empty","loop_body","is_iife_call","tighten_body","statements","CHANGED","max_iter","process_for_angular","eliminate_spurious_blocks","eliminate_dead_code","handle_if_return","sequencesize","join_consecutive_vars","collapse_single_use_vars","var_defs_removed","stat_index","prev_stat_index","prev_stat","var_defs","var_names_seen","side_effects_encountered","lvalues_encountered","lvalues","var_defs_index","var_decl","var_name","is_constant","ctt","replace_var","value_has_side_effects","has_side_effects","is_lvalue","unwind","preorder","are_references_in_scope","postorder","has_inject","make_arguments_names_list","make_array","make_injector","check_expression","reduce","seen_dirs","multiple_if_returns","has_multiple_if_returns","in_lambda","negate","funs","extract_functions_from_statement_array","ab","aborts","lct","has_quit","extract_declarations_from_unreachable_code","push_seq","from_array","seqLength","sequencesize_2","cons_seq","remove_initializers","is_undefined","_throw_on_access","is_strict","unary_bool","binary_bool","is_boolean","unary","binary","is_number","is_string","unary_side_effects","_find_defs","to_node","defines","best_of_expression","ast1","ast2","best_of_statement","_eval","unaryPrefix","ev","_evaluating","basic_negation","alt","negated","pure","last_comment","has_pure_annotation","any","may_throw_on_access","block_aborts","assign_as_unused","drop_funcs","drop_vars","in_use","in_use_ids","initializations","node_def","trim","__unused","w","_unused_side_effects","dirs","hoisted","vars","vars_found","to_assignments","assign","nodes","changed","has_loop_control","if_break_in_loop","drop_it","self_condition_length","negated_length","negated_is_best","default_branch","exact_match","eliminate_branch","default_index","equivalent_to","has_break","assignments","comp","mangle_names","fun","EXIT","separator","consts","field","lift_sequences","cursor","commutativeOperators","reversible","ll","rr","associative","reversed","resolve_defines","has_symbol_ref","min","overhead","is_atomic","ASSIGN_OPS","ASSIGN_OPS_COMMUTATIVE","is_true","is_false","booleanize","literals_in_boolean_context","SourceMap","orig_line_diff","dest_line_diff","orig_map","gen_line","gen_col","orig_line","orig_col","normalize_directives","MOZ_TO_ME","M","my_start_token","my_end_token","from_moz","guardedHandlers","elem","rx","FROM_MOZ_STACK","To_Moz_Unary","def_to_moz","To_Moz_Program","to_moz_scope","To_Moz_FunctionDeclaration","to_moz","To_Moz_FunctionExpression","To_Moz_Directive","To_Moz_ExpressionStatement","To_Moz_SwitchCase","To_Moz_TryStatement","to_moz_block","To_Moz_CatchClause","guard","To_Moz_VariableDeclaration","To_Moz_SequenceExpression","To_Moz_MemberExpression","isComputed","To_Moz_BinaryExpression","To_Moz_ArrayExpression","To_Moz_ObjectExpression","To_Moz_Property","To_Moz_Identifier","To_Moz_RegExpLiteral","To_Moz_Literal","To_Moz_Atom","to_mozilla_ast","To_Moz_ArrayHole","raw_token","moznode","moztype","mytype","propmap","moz_to_me","me_to_moz","moz","how","my","from_mozilla_ast","save_stack","set_moz_loc","mynode","myparent","find_builtins","Number","Boolean","mangle_properties","debug","ignore_quoted","only_cache","reserved","debug_name_suffix","names_to_mangle","ignored","addStrings","mangleStrings","can_mangle","should_mangle","mangled","debug_mangled","read_source_map","Buffer","minify","fromString","inSourceMap","mangleProperties","nameCache","outFileName","outSourceMap","sourceMapInline","sourceMapUrl","spidermonkey","inMap","addFile","fileUrl","simple_glob","wrap","exportAll","readNameCache","writeNameCache","compute_char_frequency","sourceMapIncludeSources","mappingUrlPrefix","describe_ast","doitem","documentation","readReservedFile","readDefaultReservedFile","writeFile","glob","entries","basename","results","arrayToString","argPropName","emptyScope","traverse","traverseBroad","getValidDeps","isFnExpression","moduleCall","depString","moduleDeps","moduleList","needsDefine","astRoot","recurse","callName","factoryIdentifier","fnExpScope","findNestedDependencies","insertNeedsDefine","onMatch","tempObject","hasHas","parseNode","definesRequire","foundDefine","foundDefineAmd","bodyNode","decls","hasVarDefine","declNode","hasDefineAmd","getAnonDeps","defFunc","findAnonDefineFactory","getAnonDepsFromNode","funcArgLength","findRequireDepNames","isDefineNodeWithArgs","arg0","arg1","findConfig","jsConfig","foundConfig","stringData","foundRange","quoteMatch","quoteRegExp","hasRequire","nodeToString","getRequireObjectLiteral","renameNamespace","lines","locs","startIndex","lineIndex","findDependencies","dependencies","findCjsDependencies","hasDefDefine","refsDefineAmd","hasDefine","getNamedDefine","getAllNamedDefines","excludeMap","usesAmdOrRequireJs","uses","usesCommonJs","assignsExports","cjsDeps","refsDefine","isUmd","extracted","firstLine","getLicenseComments","commentNode","refNode","subNode","existsMap","lineEnd","baseIndentRegExp","indentRegExp","keyRegExp","bulkIndentRegExps","applyIndent","lineReturn","regExp","toTransport","onFound","contentLines","modLine","foundAnon","scanCount","scanReset","defineInfos","applySourceUrl","useSourceUrl","firstArg","firstArgLoc","factoryNode","needsId","depAction","foundId","sourceUrlData","namespaceExists","defineLoc","contentInsertion","modifyConfig","onConfig","details","serializeConfig","configString","outDentRegExp","baseIndent","startString","existingConfigString","lastReturnIndex","objectToString","totalIndent","startBrace","endBrace","nextIndent","Temp","pragma","conditionalRegExp","useStrictRegExp","hasRegExp","configRegExp","nsWrapRegExp","apiDefRegExp","defineCheckRegExp","defineStringCheckRegExp","defineTypeFirstCheckRegExp","defineJQueryRegExp","defineHasRegExp","defineTernaryRegExp","defineExistsRegExp","defineExistsAndAmdRegExp","amdefineRegExp","removeStrict","useStrict","onLifecycleName","pluginCollector","foundIndex","lineEndIndex","conditionLine","matches","isTrue","endRegExp","endMatches","endMarkerIndex","shouldInclude","startLength","lifecycleHas","collectorMod","lifecyclePragmas","pragmas","hasConfig","kwArgs","skipPragmas","optimizeAllPluginResources","eDep","keepAmdefine","accumulator","JSSourceFilefromCode","mapRegExp","Class","forName","getMethod","stringClass","Java","class","closurefromCode","invoke","getFileWriter","closure","keepLines","optimized","compressed","writer","outBaseName","outFileNameMap","outFileNameMapContent","srcOutFileName","concatNameMap","jscomp","com","google","common","jsSourceFile","sourceListArray","ArrayList","externList","FLAG_compilation_level","compiler","externExportsPath","Compiler","CommandLineRunner","CompilerOptions","prettyPrint","CompilationLevel","setOptionsForCompilationLevel","generateSourceMaps","LocationMapping","setSourceMapLocationMappings","setSourceMapOutputPath","addAll","getDefaultExterns","SourceFile","fromFile","setLoggingLevel","logging","Level","loggingLevel","success","toSource","appendTo","envOptimize","uglify","cssImportRegExp","cssCommentImportRegExp","cssUrlRegExp","protocolRegExp","es5PlusGuidance","cleanCssUrlQuotes","fixCssUrlPaths","cssPrefix","fullMatch","urlMatch","hasProtocol","fixedUrlMatch","flattenCss","cssImportIgnore","included","topLevel","endIndex","importList","skippedList","urlStart","importFileName","urlEnd","mediaTypes","fullImportFileName","importContents","importEndIndex","importPath","flat","jsFile","js","optFunc","optConfig","optimizerName","licenseContents","optimizers","_buildSourceMap","preserveLicenseComments","throwWhen","cssFile","originalFileContents","buildText","optimizeCss","css","shouldRemove","removeCombined","fileList","existingMap","resultMap","finalMap","sourceIndex","uconfig","existingMapPath","errorString","isSyntaxError","commonJs","allowRun","absoluteUrlRegExp","layer","pluginBuilderRegExp","oldNewContext","oldDef","_cacheReset","_cachedRawText","_cachedFileContents","_cachedDefinesRequireUrls","_isSupportedBuildUrl","ignoredUrls","normalizeUrlWithBase","dirBaseUrl","oldEnable","moduleProto","oldInit","oldCallPlugin","needFullExec","fullExec","plugins","buildShimExports","wrapShim","parentId","pluginBuilderMatch","builderName","shimExports","buildPathMap","buildFileToModule","existingRequireUrl","_cacheReadAsync","cjsTranslate","convert","onBuildRead","e1","moduleTree","eOuter","pluginId","pluginMod","_buildReset","oldContext","_layer","buildFilePaths","pathAdded","modulesWithNames","_readFile","_fileExists","useLog","convertDir","commonJsPath","savePath","jsFileRegExp","convertedFileName","commonJsProps","build","requirePatch","endsWithSemiColonRegExp","endsWithSlashRegExp","resourceIsModuleIdRegExp","deepCopyProps","copyConfig","makeBuildBaseConfig","appDir","inlineText","isBuild","writeBuildTxt","dirExclusionRegExp","_buildPathToModuleIndex","addSemiColon","skipSemiColonInsertion","endsWithSlash","endsWithNewLine","makeWriteFile","asModule","appendToFileContents","singleContents","sourceMapGenerator","refPath","sourceMapPath","resourcePath","sourceMapLineNumber","lineCount","_buildPath","makeRelativeFilePath","buildFile","cmdConfig","errorMsg","errorStack","stackMatch","errorTree","errorMod","stackRegExp","standardIndent","convertArrayToObject","_run","buildPaths","baseConfig","srcPath","buildContext","destPath","resources","resource","pluginProcessed","buildFileContents","createConfig","keepBuildDir","cssIn","packagePaths","_sourcePath","rawText","allowSourceOverwrites","actions","traceDependencies","excludeLayers","findBuildModule","excludeModule","excludeLayer","removeModulePath","excludeShallow","excludeShallowModule","flattenModule","builtModule","finalText","_buildText","outOrigSourceMap","bundlesConfig","bundlesConfigOutFile","entryConfig","finalPath","bundleContents","parsedIds","isLayer","relPath","onModuleBundleComplete","onCompleteData","moduleIndex","skipDirOptimize","normalizeDirDefines","onBuildWrite","createOverrideConfig","stringDotToObj","objProps","pragmasOnSave","hasOnSave","uglify2","hasDotPropMatch","dotProp","separatorIndex","needArray","makeAbsPath","absFilePath","makeAbsObject","makeAbsConfig","originalBaseUrl","targetPath","dotLength","finalParts","targetParts","targetName","refParts","hasEndSlash","dotParts","nestedMix","mixConfig","skipArrays","targetValue","flattenWrapFile","keyName","keyFileName","keyMapName","fileText","normalizeWrapConfig","__startMap","__endMap","wrapError","buildFileConfig","mainConfig","mainConfigFile","mainConfigPath","buildBaseConfig","configFile","configError","PrintStream","println","insertRequire","stubModules","_byName","fileExclusionRegExp","_depsInclude","baseLoaderConfig","rawTextByIds","syncChecks","rhino","xpconnect","deferred","includeFinished","hasError","checkForErrors","idParts","pluginResources","errMessage","failedPluginMap","failedPluginIds","errIds","errUrlMap","errUrlConflicts","hasErrUrl","hasUndefined","populateErrUrlMap","errUrl","skipNew","oride","sourceMapBase","reqIndex","currContents","fileForSourceMap","packageName","builder","writeApi","namespaceWithDot","stubModulesByName","onLayerEnds","onLayerEndAdded","pkgsMainMap","wrapFunction","onLayerEnd","hasPackageName","shimDeps","shortPath","skipModuleInsertion","makeJsArrayString","setBaseUrl","createRjsApi","runBuild","done","tools","useLib","requirejsAsLib","catchError","outDir"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n/**\n * @license r.js 2.3.6 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/r.js/LICENSE\n */\n\n/*\n * This is a bootstrap script to allow running RequireJS in the command line\n * in either a Java/Rhino or Node environment. It is modified by the top-level\n * dist.js file to inject other files to completely enable this file. It is\n * the shell of the r.js file.\n */\n\n/*jslint evil: true, nomen: true, sloppy: true */\n/*global readFile: true, process: false, Packages: false, print: false,\nconsole: false, java: false, module: false, requirejsVars, navigator,\ndocument, importScripts, self, location, Components, FileUtils */\n\nvar requirejs, require, define, xpcUtil;\n(function (console, args, readFileFunc) {\n    var fileName, env, fs, vm, path, exec, rhinoContext, dir, nodeRequire,\n        nodeDefine, exists, reqMain, loadedOptimizedLib, existsForNode, Cc, Ci,\n        version = '2.3.6',\n        jsSuffixRegExp = /\\.js$/,\n        commandOption = '',\n        useLibLoaded = {},\n        //Used by jslib/rhino/args.js\n        rhinoArgs = args,\n        //Used by jslib/xpconnect/args.js\n        xpconnectArgs = args,\n        readFile = typeof readFileFunc !== 'undefined' ? readFileFunc : null;\n\n    function showHelp() {\n        console.log('See https://github.com/requirejs/r.js for usage.');\n    }\n\n    if (typeof process !== 'undefined' && process.versions && !!process.versions.node) {\n        env = 'node';\n\n        //Get the fs module via Node's require before it\n        //gets replaced. Used in require/node.js\n        fs = require('fs');\n        vm = require('vm');\n        path = require('path');\n        //In Node 0.7+ existsSync is on fs.\n        existsForNode = fs.existsSync || path.existsSync;\n\n        nodeRequire = require;\n        nodeDefine = define;\n        reqMain = require.main;\n\n        //Temporarily hide require and define to allow require.js to define\n        //them.\n        require = undefined;\n        define = undefined;\n\n        readFile = function (path) {\n            return fs.readFileSync(path, 'utf8');\n        };\n\n        exec = function (string, name) {\n            return vm.runInThisContext(this.requirejsVars.require.makeNodeWrapper(string),\n                                       name ? fs.realpathSync(name) : '');\n        };\n\n        exists = function (fileName) {\n            return existsForNode(fileName);\n        };\n\n\n        fileName = process.argv[2];\n\n        if (fileName && fileName.indexOf('-') === 0) {\n            commandOption = fileName.substring(1);\n            fileName = process.argv[3];\n        }\n    } else if (typeof Packages !== 'undefined') {\n        env = 'rhino';\n\n        fileName = args[0];\n\n        if (fileName && fileName.indexOf('-') === 0) {\n            commandOption = fileName.substring(1);\n            fileName = args[1];\n        }\n\n        //Exec/readFile differs between Rhino and Nashorn. Rhino has an\n        //importPackage where Nashorn does not, so branch on that. This is a\n        //coarser check -- detecting readFile existence might also be enough for\n        //this spot. However, sticking with importPackage to keep it the same\n        //as other Rhino/Nashorn detection branches.\n        if (typeof importPackage !== 'undefined') {\n            rhinoContext = Packages.org.mozilla.javascript.ContextFactory.getGlobal().enterContext();\n\n            exec = function (string, name) {\n                return rhinoContext.evaluateString(this, string, name, 0, null);\n            };\n        } else {\n            exec = function (string, name) {\n                load({ script: string, name: name});\n            };\n            readFile = readFully;\n        }\n\n        exists = function (fileName) {\n            return (new java.io.File(fileName)).exists();\n        };\n\n        //Define a console.log for easier logging. Don't\n        //get fancy though.\n        if (typeof console === 'undefined') {\n            console = {\n                log: function () {\n                    print.apply(undefined, arguments);\n                }\n            };\n        }\n    } else if ((typeof navigator !== 'undefined' && typeof document !== 'undefined') ||\n            (typeof importScripts !== 'undefined' && typeof self !== 'undefined')) {\n        env = 'browser';\n\n        readFile = function (path) {\n            return fs.readFileSync(path, 'utf8');\n        };\n\n        exec = function (string) {\n            return eval(string);\n        };\n\n        exists = function () {\n            console.log('x.js exists not applicable in browser env');\n            return false;\n        };\n\n    } else if (typeof Components !== 'undefined' && Components.classes && Components.interfaces) {\n        env = 'xpconnect';\n\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n\n        fileName = args[0];\n\n        if (fileName && fileName.indexOf('-') === 0) {\n            commandOption = fileName.substring(1);\n            fileName = args[1];\n        }\n\n        xpcUtil = {\n            isWindows: ('@mozilla.org/windows-registry-key;1' in Cc),\n            cwd: function () {\n                return FileUtils.getFile(\"CurWorkD\", []).path;\n            },\n\n            //Remove . and .. from paths, normalize on front slashes\n            normalize: function (path) {\n                //There has to be an easier way to do this.\n                var i, part, ary,\n                    firstChar = path.charAt(0);\n\n                if (firstChar !== '/' &&\n                        firstChar !== '\\\\' &&\n                        path.indexOf(':') === -1) {\n                    //A relative path. Use the current working directory.\n                    path = xpcUtil.cwd() + '/' + path;\n                }\n\n                ary = path.replace(/\\\\/g, '/').split('/');\n\n                for (i = 0; i < ary.length; i += 1) {\n                    part = ary[i];\n                    if (part === '.') {\n                        ary.splice(i, 1);\n                        i -= 1;\n                    } else if (part === '..') {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n                return ary.join('/');\n            },\n\n            xpfile: function (path) {\n                var fullPath;\n                try {\n                    fullPath = xpcUtil.normalize(path);\n                    if (xpcUtil.isWindows) {\n                        fullPath = fullPath.replace(/\\//g, '\\\\');\n                    }\n                    return new FileUtils.File(fullPath);\n                } catch (e) {\n                    throw new Error((fullPath || path) + ' failed: ' + e);\n                }\n            },\n\n            readFile: function (/*String*/path, /*String?*/encoding) {\n                //A file read function that can deal with BOMs\n                encoding = encoding || \"utf-8\";\n\n                var inStream, convertStream,\n                    readData = {},\n                    fileObj = xpcUtil.xpfile(path);\n\n                //XPCOM, you so crazy\n                try {\n                    inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                               .createInstance(Ci.nsIFileInputStream);\n                    inStream.init(fileObj, 1, 0, false);\n\n                    convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                    .createInstance(Ci.nsIConverterInputStream);\n                    convertStream.init(inStream, encoding, inStream.available(),\n                    Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                    convertStream.readString(inStream.available(), readData);\n                    return readData.value;\n                } catch (e) {\n                    throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n                } finally {\n                    if (convertStream) {\n                        convertStream.close();\n                    }\n                    if (inStream) {\n                        inStream.close();\n                    }\n                }\n            }\n        };\n\n        readFile = xpcUtil.readFile;\n\n        exec = function (string) {\n            return eval(string);\n        };\n\n        exists = function (fileName) {\n            return xpcUtil.xpfile(fileName).exists();\n        };\n\n        //Define a console.log for easier logging. Don't\n        //get fancy though.\n        if (typeof console === 'undefined') {\n            console = {\n                log: function () {\n                    print.apply(undefined, arguments);\n                }\n            };\n        }\n    }\n\n    /** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.3.6 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\n\n(function (global, setTimeout) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.3.6',\n        commentRegExp = /\\/\\*[\\s\\S]*?\\*\\/|([^:\"'=]|^)\\/\\/.*$/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    //Could match something like ')//comment', do not lose the prefix to comment.\n    function commentReplace(match, singlePrefix) {\n        return singlePrefix || '';\n    }\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttps://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; i < ary.length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\n                baseParts = (baseName && baseName.split('/')),\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // If wanting node ID compatibility, strip .js from end\n                // of IDs. Have to do this here, and not in nameToUrl\n                // because node allows either .js or non .js to map\n                // to same file.\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                // Starts with a '.' so need the baseName\n                if (name[0].charAt(0) === '.' && baseParts) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = normalizedBaseParts.concat(name);\n                }\n\n                trimDots(name);\n                name = name.join('/');\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (isNormalized) {\n                        normalizedName = name;\n                    } else if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        // If nested plugin references, then do not try to\n                        // normalize, as it will not normalize correctly. This\n                        // places a restriction on resourceIds, and the longer\n                        // term solution is not to normalize until plugins are\n                        // loaded and all normalizations to allow for async\n                        // loading of a loader plugin. But for now, fixes the\n                        // common uses. Details in #1131\n                        normalizedName = name.indexOf('!') === -1 ?\n                                         normalize(name, parentName, applyMap) :\n                                         name;\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                each(globalDefQueue, function(queueItem) {\n                    var id = queueItem[0];\n                    if (typeof id === 'string') {\n                        context.defQueueMap[id] = true;\n                    }\n                    defQueue.push(queueItem);\n                });\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    // Only fetch if not already in the defQueue.\n                    if (!hasProp(context.defQueueMap, id)) {\n                        this.fetch();\n                    }\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error. However,\n                            //only do it for define()'d  modules. require\n                            //errbacks should not be called for failures in\n                            //their callbacks (#699). However if a global\n                            //onError is set, use that.\n                            if ((this.events.error && this.map.isDefine) ||\n                                req.onError !== defaultOnError) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                var resLoadMaps = [];\n                                each(this.depMaps, function (depMap) {\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                                });\n                                req.onResourceLoad(context, this.map, resLoadMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap,\n                                                      true);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.map.normalizedMap = normalizedMap;\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            if (this.undefed) {\n                                return;\n                            }\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        } else if (this.events.error) {\n                            // No direct errback on this module, but something\n                            // else is listening for errors, so be sure to\n                            // propagate the error correctly.\n                            on(depMap, 'error', bind(this, function(err) {\n                                this.emit('error', err);\n                            }));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\n                        args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n            context.defQueueMap = {};\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            defQueueMap: {},\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                // Convert old style urlArgs string to a function.\n                if (typeof cfg.urlArgs === 'string') {\n                    var urlArgs = cfg.urlArgs;\n                    cfg.urlArgs = function(id, url) {\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\n                    };\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id, null, true);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        mod.undefed = true;\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if (args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n                        delete context.defQueueMap[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n                context.defQueueMap = {};\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|^blob\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs && !/^blob\\:/.test(url) ?\n                       url + config.urlArgs(moduleName, url) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    var parents = [];\n                    eachProp(registry, function(value, key) {\n                        if (key.indexOf('_@r') !== 0) {\n                            each(value.depMaps, function(depMap) {\n                                if (depMap.id === data.id) {\n                                    parents.push(key);\n                                    return true;\n                                }\n                            });\n                        }\n                    });\n                    return onError(makeError('scripterror', 'Script error for \"' + data.id +\n                                             (parents.length ?\n                                             '\", needed by: ' + parents.join(', ') :\n                                             '\"'), evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/requirejs/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/requirejs/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //Calling onNodeCreated after all properties on the node have been\n            //set, but before it is placed in the DOM.\n            if (config.onNodeCreated) {\n                config.onNodeCreated(node, config, moduleName, url);\n            }\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation is that a build has been done so\n                //that only one script needs to be loaded anyway. This may need\n                //to be reevaluated if other use cases become common.\n\n                // Post a task to the event loop to work around a bug in WebKit\n                // where the worker gets garbage-collected after calling\n                // importScripts(): https://webkit.org/b/153317\n                setTimeout(function() {}, 0);\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one,\n                //but only do so if the data-main value is not a loader plugin\n                //module ID.\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, commentReplace)\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        if (context) {\n            context.defQueue.push([name, deps, callback]);\n            context.defQueueMap[name] = true;\n        } else {\n            globalDefQueue.push([name, deps, callback]);\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\n\n\n\n    this.requirejsVars = {\n        require: require,\n        requirejs: require,\n        define: define\n    };\n\n    if (env === 'browser') {\n        //sloppy since eval enclosed with use strict causes problems if the source\n//text is not strict-compliant.\n/*jslint sloppy: true, evil: true */\n/*global require, XMLHttpRequest */\n\n(function () {\n    // Separate function to avoid eval pollution, same with arguments use.\n    function exec() {\n        eval(arguments[0]);\n    }\n\n    require.load = function (context, moduleName, url) {\n        var xhr = new XMLHttpRequest();\n\n        xhr.open('GET', url, true);\n        xhr.send();\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                exec(xhr.responseText);\n\n                //Support anonymous modules.\n                context.completeLoad(moduleName);\n            }\n        };\n    };\n}());\n    } else if (env === 'rhino') {\n        /*global require: false, java: false, load: false */\n\n(function () {\n    'use strict';\n    require.load = function (context, moduleName, url) {\n\n        load(url);\n\n        //Support anonymous modules.\n        context.completeLoad(moduleName);\n    };\n\n}());\n    } else if (env === 'node') {\n        this.requirejsVars.nodeRequire = nodeRequire;\n        require.nodeRequire = nodeRequire;\n\n        //Explicity not strict since this file contains an eval call, and do not want\n//to enforce strict on code evaluated that way. See\n//https://github.com/requirejs/r.js/issues/774\n/*jslint regexp: false, sloppy: true*/\n/*global require: false, define: false, requirejsVars: false, process: false */\n\n/**\n * This adapter assumes that x.js has loaded it and set up\n * some variables. This adapter just allows limited RequireJS\n * usage from within the requirejs directory. The general\n * node adapater is r.js.\n */\n\n(function () {\n    var nodeReq = requirejsVars.nodeRequire,\n        req = requirejsVars.require,\n        def = requirejsVars.define,\n        fs = nodeReq('fs'),\n        path = nodeReq('path'),\n        vm = nodeReq('vm'),\n        //In Node 0.7+ existsSync is on fs.\n        exists = fs.existsSync || path.existsSync,\n        hasOwn = Object.prototype.hasOwnProperty;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function syncTick(fn) {\n        fn();\n    }\n\n    function makeError(message, moduleName) {\n        var err = new Error(message);\n        err.requireModules = [moduleName];\n        return err;\n    }\n\n    //Supply an implementation that allows synchronous get of a module.\n    req.get = function (context, moduleName, relModuleMap, localRequire) {\n        if (moduleName === \"require\" || moduleName === \"exports\" || moduleName === \"module\") {\n            context.onError(makeError(\"Explicit require of \" + moduleName + \" is not allowed.\", moduleName));\n        }\n\n        var ret, oldTick,\n            moduleMap = context.makeModuleMap(moduleName, relModuleMap, false, true);\n\n        //Normalize module name, if it contains . or ..\n        moduleName = moduleMap.id;\n\n        if (hasProp(context.defined, moduleName)) {\n            ret = context.defined[moduleName];\n        } else {\n            if (ret === undefined) {\n                //Make sure nextTick for this type of call is sync-based.\n                oldTick = context.nextTick;\n                context.nextTick = syncTick;\n                try {\n                    if (moduleMap.prefix) {\n                        //A plugin, call requirejs to handle it. Now that\n                        //nextTick is syncTick, the require will complete\n                        //synchronously.\n                        localRequire([moduleMap.originalName]);\n\n                        //Now that plugin is loaded, can regenerate the moduleMap\n                        //to get the final, normalized ID.\n                        moduleMap = context.makeModuleMap(moduleMap.originalName, relModuleMap, false, true);\n                        moduleName = moduleMap.id;\n                    } else {\n                        //Try to dynamically fetch it.\n                        req.load(context, moduleName, moduleMap.url);\n\n                        //Enable the module\n                        context.enable(moduleMap, relModuleMap);\n                    }\n\n                    //Break any cycles by requiring it normally, but this will\n                    //finish synchronously\n                    context.require([moduleName]);\n\n                    //The above calls are sync, so can do the next thing safely.\n                    ret = context.defined[moduleName];\n                } finally {\n                    context.nextTick = oldTick;\n                }\n            }\n        }\n\n        return ret;\n    };\n\n    req.nextTick = function (fn) {\n        process.nextTick(fn);\n    };\n\n    //Add wrapper around the code so that it gets the requirejs\n    //API instead of the Node API, and it is done lexically so\n    //that it survives later execution.\n    req.makeNodeWrapper = function (contents) {\n        return '(function (require, requirejs, define) { ' +\n                contents +\n                '\\n}(requirejsVars.require, requirejsVars.requirejs, requirejsVars.define));';\n    };\n\n    req.load = function (context, moduleName, url) {\n        var contents, err,\n            config = context.config;\n\n        if (config.shim[moduleName] && (!config.suppress || !config.suppress.nodeShim)) {\n            console.warn('Shim config not supported in Node, may or may not work. Detected ' +\n                            'for module: ' + moduleName);\n        }\n\n        if (exists(url)) {\n            contents = fs.readFileSync(url, 'utf8');\n\n            contents = req.makeNodeWrapper(contents);\n            try {\n                vm.runInThisContext(contents, fs.realpathSync(url));\n            } catch (e) {\n                err = new Error('Evaluating ' + url + ' as module \"' +\n                                moduleName + '\" failed with error: ' + e);\n                err.originalError = e;\n                err.moduleName = moduleName;\n                err.requireModules = [moduleName];\n                err.fileName = url;\n                return context.onError(err);\n            }\n        } else {\n            def(moduleName, function () {\n                //Get the original name, since relative requires may be\n                //resolved differently in node (issue #202). Also, if relative,\n                //make it relative to the URL of the item requesting it\n                //(issue #393)\n                var dirName,\n                    map = hasProp(context.registry, moduleName) &&\n                            context.registry[moduleName].map,\n                    parentMap = map && map.parentMap,\n                    originalName = map && map.originalName;\n\n                if (originalName.charAt(0) === '.' && parentMap) {\n                    dirName = parentMap.url.split('/');\n                    dirName.pop();\n                    originalName = dirName.join('/') + '/' + originalName;\n                }\n\n                try {\n                    return (context.config.nodeRequire || req.nodeRequire)(originalName);\n                } catch (e) {\n                    err = new Error('Tried loading \"' + moduleName + '\" at ' +\n                                     url + ' then tried node\\'s require(\"' +\n                                        originalName + '\") and it failed ' +\n                                     'with error: ' + e);\n                    err.originalError = e;\n                    err.moduleName = originalName;\n                    err.requireModules = [moduleName];\n                    throw err;\n                }\n            });\n        }\n\n        //Support anonymous modules.\n        context.completeLoad(moduleName);\n    };\n\n    //Override to provide the function wrapper for define/require.\n    req.exec = function (text) {\n        /*jslint evil: true */\n        text = req.makeNodeWrapper(text);\n        return eval(text);\n    };\n}());\n\n    } else if (env === 'xpconnect') {\n        /*jslint */\n/*global require, load */\n\n(function () {\n    'use strict';\n    require.load = function (context, moduleName, url) {\n\n        load(url);\n\n        //Support anonymous modules.\n        context.completeLoad(moduleName);\n    };\n\n}());\n\n    }\n\n    //Support a default file name to execute. Useful for hosted envs\n    //like Joyent where it defaults to a server.js as the only executed\n    //script. But only do it if this is not an optimization run.\n    if (commandOption !== 'o' && (!fileName || !jsSuffixRegExp.test(fileName))) {\n        fileName = 'main.js';\n    }\n\n    /**\n     * Loads the library files that can be used for the optimizer, or for other\n     * tasks.\n     */\n    function loadLib() {\n        /*jslint strict: false */\n/*global Packages: false, process: false, window: false, navigator: false,\n  document: false, define: false */\n\n/**\n * A plugin that modifies any /env/ path to be the right path based on\n * the host environment. Right now only works for Node, Rhino and browser.\n */\n(function () {\n    var pathRegExp = /(\\/|^)env\\/|\\{env\\}/,\n        env = 'unknown';\n\n    if (typeof process !== 'undefined' && process.versions && !!process.versions.node) {\n        env = 'node';\n    } else if (typeof Packages !== 'undefined') {\n        env = 'rhino';\n    } else if ((typeof navigator !== 'undefined' && typeof document !== 'undefined') ||\n            (typeof importScripts !== 'undefined' && typeof self !== 'undefined')) {\n        env = 'browser';\n    } else if (typeof Components !== 'undefined' && Components.classes && Components.interfaces) {\n        env = 'xpconnect';\n    }\n\n    define('env', {\n        get: function () {\n            return env;\n        },\n\n        load: function (name, req, load, config) {\n            //Allow override in the config.\n            if (config.env) {\n                env = config.env;\n            }\n\n            name = name.replace(pathRegExp, function (match, prefix) {\n                if (match.indexOf('{') === -1) {\n                    return prefix + env + '/';\n                } else {\n                    return env;\n                }\n            });\n\n            req([name], function (mod) {\n                load(mod);\n            });\n        }\n    });\n}());\n/*jslint plusplus: true */\n/*global define, java */\n\ndefine('lang', function () {\n    'use strict';\n\n    var lang, isJavaObj,\n        hasOwn = Object.prototype.hasOwnProperty;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    isJavaObj = function () {\n        return false;\n    };\n\n    //Rhino, but not Nashorn (detected by importPackage not existing)\n    //Can have some strange foreign objects.\n    if (typeof java !== 'undefined' && java.lang && java.lang.Object && typeof importPackage !== 'undefined') {\n        isJavaObj = function (obj) {\n            return obj instanceof java.lang.Object;\n        };\n    }\n\n    lang = {\n        backSlashRegExp: /\\\\/g,\n        ostring: Object.prototype.toString,\n\n        isArray: Array.isArray || function (it) {\n            return lang.ostring.call(it) === \"[object Array]\";\n        },\n\n        isFunction: function(it) {\n            return lang.ostring.call(it) === \"[object Function]\";\n        },\n\n        isRegExp: function(it) {\n            return it && it instanceof RegExp;\n        },\n\n        hasProp: hasProp,\n\n        //returns true if the object does not have an own property prop,\n        //or if it does, it is a falsy value.\n        falseProp: function (obj, prop) {\n            return !hasProp(obj, prop) || !obj[prop];\n        },\n\n        //gets own property value for given prop on object\n        getOwn: function (obj, prop) {\n            return hasProp(obj, prop) && obj[prop];\n        },\n\n        _mixin: function(dest, source, override){\n            var name;\n            for (name in source) {\n                if(source.hasOwnProperty(name) &&\n                    (override || !dest.hasOwnProperty(name))) {\n                    dest[name] = source[name];\n                }\n            }\n\n            return dest; // Object\n        },\n\n        /**\n         * mixin({}, obj1, obj2) is allowed. If the last argument is a boolean,\n         * then the source objects properties are force copied over to dest.\n         */\n        mixin: function(dest){\n            var parameters = Array.prototype.slice.call(arguments),\n                override, i, l;\n\n            if (!dest) { dest = {}; }\n\n            if (parameters.length > 2 && typeof arguments[parameters.length-1] === 'boolean') {\n                override = parameters.pop();\n            }\n\n            for (i = 1, l = parameters.length; i < l; i++) {\n                lang._mixin(dest, parameters[i], override);\n            }\n            return dest; // Object\n        },\n\n        /**\n         * Does a deep mix of source into dest, where source values override\n         * dest values if a winner is needed.\n         * @param  {Object} dest destination object that receives the mixed\n         * values.\n         * @param  {Object} source source object contributing properties to mix\n         * in.\n         * @return {[Object]} returns dest object with the modification.\n         */\n        deepMix: function(dest, source) {\n            lang.eachProp(source, function (value, prop) {\n                if (typeof value === 'object' && value &&\n                    !lang.isArray(value) && !lang.isFunction(value) &&\n                    !(value instanceof RegExp)) {\n\n                    if (!dest[prop]) {\n                        dest[prop] = {};\n                    }\n                    lang.deepMix(dest[prop], value);\n                } else {\n                    dest[prop] = value;\n                }\n            });\n            return dest;\n        },\n\n        /**\n         * Does a type of deep copy. Do not give it anything fancy, best\n         * for basic object copies of objects that also work well as\n         * JSON-serialized things, or has properties pointing to functions.\n         * For non-array/object values, just returns the same object.\n         * @param  {Object} obj      copy properties from this object\n         * @param  {Object} [ignoredProps] optional object whose own properties\n         * are keys that should be ignored.\n         * @return {Object}\n         */\n        deeplikeCopy: function (obj, ignoredProps) {\n            var type, result;\n\n            if (lang.isArray(obj)) {\n                result = [];\n                obj.forEach(function(value) {\n                    result.push(lang.deeplikeCopy(value, ignoredProps));\n                });\n                return result;\n            }\n\n            type = typeof obj;\n            if (obj === null || obj === undefined || type === 'boolean' ||\n                type === 'string' || type === 'number' || lang.isFunction(obj) ||\n                lang.isRegExp(obj)|| isJavaObj(obj)) {\n                return obj;\n            }\n\n            //Anything else is an object, hopefully.\n            result = {};\n            lang.eachProp(obj, function(value, key) {\n                if (!ignoredProps || !hasProp(ignoredProps, key)) {\n                    result[key] = lang.deeplikeCopy(value, ignoredProps);\n                }\n            });\n            return result;\n        },\n\n        delegate: (function () {\n            // boodman/crockford delegation w/ cornford optimization\n            function TMP() {}\n            return function (obj, props) {\n                TMP.prototype = obj;\n                var tmp = new TMP();\n                TMP.prototype = null;\n                if (props) {\n                    lang.mixin(tmp, props);\n                }\n                return tmp; // Object\n            };\n        }()),\n\n        /**\n         * Helper function for iterating over an array. If the func returns\n         * a true value, it will break out of the loop.\n         */\n        each: function each(ary, func) {\n            if (ary) {\n                var i;\n                for (i = 0; i < ary.length; i += 1) {\n                    if (func(ary[i], i, ary)) {\n                        break;\n                    }\n                }\n            }\n        },\n\n        /**\n         * Cycles over properties in an object and calls a function for each\n         * property value. If the function returns a truthy value, then the\n         * iteration is stopped.\n         */\n        eachProp: function eachProp(obj, func) {\n            var prop;\n            for (prop in obj) {\n                if (hasProp(obj, prop)) {\n                    if (func(obj[prop], prop)) {\n                        break;\n                    }\n                }\n            }\n        },\n\n        //Similar to Function.prototype.bind, but the \"this\" object is specified\n        //first, since it is easier to read/figure out what \"this\" will be.\n        bind: function bind(obj, fn) {\n            return function () {\n                return fn.apply(obj, arguments);\n            };\n        },\n\n        //Escapes a content string to be be a string that has characters escaped\n        //for inclusion as part of a JS string.\n        jsEscape: function (content) {\n            return content.replace(/([\"'\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\");\n        }\n    };\n    return lang;\n});\n/**\n * prim 0.0.1 Copyright (c) 2012-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/prim for details\n */\n\n/*global setImmediate, process, setTimeout, define, module */\n\n//Set prime.hideResolutionConflict = true to allow \"resolution-races\"\n//in promise-tests to pass.\n//Since the goal of prim is to be a small impl for trusted code, it is\n//more important to normally throw in this case so that we can find\n//logic errors quicker.\n\nvar prim;\n(function () {\n    'use strict';\n    var op = Object.prototype,\n        hasOwn = op.hasOwnProperty;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i]) {\n                    func(ary[i], i, ary);\n                }\n            }\n        }\n    }\n\n    function check(p) {\n        if (hasProp(p, 'e') || hasProp(p, 'v')) {\n            if (!prim.hideResolutionConflict) {\n                throw new Error('Prim promise already resolved: ' +\n                                JSON.stringify(p));\n            }\n            return false;\n        }\n        return true;\n    }\n\n    function notify(ary, value) {\n        prim.nextTick(function () {\n            each(ary, function (item) {\n                item(value);\n            });\n        });\n    }\n\n    prim = function prim() {\n        var p,\n            ok = [],\n            fail = [];\n\n        return (p = {\n            callback: function (yes, no) {\n                if (no) {\n                    p.errback(no);\n                }\n\n                if (hasProp(p, 'v')) {\n                    prim.nextTick(function () {\n                        yes(p.v);\n                    });\n                } else {\n                    ok.push(yes);\n                }\n            },\n\n            errback: function (no) {\n                if (hasProp(p, 'e')) {\n                    prim.nextTick(function () {\n                        no(p.e);\n                    });\n                } else {\n                    fail.push(no);\n                }\n            },\n\n            finished: function () {\n                return hasProp(p, 'e') || hasProp(p, 'v');\n            },\n\n            rejected: function () {\n                return hasProp(p, 'e');\n            },\n\n            resolve: function (v) {\n                if (check(p)) {\n                    p.v = v;\n                    notify(ok, v);\n                }\n                return p;\n            },\n            reject: function (e) {\n                if (check(p)) {\n                    p.e = e;\n                    notify(fail, e);\n                }\n                return p;\n            },\n\n            start: function (fn) {\n                p.resolve();\n                return p.promise.then(fn);\n            },\n\n            promise: {\n                then: function (yes, no) {\n                    var next = prim();\n\n                    p.callback(function (v) {\n                        try {\n                            if (yes && typeof yes === 'function') {\n                                v = yes(v);\n                            }\n\n                            if (v && v.then) {\n                                v.then(next.resolve, next.reject);\n                            } else {\n                                next.resolve(v);\n                            }\n                        } catch (e) {\n                            next.reject(e);\n                        }\n                    }, function (e) {\n                        var err;\n\n                        try {\n                            if (!no || typeof no !== 'function') {\n                                next.reject(e);\n                            } else {\n                                err = no(e);\n\n                                if (err && err.then) {\n                                    err.then(next.resolve, next.reject);\n                                } else {\n                                    next.resolve(err);\n                                }\n                            }\n                        } catch (e2) {\n                            next.reject(e2);\n                        }\n                    });\n\n                    return next.promise;\n                },\n\n                fail: function (no) {\n                    return p.promise.then(null, no);\n                },\n\n                end: function () {\n                    p.errback(function (e) {\n                        throw e;\n                    });\n                }\n            }\n        });\n    };\n\n    prim.serial = function (ary) {\n        var result = prim().resolve().promise;\n        each(ary, function (item) {\n            result = result.then(function () {\n                return item();\n            });\n        });\n        return result;\n    };\n\n    prim.nextTick = typeof setImmediate === 'function' ? setImmediate :\n        (typeof process !== 'undefined' && process.nextTick ?\n            process.nextTick : (typeof setTimeout !== 'undefined' ?\n                function (fn) {\n                setTimeout(fn, 0);\n            } : function (fn) {\n        fn();\n    }));\n\n    if (typeof define === 'function' && define.amd) {\n        define('prim', function () { return prim; });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = prim;\n    }\n}());\nif(env === 'browser') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\n//Just a stub for use with uglify's consolidator.js\ndefine('browser/assert', function () {\n    return {};\n});\n\n}\n\nif(env === 'node') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\n//Needed so that rhino/assert can return a stub for uglify's consolidator.js\ndefine('node/assert', ['assert'], function (assert) {\n    return assert;\n});\n\n}\n\nif(env === 'rhino') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\n//Just a stub for use with uglify's consolidator.js\ndefine('rhino/assert', function () {\n    return {};\n});\n\n}\n\nif(env === 'xpconnect') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\n//Just a stub for use with uglify's consolidator.js\ndefine('xpconnect/assert', function () {\n    return {};\n});\n\n}\n\nif(env === 'browser') {\n/*jslint strict: false */\n/*global define: false, process: false */\n\ndefine('browser/args', function () {\n    //Always expect config via an API call\n    return [];\n});\n\n}\n\nif(env === 'node') {\n/*jslint strict: false */\n/*global define: false, process: false */\n\ndefine('node/args', function () {\n    //Do not return the \"node\" or \"r.js\" arguments\n    var args = process.argv.slice(2);\n\n    //Ignore any command option used for main x.js branching\n    if (args[0] && args[0].indexOf('-') === 0) {\n        args = args.slice(1);\n    }\n\n    return args;\n});\n\n}\n\nif(env === 'rhino') {\n/*jslint strict: false */\n/*global define: false, process: false */\n\nvar jsLibRhinoArgs = (typeof rhinoArgs !== 'undefined' && rhinoArgs) || [].concat(Array.prototype.slice.call(arguments, 0));\n\ndefine('rhino/args', function () {\n    var args = jsLibRhinoArgs;\n\n    //Ignore any command option used for main x.js branching\n    if (args[0] && args[0].indexOf('-') === 0) {\n        args = args.slice(1);\n    }\n\n    return args;\n});\n\n}\n\nif(env === 'xpconnect') {\n/*jslint strict: false */\n/*global define, xpconnectArgs */\n\nvar jsLibXpConnectArgs = (typeof xpconnectArgs !== 'undefined' && xpconnectArgs) || [].concat(Array.prototype.slice.call(arguments, 0));\n\ndefine('xpconnect/args', function () {\n    var args = jsLibXpConnectArgs;\n\n    //Ignore any command option used for main x.js branching\n    if (args[0] && args[0].indexOf('-') === 0) {\n        args = args.slice(1);\n    }\n\n    return args;\n});\n\n}\n\nif(env === 'browser') {\n/*jslint strict: false */\n/*global define: false, console: false */\n\ndefine('browser/load', ['./file'], function (file) {\n    function load(fileName) {\n        eval(file.readFile(fileName));\n    }\n\n    return load;\n});\n\n}\n\nif(env === 'node') {\n/*jslint strict: false */\n/*global define: false, console: false */\n\ndefine('node/load', ['fs'], function (fs) {\n    function load(fileName) {\n        var contents = fs.readFileSync(fileName, 'utf8');\n        process.compile(contents, fileName);\n    }\n\n    return load;\n});\n\n}\n\nif(env === 'rhino') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\ndefine('rhino/load', function () {\n    return load;\n});\n\n}\n\nif(env === 'xpconnect') {\n/*jslint strict: false */\n/*global define: false, load: false */\n\ndefine('xpconnect/load', function () {\n    return load;\n});\n\n}\n\nif(env === 'browser') {\n/*jslint sloppy: true, nomen: true */\n/*global require, define, console, XMLHttpRequest, requirejs, location */\n\ndefine('browser/file', ['prim'], function (prim) {\n\n    var file,\n        currDirRegExp = /^\\.(\\/|$)/;\n\n    function frontSlash(path) {\n        return path.replace(/\\\\/g, '/');\n    }\n\n    function exists(path) {\n        var status, xhr = new XMLHttpRequest();\n\n        //Oh yeah, that is right SYNC IO. Behold its glory\n        //and horrible blocking behavior.\n        xhr.open('HEAD', path, false);\n        xhr.send();\n        status = xhr.status;\n\n        return status === 200 || status === 304;\n    }\n\n    function mkDir(dir) {\n        console.log('mkDir is no-op in browser');\n    }\n\n    function mkFullDir(dir) {\n        console.log('mkFullDir is no-op in browser');\n    }\n\n    file = {\n        backSlashRegExp: /\\\\/g,\n        exclusionRegExp: /^\\./,\n        getLineSeparator: function () {\n            return '/';\n        },\n\n        exists: function (fileName) {\n            return exists(fileName);\n        },\n\n        parent: function (fileName) {\n            var parts = fileName.split('/');\n            parts.pop();\n            return parts.join('/');\n        },\n\n        /**\n         * Gets the absolute file path as a string, normalized\n         * to using front slashes for path separators.\n         * @param {String} fileName\n         */\n        absPath: function (fileName) {\n            var dir;\n            if (currDirRegExp.test(fileName)) {\n                dir = frontSlash(location.href);\n                if (dir.indexOf('/') !== -1) {\n                    dir = dir.split('/');\n\n                    //Pull off protocol and host, just want\n                    //to allow paths (other build parts, like\n                    //require._isSupportedBuildUrl do not support\n                    //full URLs), but a full path from\n                    //the root.\n                    dir.splice(0, 3);\n\n                    dir.pop();\n                    dir = '/' + dir.join('/');\n                }\n\n                fileName = dir + fileName.substring(1);\n            }\n\n            return fileName;\n        },\n\n        normalize: function (fileName) {\n            return fileName;\n        },\n\n        isFile: function (path) {\n            return true;\n        },\n\n        isDirectory: function (path) {\n            return false;\n        },\n\n        getFilteredFileList: function (startDir, regExpFilters, makeUnixPaths) {\n            console.log('file.getFilteredFileList is no-op in browser');\n        },\n\n        copyDir: function (srcDir, destDir, regExpFilter, onlyCopyNew) {\n            console.log('file.copyDir is no-op in browser');\n\n        },\n\n        copyFile: function (srcFileName, destFileName, onlyCopyNew) {\n            console.log('file.copyFile is no-op in browser');\n        },\n\n        /**\n         * Renames a file. May fail if \"to\" already exists or is on another drive.\n         */\n        renameFile: function (from, to) {\n            console.log('file.renameFile is no-op in browser');\n        },\n\n        /**\n         * Reads a *text* file.\n         */\n        readFile: function (path, encoding) {\n            var xhr = new XMLHttpRequest();\n\n            //Oh yeah, that is right SYNC IO. Behold its glory\n            //and horrible blocking behavior.\n            xhr.open('GET', path, false);\n            xhr.send();\n\n            return xhr.responseText;\n        },\n\n        readFileAsync: function (path, encoding) {\n            var xhr = new XMLHttpRequest(),\n                d = prim();\n\n            xhr.open('GET', path, true);\n            xhr.send();\n\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if (xhr.status > 400) {\n                        d.reject(new Error('Status: ' + xhr.status + ': ' + xhr.statusText));\n                    } else {\n                        d.resolve(xhr.responseText);\n                    }\n                }\n            };\n\n            return d.promise;\n        },\n\n        saveUtf8File: function (fileName, fileContents) {\n            //summary: saves a *text* file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf8\");\n        },\n\n        saveFile: function (fileName, fileContents, encoding) {\n            requirejs.browser.saveFile(fileName, fileContents, encoding);\n        },\n\n        deleteFile: function (fileName) {\n            console.log('file.deleteFile is no-op in browser');\n        },\n\n        /**\n         * Deletes any empty directories under the given directory.\n         */\n        deleteEmptyDirs: function (startDir) {\n            console.log('file.deleteEmptyDirs is no-op in browser');\n        }\n    };\n\n    return file;\n\n});\n\n}\n\nif(env === 'node') {\n/*jslint plusplus: false, octal:false, strict: false */\n/*global define: false, process: false */\n\ndefine('node/file', ['fs', 'path', 'prim'], function (fs, path, prim) {\n\n    var isWindows = process.platform === 'win32',\n        windowsDriveRegExp = /^[a-zA-Z]\\:\\/$/,\n        file;\n\n    function frontSlash(path) {\n        return path.replace(/\\\\/g, '/');\n    }\n\n    function exists(path) {\n        if (isWindows && path.charAt(path.length - 1) === '/' &&\n            path.charAt(path.length - 2) !== ':') {\n            path = path.substring(0, path.length - 1);\n        }\n\n        try {\n            fs.statSync(path);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function mkDir(dir) {\n        if (!exists(dir) && (!isWindows || !windowsDriveRegExp.test(dir))) {\n            fs.mkdirSync(dir, 511);\n        }\n    }\n\n    function mkFullDir(dir) {\n        var parts = dir.split('/'),\n            currDir = '',\n            first = true;\n\n        parts.forEach(function (part) {\n            //First part may be empty string if path starts with a slash.\n            currDir += part + '/';\n            first = false;\n\n            if (part) {\n                mkDir(currDir);\n            }\n        });\n    }\n\n    file = {\n        backSlashRegExp: /\\\\/g,\n        exclusionRegExp: /^\\./,\n        getLineSeparator: function () {\n            return '/';\n        },\n\n        exists: function (fileName) {\n            return exists(fileName);\n        },\n\n        parent: function (fileName) {\n            var parts = fileName.split('/');\n            parts.pop();\n            return parts.join('/');\n        },\n\n        /**\n         * Gets the absolute file path as a string, normalized\n         * to using front slashes for path separators.\n         * @param {String} fileName\n         */\n        absPath: function (fileName) {\n            return frontSlash(path.normalize(frontSlash(fs.realpathSync(fileName))));\n        },\n\n        normalize: function (fileName) {\n            return frontSlash(path.normalize(fileName));\n        },\n\n        isFile: function (path) {\n            return fs.statSync(path).isFile();\n        },\n\n        isDirectory: function (path) {\n            return fs.statSync(path).isDirectory();\n        },\n\n        getFilteredFileList: function (/*String*/startDir, /*RegExp*/regExpFilters, /*boolean?*/makeUnixPaths) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [], topDir, regExpInclude, regExpExclude, dirFileArray,\n                i, stat, filePath, ok, dirFiles, fileName;\n\n            topDir = startDir;\n\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (file.exists(topDir)) {\n                dirFileArray = fs.readdirSync(topDir);\n                for (i = 0; i < dirFileArray.length; i++) {\n                    fileName = dirFileArray[i];\n                    filePath = path.join(topDir, fileName);\n                    stat = fs.statSync(filePath);\n                    if (stat.isFile()) {\n                        if (makeUnixPaths) {\n                            //Make sure we have a JS string.\n                            if (filePath.indexOf(\"/\") === -1) {\n                                filePath = frontSlash(filePath);\n                            }\n                        }\n\n                        ok = true;\n                        if (regExpInclude) {\n                            ok = filePath.match(regExpInclude);\n                        }\n                        if (ok && regExpExclude) {\n                            ok = !filePath.match(regExpExclude);\n                        }\n\n                        if (ok && (!file.exclusionRegExp ||\n                            !file.exclusionRegExp.test(fileName))) {\n                            files.push(filePath);\n                        }\n                    } else if (stat.isDirectory() &&\n                              (!file.exclusionRegExp || !file.exclusionRegExp.test(fileName))) {\n                        dirFiles = this.getFilteredFileList(filePath, regExpFilters, makeUnixPaths);\n                        //Do not use push.apply for dir listings, can hit limit of max number\n                        //of arguments to a function call, #921.\n                        dirFiles.forEach(function (dirFile) {\n                            files.push(dirFile);\n                        });\n                    }\n                }\n            }\n\n            return files; //Array\n        },\n\n        copyDir: function (/*String*/srcDir, /*String*/destDir, /*RegExp?*/regExpFilter, /*boolean?*/onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/;\n\n            //Normalize th directory names, but keep front slashes.\n            //path module on windows now returns backslashed paths.\n            srcDir = frontSlash(path.normalize(srcDir));\n            destDir = frontSlash(path.normalize(destDir));\n\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n            copiedFiles = [], i, srcFileName, destFileName;\n\n            for (i = 0; i < fileNames.length; i++) {\n                srcFileName = fileNames[i];\n                destFileName = srcFileName.replace(srcDir, destDir);\n\n                if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                    copiedFiles.push(destFileName);\n                }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n        },\n\n        copyFile: function (/*String*/srcFileName, /*String*/destFileName, /*boolean?*/onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var parentDir;\n\n            //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n            if (onlyCopyNew) {\n                if (file.exists(destFileName) && fs.statSync(destFileName).mtime.getTime() >= fs.statSync(srcFileName).mtime.getTime()) {\n                    return false; //Boolean\n                }\n            }\n\n            //Make sure destination dir exists.\n            parentDir = path.dirname(destFileName);\n            if (!file.exists(parentDir)) {\n                mkFullDir(parentDir);\n            }\n\n            fs.writeFileSync(destFileName, fs.readFileSync(srcFileName, 'binary'), 'binary');\n\n            return true; //Boolean\n        },\n\n        /**\n         * Renames a file. May fail if \"to\" already exists or is on another drive.\n         */\n        renameFile: function (from, to) {\n            return fs.renameSync(from, to);\n        },\n\n        /**\n         * Reads a *text* file.\n         */\n        readFile: function (/*String*/path, /*String?*/encoding) {\n            if (encoding === 'utf-8') {\n                encoding = 'utf8';\n            }\n            if (!encoding) {\n                encoding = 'utf8';\n            }\n\n            var text = fs.readFileSync(path, encoding);\n\n            //Hmm, would not expect to get A BOM, but it seems to happen,\n            //remove it just in case.\n            if (text.indexOf('\\uFEFF') === 0) {\n                text = text.substring(1, text.length);\n            }\n\n            return text;\n        },\n\n        readFileAsync: function (path, encoding) {\n            var d = prim();\n            try {\n                d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n                d.reject(e);\n            }\n            return d.promise;\n        },\n\n        saveUtf8File: function (/*String*/fileName, /*String*/fileContents) {\n            //summary: saves a *text* file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf8\");\n        },\n\n        saveFile: function (/*String*/fileName, /*String*/fileContents, /*String?*/encoding) {\n            //summary: saves a *text* file.\n            var parentDir;\n\n            if (encoding === 'utf-8') {\n                encoding = 'utf8';\n            }\n            if (!encoding) {\n                encoding = 'utf8';\n            }\n\n            //Make sure destination directories exist.\n            parentDir = path.dirname(fileName);\n            if (!file.exists(parentDir)) {\n                mkFullDir(parentDir);\n            }\n\n            fs.writeFileSync(fileName, fileContents, encoding);\n        },\n\n        deleteFile: function (/*String*/fileName) {\n            //summary: deletes a file or directory if it exists.\n            var files, i, stat;\n            if (file.exists(fileName)) {\n                stat = fs.lstatSync(fileName);\n                if (stat.isDirectory()) {\n                    files = fs.readdirSync(fileName);\n                    for (i = 0; i < files.length; i++) {\n                        this.deleteFile(path.join(fileName, files[i]));\n                    }\n                    fs.rmdirSync(fileName);\n                } else {\n                    fs.unlinkSync(fileName);\n                }\n            }\n        },\n\n\n        /**\n         * Deletes any empty directories under the given directory.\n         */\n        deleteEmptyDirs: function (startDir) {\n            var dirFileArray, i, fileName, filePath, stat;\n\n            if (file.exists(startDir)) {\n                dirFileArray = fs.readdirSync(startDir);\n                for (i = 0; i < dirFileArray.length; i++) {\n                    fileName = dirFileArray[i];\n                    filePath = path.join(startDir, fileName);\n                    stat = fs.lstatSync(filePath);\n                    if (stat.isDirectory()) {\n                        file.deleteEmptyDirs(filePath);\n                    }\n                }\n\n                //If directory is now empty, remove it.\n                if (fs.readdirSync(startDir).length ===  0) {\n                    file.deleteFile(startDir);\n                }\n            }\n        }\n    };\n\n    return file;\n\n});\n\n}\n\nif(env === 'rhino') {\n//Helper functions to deal with file I/O.\n\n/*jslint plusplus: false */\n/*global java: false, define: false */\n\ndefine('rhino/file', ['prim'], function (prim) {\n    var file = {\n        backSlashRegExp: /\\\\/g,\n\n        exclusionRegExp: /^\\./,\n\n        getLineSeparator: function () {\n            return file.lineSeparator;\n        },\n\n        lineSeparator: java.lang.System.getProperty(\"line.separator\"), //Java String\n\n        exists: function (fileName) {\n            return (new java.io.File(fileName)).exists();\n        },\n\n        parent: function (fileName) {\n            return file.absPath((new java.io.File(fileName)).getParentFile());\n        },\n\n        normalize: function (fileName) {\n            return file.absPath(fileName);\n        },\n\n        isFile: function (path) {\n            return (new java.io.File(path)).isFile();\n        },\n\n        isDirectory: function (path) {\n            return (new java.io.File(path)).isDirectory();\n        },\n\n        /**\n         * Gets the absolute file path as a string, normalized\n         * to using front slashes for path separators.\n         * @param {java.io.File||String} file\n         */\n        absPath: function (fileObj) {\n            if (typeof fileObj === \"string\") {\n                fileObj = new java.io.File(fileObj);\n            }\n            return (fileObj.getCanonicalPath() + \"\").replace(file.backSlashRegExp, \"/\");\n        },\n\n        getFilteredFileList: function (/*String*/startDir, /*RegExp*/regExpFilters, /*boolean?*/makeUnixPaths, /*boolean?*/startDirIsJavaObject) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [], topDir, regExpInclude, regExpExclude, dirFileArray,\n                i, fileObj, filePath, ok, dirFiles;\n\n            topDir = startDir;\n            if (!startDirIsJavaObject) {\n                topDir = new java.io.File(startDir);\n            }\n\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (topDir.exists()) {\n                dirFileArray = topDir.listFiles();\n                for (i = 0; i < dirFileArray.length; i++) {\n                    fileObj = dirFileArray[i];\n                    if (fileObj.isFile()) {\n                        filePath = fileObj.getPath();\n                        if (makeUnixPaths) {\n                            //Make sure we have a JS string.\n                            filePath = String(filePath);\n                            if (filePath.indexOf(\"/\") === -1) {\n                                filePath = filePath.replace(/\\\\/g, \"/\");\n                            }\n                        }\n\n                        ok = true;\n                        if (regExpInclude) {\n                            ok = filePath.match(regExpInclude);\n                        }\n                        if (ok && regExpExclude) {\n                            ok = !filePath.match(regExpExclude);\n                        }\n\n                        if (ok && (!file.exclusionRegExp ||\n                            !file.exclusionRegExp.test(fileObj.getName()))) {\n                            files.push(filePath);\n                        }\n                    } else if (fileObj.isDirectory() &&\n                              (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.getName()))) {\n                        dirFiles = this.getFilteredFileList(fileObj, regExpFilters, makeUnixPaths, true);\n                        //Do not use push.apply for dir listings, can hit limit of max number\n                        //of arguments to a function call, #921.\n                        dirFiles.forEach(function (dirFile) {\n                            files.push(dirFile);\n                        });\n                    }\n                }\n            }\n\n            return files; //Array\n        },\n\n        copyDir: function (/*String*/srcDir, /*String*/destDir, /*RegExp?*/regExpFilter, /*boolean?*/onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/;\n\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n            copiedFiles = [], i, srcFileName, destFileName;\n\n            for (i = 0; i < fileNames.length; i++) {\n                srcFileName = fileNames[i];\n                destFileName = srcFileName.replace(srcDir, destDir);\n\n                if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                    copiedFiles.push(destFileName);\n                }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n        },\n\n        copyFile: function (/*String*/srcFileName, /*String*/destFileName, /*boolean?*/onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var destFile = new java.io.File(destFileName), srcFile, parentDir,\n            srcChannel, destChannel;\n\n            //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n            if (onlyCopyNew) {\n                srcFile = new java.io.File(srcFileName);\n                if (destFile.exists() && destFile.lastModified() >= srcFile.lastModified()) {\n                    return false; //Boolean\n                }\n            }\n\n            //Make sure destination dir exists.\n            parentDir = destFile.getParentFile();\n            if (!parentDir.exists()) {\n                if (!parentDir.mkdirs()) {\n                    throw \"Could not create directory: \" + parentDir.getCanonicalPath();\n                }\n            }\n\n            //Java's version of copy file.\n            srcChannel = new java.io.FileInputStream(srcFileName).getChannel();\n            destChannel = new java.io.FileOutputStream(destFileName).getChannel();\n            destChannel.transferFrom(srcChannel, 0, srcChannel.size());\n            srcChannel.close();\n            destChannel.close();\n\n            return true; //Boolean\n        },\n\n        /**\n         * Renames a file. May fail if \"to\" already exists or is on another drive.\n         */\n        renameFile: function (from, to) {\n            return (new java.io.File(from)).renameTo((new java.io.File(to)));\n        },\n\n        readFile: function (/*String*/path, /*String?*/encoding) {\n            //A file read function that can deal with BOMs\n            encoding = encoding || \"utf-8\";\n            var fileObj = new java.io.File(path),\n                    input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(fileObj), encoding)),\n                    stringBuffer, line;\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n                while (line !== null) {\n                    stringBuffer.append(line);\n                    stringBuffer.append(file.lineSeparator);\n                    line = input.readLine();\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                return String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n        },\n\n        readFileAsync: function (path, encoding) {\n            var d = prim();\n            try {\n                d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n                d.reject(e);\n            }\n            return d.promise;\n        },\n\n        saveUtf8File: function (/*String*/fileName, /*String*/fileContents) {\n            //summary: saves a file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf-8\");\n        },\n\n        saveFile: function (/*String*/fileName, /*String*/fileContents, /*String?*/encoding) {\n            //summary: saves a file.\n            var outFile = new java.io.File(fileName), outWriter, parentDir, os;\n\n            parentDir = outFile.getAbsoluteFile().getParentFile();\n            if (!parentDir.exists()) {\n                if (!parentDir.mkdirs()) {\n                    throw \"Could not create directory: \" + parentDir.getAbsolutePath();\n                }\n            }\n\n            if (encoding) {\n                outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile), encoding);\n            } else {\n                outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile));\n            }\n\n            os = new java.io.BufferedWriter(outWriter);\n            try {\n                //If in Nashorn, need to coerce the JS string to a Java string so that\n                //writer.write method dispatch correctly detects the type.\n                if (typeof importPackage !== 'undefined') {\n                    os.write(fileContents);\n                } else {\n                    os.write(new java.lang.String(fileContents));\n                }\n            } finally {\n                os.close();\n            }\n        },\n\n        deleteFile: function (/*String*/fileName) {\n            //summary: deletes a file or directory if it exists.\n            var fileObj = new java.io.File(fileName), files, i;\n            if (fileObj.exists()) {\n                if (fileObj.isDirectory()) {\n                    files = fileObj.listFiles();\n                    for (i = 0; i < files.length; i++) {\n                        this.deleteFile(files[i]);\n                    }\n                }\n                fileObj[\"delete\"]();\n            }\n        },\n\n        /**\n         * Deletes any empty directories under the given directory.\n         * The startDirIsJavaObject is private to this implementation's\n         * recursion needs.\n         */\n        deleteEmptyDirs: function (startDir, startDirIsJavaObject) {\n            var topDir = startDir,\n                dirFileArray, i, fileObj;\n\n            if (!startDirIsJavaObject) {\n                topDir = new java.io.File(startDir);\n            }\n\n            if (topDir.exists()) {\n                dirFileArray = topDir.listFiles();\n                for (i = 0; i < dirFileArray.length; i++) {\n                    fileObj = dirFileArray[i];\n                    if (fileObj.isDirectory()) {\n                        file.deleteEmptyDirs(fileObj, true);\n                    }\n                }\n\n                //If the directory is empty now, delete it.\n                if (topDir.listFiles().length === 0) {\n                    file.deleteFile(String(topDir.getPath()));\n                }\n            }\n        }\n    };\n\n    return file;\n});\n\n}\n\nif(env === 'xpconnect') {\n//Helper functions to deal with file I/O.\n\n/*jslint plusplus: false */\n/*global define, Components, xpcUtil */\n\ndefine('xpconnect/file', ['prim'], function (prim) {\n    var file,\n        Cc = Components.classes,\n        Ci = Components.interfaces,\n        //Depends on xpcUtil which is set up in x.js\n        xpfile = xpcUtil.xpfile;\n\n    function mkFullDir(dirObj) {\n        //1 is DIRECTORY_TYPE, 511 is 0777 permissions\n        if (!dirObj.exists()) {\n            dirObj.create(1, 511);\n        }\n    }\n\n    file = {\n        backSlashRegExp: /\\\\/g,\n\n        exclusionRegExp: /^\\./,\n\n        getLineSeparator: function () {\n            return file.lineSeparator;\n        },\n\n        lineSeparator: ('@mozilla.org/windows-registry-key;1' in Cc) ?\n                        '\\r\\n' : '\\n',\n\n        exists: function (fileName) {\n            return xpfile(fileName).exists();\n        },\n\n        parent: function (fileName) {\n            return xpfile(fileName).parent;\n        },\n\n        normalize: function (fileName) {\n            return file.absPath(fileName);\n        },\n\n        isFile: function (path) {\n            return xpfile(path).isFile();\n        },\n\n        isDirectory: function (path) {\n            return xpfile(path).isDirectory();\n        },\n\n        /**\n         * Gets the absolute file path as a string, normalized\n         * to using front slashes for path separators.\n         * @param {java.io.File||String} file\n         */\n        absPath: function (fileObj) {\n            if (typeof fileObj === \"string\") {\n                fileObj = xpfile(fileObj);\n            }\n            return fileObj.path;\n        },\n\n        getFilteredFileList: function (/*String*/startDir, /*RegExp*/regExpFilters, /*boolean?*/makeUnixPaths, /*boolean?*/startDirIsObject) {\n            //summary: Recurses startDir and finds matches to the files that match regExpFilters.include\n            //and do not match regExpFilters.exclude. Or just one regexp can be passed in for regExpFilters,\n            //and it will be treated as the \"include\" case.\n            //Ignores files/directories that start with a period (.) unless exclusionRegExp\n            //is set to another value.\n            var files = [], topDir, regExpInclude, regExpExclude, dirFileArray,\n                fileObj, filePath, ok, dirFiles;\n\n            topDir = startDir;\n            if (!startDirIsObject) {\n                topDir = xpfile(startDir);\n            }\n\n            regExpInclude = regExpFilters.include || regExpFilters;\n            regExpExclude = regExpFilters.exclude || null;\n\n            if (topDir.exists()) {\n                dirFileArray = topDir.directoryEntries;\n                while (dirFileArray.hasMoreElements()) {\n                    fileObj = dirFileArray.getNext().QueryInterface(Ci.nsILocalFile);\n                    if (fileObj.isFile()) {\n                        filePath = fileObj.path;\n                        if (makeUnixPaths) {\n                            if (filePath.indexOf(\"/\") === -1) {\n                                filePath = filePath.replace(/\\\\/g, \"/\");\n                            }\n                        }\n\n                        ok = true;\n                        if (regExpInclude) {\n                            ok = filePath.match(regExpInclude);\n                        }\n                        if (ok && regExpExclude) {\n                            ok = !filePath.match(regExpExclude);\n                        }\n\n                        if (ok && (!file.exclusionRegExp ||\n                            !file.exclusionRegExp.test(fileObj.leafName))) {\n                            files.push(filePath);\n                        }\n                    } else if (fileObj.isDirectory() &&\n                              (!file.exclusionRegExp || !file.exclusionRegExp.test(fileObj.leafName))) {\n                        dirFiles = this.getFilteredFileList(fileObj, regExpFilters, makeUnixPaths, true);\n                        //Do not use push.apply for dir listings, can hit limit of max number\n                        //of arguments to a function call, #921.\n                        dirFiles.forEach(function (dirFile) {\n                            files.push(dirFile);\n                        });\n                    }\n                }\n            }\n\n            return files; //Array\n        },\n\n        copyDir: function (/*String*/srcDir, /*String*/destDir, /*RegExp?*/regExpFilter, /*boolean?*/onlyCopyNew) {\n            //summary: copies files from srcDir to destDir using the regExpFilter to determine if the\n            //file should be copied. Returns a list file name strings of the destinations that were copied.\n            regExpFilter = regExpFilter || /\\w/;\n\n            var fileNames = file.getFilteredFileList(srcDir, regExpFilter, true),\n            copiedFiles = [], i, srcFileName, destFileName;\n\n            for (i = 0; i < fileNames.length; i += 1) {\n                srcFileName = fileNames[i];\n                destFileName = srcFileName.replace(srcDir, destDir);\n\n                if (file.copyFile(srcFileName, destFileName, onlyCopyNew)) {\n                    copiedFiles.push(destFileName);\n                }\n            }\n\n            return copiedFiles.length ? copiedFiles : null; //Array or null\n        },\n\n        copyFile: function (/*String*/srcFileName, /*String*/destFileName, /*boolean?*/onlyCopyNew) {\n            //summary: copies srcFileName to destFileName. If onlyCopyNew is set, it only copies the file if\n            //srcFileName is newer than destFileName. Returns a boolean indicating if the copy occurred.\n            var destFile = xpfile(destFileName),\n            srcFile = xpfile(srcFileName);\n\n            //logger.trace(\"Src filename: \" + srcFileName);\n            //logger.trace(\"Dest filename: \" + destFileName);\n\n            //If onlyCopyNew is true, then compare dates and only copy if the src is newer\n            //than dest.\n            if (onlyCopyNew) {\n                if (destFile.exists() && destFile.lastModifiedTime >= srcFile.lastModifiedTime) {\n                    return false; //Boolean\n                }\n            }\n\n            srcFile.copyTo(destFile.parent, destFile.leafName);\n\n            return true; //Boolean\n        },\n\n        /**\n         * Renames a file. May fail if \"to\" already exists or is on another drive.\n         */\n        renameFile: function (from, to) {\n            var toFile = xpfile(to);\n            return xpfile(from).moveTo(toFile.parent, toFile.leafName);\n        },\n\n        readFile: xpcUtil.readFile,\n\n        readFileAsync: function (path, encoding) {\n            var d = prim();\n            try {\n                d.resolve(file.readFile(path, encoding));\n            } catch (e) {\n                d.reject(e);\n            }\n            return d.promise;\n        },\n\n        saveUtf8File: function (/*String*/fileName, /*String*/fileContents) {\n            //summary: saves a file using UTF-8 encoding.\n            file.saveFile(fileName, fileContents, \"utf-8\");\n        },\n\n        saveFile: function (/*String*/fileName, /*String*/fileContents, /*String?*/encoding) {\n            var outStream, convertStream,\n                fileObj = xpfile(fileName);\n\n            mkFullDir(fileObj.parent);\n\n            try {\n                outStream = Cc['@mozilla.org/network/file-output-stream;1']\n                             .createInstance(Ci.nsIFileOutputStream);\n                //438 is decimal for 0777\n                outStream.init(fileObj, 0x02 | 0x08 | 0x20, 511, 0);\n\n                convertStream = Cc['@mozilla.org/intl/converter-output-stream;1']\n                                  .createInstance(Ci.nsIConverterOutputStream);\n\n                convertStream.init(outStream, encoding, 0, 0);\n                convertStream.writeString(fileContents);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            } finally {\n                if (convertStream) {\n                    convertStream.close();\n                }\n                if (outStream) {\n                    outStream.close();\n                }\n            }\n        },\n\n        deleteFile: function (/*String*/fileName) {\n            //summary: deletes a file or directory if it exists.\n            var fileObj = xpfile(fileName);\n            if (fileObj.exists()) {\n                fileObj.remove(true);\n            }\n        },\n\n        /**\n         * Deletes any empty directories under the given directory.\n         * The startDirIsJavaObject is private to this implementation's\n         * recursion needs.\n         */\n        deleteEmptyDirs: function (startDir, startDirIsObject) {\n            var topDir = startDir,\n                dirFileArray, fileObj;\n\n            if (!startDirIsObject) {\n                topDir = xpfile(startDir);\n            }\n\n            if (topDir.exists()) {\n                dirFileArray = topDir.directoryEntries;\n                while (dirFileArray.hasMoreElements()) {\n                    fileObj = dirFileArray.getNext().QueryInterface(Ci.nsILocalFile);\n\n                    if (fileObj.isDirectory()) {\n                        file.deleteEmptyDirs(fileObj, true);\n                    }\n                }\n\n                //If the directory is empty now, delete it.\n                dirFileArray = topDir.directoryEntries;\n                if (!dirFileArray.hasMoreElements()) {\n                    file.deleteFile(topDir.path);\n                }\n            }\n        }\n    };\n\n    return file;\n});\n\n}\n\nif(env === 'browser') {\n/*global process */\ndefine('browser/quit', function () {\n    'use strict';\n    return function (code) {\n    };\n});\n}\n\nif(env === 'node') {\n/*global process */\ndefine('node/quit', function () {\n    'use strict';\n    return function (code) {\n        var draining = 0;\n        var exit = function () {\n            if (draining === 0) {\n                process.exit(code);\n            } else {\n                draining -= 1;\n            }\n        };\n        if (process.stdout.bufferSize) {\n            draining += 1;\n            process.stdout.once('drain', exit);\n        }\n        if (process.stderr.bufferSize) {\n            draining += 1;\n            process.stderr.once('drain', exit);\n        }\n        exit();\n    };\n});\n\n}\n\nif(env === 'rhino') {\n/*global quit */\ndefine('rhino/quit', function () {\n    'use strict';\n    return function (code) {\n        return quit(code);\n    };\n});\n\n}\n\nif(env === 'xpconnect') {\n/*global quit */\ndefine('xpconnect/quit', function () {\n    'use strict';\n    return function (code) {\n        return quit(code);\n    };\n});\n\n}\n\nif(env === 'browser') {\n/*jslint strict: false */\n/*global define: false, console: false */\n\ndefine('browser/print', function () {\n    function print(msg) {\n        console.log(msg);\n    }\n\n    return print;\n});\n\n}\n\nif(env === 'node') {\n/*jslint strict: false */\n/*global define: false, console: false */\n\ndefine('node/print', function () {\n    function print(msg) {\n        console.log(msg);\n    }\n\n    return print;\n});\n\n}\n\nif(env === 'rhino') {\n/*jslint strict: false */\n/*global define: false, print: false */\n\ndefine('rhino/print', function () {\n    return print;\n});\n\n}\n\nif(env === 'xpconnect') {\n/*jslint strict: false */\n/*global define: false, print: false */\n\ndefine('xpconnect/print', function () {\n    return print;\n});\n\n}\n/*jslint nomen: false, strict: false */\n/*global define: false */\n\ndefine('logger', ['env!env/print'], function (print) {\n    var logger = {\n        TRACE: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        SILENT: 4,\n        level: 0,\n        logPrefix: \"\",\n\n        logLevel: function( level ) {\n            this.level = level;\n        },\n\n        trace: function (message) {\n            if (this.level <= this.TRACE) {\n                this._print(message);\n            }\n        },\n\n        info: function (message) {\n            if (this.level <= this.INFO) {\n                this._print(message);\n            }\n        },\n\n        warn: function (message) {\n            if (this.level <= this.WARN) {\n                this._print(message);\n            }\n        },\n\n        error: function (message) {\n            if (this.level <= this.ERROR) {\n                this._print(message);\n            }\n        },\n\n        _print: function (message) {\n            this._sysPrint((this.logPrefix ? (this.logPrefix + \" \") : \"\") + message);\n        },\n\n        _sysPrint: function (message) {\n            print(message);\n        }\n    };\n\n    return logger;\n});\n//Just a blank file to use when building the optimizer with the optimizer,\n//so that the build does not attempt to inline some env modules,\n//like Node's fs and path.\n\n(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof define === 'function' && define.amd)\n\t\tdefine('esprima', [], factory);\n\telse if(typeof exports === 'object' && typeof module === 'object')\n\t\t\tmodule.exports = factory();\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;\n/*global define, Reflect */\n\n/*\n * xpcshell has a smaller stack on linux and windows (1MB vs 9MB on mac),\n * and the recursive nature of esprima can cause it to overflow pretty\n * quickly. So favor it built in Reflect parser:\n * https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n */\ndefine('esprimaAdapter', ['./esprima', 'env'], function (esprima, env) {\n    if (env.get() === 'xpconnect' && typeof Reflect !== 'undefined') {\n        return Reflect;\n    } else {\n        return esprima;\n    }\n});\n(function webpackUniversalModuleDefinition(root, factory) {\nvar exports, module;\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine('source-map', [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sourceMap\"] = factory();\n\telse\n\t\troot[\"sourceMap\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * Copyright 2009-2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE.txt or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\texports.SourceMapGenerator = __webpack_require__(1).SourceMapGenerator;\n\texports.SourceMapConsumer = __webpack_require__(7).SourceMapConsumer;\n\texports.SourceNode = __webpack_require__(10).SourceNode;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar base64VLQ = __webpack_require__(2);\n\tvar util = __webpack_require__(4);\n\tvar ArraySet = __webpack_require__(5).ArraySet;\n\tvar MappingList = __webpack_require__(6).MappingList;\n\n\t/**\n\t * An instance of the SourceMapGenerator represents a source map which is\n\t * being built incrementally. You may pass an object with the following\n\t * properties:\n\t *\n\t *   - file: The filename of the generated source.\n\t *   - sourceRoot: A root for all relative URLs in this source map.\n\t */\n\tfunction SourceMapGenerator(aArgs) {\n\t  if (!aArgs) {\n\t    aArgs = {};\n\t  }\n\t  this._file = util.getArg(aArgs, 'file', null);\n\t  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n\t  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n\t  this._sources = new ArraySet();\n\t  this._names = new ArraySet();\n\t  this._mappings = new MappingList();\n\t  this._sourcesContents = null;\n\t}\n\n\tSourceMapGenerator.prototype._version = 3;\n\n\t/**\n\t * Creates a new SourceMapGenerator based on a SourceMapConsumer\n\t *\n\t * @param aSourceMapConsumer The SourceMap.\n\t */\n\tSourceMapGenerator.fromSourceMap =\n\t  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n\t    var sourceRoot = aSourceMapConsumer.sourceRoot;\n\t    var generator = new SourceMapGenerator({\n\t      file: aSourceMapConsumer.file,\n\t      sourceRoot: sourceRoot\n\t    });\n\t    aSourceMapConsumer.eachMapping(function (mapping) {\n\t      var newMapping = {\n\t        generated: {\n\t          line: mapping.generatedLine,\n\t          column: mapping.generatedColumn\n\t        }\n\t      };\n\n\t      if (mapping.source != null) {\n\t        newMapping.source = mapping.source;\n\t        if (sourceRoot != null) {\n\t          newMapping.source = util.relative(sourceRoot, newMapping.source);\n\t        }\n\n\t        newMapping.original = {\n\t          line: mapping.originalLine,\n\t          column: mapping.originalColumn\n\t        };\n\n\t        if (mapping.name != null) {\n\t          newMapping.name = mapping.name;\n\t        }\n\t      }\n\n\t      generator.addMapping(newMapping);\n\t    });\n\t    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n\t      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\t      if (content != null) {\n\t        generator.setSourceContent(sourceFile, content);\n\t      }\n\t    });\n\t    return generator;\n\t  };\n\n\t/**\n\t * Add a single mapping from original source line and column to the generated\n\t * source's line and column for this source map being created. The mapping\n\t * object should have the following properties:\n\t *\n\t *   - generated: An object with the generated line and column positions.\n\t *   - original: An object with the original line and column positions.\n\t *   - source: The original source file (relative to the sourceRoot).\n\t *   - name: An optional original token name for this mapping.\n\t */\n\tSourceMapGenerator.prototype.addMapping =\n\t  function SourceMapGenerator_addMapping(aArgs) {\n\t    var generated = util.getArg(aArgs, 'generated');\n\t    var original = util.getArg(aArgs, 'original', null);\n\t    var source = util.getArg(aArgs, 'source', null);\n\t    var name = util.getArg(aArgs, 'name', null);\n\n\t    if (!this._skipValidation) {\n\t      this._validateMapping(generated, original, source, name);\n\t    }\n\n\t    if (source != null) {\n\t      source = String(source);\n\t      if (!this._sources.has(source)) {\n\t        this._sources.add(source);\n\t      }\n\t    }\n\n\t    if (name != null) {\n\t      name = String(name);\n\t      if (!this._names.has(name)) {\n\t        this._names.add(name);\n\t      }\n\t    }\n\n\t    this._mappings.add({\n\t      generatedLine: generated.line,\n\t      generatedColumn: generated.column,\n\t      originalLine: original != null && original.line,\n\t      originalColumn: original != null && original.column,\n\t      source: source,\n\t      name: name\n\t    });\n\t  };\n\n\t/**\n\t * Set the source content for a source file.\n\t */\n\tSourceMapGenerator.prototype.setSourceContent =\n\t  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n\t    var source = aSourceFile;\n\t    if (this._sourceRoot != null) {\n\t      source = util.relative(this._sourceRoot, source);\n\t    }\n\n\t    if (aSourceContent != null) {\n\t      // Add the source content to the _sourcesContents map.\n\t      // Create a new _sourcesContents map if the property is null.\n\t      if (!this._sourcesContents) {\n\t        this._sourcesContents = Object.create(null);\n\t      }\n\t      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n\t    } else if (this._sourcesContents) {\n\t      // Remove the source file from the _sourcesContents map.\n\t      // If the _sourcesContents map is empty, set the property to null.\n\t      delete this._sourcesContents[util.toSetString(source)];\n\t      if (Object.keys(this._sourcesContents).length === 0) {\n\t        this._sourcesContents = null;\n\t      }\n\t    }\n\t  };\n\n\t/**\n\t * Applies the mappings of a sub-source-map for a specific source file to the\n\t * source map being generated. Each mapping to the supplied source file is\n\t * rewritten using the supplied source map. Note: The resolution for the\n\t * resulting mappings is the minimium of this map and the supplied map.\n\t *\n\t * @param aSourceMapConsumer The source map to be applied.\n\t * @param aSourceFile Optional. The filename of the source file.\n\t *        If omitted, SourceMapConsumer's file property will be used.\n\t * @param aSourceMapPath Optional. The dirname of the path to the source map\n\t *        to be applied. If relative, it is relative to the SourceMapConsumer.\n\t *        This parameter is needed when the two source maps aren't in the same\n\t *        directory, and the source map to be applied contains relative source\n\t *        paths. If so, those relative source paths need to be rewritten\n\t *        relative to the SourceMapGenerator.\n\t */\n\tSourceMapGenerator.prototype.applySourceMap =\n\t  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n\t    var sourceFile = aSourceFile;\n\t    // If aSourceFile is omitted, we will use the file property of the SourceMap\n\t    if (aSourceFile == null) {\n\t      if (aSourceMapConsumer.file == null) {\n\t        throw new Error(\n\t          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n\t          'or the source map\\'s \"file\" property. Both were omitted.'\n\t        );\n\t      }\n\t      sourceFile = aSourceMapConsumer.file;\n\t    }\n\t    var sourceRoot = this._sourceRoot;\n\t    // Make \"sourceFile\" relative if an absolute Url is passed.\n\t    if (sourceRoot != null) {\n\t      sourceFile = util.relative(sourceRoot, sourceFile);\n\t    }\n\t    // Applying the SourceMap can add and remove items from the sources and\n\t    // the names array.\n\t    var newSources = new ArraySet();\n\t    var newNames = new ArraySet();\n\n\t    // Find mappings for the \"sourceFile\"\n\t    this._mappings.unsortedForEach(function (mapping) {\n\t      if (mapping.source === sourceFile && mapping.originalLine != null) {\n\t        // Check if it can be mapped by the source map, then update the mapping.\n\t        var original = aSourceMapConsumer.originalPositionFor({\n\t          line: mapping.originalLine,\n\t          column: mapping.originalColumn\n\t        });\n\t        if (original.source != null) {\n\t          // Copy mapping\n\t          mapping.source = original.source;\n\t          if (aSourceMapPath != null) {\n\t            mapping.source = util.join(aSourceMapPath, mapping.source)\n\t          }\n\t          if (sourceRoot != null) {\n\t            mapping.source = util.relative(sourceRoot, mapping.source);\n\t          }\n\t          mapping.originalLine = original.line;\n\t          mapping.originalColumn = original.column;\n\t          if (original.name != null) {\n\t            mapping.name = original.name;\n\t          }\n\t        }\n\t      }\n\n\t      var source = mapping.source;\n\t      if (source != null && !newSources.has(source)) {\n\t        newSources.add(source);\n\t      }\n\n\t      var name = mapping.name;\n\t      if (name != null && !newNames.has(name)) {\n\t        newNames.add(name);\n\t      }\n\n\t    }, this);\n\t    this._sources = newSources;\n\t    this._names = newNames;\n\n\t    // Copy sourcesContents of applied map.\n\t    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n\t      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\t      if (content != null) {\n\t        if (aSourceMapPath != null) {\n\t          sourceFile = util.join(aSourceMapPath, sourceFile);\n\t        }\n\t        if (sourceRoot != null) {\n\t          sourceFile = util.relative(sourceRoot, sourceFile);\n\t        }\n\t        this.setSourceContent(sourceFile, content);\n\t      }\n\t    }, this);\n\t  };\n\n\t/**\n\t * A mapping can have one of the three levels of data:\n\t *\n\t *   1. Just the generated position.\n\t *   2. The Generated position, original position, and original source.\n\t *   3. Generated and original position, original source, as well as a name\n\t *      token.\n\t *\n\t * To maintain consistency, we validate that any new mapping being added falls\n\t * in to one of these categories.\n\t */\n\tSourceMapGenerator.prototype._validateMapping =\n\t  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n\t                                              aName) {\n\t    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n\t        && aGenerated.line > 0 && aGenerated.column >= 0\n\t        && !aOriginal && !aSource && !aName) {\n\t      // Case 1.\n\t      return;\n\t    }\n\t    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n\t             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n\t             && aGenerated.line > 0 && aGenerated.column >= 0\n\t             && aOriginal.line > 0 && aOriginal.column >= 0\n\t             && aSource) {\n\t      // Cases 2 and 3.\n\t      return;\n\t    }\n\t    else {\n\t      throw new Error('Invalid mapping: ' + JSON.stringify({\n\t        generated: aGenerated,\n\t        source: aSource,\n\t        original: aOriginal,\n\t        name: aName\n\t      }));\n\t    }\n\t  };\n\n\t/**\n\t * Serialize the accumulated mappings in to the stream of base 64 VLQs\n\t * specified by the source map format.\n\t */\n\tSourceMapGenerator.prototype._serializeMappings =\n\t  function SourceMapGenerator_serializeMappings() {\n\t    var previousGeneratedColumn = 0;\n\t    var previousGeneratedLine = 1;\n\t    var previousOriginalColumn = 0;\n\t    var previousOriginalLine = 0;\n\t    var previousName = 0;\n\t    var previousSource = 0;\n\t    var result = '';\n\t    var next;\n\t    var mapping;\n\t    var nameIdx;\n\t    var sourceIdx;\n\n\t    var mappings = this._mappings.toArray();\n\t    for (var i = 0, len = mappings.length; i < len; i++) {\n\t      mapping = mappings[i];\n\t      next = ''\n\n\t      if (mapping.generatedLine !== previousGeneratedLine) {\n\t        previousGeneratedColumn = 0;\n\t        while (mapping.generatedLine !== previousGeneratedLine) {\n\t          next += ';';\n\t          previousGeneratedLine++;\n\t        }\n\t      }\n\t      else {\n\t        if (i > 0) {\n\t          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n\t            continue;\n\t          }\n\t          next += ',';\n\t        }\n\t      }\n\n\t      next += base64VLQ.encode(mapping.generatedColumn\n\t                                 - previousGeneratedColumn);\n\t      previousGeneratedColumn = mapping.generatedColumn;\n\n\t      if (mapping.source != null) {\n\t        sourceIdx = this._sources.indexOf(mapping.source);\n\t        next += base64VLQ.encode(sourceIdx - previousSource);\n\t        previousSource = sourceIdx;\n\n\t        // lines are stored 0-based in SourceMap spec version 3\n\t        next += base64VLQ.encode(mapping.originalLine - 1\n\t                                   - previousOriginalLine);\n\t        previousOriginalLine = mapping.originalLine - 1;\n\n\t        next += base64VLQ.encode(mapping.originalColumn\n\t                                   - previousOriginalColumn);\n\t        previousOriginalColumn = mapping.originalColumn;\n\n\t        if (mapping.name != null) {\n\t          nameIdx = this._names.indexOf(mapping.name);\n\t          next += base64VLQ.encode(nameIdx - previousName);\n\t          previousName = nameIdx;\n\t        }\n\t      }\n\n\t      result += next;\n\t    }\n\n\t    return result;\n\t  };\n\n\tSourceMapGenerator.prototype._generateSourcesContent =\n\t  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n\t    return aSources.map(function (source) {\n\t      if (!this._sourcesContents) {\n\t        return null;\n\t      }\n\t      if (aSourceRoot != null) {\n\t        source = util.relative(aSourceRoot, source);\n\t      }\n\t      var key = util.toSetString(source);\n\t      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n\t        ? this._sourcesContents[key]\n\t        : null;\n\t    }, this);\n\t  };\n\n\t/**\n\t * Externalize the source map.\n\t */\n\tSourceMapGenerator.prototype.toJSON =\n\t  function SourceMapGenerator_toJSON() {\n\t    var map = {\n\t      version: this._version,\n\t      sources: this._sources.toArray(),\n\t      names: this._names.toArray(),\n\t      mappings: this._serializeMappings()\n\t    };\n\t    if (this._file != null) {\n\t      map.file = this._file;\n\t    }\n\t    if (this._sourceRoot != null) {\n\t      map.sourceRoot = this._sourceRoot;\n\t    }\n\t    if (this._sourcesContents) {\n\t      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n\t    }\n\n\t    return map;\n\t  };\n\n\t/**\n\t * Render the source map being generated to a string.\n\t */\n\tSourceMapGenerator.prototype.toString =\n\t  function SourceMapGenerator_toString() {\n\t    return JSON.stringify(this.toJSON());\n\t  };\n\n\texports.SourceMapGenerator = SourceMapGenerator;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t *\n\t * Based on the Base 64 VLQ implementation in Closure Compiler:\n\t * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n\t *\n\t * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t *  * Redistributions of source code must retain the above copyright\n\t *    notice, this list of conditions and the following disclaimer.\n\t *  * Redistributions in binary form must reproduce the above\n\t *    copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided\n\t *    with the distribution.\n\t *  * Neither the name of Google Inc. nor the names of its\n\t *    contributors may be used to endorse or promote products derived\n\t *    from this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\t * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\t * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\t * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\n\tvar base64 = __webpack_require__(3);\n\n\t// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n\t// length quantities we use in the source map spec, the first bit is the sign,\n\t// the next four bits are the actual value, and the 6th bit is the\n\t// continuation bit. The continuation bit tells us whether there are more\n\t// digits in this value following this digit.\n\t//\n\t//   Continuation\n\t//   |    Sign\n\t//   |    |\n\t//   V    V\n\t//   101011\n\n\tvar VLQ_BASE_SHIFT = 5;\n\n\t// binary: 100000\n\tvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n\t// binary: 011111\n\tvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n\t// binary: 100000\n\tvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n\t/**\n\t * Converts from a two-complement value to a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n\t *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n\t */\n\tfunction toVLQSigned(aValue) {\n\t  return aValue < 0\n\t    ? ((-aValue) << 1) + 1\n\t    : (aValue << 1) + 0;\n\t}\n\n\t/**\n\t * Converts to a two-complement value from a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n\t *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n\t */\n\tfunction fromVLQSigned(aValue) {\n\t  var isNegative = (aValue & 1) === 1;\n\t  var shifted = aValue >> 1;\n\t  return isNegative\n\t    ? -shifted\n\t    : shifted;\n\t}\n\n\t/**\n\t * Returns the base 64 VLQ encoded value.\n\t */\n\texports.encode = function base64VLQ_encode(aValue) {\n\t  var encoded = \"\";\n\t  var digit;\n\n\t  var vlq = toVLQSigned(aValue);\n\n\t  do {\n\t    digit = vlq & VLQ_BASE_MASK;\n\t    vlq >>>= VLQ_BASE_SHIFT;\n\t    if (vlq > 0) {\n\t      // There are still more digits in this value, so we must make sure the\n\t      // continuation bit is marked.\n\t      digit |= VLQ_CONTINUATION_BIT;\n\t    }\n\t    encoded += base64.encode(digit);\n\t  } while (vlq > 0);\n\n\t  return encoded;\n\t};\n\n\t/**\n\t * Decodes the next base 64 VLQ value from the given string and returns the\n\t * value and the rest of the string via the out parameter.\n\t */\n\texports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n\t  var strLen = aStr.length;\n\t  var result = 0;\n\t  var shift = 0;\n\t  var continuation, digit;\n\n\t  do {\n\t    if (aIndex >= strLen) {\n\t      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n\t    }\n\n\t    digit = base64.decode(aStr.charCodeAt(aIndex++));\n\t    if (digit === -1) {\n\t      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n\t    }\n\n\t    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n\t    digit &= VLQ_BASE_MASK;\n\t    result = result + (digit << shift);\n\t    shift += VLQ_BASE_SHIFT;\n\t  } while (continuation);\n\n\t  aOutParam.value = fromVLQSigned(result);\n\t  aOutParam.rest = aIndex;\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n\t/**\n\t * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n\t */\n\texports.encode = function (number) {\n\t  if (0 <= number && number < intToCharMap.length) {\n\t    return intToCharMap[number];\n\t  }\n\t  throw new TypeError(\"Must be between 0 and 63: \" + number);\n\t};\n\n\t/**\n\t * Decode a single base 64 character code digit to an integer. Returns -1 on\n\t * failure.\n\t */\n\texports.decode = function (charCode) {\n\t  var bigA = 65;     // 'A'\n\t  var bigZ = 90;     // 'Z'\n\n\t  var littleA = 97;  // 'a'\n\t  var littleZ = 122; // 'z'\n\n\t  var zero = 48;     // '0'\n\t  var nine = 57;     // '9'\n\n\t  var plus = 43;     // '+'\n\t  var slash = 47;    // '/'\n\n\t  var littleOffset = 26;\n\t  var numberOffset = 52;\n\n\t  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\t  if (bigA <= charCode && charCode <= bigZ) {\n\t    return (charCode - bigA);\n\t  }\n\n\t  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\t  if (littleA <= charCode && charCode <= littleZ) {\n\t    return (charCode - littleA + littleOffset);\n\t  }\n\n\t  // 52 - 61: 0123456789\n\t  if (zero <= charCode && charCode <= nine) {\n\t    return (charCode - zero + numberOffset);\n\t  }\n\n\t  // 62: +\n\t  if (charCode == plus) {\n\t    return 62;\n\t  }\n\n\t  // 63: /\n\t  if (charCode == slash) {\n\t    return 63;\n\t  }\n\n\t  // Invalid base64 digit.\n\t  return -1;\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/**\n\t * This is a helper function for getting values from parameter/options\n\t * objects.\n\t *\n\t * @param args The object we are extracting values from\n\t * @param name The name of the property we are getting.\n\t * @param defaultValue An optional value to return if the property is missing\n\t * from the object. If this is not specified and the property is missing, an\n\t * error will be thrown.\n\t */\n\tfunction getArg(aArgs, aName, aDefaultValue) {\n\t  if (aName in aArgs) {\n\t    return aArgs[aName];\n\t  } else if (arguments.length === 3) {\n\t    return aDefaultValue;\n\t  } else {\n\t    throw new Error('\"' + aName + '\" is a required argument.');\n\t  }\n\t}\n\texports.getArg = getArg;\n\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\n\n\tfunction urlParse(aUrl) {\n\t  var match = aUrl.match(urlRegexp);\n\t  if (!match) {\n\t    return null;\n\t  }\n\t  return {\n\t    scheme: match[1],\n\t    auth: match[2],\n\t    host: match[3],\n\t    port: match[4],\n\t    path: match[5]\n\t  };\n\t}\n\texports.urlParse = urlParse;\n\n\tfunction urlGenerate(aParsedUrl) {\n\t  var url = '';\n\t  if (aParsedUrl.scheme) {\n\t    url += aParsedUrl.scheme + ':';\n\t  }\n\t  url += '//';\n\t  if (aParsedUrl.auth) {\n\t    url += aParsedUrl.auth + '@';\n\t  }\n\t  if (aParsedUrl.host) {\n\t    url += aParsedUrl.host;\n\t  }\n\t  if (aParsedUrl.port) {\n\t    url += \":\" + aParsedUrl.port\n\t  }\n\t  if (aParsedUrl.path) {\n\t    url += aParsedUrl.path;\n\t  }\n\t  return url;\n\t}\n\texports.urlGenerate = urlGenerate;\n\n\t/**\n\t * Normalizes a path, or the path portion of a URL:\n\t *\n\t * - Replaces consequtive slashes with one slash.\n\t * - Removes unnecessary '.' parts.\n\t * - Removes unnecessary '<dir>/..' parts.\n\t *\n\t * Based on code in the Node.js 'path' core module.\n\t *\n\t * @param aPath The path or url to normalize.\n\t */\n\tfunction normalize(aPath) {\n\t  var path = aPath;\n\t  var url = urlParse(aPath);\n\t  if (url) {\n\t    if (!url.path) {\n\t      return aPath;\n\t    }\n\t    path = url.path;\n\t  }\n\t  var isAbsolute = exports.isAbsolute(path);\n\n\t  var parts = path.split(/\\/+/);\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t    part = parts[i];\n\t    if (part === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (part === '..') {\n\t      up++;\n\t    } else if (up > 0) {\n\t      if (part === '') {\n\t        // The first part is blank if the path is absolute. Trying to go\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\n\t        // directly after the root.\n\t        parts.splice(i + 1, up);\n\t        up = 0;\n\t      } else {\n\t        parts.splice(i, 2);\n\t        up--;\n\t      }\n\t    }\n\t  }\n\t  path = parts.join('/');\n\n\t  if (path === '') {\n\t    path = isAbsolute ? '/' : '.';\n\t  }\n\n\t  if (url) {\n\t    url.path = path;\n\t    return urlGenerate(url);\n\t  }\n\t  return path;\n\t}\n\texports.normalize = normalize;\n\n\t/**\n\t * Joins two paths/URLs.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be joined with the root.\n\t *\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t *   first.\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t *   is updated with the result and aRoot is returned. Otherwise the result\n\t *   is returned.\n\t *   - If aPath is absolute, the result is aPath.\n\t *   - Otherwise the two paths are joined with a slash.\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t */\n\tfunction join(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\t  if (aPath === \"\") {\n\t    aPath = \".\";\n\t  }\n\t  var aPathUrl = urlParse(aPath);\n\t  var aRootUrl = urlParse(aRoot);\n\t  if (aRootUrl) {\n\t    aRoot = aRootUrl.path || '/';\n\t  }\n\n\t  // `join(foo, '//www.example.org')`\n\t  if (aPathUrl && !aPathUrl.scheme) {\n\t    if (aRootUrl) {\n\t      aPathUrl.scheme = aRootUrl.scheme;\n\t    }\n\t    return urlGenerate(aPathUrl);\n\t  }\n\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t    return aPath;\n\t  }\n\n\t  // `join('http://', 'www.example.com')`\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t    aRootUrl.host = aPath;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\n\t  var joined = aPath.charAt(0) === '/'\n\t    ? aPath\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t  if (aRootUrl) {\n\t    aRootUrl.path = joined;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\t  return joined;\n\t}\n\texports.join = join;\n\n\texports.isAbsolute = function (aPath) {\n\t  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n\t};\n\n\t/**\n\t * Make a path relative to a URL or another path.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be made relative to aRoot.\n\t */\n\tfunction relative(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\n\t  aRoot = aRoot.replace(/\\/$/, '');\n\n\t  // It is possible for the path to be above the root. In this case, simply\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\n\t  // need to remove components from the root one by one, until either we find\n\t  // a prefix that fits, or we run out of components to remove.\n\t  var level = 0;\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\n\t    var index = aRoot.lastIndexOf(\"/\");\n\t    if (index < 0) {\n\t      return aPath;\n\t    }\n\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n\t    // have exhausted all components, so the path is not relative to the root.\n\t    aRoot = aRoot.slice(0, index);\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n\t      return aPath;\n\t    }\n\n\t    ++level;\n\t  }\n\n\t  // Make sure we add a \"../\" for each component we removed from the root.\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n\t}\n\texports.relative = relative;\n\n\tvar supportsNullProto = (function () {\n\t  var obj = Object.create(null);\n\t  return !('__proto__' in obj);\n\t}());\n\n\tfunction identity (s) {\n\t  return s;\n\t}\n\n\t/**\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\n\t * have to prefix all the strings in our set with an arbitrary character.\n\t *\n\t * See https://github.com/mozilla/source-map/pull/31 and\n\t * https://github.com/mozilla/source-map/issues/30\n\t *\n\t * @param String aStr\n\t */\n\tfunction toSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return '$' + aStr;\n\t  }\n\n\t  return aStr;\n\t}\n\texports.toSetString = supportsNullProto ? identity : toSetString;\n\n\tfunction fromSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return aStr.slice(1);\n\t  }\n\n\t  return aStr;\n\t}\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n\tfunction isProtoString(s) {\n\t  if (!s) {\n\t    return false;\n\t  }\n\n\t  var length = s.length;\n\n\t  if (length < 9 /* \"__proto__\".length */) {\n\t    return false;\n\t  }\n\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n\t    return false;\n\t  }\n\n\t  for (var i = length - 10; i >= 0; i--) {\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\t/**\n\t * Comparator between two mappings where the original positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same original source/line/column, but different generated\n\t * line and column the same. Useful when searching for a mapping with a\n\t * stubbed out mapping.\n\t */\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByOriginalPositions = compareByOriginalPositions;\n\n\t/**\n\t * Comparator between two mappings with deflated source and name indices where\n\t * the generated positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same generated line and column, but different\n\t * source/name/original line and column the same. Useful when searching for a\n\t * mapping with a stubbed out mapping.\n\t */\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n\tfunction strcmp(aStr1, aStr2) {\n\t  if (aStr1 === aStr2) {\n\t    return 0;\n\t  }\n\n\t  if (aStr1 > aStr2) {\n\t    return 1;\n\t  }\n\n\t  return -1;\n\t}\n\n\t/**\n\t * Comparator between two mappings with inflated source and name strings where\n\t * the generated positions are compared.\n\t */\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(4);\n\tvar has = Object.prototype.hasOwnProperty;\n\n\t/**\n\t * A data structure which is a combination of an array and a set. Adding a new\n\t * member is O(1), testing for membership is O(1), and finding the index of an\n\t * element is O(1). Removing elements from the set is not supported. Only\n\t * strings are supported for membership.\n\t */\n\tfunction ArraySet() {\n\t  this._array = [];\n\t  this._set = Object.create(null);\n\t}\n\n\t/**\n\t * Static method for creating ArraySet instances from an existing array.\n\t */\n\tArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n\t  var set = new ArraySet();\n\t  for (var i = 0, len = aArray.length; i < len; i++) {\n\t    set.add(aArray[i], aAllowDuplicates);\n\t  }\n\t  return set;\n\t};\n\n\t/**\n\t * Return how many unique items are in this ArraySet. If duplicates have been\n\t * added, than those do not count towards the size.\n\t *\n\t * @returns Number\n\t */\n\tArraySet.prototype.size = function ArraySet_size() {\n\t  return Object.getOwnPropertyNames(this._set).length;\n\t};\n\n\t/**\n\t * Add the given string to this set.\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n\t  var sStr = util.toSetString(aStr);\n\t  var isDuplicate = has.call(this._set, sStr);\n\t  var idx = this._array.length;\n\t  if (!isDuplicate || aAllowDuplicates) {\n\t    this._array.push(aStr);\n\t  }\n\t  if (!isDuplicate) {\n\t    this._set[sStr] = idx;\n\t  }\n\t};\n\n\t/**\n\t * Is the given string a member of this set?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.has = function ArraySet_has(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  return has.call(this._set, sStr);\n\t};\n\n\t/**\n\t * What is the index of the given string in the array?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  if (has.call(this._set, sStr)) {\n\t    return this._set[sStr];\n\t  }\n\t  throw new Error('\"' + aStr + '\" is not in the set.');\n\t};\n\n\t/**\n\t * What is the element at the given index?\n\t *\n\t * @param Number aIdx\n\t */\n\tArraySet.prototype.at = function ArraySet_at(aIdx) {\n\t  if (aIdx >= 0 && aIdx < this._array.length) {\n\t    return this._array[aIdx];\n\t  }\n\t  throw new Error('No element indexed by ' + aIdx);\n\t};\n\n\t/**\n\t * Returns the array representation of this set (which has the proper indices\n\t * indicated by indexOf). Note that this is a copy of the internal array used\n\t * for storing the members so that no one can mess with internal state.\n\t */\n\tArraySet.prototype.toArray = function ArraySet_toArray() {\n\t  return this._array.slice();\n\t};\n\n\texports.ArraySet = ArraySet;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2014 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(4);\n\n\t/**\n\t * Determine whether mappingB is after mappingA with respect to generated\n\t * position.\n\t */\n\tfunction generatedPositionAfter(mappingA, mappingB) {\n\t  // Optimized for most common case\n\t  var lineA = mappingA.generatedLine;\n\t  var lineB = mappingB.generatedLine;\n\t  var columnA = mappingA.generatedColumn;\n\t  var columnB = mappingB.generatedColumn;\n\t  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n\t         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n\t}\n\n\t/**\n\t * A data structure to provide a sorted view of accumulated mappings in a\n\t * performance conscious manner. It trades a neglibable overhead in general\n\t * case for a large speedup in case of mappings being added in order.\n\t */\n\tfunction MappingList() {\n\t  this._array = [];\n\t  this._sorted = true;\n\t  // Serves as infimum\n\t  this._last = {generatedLine: -1, generatedColumn: 0};\n\t}\n\n\t/**\n\t * Iterate through internal items. This method takes the same arguments that\n\t * `Array.prototype.forEach` takes.\n\t *\n\t * NOTE: The order of the mappings is NOT guaranteed.\n\t */\n\tMappingList.prototype.unsortedForEach =\n\t  function MappingList_forEach(aCallback, aThisArg) {\n\t    this._array.forEach(aCallback, aThisArg);\n\t  };\n\n\t/**\n\t * Add the given source mapping.\n\t *\n\t * @param Object aMapping\n\t */\n\tMappingList.prototype.add = function MappingList_add(aMapping) {\n\t  if (generatedPositionAfter(this._last, aMapping)) {\n\t    this._last = aMapping;\n\t    this._array.push(aMapping);\n\t  } else {\n\t    this._sorted = false;\n\t    this._array.push(aMapping);\n\t  }\n\t};\n\n\t/**\n\t * Returns the flat, sorted array of mappings. The mappings are sorted by\n\t * generated position.\n\t *\n\t * WARNING: This method returns internal data without copying, for\n\t * performance. The return value must NOT be mutated, and should be treated as\n\t * an immutable borrow. If you want to take ownership, you must make your own\n\t * copy.\n\t */\n\tMappingList.prototype.toArray = function MappingList_toArray() {\n\t  if (!this._sorted) {\n\t    this._array.sort(util.compareByGeneratedPositionsInflated);\n\t    this._sorted = true;\n\t  }\n\t  return this._array;\n\t};\n\n\texports.MappingList = MappingList;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(4);\n\tvar binarySearch = __webpack_require__(8);\n\tvar ArraySet = __webpack_require__(5).ArraySet;\n\tvar base64VLQ = __webpack_require__(2);\n\tvar quickSort = __webpack_require__(9).quickSort;\n\n\tfunction SourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  return sourceMap.sections != null\n\t    ? new IndexedSourceMapConsumer(sourceMap)\n\t    : new BasicSourceMapConsumer(sourceMap);\n\t}\n\n\tSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n\t  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n\t}\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tSourceMapConsumer.prototype._version = 3;\n\n\t// `__generatedMappings` and `__originalMappings` are arrays that hold the\n\t// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n\t// are lazily instantiated, accessed via the `_generatedMappings` and\n\t// `_originalMappings` getters respectively, and we only parse the mappings\n\t// and create these arrays once queried for a source location. We jump through\n\t// these hoops because there can be many thousands of mappings, and parsing\n\t// them is expensive, so we only want to do it if we must.\n\t//\n\t// Each object in the arrays is of the form:\n\t//\n\t//     {\n\t//       generatedLine: The line number in the generated code,\n\t//       generatedColumn: The column number in the generated code,\n\t//       source: The path to the original source file that generated this\n\t//               chunk of code,\n\t//       originalLine: The line number in the original source that\n\t//                     corresponds to this chunk of generated code,\n\t//       originalColumn: The column number in the original source that\n\t//                       corresponds to this chunk of generated code,\n\t//       name: The name of the original symbol which generated this chunk of\n\t//             code.\n\t//     }\n\t//\n\t// All properties except for `generatedLine` and `generatedColumn` can be\n\t// `null`.\n\t//\n\t// `_generatedMappings` is ordered by the generated positions.\n\t//\n\t// `_originalMappings` is ordered by the original positions.\n\n\tSourceMapConsumer.prototype.__generatedMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n\t  get: function () {\n\t    if (!this.__generatedMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__generatedMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype.__originalMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n\t  get: function () {\n\t    if (!this.__originalMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__originalMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype._charIsMappingSeparator =\n\t  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n\t    var c = aStr.charAt(index);\n\t    return c === \";\" || c === \",\";\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    throw new Error(\"Subclasses must implement _parseMappings\");\n\t  };\n\n\tSourceMapConsumer.GENERATED_ORDER = 1;\n\tSourceMapConsumer.ORIGINAL_ORDER = 2;\n\n\tSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n\tSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Iterate over each mapping between an original source/line/column and a\n\t * generated line/column in this source map.\n\t *\n\t * @param Function aCallback\n\t *        The function that is called with each mapping.\n\t * @param Object aContext\n\t *        Optional. If specified, this object will be the value of `this` every\n\t *        time that `aCallback` is called.\n\t * @param aOrder\n\t *        Either `SourceMapConsumer.GENERATED_ORDER` or\n\t *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n\t *        iterate over the mappings sorted by the generated file's line/column\n\t *        order or the original's source/line/column order, respectively. Defaults to\n\t *        `SourceMapConsumer.GENERATED_ORDER`.\n\t */\n\tSourceMapConsumer.prototype.eachMapping =\n\t  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n\t    var context = aContext || null;\n\t    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n\t    var mappings;\n\t    switch (order) {\n\t    case SourceMapConsumer.GENERATED_ORDER:\n\t      mappings = this._generatedMappings;\n\t      break;\n\t    case SourceMapConsumer.ORIGINAL_ORDER:\n\t      mappings = this._originalMappings;\n\t      break;\n\t    default:\n\t      throw new Error(\"Unknown order of iteration.\");\n\t    }\n\n\t    var sourceRoot = this.sourceRoot;\n\t    mappings.map(function (mapping) {\n\t      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n\t      if (source != null && sourceRoot != null) {\n\t        source = util.join(sourceRoot, source);\n\t      }\n\t      return {\n\t        source: source,\n\t        generatedLine: mapping.generatedLine,\n\t        generatedColumn: mapping.generatedColumn,\n\t        originalLine: mapping.originalLine,\n\t        originalColumn: mapping.originalColumn,\n\t        name: mapping.name === null ? null : this._names.at(mapping.name)\n\t      };\n\t    }, this).forEach(aCallback, context);\n\t  };\n\n\t/**\n\t * Returns all generated line and column information for the original source,\n\t * line, and column provided. If no column is provided, returns all mappings\n\t * corresponding to a either the line we are searching for or the next\n\t * closest line that has any mappings. Otherwise, returns all mappings\n\t * corresponding to the given line and either the column we are searching for\n\t * or the next closest column that has any offsets.\n\t *\n\t * The only argument is an object with the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: Optional. the column number in the original source.\n\t *\n\t * and an array of objects is returned, each with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tSourceMapConsumer.prototype.allGeneratedPositionsFor =\n\t  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n\t    var line = util.getArg(aArgs, 'line');\n\n\t    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n\t    // returns the index of the closest mapping less than the needle. By\n\t    // setting needle.originalColumn to 0, we thus find the last mapping for\n\t    // the given line, provided such a mapping exists.\n\t    var needle = {\n\t      source: util.getArg(aArgs, 'source'),\n\t      originalLine: line,\n\t      originalColumn: util.getArg(aArgs, 'column', 0)\n\t    };\n\n\t    if (this.sourceRoot != null) {\n\t      needle.source = util.relative(this.sourceRoot, needle.source);\n\t    }\n\t    if (!this._sources.has(needle.source)) {\n\t      return [];\n\t    }\n\t    needle.source = this._sources.indexOf(needle.source);\n\n\t    var mappings = [];\n\n\t    var index = this._findMapping(needle,\n\t                                  this._originalMappings,\n\t                                  \"originalLine\",\n\t                                  \"originalColumn\",\n\t                                  util.compareByOriginalPositions,\n\t                                  binarySearch.LEAST_UPPER_BOUND);\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (aArgs.column === undefined) {\n\t        var originalLine = mapping.originalLine;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we found. Since\n\t        // mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we found.\n\t        while (mapping && mapping.originalLine === originalLine) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      } else {\n\t        var originalColumn = mapping.originalColumn;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we were searching for.\n\t        // Since mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we are searching for.\n\t        while (mapping &&\n\t               mapping.originalLine === line &&\n\t               mapping.originalColumn == originalColumn) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      }\n\t    }\n\n\t    return mappings;\n\t  };\n\n\texports.SourceMapConsumer = SourceMapConsumer;\n\n\t/**\n\t * A BasicSourceMapConsumer instance represents a parsed source map which we can\n\t * query for information about the original file positions by giving it a file\n\t * position in the generated source.\n\t *\n\t * The only parameter is the raw source map (either as a JSON string, or\n\t * already parsed to an object). According to the spec, source maps have the\n\t * following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - sources: An array of URLs to the original source files.\n\t *   - names: An array of identifiers which can be referrenced by individual mappings.\n\t *   - sourceRoot: Optional. The URL root from which all sources are relative.\n\t *   - sourcesContent: Optional. An array of contents of the original source files.\n\t *   - mappings: A string of base64 VLQs which contain the actual mappings.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *\n\t * Here is an example source map, taken from the source map spec[0]:\n\t *\n\t *     {\n\t *       version : 3,\n\t *       file: \"out.js\",\n\t *       sourceRoot : \"\",\n\t *       sources: [\"foo.js\", \"bar.js\"],\n\t *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *       mappings: \"AA,AB;;ABCDE;\"\n\t *     }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n\t */\n\tfunction BasicSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sources = util.getArg(sourceMap, 'sources');\n\t  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n\t  // requires the array) to play nice here.\n\t  var names = util.getArg(sourceMap, 'names', []);\n\t  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n\t  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n\t  var mappings = util.getArg(sourceMap, 'mappings');\n\t  var file = util.getArg(sourceMap, 'file', null);\n\n\t  // Once again, Sass deviates from the spec and supplies the version as a\n\t  // string rather than a number, so we use loose equality checking here.\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  sources = sources\n\t    .map(String)\n\t    // Some source maps produce relative source paths like \"./foo.js\" instead of\n\t    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n\t    // See bugzil.la/1090768.\n\t    .map(util.normalize)\n\t    // Always ensure that absolute sources are internally stored relative to\n\t    // the source root, if the source root is absolute. Not doing this would\n\t    // be particularly problematic when the source root is a prefix of the\n\t    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n\t    .map(function (source) {\n\t      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n\t        ? util.relative(sourceRoot, source)\n\t        : source;\n\t    });\n\n\t  // Pass `true` below to allow duplicate names and sources. While source maps\n\t  // are intended to be compressed and deduplicated, the TypeScript compiler\n\t  // sometimes generates source maps with duplicates in them. See Github issue\n\t  // #72 and bugzil.la/889492.\n\t  this._names = ArraySet.fromArray(names.map(String), true);\n\t  this._sources = ArraySet.fromArray(sources, true);\n\n\t  this.sourceRoot = sourceRoot;\n\t  this.sourcesContent = sourcesContent;\n\t  this._mappings = mappings;\n\t  this.file = file;\n\t}\n\n\tBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n\t/**\n\t * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n\t *\n\t * @param SourceMapGenerator aSourceMap\n\t *        The source map that will be consumed.\n\t * @returns BasicSourceMapConsumer\n\t */\n\tBasicSourceMapConsumer.fromSourceMap =\n\t  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n\t    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n\t    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n\t    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n\t    smc.sourceRoot = aSourceMap._sourceRoot;\n\t    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n\t                                                            smc.sourceRoot);\n\t    smc.file = aSourceMap._file;\n\n\t    // Because we are modifying the entries (by converting string sources and\n\t    // names to indices into the sources and names ArraySets), we have to make\n\t    // a copy of the entry or else bad things happen. Shared mutable state\n\t    // strikes again! See github issue #191.\n\n\t    var generatedMappings = aSourceMap._mappings.toArray().slice();\n\t    var destGeneratedMappings = smc.__generatedMappings = [];\n\t    var destOriginalMappings = smc.__originalMappings = [];\n\n\t    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n\t      var srcMapping = generatedMappings[i];\n\t      var destMapping = new Mapping;\n\t      destMapping.generatedLine = srcMapping.generatedLine;\n\t      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n\t      if (srcMapping.source) {\n\t        destMapping.source = sources.indexOf(srcMapping.source);\n\t        destMapping.originalLine = srcMapping.originalLine;\n\t        destMapping.originalColumn = srcMapping.originalColumn;\n\n\t        if (srcMapping.name) {\n\t          destMapping.name = names.indexOf(srcMapping.name);\n\t        }\n\n\t        destOriginalMappings.push(destMapping);\n\t      }\n\n\t      destGeneratedMappings.push(destMapping);\n\t    }\n\n\t    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n\t    return smc;\n\t  };\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tBasicSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    return this._sources.toArray().map(function (s) {\n\t      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n\t    }, this);\n\t  }\n\t});\n\n\t/**\n\t * Provide the JIT with a nice shape / hidden class.\n\t */\n\tfunction Mapping() {\n\t  this.generatedLine = 0;\n\t  this.generatedColumn = 0;\n\t  this.source = null;\n\t  this.originalLine = null;\n\t  this.originalColumn = null;\n\t  this.name = null;\n\t}\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tBasicSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    var generatedLine = 1;\n\t    var previousGeneratedColumn = 0;\n\t    var previousOriginalLine = 0;\n\t    var previousOriginalColumn = 0;\n\t    var previousSource = 0;\n\t    var previousName = 0;\n\t    var length = aStr.length;\n\t    var index = 0;\n\t    var cachedSegments = {};\n\t    var temp = {};\n\t    var originalMappings = [];\n\t    var generatedMappings = [];\n\t    var mapping, str, segment, end, value;\n\n\t    while (index < length) {\n\t      if (aStr.charAt(index) === ';') {\n\t        generatedLine++;\n\t        index++;\n\t        previousGeneratedColumn = 0;\n\t      }\n\t      else if (aStr.charAt(index) === ',') {\n\t        index++;\n\t      }\n\t      else {\n\t        mapping = new Mapping();\n\t        mapping.generatedLine = generatedLine;\n\n\t        // Because each offset is encoded relative to the previous one,\n\t        // many segments often have the same encoding. We can exploit this\n\t        // fact by caching the parsed variable length fields of each segment,\n\t        // allowing us to avoid a second parse if we encounter the same\n\t        // segment again.\n\t        for (end = index; end < length; end++) {\n\t          if (this._charIsMappingSeparator(aStr, end)) {\n\t            break;\n\t          }\n\t        }\n\t        str = aStr.slice(index, end);\n\n\t        segment = cachedSegments[str];\n\t        if (segment) {\n\t          index += str.length;\n\t        } else {\n\t          segment = [];\n\t          while (index < end) {\n\t            base64VLQ.decode(aStr, index, temp);\n\t            value = temp.value;\n\t            index = temp.rest;\n\t            segment.push(value);\n\t          }\n\n\t          if (segment.length === 2) {\n\t            throw new Error('Found a source, but no line and column');\n\t          }\n\n\t          if (segment.length === 3) {\n\t            throw new Error('Found a source and line, but no column');\n\t          }\n\n\t          cachedSegments[str] = segment;\n\t        }\n\n\t        // Generated column.\n\t        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n\t        previousGeneratedColumn = mapping.generatedColumn;\n\n\t        if (segment.length > 1) {\n\t          // Original source.\n\t          mapping.source = previousSource + segment[1];\n\t          previousSource += segment[1];\n\n\t          // Original line.\n\t          mapping.originalLine = previousOriginalLine + segment[2];\n\t          previousOriginalLine = mapping.originalLine;\n\t          // Lines are stored 0-based\n\t          mapping.originalLine += 1;\n\n\t          // Original column.\n\t          mapping.originalColumn = previousOriginalColumn + segment[3];\n\t          previousOriginalColumn = mapping.originalColumn;\n\n\t          if (segment.length > 4) {\n\t            // Original name.\n\t            mapping.name = previousName + segment[4];\n\t            previousName += segment[4];\n\t          }\n\t        }\n\n\t        generatedMappings.push(mapping);\n\t        if (typeof mapping.originalLine === 'number') {\n\t          originalMappings.push(mapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    this.__generatedMappings = generatedMappings;\n\n\t    quickSort(originalMappings, util.compareByOriginalPositions);\n\t    this.__originalMappings = originalMappings;\n\t  };\n\n\t/**\n\t * Find the mapping that best matches the hypothetical \"needle\" mapping that\n\t * we are searching for in the given \"haystack\" of mappings.\n\t */\n\tBasicSourceMapConsumer.prototype._findMapping =\n\t  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n\t                                         aColumnName, aComparator, aBias) {\n\t    // To return the position we are searching for, we must first find the\n\t    // mapping for the given position and then return the opposite position it\n\t    // points to. Because the mappings are sorted, we can use binary search to\n\t    // find the best mapping.\n\n\t    if (aNeedle[aLineName] <= 0) {\n\t      throw new TypeError('Line must be greater than or equal to 1, got '\n\t                          + aNeedle[aLineName]);\n\t    }\n\t    if (aNeedle[aColumnName] < 0) {\n\t      throw new TypeError('Column must be greater than or equal to 0, got '\n\t                          + aNeedle[aColumnName]);\n\t    }\n\n\t    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n\t  };\n\n\t/**\n\t * Compute the last column for each generated mapping. The last column is\n\t * inclusive.\n\t */\n\tBasicSourceMapConsumer.prototype.computeColumnSpans =\n\t  function SourceMapConsumer_computeColumnSpans() {\n\t    for (var index = 0; index < this._generatedMappings.length; ++index) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      // Mappings do not contain a field for the last generated columnt. We\n\t      // can come up with an optimistic estimate, however, by assuming that\n\t      // mappings are contiguous (i.e. given two consecutive mappings, the\n\t      // first mapping ends where the second one starts).\n\t      if (index + 1 < this._generatedMappings.length) {\n\t        var nextMapping = this._generatedMappings[index + 1];\n\n\t        if (mapping.generatedLine === nextMapping.generatedLine) {\n\t          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n\t          continue;\n\t        }\n\t      }\n\n\t      // The last mapping for each line spans the entire line.\n\t      mapping.lastGeneratedColumn = Infinity;\n\t    }\n\t  };\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.originalPositionFor =\n\t  function SourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._generatedMappings,\n\t      \"generatedLine\",\n\t      \"generatedColumn\",\n\t      util.compareByGeneratedPositionsDeflated,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      if (mapping.generatedLine === needle.generatedLine) {\n\t        var source = util.getArg(mapping, 'source', null);\n\t        if (source !== null) {\n\t          source = this._sources.at(source);\n\t          if (this.sourceRoot != null) {\n\t            source = util.join(this.sourceRoot, source);\n\t          }\n\t        }\n\t        var name = util.getArg(mapping, 'name', null);\n\t        if (name !== null) {\n\t          name = this._names.at(name);\n\t        }\n\t        return {\n\t          source: source,\n\t          line: util.getArg(mapping, 'originalLine', null),\n\t          column: util.getArg(mapping, 'originalColumn', null),\n\t          name: name\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      source: null,\n\t      line: null,\n\t      column: null,\n\t      name: null\n\t    };\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n\t    if (!this.sourcesContent) {\n\t      return false;\n\t    }\n\t    return this.sourcesContent.length >= this._sources.size() &&\n\t      !this.sourcesContent.some(function (sc) { return sc == null; });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tBasicSourceMapConsumer.prototype.sourceContentFor =\n\t  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    if (!this.sourcesContent) {\n\t      return null;\n\t    }\n\n\t    if (this.sourceRoot != null) {\n\t      aSource = util.relative(this.sourceRoot, aSource);\n\t    }\n\n\t    if (this._sources.has(aSource)) {\n\t      return this.sourcesContent[this._sources.indexOf(aSource)];\n\t    }\n\n\t    var url;\n\t    if (this.sourceRoot != null\n\t        && (url = util.urlParse(this.sourceRoot))) {\n\t      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n\t      // many users. We can help them out when they expect file:// URIs to\n\t      // behave like it would if they were running a local HTTP server. See\n\t      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n\t      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n\t      if (url.scheme == \"file\"\n\t          && this._sources.has(fileUriAbsPath)) {\n\t        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n\t      }\n\n\t      if ((!url.path || url.path == \"/\")\n\t          && this._sources.has(\"/\" + aSource)) {\n\t        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n\t      }\n\t    }\n\n\t    // This function is used recursively from\n\t    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n\t    // don't want to throw if we can't find the source - we just want to\n\t    // return null, so we provide a flag to exit gracefully.\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.generatedPositionFor =\n\t  function SourceMapConsumer_generatedPositionFor(aArgs) {\n\t    var source = util.getArg(aArgs, 'source');\n\t    if (this.sourceRoot != null) {\n\t      source = util.relative(this.sourceRoot, source);\n\t    }\n\t    if (!this._sources.has(source)) {\n\t      return {\n\t        line: null,\n\t        column: null,\n\t        lastColumn: null\n\t      };\n\t    }\n\t    source = this._sources.indexOf(source);\n\n\t    var needle = {\n\t      source: source,\n\t      originalLine: util.getArg(aArgs, 'line'),\n\t      originalColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._originalMappings,\n\t      \"originalLine\",\n\t      \"originalColumn\",\n\t      util.compareByOriginalPositions,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (mapping.source === needle.source) {\n\t        return {\n\t          line: util.getArg(mapping, 'generatedLine', null),\n\t          column: util.getArg(mapping, 'generatedColumn', null),\n\t          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null,\n\t      lastColumn: null\n\t    };\n\t  };\n\n\texports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n\t/**\n\t * An IndexedSourceMapConsumer instance represents a parsed source map which\n\t * we can query for information. It differs from BasicSourceMapConsumer in\n\t * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n\t * input.\n\t *\n\t * The only parameter is a raw source map (either as a JSON string, or already\n\t * parsed to an object). According to the spec for indexed source maps, they\n\t * have the following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *   - sections: A list of section definitions.\n\t *\n\t * Each value under the \"sections\" field has two fields:\n\t *   - offset: The offset into the original specified at which this section\n\t *       begins to apply, defined as an object with a \"line\" and \"column\"\n\t *       field.\n\t *   - map: A source map definition. This source map could also be indexed,\n\t *       but doesn't have to be.\n\t *\n\t * Instead of the \"map\" field, it's also possible to have a \"url\" field\n\t * specifying a URL to retrieve a source map from, but that's currently\n\t * unsupported.\n\t *\n\t * Here's an example source map, taken from the source map spec[0], but\n\t * modified to omit a section which uses the \"url\" field.\n\t *\n\t *  {\n\t *    version : 3,\n\t *    file: \"app.js\",\n\t *    sections: [{\n\t *      offset: {line:100, column:10},\n\t *      map: {\n\t *        version : 3,\n\t *        file: \"section.js\",\n\t *        sources: [\"foo.js\", \"bar.js\"],\n\t *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *        mappings: \"AAAA,E;;ABCDE;\"\n\t *      }\n\t *    }],\n\t *  }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n\t */\n\tfunction IndexedSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sections = util.getArg(sourceMap, 'sections');\n\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  this._sources = new ArraySet();\n\t  this._names = new ArraySet();\n\n\t  var lastOffset = {\n\t    line: -1,\n\t    column: 0\n\t  };\n\t  this._sections = sections.map(function (s) {\n\t    if (s.url) {\n\t      // The url field will require support for asynchronicity.\n\t      // See https://github.com/mozilla/source-map/issues/16\n\t      throw new Error('Support for url field in sections not implemented.');\n\t    }\n\t    var offset = util.getArg(s, 'offset');\n\t    var offsetLine = util.getArg(offset, 'line');\n\t    var offsetColumn = util.getArg(offset, 'column');\n\n\t    if (offsetLine < lastOffset.line ||\n\t        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n\t      throw new Error('Section offsets must be ordered and non-overlapping.');\n\t    }\n\t    lastOffset = offset;\n\n\t    return {\n\t      generatedOffset: {\n\t        // The offset fields are 0-based, but we use 1-based indices when\n\t        // encoding/decoding from VLQ.\n\t        generatedLine: offsetLine + 1,\n\t        generatedColumn: offsetColumn + 1\n\t      },\n\t      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n\t    }\n\t  });\n\t}\n\n\tIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tIndexedSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    var sources = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n\t        sources.push(this._sections[i].consumer.sources[j]);\n\t      }\n\t    }\n\t    return sources;\n\t  }\n\t});\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.originalPositionFor =\n\t  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    // Find the section containing the generated position we're trying to map\n\t    // to an original position.\n\t    var sectionIndex = binarySearch.search(needle, this._sections,\n\t      function(needle, section) {\n\t        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n\t        if (cmp) {\n\t          return cmp;\n\t        }\n\n\t        return (needle.generatedColumn -\n\t                section.generatedOffset.generatedColumn);\n\t      });\n\t    var section = this._sections[sectionIndex];\n\n\t    if (!section) {\n\t      return {\n\t        source: null,\n\t        line: null,\n\t        column: null,\n\t        name: null\n\t      };\n\t    }\n\n\t    return section.consumer.originalPositionFor({\n\t      line: needle.generatedLine -\n\t        (section.generatedOffset.generatedLine - 1),\n\t      column: needle.generatedColumn -\n\t        (section.generatedOffset.generatedLine === needle.generatedLine\n\t         ? section.generatedOffset.generatedColumn - 1\n\t         : 0),\n\t      bias: aArgs.bias\n\t    });\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n\t    return this._sections.every(function (s) {\n\t      return s.consumer.hasContentsOfAllSources();\n\t    });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tIndexedSourceMapConsumer.prototype.sourceContentFor =\n\t  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      var content = section.consumer.sourceContentFor(aSource, true);\n\t      if (content) {\n\t        return content;\n\t      }\n\t    }\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.generatedPositionFor =\n\t  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      // Only consider this section if the requested source is in the list of\n\t      // sources of the consumer.\n\t      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n\t        continue;\n\t      }\n\t      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n\t      if (generatedPosition) {\n\t        var ret = {\n\t          line: generatedPosition.line +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          column: generatedPosition.column +\n\t            (section.generatedOffset.generatedLine === generatedPosition.line\n\t             ? section.generatedOffset.generatedColumn - 1\n\t             : 0)\n\t        };\n\t        return ret;\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null\n\t    };\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tIndexedSourceMapConsumer.prototype._parseMappings =\n\t  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    this.__generatedMappings = [];\n\t    this.__originalMappings = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\t      var sectionMappings = section.consumer._generatedMappings;\n\t      for (var j = 0; j < sectionMappings.length; j++) {\n\t        var mapping = sectionMappings[j];\n\n\t        var source = section.consumer._sources.at(mapping.source);\n\t        if (section.consumer.sourceRoot !== null) {\n\t          source = util.join(section.consumer.sourceRoot, source);\n\t        }\n\t        this._sources.add(source);\n\t        source = this._sources.indexOf(source);\n\n\t        var name = section.consumer._names.at(mapping.name);\n\t        this._names.add(name);\n\t        name = this._names.indexOf(name);\n\n\t        // The mappings coming from the consumer for the section have\n\t        // generated positions relative to the start of the section, so we\n\t        // need to offset them to be relative to the start of the concatenated\n\t        // generated file.\n\t        var adjustedMapping = {\n\t          source: source,\n\t          generatedLine: mapping.generatedLine +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          generatedColumn: mapping.generatedColumn +\n\t            (section.generatedOffset.generatedLine === mapping.generatedLine\n\t            ? section.generatedOffset.generatedColumn - 1\n\t            : 0),\n\t          originalLine: mapping.originalLine,\n\t          originalColumn: mapping.originalColumn,\n\t          name: name\n\t        };\n\n\t        this.__generatedMappings.push(adjustedMapping);\n\t        if (typeof adjustedMapping.originalLine === 'number') {\n\t          this.__originalMappings.push(adjustedMapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n\t  };\n\n\texports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t// It turns out that some (most?) JavaScript engines don't self-host\n\t// `Array.prototype.sort`. This makes sense because C++ will likely remain\n\t// faster than JS when doing raw CPU-intensive sorting. However, when using a\n\t// custom comparator function, calling back and forth between the VM's C++ and\n\t// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n\t// worse generated code for the comparator function than would be optimal. In\n\t// fact, when sorting with a comparator, these costs outweigh the benefits of\n\t// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n\t// a ~3500ms mean speed-up in `bench/bench.html`.\n\n\t/**\n\t * Swap the elements indexed by `x` and `y` in the array `ary`.\n\t *\n\t * @param {Array} ary\n\t *        The array.\n\t * @param {Number} x\n\t *        The index of the first item.\n\t * @param {Number} y\n\t *        The index of the second item.\n\t */\n\tfunction swap(ary, x, y) {\n\t  var temp = ary[x];\n\t  ary[x] = ary[y];\n\t  ary[y] = temp;\n\t}\n\n\t/**\n\t * Returns a random integer within the range `low .. high` inclusive.\n\t *\n\t * @param {Number} low\n\t *        The lower bound on the range.\n\t * @param {Number} high\n\t *        The upper bound on the range.\n\t */\n\tfunction randomIntInRange(low, high) {\n\t  return Math.round(low + (Math.random() * (high - low)));\n\t}\n\n\t/**\n\t * The Quick Sort algorithm.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t * @param {Number} p\n\t *        Start index of the array\n\t * @param {Number} r\n\t *        End index of the array\n\t */\n\tfunction doQuickSort(ary, comparator, p, r) {\n\t  // If our lower bound is less than our upper bound, we (1) partition the\n\t  // array into two pieces and (2) recurse on each half. If it is not, this is\n\t  // the empty array and our base case.\n\n\t  if (p < r) {\n\t    // (1) Partitioning.\n\t    //\n\t    // The partitioning chooses a pivot between `p` and `r` and moves all\n\t    // elements that are less than or equal to the pivot to the before it, and\n\t    // all the elements that are greater than it after it. The effect is that\n\t    // once partition is done, the pivot is in the exact place it will be when\n\t    // the array is put in sorted order, and it will not need to be moved\n\t    // again. This runs in O(n) time.\n\n\t    // Always choose a random pivot so that an input array which is reverse\n\t    // sorted does not cause O(n^2) running time.\n\t    var pivotIndex = randomIntInRange(p, r);\n\t    var i = p - 1;\n\n\t    swap(ary, pivotIndex, r);\n\t    var pivot = ary[r];\n\n\t    // Immediately after `j` is incremented in this loop, the following hold\n\t    // true:\n\t    //\n\t    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n\t    //\n\t    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n\t    for (var j = p; j < r; j++) {\n\t      if (comparator(ary[j], pivot) <= 0) {\n\t        i += 1;\n\t        swap(ary, i, j);\n\t      }\n\t    }\n\n\t    swap(ary, i + 1, j);\n\t    var q = i + 1;\n\n\t    // (2) Recurse on each half.\n\n\t    doQuickSort(ary, comparator, p, q - 1);\n\t    doQuickSort(ary, comparator, q + 1, r);\n\t  }\n\t}\n\n\t/**\n\t * Sort the given array in-place with the given comparator function.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t */\n\texports.quickSort = function (ary, comparator) {\n\t  doQuickSort(ary, comparator, 0, ary.length - 1);\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar SourceMapGenerator = __webpack_require__(1).SourceMapGenerator;\n\tvar util = __webpack_require__(4);\n\n\t// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n\t// operating systems these days (capturing the result).\n\tvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n\t// Newline character code for charCodeAt() comparisons\n\tvar NEWLINE_CODE = 10;\n\n\t// Private symbol for identifying `SourceNode`s when multiple versions of\n\t// the source-map library are loaded. This MUST NOT CHANGE across\n\t// versions!\n\tvar isSourceNode = \"$$$isSourceNode$$$\";\n\n\t/**\n\t * SourceNodes provide a way to abstract over interpolating/concatenating\n\t * snippets of generated JavaScript source code while maintaining the line and\n\t * column information associated with the original source code.\n\t *\n\t * @param aLine The original line number.\n\t * @param aColumn The original column number.\n\t * @param aSource The original source's filename.\n\t * @param aChunks Optional. An array of strings which are snippets of\n\t *        generated JS, or other SourceNodes.\n\t * @param aName The original identifier.\n\t */\n\tfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n\t  this.children = [];\n\t  this.sourceContents = {};\n\t  this.line = aLine == null ? null : aLine;\n\t  this.column = aColumn == null ? null : aColumn;\n\t  this.source = aSource == null ? null : aSource;\n\t  this.name = aName == null ? null : aName;\n\t  this[isSourceNode] = true;\n\t  if (aChunks != null) this.add(aChunks);\n\t}\n\n\t/**\n\t * Creates a SourceNode from generated code and a SourceMapConsumer.\n\t *\n\t * @param aGeneratedCode The generated code\n\t * @param aSourceMapConsumer The SourceMap for the generated code\n\t * @param aRelativePath Optional. The path that relative sources in the\n\t *        SourceMapConsumer should be relative to.\n\t */\n\tSourceNode.fromStringWithSourceMap =\n\t  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n\t    // The SourceNode we want to fill with the generated code\n\t    // and the SourceMap\n\t    var node = new SourceNode();\n\n\t    // All even indices of this array are one line of the generated code,\n\t    // while all odd indices are the newlines between two adjacent lines\n\t    // (since `REGEX_NEWLINE` captures its match).\n\t    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n\t    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n\t    var shiftNextLine = function() {\n\t      var lineContents = remainingLines.shift();\n\t      // The last line of a file might not have a newline.\n\t      var newLine = remainingLines.shift() || \"\";\n\t      return lineContents + newLine;\n\t    };\n\n\t    // We need to remember the position of \"remainingLines\"\n\t    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n\t    // The generate SourceNodes we need a code range.\n\t    // To extract it current and last mapping is used.\n\t    // Here we store the last mapping.\n\t    var lastMapping = null;\n\n\t    aSourceMapConsumer.eachMapping(function (mapping) {\n\t      if (lastMapping !== null) {\n\t        // We add the code from \"lastMapping\" to \"mapping\":\n\t        // First check if there is a new line in between.\n\t        if (lastGeneratedLine < mapping.generatedLine) {\n\t          // Associate first line with \"lastMapping\"\n\t          addMappingWithCode(lastMapping, shiftNextLine());\n\t          lastGeneratedLine++;\n\t          lastGeneratedColumn = 0;\n\t          // The remaining code is added without mapping\n\t        } else {\n\t          // There is no new line in between.\n\t          // Associate the code between \"lastGeneratedColumn\" and\n\t          // \"mapping.generatedColumn\" with \"lastMapping\"\n\t          var nextLine = remainingLines[0];\n\t          var code = nextLine.substr(0, mapping.generatedColumn -\n\t                                        lastGeneratedColumn);\n\t          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n\t                                              lastGeneratedColumn);\n\t          lastGeneratedColumn = mapping.generatedColumn;\n\t          addMappingWithCode(lastMapping, code);\n\t          // No more remaining code, continue\n\t          lastMapping = mapping;\n\t          return;\n\t        }\n\t      }\n\t      // We add the generated code until the first mapping\n\t      // to the SourceNode without any mapping.\n\t      // Each line is added as separate string.\n\t      while (lastGeneratedLine < mapping.generatedLine) {\n\t        node.add(shiftNextLine());\n\t        lastGeneratedLine++;\n\t      }\n\t      if (lastGeneratedColumn < mapping.generatedColumn) {\n\t        var nextLine = remainingLines[0];\n\t        node.add(nextLine.substr(0, mapping.generatedColumn));\n\t        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n\t        lastGeneratedColumn = mapping.generatedColumn;\n\t      }\n\t      lastMapping = mapping;\n\t    }, this);\n\t    // We have processed all mappings.\n\t    if (remainingLines.length > 0) {\n\t      if (lastMapping) {\n\t        // Associate the remaining code in the current line with \"lastMapping\"\n\t        addMappingWithCode(lastMapping, shiftNextLine());\n\t      }\n\t      // and add the remaining lines without any mapping\n\t      node.add(remainingLines.join(\"\"));\n\t    }\n\n\t    // Copy sourcesContent into SourceNode\n\t    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n\t      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\t      if (content != null) {\n\t        if (aRelativePath != null) {\n\t          sourceFile = util.join(aRelativePath, sourceFile);\n\t        }\n\t        node.setSourceContent(sourceFile, content);\n\t      }\n\t    });\n\n\t    return node;\n\n\t    function addMappingWithCode(mapping, code) {\n\t      if (mapping === null || mapping.source === undefined) {\n\t        node.add(code);\n\t      } else {\n\t        var source = aRelativePath\n\t          ? util.join(aRelativePath, mapping.source)\n\t          : mapping.source;\n\t        node.add(new SourceNode(mapping.originalLine,\n\t                                mapping.originalColumn,\n\t                                source,\n\t                                code,\n\t                                mapping.name));\n\t      }\n\t    }\n\t  };\n\n\t/**\n\t * Add a chunk of generated JS to this source node.\n\t *\n\t * @param aChunk A string snippet of generated JS code, another instance of\n\t *        SourceNode, or an array where each member is one of those things.\n\t */\n\tSourceNode.prototype.add = function SourceNode_add(aChunk) {\n\t  if (Array.isArray(aChunk)) {\n\t    aChunk.forEach(function (chunk) {\n\t      this.add(chunk);\n\t    }, this);\n\t  }\n\t  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n\t    if (aChunk) {\n\t      this.children.push(aChunk);\n\t    }\n\t  }\n\t  else {\n\t    throw new TypeError(\n\t      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n\t    );\n\t  }\n\t  return this;\n\t};\n\n\t/**\n\t * Add a chunk of generated JS to the beginning of this source node.\n\t *\n\t * @param aChunk A string snippet of generated JS code, another instance of\n\t *        SourceNode, or an array where each member is one of those things.\n\t */\n\tSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n\t  if (Array.isArray(aChunk)) {\n\t    for (var i = aChunk.length-1; i >= 0; i--) {\n\t      this.prepend(aChunk[i]);\n\t    }\n\t  }\n\t  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n\t    this.children.unshift(aChunk);\n\t  }\n\t  else {\n\t    throw new TypeError(\n\t      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n\t    );\n\t  }\n\t  return this;\n\t};\n\n\t/**\n\t * Walk over the tree of JS snippets in this node and its children. The\n\t * walking function is called once for each snippet of JS and is passed that\n\t * snippet and the its original associated source's line/column location.\n\t *\n\t * @param aFn The traversal function.\n\t */\n\tSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n\t  var chunk;\n\t  for (var i = 0, len = this.children.length; i < len; i++) {\n\t    chunk = this.children[i];\n\t    if (chunk[isSourceNode]) {\n\t      chunk.walk(aFn);\n\t    }\n\t    else {\n\t      if (chunk !== '') {\n\t        aFn(chunk, { source: this.source,\n\t                     line: this.line,\n\t                     column: this.column,\n\t                     name: this.name });\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n\t * each of `this.children`.\n\t *\n\t * @param aSep The separator.\n\t */\n\tSourceNode.prototype.join = function SourceNode_join(aSep) {\n\t  var newChildren;\n\t  var i;\n\t  var len = this.children.length;\n\t  if (len > 0) {\n\t    newChildren = [];\n\t    for (i = 0; i < len-1; i++) {\n\t      newChildren.push(this.children[i]);\n\t      newChildren.push(aSep);\n\t    }\n\t    newChildren.push(this.children[i]);\n\t    this.children = newChildren;\n\t  }\n\t  return this;\n\t};\n\n\t/**\n\t * Call String.prototype.replace on the very right-most source snippet. Useful\n\t * for trimming whitespace from the end of a source node, etc.\n\t *\n\t * @param aPattern The pattern to replace.\n\t * @param aReplacement The thing to replace the pattern with.\n\t */\n\tSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n\t  var lastChild = this.children[this.children.length - 1];\n\t  if (lastChild[isSourceNode]) {\n\t    lastChild.replaceRight(aPattern, aReplacement);\n\t  }\n\t  else if (typeof lastChild === 'string') {\n\t    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n\t  }\n\t  else {\n\t    this.children.push(''.replace(aPattern, aReplacement));\n\t  }\n\t  return this;\n\t};\n\n\t/**\n\t * Set the source content for a source file. This will be added to the SourceMapGenerator\n\t * in the sourcesContent field.\n\t *\n\t * @param aSourceFile The filename of the source file\n\t * @param aSourceContent The content of the source file\n\t */\n\tSourceNode.prototype.setSourceContent =\n\t  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n\t    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n\t  };\n\n\t/**\n\t * Walk over the tree of SourceNodes. The walking function is called for each\n\t * source file content and is passed the filename and source content.\n\t *\n\t * @param aFn The traversal function.\n\t */\n\tSourceNode.prototype.walkSourceContents =\n\t  function SourceNode_walkSourceContents(aFn) {\n\t    for (var i = 0, len = this.children.length; i < len; i++) {\n\t      if (this.children[i][isSourceNode]) {\n\t        this.children[i].walkSourceContents(aFn);\n\t      }\n\t    }\n\n\t    var sources = Object.keys(this.sourceContents);\n\t    for (var i = 0, len = sources.length; i < len; i++) {\n\t      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n\t    }\n\t  };\n\n\t/**\n\t * Return the string representation of this source node. Walks over the tree\n\t * and concatenates all the various snippets together to one string.\n\t */\n\tSourceNode.prototype.toString = function SourceNode_toString() {\n\t  var str = \"\";\n\t  this.walk(function (chunk) {\n\t    str += chunk;\n\t  });\n\t  return str;\n\t};\n\n\t/**\n\t * Returns the string representation of this source node along with a source\n\t * map.\n\t */\n\tSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n\t  var generated = {\n\t    code: \"\",\n\t    line: 1,\n\t    column: 0\n\t  };\n\t  var map = new SourceMapGenerator(aArgs);\n\t  var sourceMappingActive = false;\n\t  var lastOriginalSource = null;\n\t  var lastOriginalLine = null;\n\t  var lastOriginalColumn = null;\n\t  var lastOriginalName = null;\n\t  this.walk(function (chunk, original) {\n\t    generated.code += chunk;\n\t    if (original.source !== null\n\t        && original.line !== null\n\t        && original.column !== null) {\n\t      if(lastOriginalSource !== original.source\n\t         || lastOriginalLine !== original.line\n\t         || lastOriginalColumn !== original.column\n\t         || lastOriginalName !== original.name) {\n\t        map.addMapping({\n\t          source: original.source,\n\t          original: {\n\t            line: original.line,\n\t            column: original.column\n\t          },\n\t          generated: {\n\t            line: generated.line,\n\t            column: generated.column\n\t          },\n\t          name: original.name\n\t        });\n\t      }\n\t      lastOriginalSource = original.source;\n\t      lastOriginalLine = original.line;\n\t      lastOriginalColumn = original.column;\n\t      lastOriginalName = original.name;\n\t      sourceMappingActive = true;\n\t    } else if (sourceMappingActive) {\n\t      map.addMapping({\n\t        generated: {\n\t          line: generated.line,\n\t          column: generated.column\n\t        }\n\t      });\n\t      lastOriginalSource = null;\n\t      sourceMappingActive = false;\n\t    }\n\t    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n\t      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n\t        generated.line++;\n\t        generated.column = 0;\n\t        // Mappings end at eol\n\t        if (idx + 1 === length) {\n\t          lastOriginalSource = null;\n\t          sourceMappingActive = false;\n\t        } else if (sourceMappingActive) {\n\t          map.addMapping({\n\t            source: original.source,\n\t            original: {\n\t              line: original.line,\n\t              column: original.column\n\t            },\n\t            generated: {\n\t              line: generated.line,\n\t              column: generated.column\n\t            },\n\t            name: original.name\n\t          });\n\t        }\n\t      } else {\n\t        generated.column++;\n\t      }\n\t    }\n\t  });\n\t  this.walkSourceContents(function (sourceFile, sourceContent) {\n\t    map.setSourceContent(sourceFile, sourceContent);\n\t  });\n\n\t  return { code: generated.code, map: map };\n\t};\n\n\texports.SourceNode = SourceNode;\n\n\n/***/ }\n/******/ ])\n});\n;//Distributed under the BSD license:\n//Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\ndefine('uglifyjs', ['exports', 'source-map', 'logger', 'env!env/file'], function (exports, MOZ_SourceMap, logger, rjsFile) {\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction array_to_hash(a) {\n    var ret = Object.create(null);\n    for (var i = 0; i < a.length; ++i)\n        ret[a[i]] = true;\n    return ret;\n};\n\nfunction slice(a, start) {\n    return Array.prototype.slice.call(a, start || 0);\n};\n\nfunction characters(str) {\n    return str.split(\"\");\n};\n\nfunction member(name, array) {\n    return array.indexOf(name) >= 0;\n};\n\nfunction find_if(func, array) {\n    for (var i = 0, n = array.length; i < n; ++i) {\n        if (func(array[i]))\n            return array[i];\n    }\n};\n\nfunction repeat_string(str, i) {\n    if (i <= 0) return \"\";\n    if (i == 1) return str;\n    var d = repeat_string(str, i >> 1);\n    d += d;\n    if (i & 1) d += str;\n    return d;\n};\n\nfunction configure_error_stack(fn) {\n    Object.defineProperty(fn.prototype, \"stack\", {\n        get: function() {\n            var err = new Error(this.message);\n            err.name = this.name;\n            try {\n                throw err;\n            } catch(e) {\n                return e.stack;\n            }\n        }\n    });\n}\n\nfunction DefaultsError(msg, defs) {\n    this.message = msg;\n    this.defs = defs;\n};\nDefaultsError.prototype = Object.create(Error.prototype);\nDefaultsError.prototype.constructor = DefaultsError;\nDefaultsError.prototype.name = \"DefaultsError\";\nconfigure_error_stack(DefaultsError);\n\nDefaultsError.croak = function(msg, defs) {\n    throw new DefaultsError(msg, defs);\n};\n\nfunction defaults(args, defs, croak) {\n    if (args === true)\n        args = {};\n    var ret = args || {};\n    if (croak) for (var i in ret) if (HOP(ret, i) && !HOP(defs, i))\n        DefaultsError.croak(\"`\" + i + \"` is not a supported option\", defs);\n    for (var i in defs) if (HOP(defs, i)) {\n        ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];\n    }\n    return ret;\n};\n\nfunction merge(obj, ext) {\n    var count = 0;\n    for (var i in ext) if (HOP(ext, i)) {\n        obj[i] = ext[i];\n        count++;\n    }\n    return count;\n};\n\nfunction noop() {}\nfunction return_false() { return false; }\nfunction return_true() { return true; }\nfunction return_this() { return this; }\nfunction return_null() { return null; }\n\nvar MAP = (function(){\n    function MAP(a, f, backwards) {\n        var ret = [], top = [], i;\n        function doit() {\n            var val = f(a[i], i);\n            var is_last = val instanceof Last;\n            if (is_last) val = val.v;\n            if (val instanceof AtTop) {\n                val = val.v;\n                if (val instanceof Splice) {\n                    top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    top.push(val);\n                }\n            }\n            else if (val !== skip) {\n                if (val instanceof Splice) {\n                    ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    ret.push(val);\n                }\n            }\n            return is_last;\n        };\n        if (a instanceof Array) {\n            if (backwards) {\n                for (i = a.length; --i >= 0;) if (doit()) break;\n                ret.reverse();\n                top.reverse();\n            } else {\n                for (i = 0; i < a.length; ++i) if (doit()) break;\n            }\n        }\n        else {\n            for (i in a) if (HOP(a, i)) if (doit()) break;\n        }\n        return top.concat(ret);\n    };\n    MAP.at_top = function(val) { return new AtTop(val) };\n    MAP.splice = function(val) { return new Splice(val) };\n    MAP.last = function(val) { return new Last(val) };\n    var skip = MAP.skip = {};\n    function AtTop(val) { this.v = val };\n    function Splice(val) { this.v = val };\n    function Last(val) { this.v = val };\n    return MAP;\n})();\n\nfunction push_uniq(array, el) {\n    if (array.indexOf(el) < 0)\n        array.push(el);\n};\n\nfunction string_template(text, props) {\n    return text.replace(/\\{(.+?)\\}/g, function(str, p){\n        return props && props[p];\n    });\n};\n\nfunction remove(array, el) {\n    for (var i = array.length; --i >= 0;) {\n        if (array[i] === el) array.splice(i, 1);\n    }\n};\n\nfunction mergeSort(array, cmp) {\n    if (array.length < 2) return array.slice();\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0\n                ? r[i++] = a[ai++]\n                : r[i++] = b[bi++];\n        }\n        if (ai < a.length) r.push.apply(r, a.slice(ai));\n        if (bi < b.length) r.push.apply(r, b.slice(bi));\n        return r;\n    };\n    function _ms(a) {\n        if (a.length <= 1)\n            return a;\n        var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);\n        left = _ms(left);\n        right = _ms(right);\n        return merge(left, right);\n    };\n    return _ms(array);\n};\n\nfunction set_difference(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) < 0;\n    });\n};\n\nfunction set_intersection(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) >= 0;\n    });\n};\n\n// this function is taken from Acorn [1], written by Marijn Haverbeke\n// [1] https://github.com/marijnh/acorn\nfunction makePredicate(words) {\n    if (!(words instanceof Array)) words = words.split(\" \");\n    var f = \"\", cats = [];\n    out: for (var i = 0; i < words.length; ++i) {\n        for (var j = 0; j < cats.length; ++j)\n            if (cats[j][0].length == words[i].length) {\n                cats[j].push(words[i]);\n                continue out;\n            }\n        cats.push([words[i]]);\n    }\n    function quote(word) {\n        return JSON.stringify(word).replace(/[\\u2028\\u2029]/g, function(s) {\n            switch (s) {\n                case \"\\u2028\": return \"\\\\u2028\";\n                case \"\\u2029\": return \"\\\\u2029\";\n            }\n            return s;\n        });\n    }\n    function compareTo(arr) {\n        if (arr.length == 1) return f += \"return str === \" + quote(arr[0]) + \";\";\n        f += \"switch(str){\";\n        for (var i = 0; i < arr.length; ++i) f += \"case \" + quote(arr[i]) + \":\";\n        f += \"return true}return false;\";\n    }\n    // When there are more than three length categories, an outer\n    // switch first dispatches on the lengths, to save on comparisons.\n    if (cats.length > 3) {\n        cats.sort(function(a, b) {return b.length - a.length;});\n        f += \"switch(str.length){\";\n        for (var i = 0; i < cats.length; ++i) {\n            var cat = cats[i];\n            f += \"case \" + cat[0].length + \":\";\n            compareTo(cat);\n        }\n        f += \"}\";\n        // Otherwise, simply generate a flat `switch` statement.\n    } else {\n        compareTo(words);\n    }\n    return new Function(\"str\", f);\n};\n\nfunction all(array, predicate) {\n    for (var i = array.length; --i >= 0;)\n        if (!predicate(array[i]))\n            return false;\n    return true;\n};\n\nfunction Dictionary() {\n    this._values = Object.create(null);\n    this._size = 0;\n};\nDictionary.prototype = {\n    set: function(key, val) {\n        if (!this.has(key)) ++this._size;\n        this._values[\"$\" + key] = val;\n        return this;\n    },\n    add: function(key, val) {\n        if (this.has(key)) {\n            this.get(key).push(val);\n        } else {\n            this.set(key, [ val ]);\n        }\n        return this;\n    },\n    get: function(key) { return this._values[\"$\" + key] },\n    del: function(key) {\n        if (this.has(key)) {\n            --this._size;\n            delete this._values[\"$\" + key];\n        }\n        return this;\n    },\n    has: function(key) { return (\"$\" + key) in this._values },\n    each: function(f) {\n        for (var i in this._values)\n            f(this._values[i], i.substr(1));\n    },\n    size: function() {\n        return this._size;\n    },\n    map: function(f) {\n        var ret = [];\n        for (var i in this._values)\n            ret.push(f(this._values[i], i.substr(1)));\n        return ret;\n    },\n    toObject: function() { return this._values }\n};\nDictionary.fromObject = function(obj) {\n    var dict = new Dictionary();\n    dict._size = merge(dict._values, obj);\n    return dict;\n};\n\nfunction HOP(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// return true if the node at the top of the stack (that means the\n// innermost node in the current output) is lexically the first in\n// a statement.\nfunction first_in_statement(stack) {\n    var node = stack.parent(-1);\n    for (var i = 0, p; p = stack.parent(i); i++) {\n        if (p instanceof AST_Statement && p.body === node)\n            return true;\n        if ((p instanceof AST_Seq           && p.car === node        ) ||\n            (p instanceof AST_Call          && p.expression === node && !(p instanceof AST_New) ) ||\n            (p instanceof AST_Dot           && p.expression === node ) ||\n            (p instanceof AST_Sub           && p.expression === node ) ||\n            (p instanceof AST_Conditional   && p.condition === node  ) ||\n            (p instanceof AST_Binary        && p.left === node       ) ||\n            (p instanceof AST_UnaryPostfix  && p.expression === node ))\n        {\n            node = p;\n        } else {\n            return false;\n        }\n    }\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction DEFNODE(type, props, methods, base) {\n    if (arguments.length < 4) base = AST_Node;\n    if (!props) props = [];\n    else props = props.split(/\\s+/);\n    var self_props = props;\n    if (base && base.PROPS)\n        props = props.concat(base.PROPS);\n    var code = \"return function AST_\" + type + \"(props){ if (props) { \";\n    for (var i = props.length; --i >= 0;) {\n        code += \"this.\" + props[i] + \" = props.\" + props[i] + \";\";\n    }\n    var proto = base && new base;\n    if (proto && proto.initialize || (methods && methods.initialize))\n        code += \"this.initialize();\";\n    code += \"}}\";\n    var ctor = new Function(code)();\n    if (proto) {\n        ctor.prototype = proto;\n        ctor.BASE = base;\n    }\n    if (base) base.SUBCLASSES.push(ctor);\n    ctor.prototype.CTOR = ctor;\n    ctor.PROPS = props || null;\n    ctor.SELF_PROPS = self_props;\n    ctor.SUBCLASSES = [];\n    if (type) {\n        ctor.prototype.TYPE = ctor.TYPE = type;\n    }\n    if (methods) for (i in methods) if (HOP(methods, i)) {\n        if (/^\\$/.test(i)) {\n            ctor[i.substr(1)] = methods[i];\n        } else {\n            ctor.prototype[i] = methods[i];\n        }\n    }\n    ctor.DEFMETHOD = function(name, method) {\n        this.prototype[name] = method;\n    };\n    if (typeof exports !== \"undefined\") {\n        exports[\"AST_\" + type] = ctor;\n    }\n    return ctor;\n};\n\nvar AST_Token = DEFNODE(\"Token\", \"type value line col pos endline endcol endpos nlb comments_before file raw\", {\n}, null);\n\nvar AST_Node = DEFNODE(\"Node\", \"start end\", {\n    _clone: function(deep) {\n        if (deep) {\n            var self = this.clone();\n            return self.transform(new TreeTransformer(function(node) {\n                if (node !== self) {\n                    return node.clone(true);\n                }\n            }));\n        }\n        return new this.CTOR(this);\n    },\n    clone: function(deep) {\n        return this._clone(deep);\n    },\n    $documentation: \"Base class of all AST nodes\",\n    $propdoc: {\n        start: \"[AST_Token] The first token of this node\",\n        end: \"[AST_Token] The last token of this node\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    },\n    walk: function(visitor) {\n        return this._walk(visitor); // not sure the indirection will be any help\n    }\n}, null);\n\nAST_Node.warn_function = null;\nAST_Node.warn = function(txt, props) {\n    if (AST_Node.warn_function)\n        AST_Node.warn_function(string_template(txt, props));\n};\n\n/* -----[ statements ]----- */\n\nvar AST_Statement = DEFNODE(\"Statement\", null, {\n    $documentation: \"Base class of all statements\",\n});\n\nvar AST_Debugger = DEFNODE(\"Debugger\", null, {\n    $documentation: \"Represents a debugger statement\",\n}, AST_Statement);\n\nvar AST_Directive = DEFNODE(\"Directive\", \"value scope quote\", {\n    $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n    $propdoc: {\n        value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n        scope: \"[AST_Scope/S] The scope that this directive affects\",\n        quote: \"[string] the original quote character\"\n    },\n}, AST_Statement);\n\nvar AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", {\n    $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n    $propdoc: {\n        body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nfunction walk_body(node, visitor) {\n    var body = node.body;\n    if (body instanceof AST_Statement) {\n        body._walk(visitor);\n    }\n    else for (var i = 0, len = body.length; i < len; i++) {\n        body[i]._walk(visitor);\n    }\n};\n\nvar AST_Block = DEFNODE(\"Block\", \"body\", {\n    $documentation: \"A body of statements (usually bracketed)\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_BlockStatement = DEFNODE(\"BlockStatement\", null, {\n    $documentation: \"A block statement\",\n}, AST_Block);\n\nvar AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, {\n    $documentation: \"The empty statement (empty block or simply a semicolon)\",\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    }\n}, AST_Statement);\n\nvar AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", {\n    $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n    $propdoc: {\n        body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", {\n    $documentation: \"Statement with a label\",\n    $propdoc: {\n        label: \"[AST_Label] a label definition\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.label._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    clone: function(deep) {\n        var node = this._clone(deep);\n        if (deep) {\n            var label = node.label;\n            var def = this.label;\n            node.walk(new TreeWalker(function(node) {\n                if (node instanceof AST_LoopControl\n                    && node.label && node.label.thedef === def) {\n                    node.label.thedef = label;\n                    label.references.push(node);\n                }\n            }));\n        }\n        return node;\n    }\n}, AST_StatementWithBody);\n\nvar AST_IterationStatement = DEFNODE(\"IterationStatement\", null, {\n    $documentation: \"Internal class.  All loops inherit from it.\"\n}, AST_StatementWithBody);\n\nvar AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", {\n    $documentation: \"Base class for do/while statements\",\n    $propdoc: {\n        condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n    }\n}, AST_IterationStatement);\n\nvar AST_Do = DEFNODE(\"Do\", null, {\n    $documentation: \"A `do` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n            this.condition._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_While = DEFNODE(\"While\", null, {\n    $documentation: \"A `while` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_For = DEFNODE(\"For\", \"init condition step\", {\n    $documentation: \"A `for` statement\",\n    $propdoc: {\n        init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n        condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n        step: \"[AST_Node?] the `for` update clause, or null if empty\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_ForIn = DEFNODE(\"ForIn\", \"init name object\", {\n    $documentation: \"A `for ... in` statement\",\n    $propdoc: {\n        init: \"[AST_Node] the `for/in` initialization code\",\n        name: \"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var\",\n        object: \"[AST_Node] the object that we're looping through\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.init._walk(visitor);\n            this.object._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_With = DEFNODE(\"With\", \"expression\", {\n    $documentation: \"A `with` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `with` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ scope and functions ]----- */\n\nvar AST_Scope = DEFNODE(\"Scope\", \"directives variables functions uses_with uses_eval parent_scope enclosed cname\", {\n    $documentation: \"Base class for all statements introducing a lexical scope\",\n    $propdoc: {\n        directives: \"[string*/S] an array of directives declared in this scope\",\n        variables: \"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n        functions: \"[Object/S] like `variables`, but only lists function declarations\",\n        uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n        uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n        parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n        enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n        cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\",\n    },\n}, AST_Block);\n\nvar AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", {\n    $documentation: \"The toplevel scope\",\n    $propdoc: {\n        globals: \"[Object/S] a map of name -> SymbolDef for all undeclared names\",\n    },\n    wrap_enclose: function(arg_parameter_pairs) {\n        var self = this;\n        var args = [];\n        var parameters = [];\n\n        arg_parameter_pairs.forEach(function(pair) {\n            var splitAt = pair.lastIndexOf(\":\");\n\n            args.push(pair.substr(0, splitAt));\n            parameters.push(pair.substr(splitAt + 1));\n        });\n\n        var wrapped_tl = \"(function(\" + parameters.join(\",\") + \"){ '$ORIG'; })(\" + args.join(\",\") + \")\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(self.body);\n            }\n        }));\n        return wrapped_tl;\n    },\n    wrap_commonjs: function(name, export_all) {\n        var self = this;\n        var to_export = [];\n        if (export_all) {\n            self.figure_out_scope();\n            self.walk(new TreeWalker(function(node){\n                if (node instanceof AST_SymbolDeclaration && node.definition().global) {\n                    if (!find_if(function(n){ return n.name == node.name }, to_export))\n                        to_export.push(node);\n                }\n            }));\n        }\n        var wrapped_tl = \"(function(exports, global){ '$ORIG'; '$EXPORTS'; global['\" + name + \"'] = exports; }({}, (function(){return this}())))\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_Directive) {\n                switch (node.value) {\n                  case \"$ORIG\":\n                    return MAP.splice(self.body);\n                  case \"$EXPORTS\":\n                    var body = [];\n                    to_export.forEach(function(sym){\n                        body.push(new AST_SimpleStatement({\n                            body: new AST_Assign({\n                                left: new AST_Sub({\n                                    expression: new AST_SymbolRef({ name: \"exports\" }),\n                                    property: new AST_String({ value: sym.name }),\n                                }),\n                                operator: \"=\",\n                                right: new AST_SymbolRef(sym),\n                            }),\n                        }));\n                    });\n                    return MAP.splice(body);\n                }\n            }\n        }));\n        return wrapped_tl;\n    }\n}, AST_Scope);\n\nvar AST_Lambda = DEFNODE(\"Lambda\", \"name argnames uses_arguments\", {\n    $documentation: \"Base class for functions\",\n    $propdoc: {\n        name: \"[AST_SymbolDeclaration?] the name of this function\",\n        argnames: \"[AST_SymbolFunarg*] array of function arguments\",\n        uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.name) this.name._walk(visitor);\n            var argnames = this.argnames;\n            for (var i = 0, len = argnames.length; i < len; i++) {\n                argnames[i]._walk(visitor);\n            }\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Scope);\n\nvar AST_Accessor = DEFNODE(\"Accessor\", null, {\n    $documentation: \"A setter/getter function.  The `name` property is always null.\"\n}, AST_Lambda);\n\nvar AST_Function = DEFNODE(\"Function\", null, {\n    $documentation: \"A function expression\"\n}, AST_Lambda);\n\nvar AST_Defun = DEFNODE(\"Defun\", null, {\n    $documentation: \"A function definition\"\n}, AST_Lambda);\n\n/* -----[ JUMPS ]----- */\n\nvar AST_Jump = DEFNODE(\"Jump\", null, {\n    $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n}, AST_Statement);\n\nvar AST_Exit = DEFNODE(\"Exit\", \"value\", {\n    $documentation: \"Base class for “exits” (`return` and `throw`)\",\n    $propdoc: {\n        value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.value && function(){\n            this.value._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Return = DEFNODE(\"Return\", null, {\n    $documentation: \"A `return` statement\"\n}, AST_Exit);\n\nvar AST_Throw = DEFNODE(\"Throw\", null, {\n    $documentation: \"A `throw` statement\"\n}, AST_Exit);\n\nvar AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", {\n    $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n    $propdoc: {\n        label: \"[AST_LabelRef?] the label, or null if none\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.label && function(){\n            this.label._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Break = DEFNODE(\"Break\", null, {\n    $documentation: \"A `break` statement\"\n}, AST_LoopControl);\n\nvar AST_Continue = DEFNODE(\"Continue\", null, {\n    $documentation: \"A `continue` statement\"\n}, AST_LoopControl);\n\n/* -----[ IF ]----- */\n\nvar AST_If = DEFNODE(\"If\", \"condition alternative\", {\n    $documentation: \"A `if` statement\",\n    $propdoc: {\n        condition: \"[AST_Node] the `if` condition\",\n        alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n            if (this.alternative) this.alternative._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ SWITCH ]----- */\n\nvar AST_Switch = DEFNODE(\"Switch\", \"expression\", {\n    $documentation: \"A `switch` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `switch` “discriminant”\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, {\n    $documentation: \"Base class for `switch` branches\",\n}, AST_Block);\n\nvar AST_Default = DEFNODE(\"Default\", null, {\n    $documentation: \"A `default` switch branch\",\n}, AST_SwitchBranch);\n\nvar AST_Case = DEFNODE(\"Case\", \"expression\", {\n    $documentation: \"A `case` switch branch\",\n    $propdoc: {\n        expression: \"[AST_Node] the `case` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_SwitchBranch);\n\n/* -----[ EXCEPTIONS ]----- */\n\nvar AST_Try = DEFNODE(\"Try\", \"bcatch bfinally\", {\n    $documentation: \"A `try` statement\",\n    $propdoc: {\n        bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n        bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Catch = DEFNODE(\"Catch\", \"argname\", {\n    $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n    $propdoc: {\n        argname: \"[AST_SymbolCatch] symbol for the exception\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.argname._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Finally = DEFNODE(\"Finally\", null, {\n    $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n}, AST_Block);\n\n/* -----[ VAR/CONST ]----- */\n\nvar AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", {\n    $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n    $propdoc: {\n        definitions: \"[AST_VarDef*] array of variable definitions\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            var definitions = this.definitions;\n            for (var i = 0, len = definitions.length; i < len; i++) {\n                definitions[i]._walk(visitor);\n            }\n        });\n    }\n}, AST_Statement);\n\nvar AST_Var = DEFNODE(\"Var\", null, {\n    $documentation: \"A `var` statement\"\n}, AST_Definitions);\n\nvar AST_Const = DEFNODE(\"Const\", null, {\n    $documentation: \"A `const` statement\"\n}, AST_Definitions);\n\nvar AST_VarDef = DEFNODE(\"VarDef\", \"name value\", {\n    $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n    $propdoc: {\n        name: \"[AST_SymbolVar|AST_SymbolConst] name of the variable\",\n        value: \"[AST_Node?] initializer, or null of there's no initializer\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.name._walk(visitor);\n            if (this.value) this.value._walk(visitor);\n        });\n    }\n});\n\n/* -----[ OTHER ]----- */\n\nvar AST_Call = DEFNODE(\"Call\", \"expression args\", {\n    $documentation: \"A function call expression\",\n    $propdoc: {\n        expression: \"[AST_Node] expression to invoke as function\",\n        args: \"[AST_Node*] array of arguments\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            var args = this.args;\n            for (var i = 0, len = args.length; i < len; i++) {\n                args[i]._walk(visitor);\n            }\n        });\n    }\n});\n\nvar AST_New = DEFNODE(\"New\", null, {\n    $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n}, AST_Call);\n\nvar AST_Seq = DEFNODE(\"Seq\", \"car cdr\", {\n    $documentation: \"A sequence expression (two comma-separated expressions)\",\n    $propdoc: {\n        car: \"[AST_Node] first element in sequence\",\n        cdr: \"[AST_Node] second element in sequence\"\n    },\n    $cons: function(x, y) {\n        var seq = new AST_Seq(x);\n        seq.car = x;\n        seq.cdr = y;\n        return seq;\n    },\n    $from_array: function(array) {\n        if (array.length == 0) return null;\n        if (array.length == 1) return array[0].clone();\n        var list = null;\n        for (var i = array.length; --i >= 0;) {\n            list = AST_Seq.cons(array[i], list);\n        }\n        var p = list;\n        while (p) {\n            if (p.cdr && !p.cdr.cdr) {\n                p.cdr = p.cdr.car;\n                break;\n            }\n            p = p.cdr;\n        }\n        return list;\n    },\n    to_array: function() {\n        var p = this, a = [];\n        while (p) {\n            a.push(p.car);\n            if (p.cdr && !(p.cdr instanceof AST_Seq)) {\n                a.push(p.cdr);\n                break;\n            }\n            p = p.cdr;\n        }\n        return a;\n    },\n    add: function(node) {\n        var p = this;\n        while (p) {\n            if (!(p.cdr instanceof AST_Seq)) {\n                var cell = AST_Seq.cons(p.cdr, node);\n                return p.cdr = cell;\n            }\n            p = p.cdr;\n        }\n    },\n    len: function() {\n        if (this.cdr instanceof AST_Seq) {\n            return this.cdr.len() + 1;\n        } else {\n            return 2;\n        }\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.car._walk(visitor);\n            if (this.cdr) this.cdr._walk(visitor);\n        });\n    }\n});\n\nvar AST_PropAccess = DEFNODE(\"PropAccess\", \"expression property\", {\n    $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n    $propdoc: {\n        expression: \"[AST_Node] the “container” expression\",\n        property: \"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\"\n    }\n});\n\nvar AST_Dot = DEFNODE(\"Dot\", null, {\n    $documentation: \"A dotted property access expression\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Sub = DEFNODE(\"Sub\", null, {\n    $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.property._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Unary = DEFNODE(\"Unary\", \"operator expression\", {\n    $documentation: \"Base class for unary expressions\",\n    $propdoc: {\n        operator: \"[string] the operator\",\n        expression: \"[AST_Node] expression that this unary operator applies to\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n});\n\nvar AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, {\n    $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n}, AST_Unary);\n\nvar AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, {\n    $documentation: \"Unary postfix expression, i.e. `i++`\"\n}, AST_Unary);\n\nvar AST_Binary = DEFNODE(\"Binary\", \"left operator right\", {\n    $documentation: \"Binary expression, i.e. `a + b`\",\n    $propdoc: {\n        left: \"[AST_Node] left-hand side expression\",\n        operator: \"[string] the operator\",\n        right: \"[AST_Node] right-hand side expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.left._walk(visitor);\n            this.right._walk(visitor);\n        });\n    }\n});\n\nvar AST_Conditional = DEFNODE(\"Conditional\", \"condition consequent alternative\", {\n    $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n    $propdoc: {\n        condition: \"[AST_Node]\",\n        consequent: \"[AST_Node]\",\n        alternative: \"[AST_Node]\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.consequent._walk(visitor);\n            this.alternative._walk(visitor);\n        });\n    }\n});\n\nvar AST_Assign = DEFNODE(\"Assign\", null, {\n    $documentation: \"An assignment expression — `a = b + 5`\",\n}, AST_Binary);\n\n/* -----[ LITERALS ]----- */\n\nvar AST_Array = DEFNODE(\"Array\", \"elements\", {\n    $documentation: \"An array literal\",\n    $propdoc: {\n        elements: \"[AST_Node*] array of elements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            var elements = this.elements;\n            for (var i = 0, len = elements.length; i < len; i++) {\n                elements[i]._walk(visitor);\n            }\n        });\n    }\n});\n\nvar AST_Object = DEFNODE(\"Object\", \"properties\", {\n    $documentation: \"An object literal\",\n    $propdoc: {\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            var properties = this.properties;\n            for (var i = 0, len = properties.length; i < len; i++) {\n                properties[i]._walk(visitor);\n            }\n        });\n    }\n});\n\nvar AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", {\n    $documentation: \"Base class for literal object properties\",\n    $propdoc: {\n        key: \"[string] the property name converted to a string for ObjectKeyVal.  For setters and getters this is an AST_SymbolAccessor.\",\n        value: \"[AST_Node] property value.  For setters and getters this is an AST_Accessor.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.value._walk(visitor);\n        });\n    }\n});\n\nvar AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", {\n    $documentation: \"A key: value object property\",\n    $propdoc: {\n        quote: \"[string] the original quote character\"\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectSetter = DEFNODE(\"ObjectSetter\", null, {\n    $documentation: \"An object setter property\",\n}, AST_ObjectProperty);\n\nvar AST_ObjectGetter = DEFNODE(\"ObjectGetter\", null, {\n    $documentation: \"An object getter property\",\n}, AST_ObjectProperty);\n\nvar AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", {\n    $propdoc: {\n        name: \"[string] name of this symbol\",\n        scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n        thedef: \"[SymbolDef/S] the definition of this symbol\"\n    },\n    $documentation: \"Base class for all symbols\",\n});\n\nvar AST_SymbolAccessor = DEFNODE(\"SymbolAccessor\", null, {\n    $documentation: \"The name of a property accessor (setter/getter function)\"\n}, AST_Symbol);\n\nvar AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", {\n    $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\",\n}, AST_Symbol);\n\nvar AST_SymbolVar = DEFNODE(\"SymbolVar\", null, {\n    $documentation: \"Symbol defining a variable\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolConst = DEFNODE(\"SymbolConst\", null, {\n    $documentation: \"A constant declaration\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, {\n    $documentation: \"Symbol naming a function argument\",\n}, AST_SymbolVar);\n\nvar AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, {\n    $documentation: \"Symbol defining a function\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, {\n    $documentation: \"Symbol naming a function expression\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, {\n    $documentation: \"Symbol naming the exception in catch\",\n}, AST_SymbolDeclaration);\n\nvar AST_Label = DEFNODE(\"Label\", \"references\", {\n    $documentation: \"Symbol naming a label (declaration)\",\n    $propdoc: {\n        references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n    },\n    initialize: function() {\n        this.references = [];\n        this.thedef = this;\n    }\n}, AST_Symbol);\n\nvar AST_SymbolRef = DEFNODE(\"SymbolRef\", null, {\n    $documentation: \"Reference to some symbol (not definition/declaration)\",\n}, AST_Symbol);\n\nvar AST_LabelRef = DEFNODE(\"LabelRef\", null, {\n    $documentation: \"Reference to a label symbol\",\n}, AST_Symbol);\n\nvar AST_This = DEFNODE(\"This\", null, {\n    $documentation: \"The `this` symbol\",\n}, AST_Symbol);\n\nvar AST_Constant = DEFNODE(\"Constant\", null, {\n    $documentation: \"Base class for all constants\",\n    getValue: function() {\n        return this.value;\n    }\n});\n\nvar AST_String = DEFNODE(\"String\", \"value quote\", {\n    $documentation: \"A string literal\",\n    $propdoc: {\n        value: \"[string] the contents of this string\",\n        quote: \"[string] the original quote character\"\n    }\n}, AST_Constant);\n\nvar AST_Number = DEFNODE(\"Number\", \"value literal\", {\n    $documentation: \"A number literal\",\n    $propdoc: {\n        value: \"[number] the numeric value\",\n        literal: \"[string] numeric value as string (optional)\"\n    }\n}, AST_Constant);\n\nvar AST_RegExp = DEFNODE(\"RegExp\", \"value\", {\n    $documentation: \"A regexp literal\",\n    $propdoc: {\n        value: \"[RegExp] the actual regexp\"\n    }\n}, AST_Constant);\n\nvar AST_Atom = DEFNODE(\"Atom\", null, {\n    $documentation: \"Base class for atoms\",\n}, AST_Constant);\n\nvar AST_Null = DEFNODE(\"Null\", null, {\n    $documentation: \"The `null` atom\",\n    value: null\n}, AST_Atom);\n\nvar AST_NaN = DEFNODE(\"NaN\", null, {\n    $documentation: \"The impossible value\",\n    value: 0/0\n}, AST_Atom);\n\nvar AST_Undefined = DEFNODE(\"Undefined\", null, {\n    $documentation: \"The `undefined` value\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Hole = DEFNODE(\"Hole\", null, {\n    $documentation: \"A hole in an array\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Infinity = DEFNODE(\"Infinity\", null, {\n    $documentation: \"The `Infinity` value\",\n    value: 1/0\n}, AST_Atom);\n\nvar AST_Boolean = DEFNODE(\"Boolean\", null, {\n    $documentation: \"Base class for booleans\",\n}, AST_Atom);\n\nvar AST_False = DEFNODE(\"False\", null, {\n    $documentation: \"The `false` atom\",\n    value: false\n}, AST_Boolean);\n\nvar AST_True = DEFNODE(\"True\", null, {\n    $documentation: \"The `true` atom\",\n    value: true\n}, AST_Boolean);\n\n/* -----[ TreeWalker ]----- */\n\nfunction TreeWalker(callback) {\n    this.visit = callback;\n    this.stack = [];\n    this.directives = Object.create(null);\n};\nTreeWalker.prototype = {\n    _visit: function(node, descend) {\n        this.push(node);\n        var ret = this.visit(node, descend ? function(){\n            descend.call(node);\n        } : noop);\n        if (!ret && descend) {\n            descend.call(node);\n        }\n        this.pop(node);\n        return ret;\n    },\n    parent: function(n) {\n        return this.stack[this.stack.length - 2 - (n || 0)];\n    },\n    push: function (node) {\n        if (node instanceof AST_Lambda) {\n            this.directives = Object.create(this.directives);\n        } else if (node instanceof AST_Directive && !this.directives[node.value]) {\n            this.directives[node.value] = node;\n        }\n        this.stack.push(node);\n    },\n    pop: function(node) {\n        this.stack.pop();\n        if (node instanceof AST_Lambda) {\n            this.directives = Object.getPrototypeOf(this.directives);\n        }\n    },\n    self: function() {\n        return this.stack[this.stack.length - 1];\n    },\n    find_parent: function(type) {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n        }\n    },\n    has_directive: function(type) {\n        var dir = this.directives[type];\n        if (dir) return dir;\n        var node = this.stack[this.stack.length - 1];\n        if (node instanceof AST_Scope) {\n            for (var i = 0; i < node.body.length; ++i) {\n                var st = node.body[i];\n                if (!(st instanceof AST_Directive)) break;\n                if (st.value == type) return st;\n            }\n        }\n    },\n    in_boolean_context: function() {\n        var stack = this.stack;\n        var i = stack.length, self = stack[--i];\n        while (i > 0) {\n            var p = stack[--i];\n            if ((p instanceof AST_If           && p.condition === self) ||\n                (p instanceof AST_Conditional  && p.condition === self) ||\n                (p instanceof AST_DWLoop       && p.condition === self) ||\n                (p instanceof AST_For          && p.condition === self) ||\n                (p instanceof AST_UnaryPrefix  && p.operator == \"!\" && p.expression === self))\n            {\n                return true;\n            }\n            if (!(p instanceof AST_Binary && (p.operator == \"&&\" || p.operator == \"||\")))\n                return false;\n            self = p;\n        }\n    },\n    loopcontrol_target: function(node) {\n        var stack = this.stack;\n        if (node.label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == node.label.name)\n                return x.body;\n        } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_IterationStatement\n                || node instanceof AST_Break && x instanceof AST_Switch)\n                return x;\n        }\n    }\n};\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';\nvar KEYWORDS_ATOM = 'false null true';\nvar RESERVED_WORDS = 'abstract boolean byte char class double enum export extends final float goto implements import int interface let long native package private protected public short static super synchronized this throws transient volatile yield'\n    + \" \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = 'return new delete throw else case';\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"/=\",\n    \"*=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"||\"\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar NEWLINE_CHARS = makePredicate(characters(\"\\n\\r\\u2028\\u2029\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = makePredicate(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n    letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n    digit: new RegExp(\"[\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19D9\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]\"),\n    non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n    space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n    connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(code) {\n    return (code >= 97 && code <= 122)\n        || (code >= 65 && code <= 90)\n        || (code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code)));\n};\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n};\n\nfunction is_alphanumeric_char(code) {\n    return is_digit(code) || is_letter(code);\n};\n\nfunction is_unicode_digit(code) {\n    return UNICODE.digit.test(String.fromCharCode(code));\n}\n\nfunction is_unicode_combining_mark(ch) {\n    return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n    return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier(name) {\n    return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);\n};\n\nfunction is_identifier_start(code) {\n    return code == 36 || code == 95 || is_letter(code);\n};\n\nfunction is_identifier_char(ch) {\n    var code = ch.charCodeAt(0);\n    return is_identifier_start(code)\n        || is_digit(code)\n        || code == 8204 // \\u200c: zero-width non-joiner <ZWNJ>\n        || code == 8205 // \\u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        || is_unicode_combining_mark(ch)\n        || is_unicode_connector_punctuation(ch)\n        || is_unicode_digit(code)\n    ;\n};\n\nfunction is_identifier_string(str){\n    return /^[a-z_$][a-z0-9_$]*$/i.test(str);\n};\n\nfunction parse_js_number(num) {\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else {\n        var val = parseFloat(num);\n        if (val == num) return val;\n    }\n};\n\nfunction JS_Parse_Error(message, filename, line, col, pos) {\n    this.message = message;\n    this.filename = filename;\n    this.line = line;\n    this.col = col;\n    this.pos = pos;\n};\nJS_Parse_Error.prototype = Object.create(Error.prototype);\nJS_Parse_Error.prototype.constructor = JS_Parse_Error;\nJS_Parse_Error.prototype.name = \"SyntaxError\";\nconfigure_error_stack(JS_Parse_Error);\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments, shebang) {\n\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        comments_before : [],\n        directives      : {},\n        directive_stack : []\n    };\n\n    function peek() { return S.text.charAt(S.pos); };\n\n    function next(signal_eof, in_string) {\n        var ch = S.text.charAt(S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (NEWLINE_CHARS(ch)) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (!in_string && ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            ++S.col;\n        }\n        return ch;\n    };\n\n    function forward(i) {\n        while (i-- > 0) next();\n    };\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    };\n\n    function find_eol() {\n        var text = S.text;\n        for (var i = S.pos, n = S.text.length; i < n; ++i) {\n            var ch = text[i];\n            if (NEWLINE_CHARS(ch))\n                return i;\n        }\n        return -1;\n    };\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    };\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    };\n\n    var prev_was_dot = false;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION(value)));\n        if (type == \"punc\" && value == \".\") {\n            prev_was_dot = true;\n        } else if (!is_comment) {\n            prev_was_dot = false;\n        }\n        var ret = {\n            type    : type,\n            value   : value,\n            line    : S.tokline,\n            col     : S.tokcol,\n            pos     : S.tokpos,\n            endline : S.line,\n            endcol  : S.col,\n            endpos  : S.pos,\n            nlb     : S.newline_before,\n            file    : filename\n        };\n        if (/^(?:num|string|regexp)$/i.test(type)) {\n            ret.raw = $TEXT.substring(ret.pos, ret.endpos);\n        }\n        if (!is_comment) {\n            ret.comments_before = S.comments_before;\n            S.comments_before = [];\n            // make note of any newlines in the comments that came before\n            for (var i = 0, len = ret.comments_before.length; i < len; i++) {\n                ret.nlb = ret.nlb || ret.comments_before[i].nlb;\n            }\n        }\n        S.newline_before = false;\n        return new AST_Token(ret);\n    };\n\n    function skip_whitespace() {\n        while (WHITESPACE_CHARS(peek()))\n            next();\n    };\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    };\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    };\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n        var num = read_while(function(ch, i){\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n            return is_alphanumeric_char(code);\n        });\n        if (prefix) num = prefix + num;\n        if (RE_OCT_NUMBER.test(num) && next_token.has_directive(\"use strict\")) {\n            parse_error(\"Legacy octal literals are not allowed in strict mode\");\n        }\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"Invalid syntax: \" + num);\n        }\n    };\n\n    function read_escaped_char(in_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 120 : return String.fromCharCode(hex_bytes(2)); // \\x\n          case 117 : return String.fromCharCode(hex_bytes(4)); // \\u\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        if (ch >= \"0\" && ch <= \"7\")\n            return read_octal_escape_sequence(ch);\n        return ch;\n    };\n\n    function read_octal_escape_sequence(ch) {\n        // Read\n        var p = peek();\n        if (p >= \"0\" && p <= \"7\") {\n            ch += next(true);\n            if (ch[0] <= \"3\" && (p = peek()) >= \"0\" && p <= \"7\")\n                ch += next(true);\n        }\n\n        // Parse\n        if (ch === \"0\") return \"\\0\";\n        if (ch.length > 0 && next_token.has_directive(\"use strict\"))\n            parse_error(\"Legacy octal escape sequences are not allowed in strict mode\");\n        return String.fromCharCode(parseInt(ch, 8));\n    }\n\n    function hex_bytes(n) {\n        var num = 0;\n        for (; n > 0; --n) {\n            var digit = parseInt(next(true), 16);\n            if (isNaN(digit))\n                parse_error(\"Invalid hex-character pattern in string\");\n            num = (num << 4) | digit;\n        }\n        return num;\n    };\n\n    var read_string = with_eof_error(\"Unterminated string constant\", function(quote_char){\n        var quote = next(), ret = \"\";\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") ch = read_escaped_char(true);\n            else if (NEWLINE_CHARS(ch)) parse_error(\"Unterminated string constant\");\n            else if (ch == quote) break;\n            ret += ch;\n        }\n        var tok = token(\"string\", ret);\n        tok.quote = quote_char;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find_eol(), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    };\n\n    var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function(){\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i).replace(/\\r\\n|\\r|\\u2028|\\u2029/g, '\\n');\n        // update stream position\n        forward(text.length /* doesn't count \\r\\n as 2 char while S.pos - i does */ + 2);\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    });\n\n    function read_name() {\n        var backslash = false, name = \"\", ch, escaped = false, hex;\n        while ((ch = peek()) != null) {\n            if (!backslash) {\n                if (ch == \"\\\\\") escaped = backslash = true, next();\n                else if (is_identifier_char(ch)) name += next();\n                else break;\n            }\n            else {\n                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                ch = read_escaped_char();\n                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                name += ch;\n                backslash = false;\n            }\n        }\n        if (KEYWORDS(name) && escaped) {\n            hex = name.charCodeAt(0).toString(16).toUpperCase();\n            name = \"\\\\u\" + \"0000\".substr(hex.length) + hex + name.slice(1);\n        }\n        return name;\n    };\n\n    var read_regexp = with_eof_error(\"Unterminated regular expression\", function(regexp){\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (NEWLINE_CHARS(ch)) {\n            parse_error(\"Unexpected line terminator\");\n        } else if (prev_backslash) {\n            regexp += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            regexp += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            regexp += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            regexp += ch;\n        }\n        var mods = read_name();\n        try {\n          return token(\"regexp\", new RegExp(regexp, mods));\n        } catch(e) {\n          parse_error(e.message);\n        }\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        };\n        return token(\"operator\", grow(prefix || next()));\n    };\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    };\n\n    function handle_dot() {\n        next();\n        return is_digit(peek().charCodeAt(0))\n            ? read_num(\".\")\n            : token(\"punc\", \".\");\n    };\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM(word) ? token(\"atom\", word)\n            : !KEYWORDS(word) ? token(\"name\", word)\n            : OPERATORS(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    };\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    };\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        if (shebang && S.pos == 0 && looking_at(\"#!\")) {\n            start_token();\n            forward(2);\n            skip_line_comment(\"comment5\");\n        }\n        for (;;) {\n            skip_whitespace();\n            start_token();\n            if (html5_comments) {\n                if (looking_at(\"<!--\")) {\n                    forward(4);\n                    skip_line_comment(\"comment3\");\n                    continue;\n                }\n                if (looking_at(\"-->\") && S.newline_before) {\n                    forward(3);\n                    skip_line_comment(\"comment4\");\n                    continue;\n                }\n            }\n            var ch = peek();\n            if (!ch) return token(\"eof\");\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 34: case 39: return read_string(ch);\n              case 46: return handle_dot();\n              case 47: {\n                  var tok = handle_slash();\n                  if (tok === next_token) continue;\n                  return tok;\n              }\n            }\n            if (is_digit(code)) return read_num();\n            if (PUNC_CHARS(ch)) return token(\"punc\", next());\n            if (OPERATOR_CHARS(ch)) return read_operator();\n            if (code == 92 || is_identifier_start(code)) return read_word();\n            break;\n        }\n        parse_error(\"Unexpected character '\" + ch + \"'\");\n    };\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    next_token.add_directive = function(directive) {\n        S.directive_stack[S.directive_stack.length - 1].push(directive);\n\n        if (S.directives[directive] === undefined) {\n            S.directives[directive] = 1;\n        } else {\n            S.directives[directive]++;\n        }\n    }\n\n    next_token.push_directives_stack = function() {\n        S.directive_stack.push([]);\n    }\n\n    next_token.pop_directives_stack = function() {\n        var directives = S.directive_stack[S.directive_stack.length - 1];\n\n        for (var i = 0; i < directives.length; i++) {\n            S.directives[directives[i]]--;\n        }\n\n        S.directive_stack.pop();\n    }\n\n    next_token.has_directive = function(directive) {\n        return S.directives[directive] !== undefined &&\n            S.directives[directive] > 0;\n    }\n\n    return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar PRECEDENCE = (function(a, ret){\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ],\n    {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n\n    options = defaults(options, {\n        bare_returns   : false,\n        cli            : false,\n        expression     : false,\n        filename       : null,\n        html5_comments : true,\n        shebang        : true,\n        strict         : false,\n        toplevel       : null,\n    });\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments, options.shebang)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    };\n\n    function peek() { return S.peeked || (S.peeked = S.input()); };\n\n    function next() {\n        S.prev = S.token;\n        if (S.peeked) {\n            S.token = S.peeked;\n            S.peeked = null;\n        } else {\n            S.token = S.input();\n        }\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    };\n\n    function prev() {\n        return S.prev;\n    };\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    };\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    };\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    };\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    };\n\n    function expect(punc) { return expect_token(\"punc\", punc); };\n\n    function can_insert_semicolon() {\n        return !options.strict && (\n            S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n        );\n    };\n\n    function semicolon(optional) {\n        if (is(\"punc\", \";\")) next();\n        else if (!optional && !can_insert_semicolon()) unexpected();\n    };\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    };\n\n    function embed_tokens(parser) {\n        return function() {\n            var start = S.token;\n            var expr = parser();\n            var end = prev();\n            expr.start = start;\n            expr.end = end;\n            return expr;\n        };\n    };\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    };\n\n    var statement = embed_tokens(function() {\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            if (S.in_directives) {\n                var token = peek();\n                if (S.token.raw.indexOf(\"\\\\\") == -1\n                    && (token.nlb\n                        || is_token(token, \"eof\")\n                        || is_token(token, \"punc\", \";\")\n                        || is_token(token, \"punc\", \"}\"))) {\n                    S.input.add_directive(S.token.value);\n                } else {\n                    S.in_directives = false;\n                }\n            }\n            var dir = S.in_directives, stat = simple_statement();\n            return dir ? new AST_Directive(stat.body) : stat;\n          case \"num\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                S.in_directives = false;\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (S.token.value) {\n              case \"break\":\n                next();\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                next();\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                next();\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                next();\n                var body = in_loop(statement);\n                expect_token(\"keyword\", \"while\");\n                var condition = parenthesised();\n                semicolon(true);\n                return new AST_Do({\n                    body      : body,\n                    condition : condition\n                });\n\n              case \"while\":\n                next();\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(statement)\n                });\n\n              case \"for\":\n                next();\n                return for_();\n\n              case \"function\":\n                next();\n                return function_(AST_Defun);\n\n              case \"if\":\n                next();\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"'return' outside of function\");\n                next();\n                var value = null;\n                if (is(\"punc\", \";\")) {\n                    next();\n                } else if (!can_insert_semicolon()) {\n                    value = expression(true);\n                    semicolon();\n                }\n                return new AST_Return({\n                    value: value\n                });\n\n              case \"switch\":\n                next();\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                next();\n                if (S.token.nlb)\n                    croak(\"Illegal newline after 'throw'\");\n                var value = expression(true);\n                semicolon();\n                return new AST_Throw({\n                    value: value\n                });\n\n              case \"try\":\n                next();\n                return try_();\n\n              case \"var\":\n                next();\n                var node = var_();\n                semicolon();\n                return node;\n\n              case \"const\":\n                next();\n                var node = const_();\n                semicolon();\n                return node;\n\n              case \"with\":\n                if (S.input.has_directive(\"use strict\")) {\n                    croak(\"Strict mode may not include a with statement\");\n                }\n                next();\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n            }\n        }\n        unexpected();\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (find_if(function(l){ return l.name == label.name }, S.labels)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref){\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    };\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    };\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = find_if(function(l){ return l.name == label.name }, S.labels);\n            if (!ldef)\n                croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n        }\n        else if (S.in_loop == 0)\n            croak(type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    };\n\n    function for_() {\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init = is(\"keyword\", \"var\")\n                ? (next(), var_(true))\n                : expression(true, true);\n            if (is(\"operator\", \"in\")) {\n                if (init instanceof AST_Var && init.definitions.length > 1)\n                    croak(\"Only one variable declaration allowed in for..in loop\");\n                next();\n                return for_in(init);\n            }\n        }\n        return regular_for(init);\n    };\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(statement)\n        });\n    };\n\n    function for_in(init) {\n        var lhs = init instanceof AST_Var ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(statement)\n        });\n    };\n\n    var function_ = function(ctor) {\n        var in_statement = ctor === AST_Defun;\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name)\n            unexpected();\n        expect(\"(\");\n        return new ctor({\n            name: name,\n            argnames: (function(first, a){\n                while (!is(\"punc\", \")\")) {\n                    if (first) first = false; else expect(\",\");\n                    a.push(as_symbol(AST_SymbolFunarg));\n                }\n                next();\n                return a;\n            })(true, []),\n            body: (function(loop, labels){\n                ++S.in_function;\n                S.in_directives = true;\n                S.input.push_directives_stack();\n                S.in_loop = 0;\n                S.labels = [];\n                var a = block_();\n                S.input.pop_directives_stack();\n                --S.in_function;\n                S.in_loop = loop;\n                S.labels = labels;\n                return a;\n            })(S.in_loop, S.labels)\n        });\n    };\n\n    function if_() {\n        var cond = parenthesised(), body = statement(), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement();\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    };\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    };\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            }\n            else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            }\n            else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    };\n\n    function try_() {\n        var body = block_(), bcatch = null, bfinally = null;\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            expect(\"(\");\n            var name = as_symbol(AST_SymbolCatch);\n            expect(\")\");\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    };\n\n    function vardefs(no_in, in_const) {\n        var a = [];\n        for (;;) {\n            a.push(new AST_VarDef({\n                start : S.token,\n                name  : as_symbol(in_const ? AST_SymbolConst : AST_SymbolVar),\n                value : is(\"operator\", \"=\") ? (next(), expression(false, no_in)) : null,\n                end   : prev()\n            }));\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return a;\n    };\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, false),\n            end         : prev()\n        });\n    };\n\n    var const_ = function() {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(false, true),\n            end         : prev()\n        });\n    };\n\n    var new_ = function(allow_calls) {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\");\n        } else {\n            args = [];\n        }\n        return subscripts(new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        }), allow_calls);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n          case \"keyword\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            break;\n          case \"regexp\":\n            ret = new AST_RegExp({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n          case \"operator\":\n            if (!is_identifier_string(tok.value)) {\n                croak(\"Invalid getter/setter name: \" + tok.value,\n                    tok.line, tok.col, tok.pos);\n            }\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n        }\n        next();\n        return ret;\n    };\n\n    var expr_atom = function(allow_calls) {\n        if (is(\"operator\", \"new\")) {\n            return new_(allow_calls);\n        }\n        var start = S.token;\n        if (is(\"punc\")) {\n            switch (start.value) {\n              case \"(\":\n                next();\n                var ex = expression(true);\n                ex.start = start;\n                ex.end = S.token;\n                expect(\")\");\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_(), allow_calls);\n            }\n            unexpected();\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (ATOMIC_START_TOKEN[S.token.type]) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    };\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var create_accessor = embed_tokens(function() {\n        return function_(AST_Accessor);\n    });\n\n    var object_ = embed_tokens(function() {\n        expect(\"{\");\n        var first = true, a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n            var start = S.token;\n            var type = start.type;\n            var name = as_property_name();\n            if (type == \"name\" && !is(\"punc\", \":\")) {\n                var key = new AST_SymbolAccessor({\n                    start: S.token,\n                    name: as_property_name(),\n                    end: prev()\n                });\n                if (name == \"get\") {\n                    a.push(new AST_ObjectGetter({\n                        start : start,\n                        key   : key,\n                        value : create_accessor(),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n                if (name == \"set\") {\n                    a.push(new AST_ObjectSetter({\n                        start : start,\n                        key   : key,\n                        value : create_accessor(),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n            }\n            expect(\":\");\n            a.push(new AST_ObjectKeyVal({\n                start : start,\n                quote : start.quote,\n                key   : name,\n                value : expression(false),\n                end   : prev()\n            }));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function as_property_name() {\n        var tmp = S.token;\n        switch (tmp.type) {\n          case \"operator\":\n            if (!KEYWORDS(tmp.value)) unexpected();\n          case \"num\":\n          case \"string\":\n          case \"name\":\n          case \"keyword\":\n          case \"atom\":\n            next();\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function as_name() {\n        var tmp = S.token;\n        if (tmp.type != \"name\") unexpected();\n        next();\n        return tmp.value;\n    };\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This : type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    };\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        next();\n        return sym;\n    };\n\n    var subscripts = function(expr, allow_calls) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            return subscripts(new AST_Dot({\n                start      : start,\n                expression : expr,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls);\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                property   : prop,\n                end        : prev()\n            }), allow_calls);\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            return subscripts(new AST_Call({\n                start      : start,\n                expression : expr,\n                args       : expr_list(\")\"),\n                end        : prev()\n            }), true);\n        }\n        return expr;\n    };\n\n    var maybe_unary = function(allow_calls) {\n        var start = S.token;\n        if (is(\"operator\") && UNARY_PREFIX(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls);\n        while (is(\"operator\") && UNARY_POSTFIX(S.token.value) && !S.token.nlb) {\n            val = make_unary(AST_UnaryPostfix, S.token, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, token, expr) {\n        var op = token.value;\n        if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n            croak(\"Invalid use of \" + op + \" operator\", token.line, token.col, token.pos);\n        return new ctor({ operator: op, expression: expr });\n    };\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && prec > min_prec) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true), 0, no_in);\n    };\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        if (options.cli) return true;\n        return expr instanceof AST_PropAccess || expr instanceof AST_SymbolRef;\n    };\n\n    var maybe_assign = function(no_in) {\n        var start = S.token;\n        var left = maybe_conditional(no_in), val = S.token.value;\n        if (is(\"operator\") && ASSIGNMENT(val)) {\n            if (is_assignable(left)) {\n                next();\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    end      : prev()\n                });\n            }\n            croak(\"Invalid assignment\");\n        }\n        return left;\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var expr = maybe_assign(no_in);\n        if (commas && is(\"punc\", \",\")) {\n            next();\n            return new AST_Seq({\n                start  : start,\n                car    : expr,\n                cdr    : expression(true, no_in),\n                end    : peek()\n            });\n        }\n        return expr;\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    };\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function(){\n        var start = S.token;\n        var body = [];\n        S.input.push_directives_stack();\n        while (!is(\"eof\"))\n            body.push(statement());\n        S.input.pop_directives_stack();\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        return toplevel;\n    })();\n\n};\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// Tree transformer helpers.\n\nfunction TreeTransformer(before, after) {\n    TreeWalker.call(this);\n    this.before = before;\n    this.after = after;\n}\nTreeTransformer.prototype = new TreeWalker;\n\n(function(undefined){\n\n    function _(node, descend) {\n        node.DEFMETHOD(\"transform\", function(tw, in_list){\n            var x, y;\n            tw.push(this);\n            if (tw.before) x = tw.before(this, descend, in_list);\n            if (x === undefined) {\n                if (!tw.after) {\n                    x = this;\n                    descend(x, tw);\n                } else {\n                    tw.stack[tw.stack.length - 1] = x = this;\n                    descend(x, tw);\n                    y = tw.after(x, in_list);\n                    if (y !== undefined) x = y;\n                }\n            }\n            tw.pop(this);\n            return x;\n        });\n    };\n\n    function do_list(list, tw) {\n        return MAP(list, function(node){\n            return node.transform(tw, true);\n        });\n    };\n\n    _(AST_Node, noop);\n\n    _(AST_LabeledStatement, function(self, tw){\n        self.label = self.label.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_SimpleStatement, function(self, tw){\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Block, function(self, tw){\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_DWLoop, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_For, function(self, tw){\n        if (self.init) self.init = self.init.transform(tw);\n        if (self.condition) self.condition = self.condition.transform(tw);\n        if (self.step) self.step = self.step.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_ForIn, function(self, tw){\n        self.init = self.init.transform(tw);\n        self.object = self.object.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_With, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Exit, function(self, tw){\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_LoopControl, function(self, tw){\n        if (self.label) self.label = self.label.transform(tw);\n    });\n\n    _(AST_If, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n        if (self.alternative) self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Switch, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Case, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Try, function(self, tw){\n        self.body = do_list(self.body, tw);\n        if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n        if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n    });\n\n    _(AST_Catch, function(self, tw){\n        self.argname = self.argname.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Definitions, function(self, tw){\n        self.definitions = do_list(self.definitions, tw);\n    });\n\n    _(AST_VarDef, function(self, tw){\n        self.name = self.name.transform(tw);\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_Lambda, function(self, tw){\n        if (self.name) self.name = self.name.transform(tw);\n        self.argnames = do_list(self.argnames, tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Call, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.args = do_list(self.args, tw);\n    });\n\n    _(AST_Seq, function(self, tw){\n        self.car = self.car.transform(tw);\n        self.cdr = self.cdr.transform(tw);\n    });\n\n    _(AST_Dot, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Sub, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.property = self.property.transform(tw);\n    });\n\n    _(AST_Unary, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Binary, function(self, tw){\n        self.left = self.left.transform(tw);\n        self.right = self.right.transform(tw);\n    });\n\n    _(AST_Conditional, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.consequent = self.consequent.transform(tw);\n        self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Array, function(self, tw){\n        self.elements = do_list(self.elements, tw);\n    });\n\n    _(AST_Object, function(self, tw){\n        self.properties = do_list(self.properties, tw);\n    });\n\n    _(AST_ObjectProperty, function(self, tw){\n        self.value = self.value.transform(tw);\n    });\n\n})();\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction SymbolDef(scope, index, orig) {\n    this.name = orig.name;\n    this.orig = [ orig ];\n    this.scope = scope;\n    this.references = [];\n    this.global = false;\n    this.mangled_name = null;\n    this.undeclared = false;\n    this.index = index;\n    this.id = SymbolDef.next_id++;\n};\n\nSymbolDef.next_id = 1;\n\nSymbolDef.prototype = {\n    unmangleable: function(options) {\n        if (!options) options = {};\n\n        return (this.global && !options.toplevel)\n            || this.undeclared\n            || (!options.eval && (this.scope.uses_eval || this.scope.uses_with))\n            || (options.keep_fnames\n                && (this.orig[0] instanceof AST_SymbolLambda\n                    || this.orig[0] instanceof AST_SymbolDefun));\n    },\n    mangle: function(options) {\n        var cache = options.cache && options.cache.props;\n        if (this.global && cache && cache.has(this.name)) {\n            this.mangled_name = cache.get(this.name);\n        }\n        else if (!this.mangled_name && !this.unmangleable(options)) {\n            var s = this.scope;\n            var sym = this.orig[0];\n            if (!options.screw_ie8 && sym instanceof AST_SymbolLambda)\n                s = s.parent_scope;\n            var def;\n            if (this.defun && (def = this.defun.variables.get(this.name))) {\n                this.mangled_name = def.mangled_name || def.name;\n            } else\n                this.mangled_name = s.next_mangled(options, this);\n            if (this.global && cache) {\n                cache.set(this.name, this.mangled_name);\n            }\n        }\n    }\n};\n\nAST_Toplevel.DEFMETHOD(\"figure_out_scope\", function(options){\n    options = defaults(options, {\n        cache: null,\n        screw_ie8: true,\n    });\n\n    // pass 1: setup scope chaining and handle definitions\n    var self = this;\n    var scope = self.parent_scope = null;\n    var labels = new Dictionary();\n    var defun = null;\n    var tw = new TreeWalker(function(node, descend){\n        if (node instanceof AST_Catch) {\n            var save_scope = scope;\n            scope = new AST_Scope(node);\n            scope.init_scope_vars(save_scope);\n            descend();\n            scope = save_scope;\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            node.init_scope_vars(scope);\n            var save_scope = scope;\n            var save_defun = defun;\n            var save_labels = labels;\n            defun = scope = node;\n            labels = new Dictionary();\n            descend();\n            scope = save_scope;\n            defun = save_defun;\n            labels = save_labels;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_LabeledStatement) {\n            var l = node.label;\n            if (labels.has(l.name)) {\n                throw new Error(string_template(\"Label {name} defined twice\", l));\n            }\n            labels.set(l.name, l);\n            descend();\n            labels.del(l.name);\n            return true;        // no descend again\n        }\n        if (node instanceof AST_With) {\n            for (var s = scope; s; s = s.parent_scope)\n                s.uses_with = true;\n            return;\n        }\n        if (node instanceof AST_Symbol) {\n            node.scope = scope;\n        }\n        if (node instanceof AST_Label) {\n            node.thedef = node;\n            node.references = [];\n        }\n        if (node instanceof AST_SymbolLambda) {\n            defun.def_function(node);\n        }\n        else if (node instanceof AST_SymbolDefun) {\n            // Careful here, the scope where this should be defined is\n            // the parent scope.  The reason is that we enter a new\n            // scope when we encounter the AST_Defun node (which is\n            // instanceof AST_Scope) but we get to the symbol a bit\n            // later.\n            (node.scope = defun.parent_scope).def_function(node);\n        }\n        else if (node instanceof AST_SymbolVar\n            || node instanceof AST_SymbolConst) {\n            defun.def_variable(node);\n            if (defun !== scope) {\n                node.mark_enclosed(options);\n                var def = scope.find_variable(node);\n                if (node.thedef !== def) {\n                    node.thedef = def;\n                    node.reference(options);\n                }\n            }\n        }\n        else if (node instanceof AST_SymbolCatch) {\n            scope.def_variable(node).defun = defun;\n        }\n        else if (node instanceof AST_LabelRef) {\n            var sym = labels.get(node.name);\n            if (!sym) throw new Error(string_template(\"Undefined label {name} [{line},{col}]\", {\n                name: node.name,\n                line: node.start.line,\n                col: node.start.col\n            }));\n            node.thedef = sym;\n        }\n    });\n    self.walk(tw);\n\n    // pass 2: find back references and eval\n    var func = null;\n    var globals = self.globals = new Dictionary();\n    var tw = new TreeWalker(function(node, descend){\n        if (node instanceof AST_Lambda) {\n            var prev_func = func;\n            func = node;\n            descend();\n            func = prev_func;\n            return true;\n        }\n        if (node instanceof AST_LoopControl && node.label) {\n            node.label.thedef.references.push(node);\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            var name = node.name;\n            if (name == \"eval\" && tw.parent() instanceof AST_Call) {\n                for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope) {\n                    s.uses_eval = true;\n                }\n            }\n            var sym = node.scope.find_variable(name);\n            if (node.scope instanceof AST_Lambda && name == \"arguments\") {\n                node.scope.uses_arguments = true;\n            }\n            if (!sym) {\n                sym = self.def_global(node);\n            }\n            node.thedef = sym;\n            node.reference(options);\n            return true;\n        }\n    });\n    self.walk(tw);\n\n    // pass 3: fix up any scoping issue with IE8\n    if (!options.screw_ie8) {\n        self.walk(new TreeWalker(function(node, descend) {\n            if (node instanceof AST_SymbolCatch) {\n                var name = node.name;\n                var refs = node.thedef.references;\n                var scope = node.thedef.defun;\n                var def = scope.find_variable(name) || self.globals.get(name) || scope.def_variable(node);\n                refs.forEach(function(ref) {\n                    ref.thedef = def;\n                    ref.reference(options);\n                });\n                node.thedef = def;\n                return true;\n            }\n        }));\n    }\n\n    if (options.cache) {\n        this.cname = options.cache.cname;\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"def_global\", function(node){\n    var globals = this.globals, name = node.name;\n    if (globals.has(name)) {\n        return globals.get(name);\n    } else {\n        var g = new SymbolDef(this, globals.size(), node);\n        g.undeclared = true;\n        g.global = true;\n        globals.set(name, g);\n        return g;\n    }\n});\n\nAST_Scope.DEFMETHOD(\"init_scope_vars\", function(parent_scope){\n    this.variables = new Dictionary();  // map name to AST_SymbolVar (variables defined in this scope; includes functions)\n    this.functions = new Dictionary();  // map name to AST_SymbolDefun (functions defined in this scope)\n    this.uses_with = false;             // will be set to true if this or some nested scope uses the `with` statement\n    this.uses_eval = false;             // will be set to true if this or nested scope uses the global `eval`\n    this.parent_scope = parent_scope;   // the parent scope\n    this.enclosed = [];                 // a list of variables from this or outer scope(s) that are referenced from this or inner scopes\n    this.cname = -1;                    // the current index for mangling functions/variables\n});\n\nAST_Lambda.DEFMETHOD(\"init_scope_vars\", function(){\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n    this.def_variable(new AST_SymbolVar({\n        name: \"arguments\",\n        start: this.start,\n        end: this.end\n    }));\n});\n\nAST_Symbol.DEFMETHOD(\"mark_enclosed\", function(options) {\n    var def = this.definition();\n    var s = this.scope;\n    while (s) {\n        push_uniq(s.enclosed, def);\n        if (options.keep_fnames) {\n            s.functions.each(function(d) {\n                push_uniq(def.scope.enclosed, d);\n            });\n        }\n        if (s === def.scope) break;\n        s = s.parent_scope;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"reference\", function(options) {\n    this.definition().references.push(this);\n    this.mark_enclosed(options);\n});\n\nAST_Scope.DEFMETHOD(\"find_variable\", function(name){\n    if (name instanceof AST_Symbol) name = name.name;\n    return this.variables.get(name)\n        || (this.parent_scope && this.parent_scope.find_variable(name));\n});\n\nAST_Scope.DEFMETHOD(\"def_function\", function(symbol){\n    this.functions.set(symbol.name, this.def_variable(symbol));\n});\n\nAST_Scope.DEFMETHOD(\"def_variable\", function(symbol){\n    var def;\n    if (!this.variables.has(symbol.name)) {\n        def = new SymbolDef(this, this.variables.size(), symbol);\n        this.variables.set(symbol.name, def);\n        def.global = !this.parent_scope;\n    } else {\n        def = this.variables.get(symbol.name);\n        def.orig.push(symbol);\n    }\n    return symbol.thedef = def;\n});\n\nAST_Scope.DEFMETHOD(\"next_mangled\", function(options){\n    var ext = this.enclosed;\n    out: while (true) {\n        var m = base54(++this.cname);\n        if (!is_identifier(m)) continue; // skip over \"do\"\n\n        // https://github.com/mishoo/UglifyJS2/issues/242 -- do not\n        // shadow a name excepted from mangling.\n        if (options.except.indexOf(m) >= 0) continue;\n\n        // we must ensure that the mangled name does not shadow a name\n        // from some parent scope that is referenced in this or in\n        // inner scopes.\n        for (var i = ext.length; --i >= 0;) {\n            var sym = ext[i];\n            var name = sym.mangled_name || (sym.unmangleable(options) && sym.name);\n            if (m == name) continue out;\n        }\n        return m;\n    }\n});\n\nAST_Function.DEFMETHOD(\"next_mangled\", function(options, def){\n    // #179, #326\n    // in Safari strict mode, something like (function x(x){...}) is a syntax error;\n    // a function expression's argument cannot shadow the function expression's name\n\n    var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition();\n\n    // the function's mangled_name is null when keep_fnames is true\n    var tricky_name = tricky_def ? tricky_def.mangled_name || tricky_def.name : null;\n\n    while (true) {\n        var name = AST_Lambda.prototype.next_mangled.call(this, options, def);\n        if (!tricky_name || tricky_name != name)\n            return name;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"unmangleable\", function(options){\n    return this.definition().unmangleable(options);\n});\n\n// labels are always mangleable\nAST_Label.DEFMETHOD(\"unmangleable\", function(){\n    return false;\n});\n\nAST_Symbol.DEFMETHOD(\"unreferenced\", function(){\n    return this.definition().references.length == 0\n        && !(this.scope.uses_eval || this.scope.uses_with);\n});\n\nAST_Symbol.DEFMETHOD(\"undeclared\", function(){\n    return this.definition().undeclared;\n});\n\nAST_LabelRef.DEFMETHOD(\"undeclared\", function(){\n    return false;\n});\n\nAST_Label.DEFMETHOD(\"undeclared\", function(){\n    return false;\n});\n\nAST_Symbol.DEFMETHOD(\"definition\", function(){\n    return this.thedef;\n});\n\nAST_Symbol.DEFMETHOD(\"global\", function(){\n    return this.definition().global;\n});\n\nAST_Toplevel.DEFMETHOD(\"_default_mangler_options\", function(options){\n    return defaults(options, {\n        eval        : false,\n        except      : [],\n        keep_fnames : false,\n        screw_ie8   : true,\n        sort        : false, // Ignored. Flag retained for backwards compatibility.\n        toplevel    : false,\n    });\n});\n\nAST_Toplevel.DEFMETHOD(\"mangle_names\", function(options){\n    options = this._default_mangler_options(options);\n\n    // Never mangle arguments\n    options.except.push('arguments');\n\n    // We only need to mangle declaration nodes.  Special logic wired\n    // into the code generator will display the mangled name if it's\n    // present (and for AST_SymbolRef-s it'll use the mangled name of\n    // the AST_SymbolDeclaration that it points to).\n    var lname = -1;\n    var to_mangle = [];\n\n    if (options.cache) {\n        this.globals.each(function(symbol){\n            if (options.except.indexOf(symbol.name) < 0) {\n                to_mangle.push(symbol);\n            }\n        });\n    }\n\n    var tw = new TreeWalker(function(node, descend){\n        if (node instanceof AST_LabeledStatement) {\n            // lname is incremented when we get to the AST_Label\n            var save_nesting = lname;\n            descend();\n            lname = save_nesting;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_Scope) {\n            var p = tw.parent(), a = [];\n            node.variables.each(function(symbol){\n                if (options.except.indexOf(symbol.name) < 0) {\n                    a.push(symbol);\n                }\n            });\n            to_mangle.push.apply(to_mangle, a);\n            return;\n        }\n        if (node instanceof AST_Label) {\n            var name;\n            do name = base54(++lname); while (!is_identifier(name));\n            node.mangled_name = name;\n            return true;\n        }\n        if (options.screw_ie8 && node instanceof AST_SymbolCatch) {\n            to_mangle.push(node.definition());\n            return;\n        }\n    });\n    this.walk(tw);\n    to_mangle.forEach(function(def){ def.mangle(options) });\n\n    if (options.cache) {\n        options.cache.cname = this.cname;\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function(options){\n    options = this._default_mangler_options(options);\n    var tw = new TreeWalker(function(node){\n        if (node instanceof AST_Constant)\n            base54.consider(node.print_to_string());\n        else if (node instanceof AST_Return)\n            base54.consider(\"return\");\n        else if (node instanceof AST_Throw)\n            base54.consider(\"throw\");\n        else if (node instanceof AST_Continue)\n            base54.consider(\"continue\");\n        else if (node instanceof AST_Break)\n            base54.consider(\"break\");\n        else if (node instanceof AST_Debugger)\n            base54.consider(\"debugger\");\n        else if (node instanceof AST_Directive)\n            base54.consider(node.value);\n        else if (node instanceof AST_While)\n            base54.consider(\"while\");\n        else if (node instanceof AST_Do)\n            base54.consider(\"do while\");\n        else if (node instanceof AST_If) {\n            base54.consider(\"if\");\n            if (node.alternative) base54.consider(\"else\");\n        }\n        else if (node instanceof AST_Var)\n            base54.consider(\"var\");\n        else if (node instanceof AST_Const)\n            base54.consider(\"const\");\n        else if (node instanceof AST_Lambda)\n            base54.consider(\"function\");\n        else if (node instanceof AST_For)\n            base54.consider(\"for\");\n        else if (node instanceof AST_ForIn)\n            base54.consider(\"for in\");\n        else if (node instanceof AST_Switch)\n            base54.consider(\"switch\");\n        else if (node instanceof AST_Case)\n            base54.consider(\"case\");\n        else if (node instanceof AST_Default)\n            base54.consider(\"default\");\n        else if (node instanceof AST_With)\n            base54.consider(\"with\");\n        else if (node instanceof AST_ObjectSetter)\n            base54.consider(\"set\" + node.key);\n        else if (node instanceof AST_ObjectGetter)\n            base54.consider(\"get\" + node.key);\n        else if (node instanceof AST_ObjectKeyVal)\n            base54.consider(node.key);\n        else if (node instanceof AST_New)\n            base54.consider(\"new\");\n        else if (node instanceof AST_This)\n            base54.consider(\"this\");\n        else if (node instanceof AST_Try)\n            base54.consider(\"try\");\n        else if (node instanceof AST_Catch)\n            base54.consider(\"catch\");\n        else if (node instanceof AST_Finally)\n            base54.consider(\"finally\");\n        else if (node instanceof AST_Symbol && node.unmangleable(options))\n            base54.consider(node.name);\n        else if (node instanceof AST_Unary || node instanceof AST_Binary)\n            base54.consider(node.operator);\n        else if (node instanceof AST_Dot)\n            base54.consider(node.property);\n    });\n    this.walk(tw);\n    base54.sort();\n});\n\nvar base54 = (function() {\n    var string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789\";\n    var chars, frequency;\n    function reset() {\n        frequency = Object.create(null);\n        chars = string.split(\"\").map(function(ch){ return ch.charCodeAt(0) });\n        chars.forEach(function(ch){ frequency[ch] = 0 });\n    }\n    base54.consider = function(str){\n        for (var i = str.length; --i >= 0;) {\n            var code = str.charCodeAt(i);\n            if (code in frequency) ++frequency[code];\n        }\n    };\n    base54.sort = function() {\n        chars = mergeSort(chars, function(a, b){\n            if (is_digit(a) && !is_digit(b)) return 1;\n            if (is_digit(b) && !is_digit(a)) return -1;\n            return frequency[b] - frequency[a];\n        });\n    };\n    base54.reset = reset;\n    reset();\n    base54.get = function(){ return chars };\n    base54.freq = function(){ return frequency };\n    function base54(num) {\n        var ret = \"\", base = 54;\n        num++;\n        do {\n            num--;\n            ret += String.fromCharCode(chars[num % base]);\n            num = Math.floor(num / base);\n            base = 64;\n        } while (num > 0);\n        return ret;\n    };\n    return base54;\n})();\n\nAST_Toplevel.DEFMETHOD(\"scope_warnings\", function(options){\n    options = defaults(options, {\n        assign_to_global : true,\n        eval             : true,\n        func_arguments   : true,\n        nested_defuns    : true,\n        undeclared       : false, // this makes a lot of noise\n        unreferenced     : true,\n    });\n    var tw = new TreeWalker(function(node){\n        if (options.undeclared\n            && node instanceof AST_SymbolRef\n            && node.undeclared())\n        {\n            // XXX: this also warns about JS standard names,\n            // i.e. Object, Array, parseInt etc.  Should add a list of\n            // exceptions.\n            AST_Node.warn(\"Undeclared symbol: {name} [{file}:{line},{col}]\", {\n                name: node.name,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.assign_to_global)\n        {\n            var sym = null;\n            if (node instanceof AST_Assign && node.left instanceof AST_SymbolRef)\n                sym = node.left;\n            else if (node instanceof AST_ForIn && node.init instanceof AST_SymbolRef)\n                sym = node.init;\n            if (sym\n                && (sym.undeclared()\n                    || (sym.global() && sym.scope !== sym.definition().scope))) {\n                AST_Node.warn(\"{msg}: {name} [{file}:{line},{col}]\", {\n                    msg: sym.undeclared() ? \"Accidental global?\" : \"Assignment to global\",\n                    name: sym.name,\n                    file: sym.start.file,\n                    line: sym.start.line,\n                    col: sym.start.col\n                });\n            }\n        }\n        if (options.eval\n            && node instanceof AST_SymbolRef\n            && node.undeclared()\n            && node.name == \"eval\") {\n            AST_Node.warn(\"Eval is used [{file}:{line},{col}]\", node.start);\n        }\n        if (options.unreferenced\n            && (node instanceof AST_SymbolDeclaration || node instanceof AST_Label)\n            && !(node instanceof AST_SymbolCatch)\n            && node.unreferenced()) {\n            AST_Node.warn(\"{type} {name} is declared but not referenced [{file}:{line},{col}]\", {\n                type: node instanceof AST_Label ? \"Label\" : \"Symbol\",\n                name: node.name,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.func_arguments\n            && node instanceof AST_Lambda\n            && node.uses_arguments) {\n            AST_Node.warn(\"arguments used in function {name} [{file}:{line},{col}]\", {\n                name: node.name ? node.name.name : \"anonymous\",\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.nested_defuns\n            && node instanceof AST_Defun\n            && !(tw.parent() instanceof AST_Scope)) {\n            AST_Node.warn(\"Function {name} declared in nested statement \\\"{type}\\\" [{file}:{line},{col}]\", {\n                name: node.name.name,\n                type: tw.parent().TYPE,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n    });\n    this.walk(tw);\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar EXPECT_DIRECTIVE = /^$|[;{][\\s\\n]*$/;\n\nfunction is_some_comments(comment) {\n    // multiline comment\n    return comment.type == \"comment2\" && /@preserve|@license|@cc_on/i.test(comment.value);\n}\n\nfunction OutputStream(options) {\n\n    options = defaults(options, {\n        ascii_only       : false,\n        beautify         : false,\n        bracketize       : false,\n        comments         : false,\n        indent_level     : 4,\n        indent_start     : 0,\n        inline_script    : true,\n        keep_quoted_props: false,\n        max_line_len     : false,\n        preamble         : null,\n        preserve_line    : false,\n        quote_keys       : false,\n        quote_style      : 0,\n        screw_ie8        : true,\n        semicolons       : true,\n        shebang          : true,\n        source_map       : null,\n        space_colon      : true,\n        unescape_regexps : false,\n        width            : 80,\n        wrap_iife        : false,\n    }, true);\n\n    // Convert comment option to RegExp if neccessary and set up comments filter\n    var comment_filter = return_false; // Default case, throw all comments away\n    if (options.comments) {\n        var comments = options.comments;\n        if (typeof options.comments === \"string\" && /^\\/.*\\/[a-zA-Z]*$/.test(options.comments)) {\n            var regex_pos = options.comments.lastIndexOf(\"/\");\n            comments = new RegExp(\n                options.comments.substr(1, regex_pos - 1),\n                options.comments.substr(regex_pos + 1)\n            );\n        }\n        if (comments instanceof RegExp) {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments.test(comment.value);\n            };\n        }\n        else if (typeof comments === \"function\") {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments(this, comment);\n            };\n        }\n        else if (comments === \"some\") {\n            comment_filter = is_some_comments;\n        } else { // NOTE includes \"all\" option\n            comment_filter = return_true;\n        }\n    }\n\n    var indentation = 0;\n    var current_col = 0;\n    var current_line = 1;\n    var current_pos = 0;\n    var OUTPUT = \"\";\n\n    function to_ascii(str, identifier) {\n        return str.replace(/[\\u0000-\\u001f\\u007f-\\uffff]/g, function(ch) {\n            var code = ch.charCodeAt(0).toString(16);\n            if (code.length <= 2 && !identifier) {\n                while (code.length < 2) code = \"0\" + code;\n                return \"\\\\x\" + code;\n            } else {\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n            }\n        });\n    };\n\n    function make_string(str, quote) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\v\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g,\n          function(s, i){\n            switch (s) {\n              case '\"': ++dq; return '\"';\n              case \"'\": ++sq; return \"'\";\n              case \"\\\\\": return \"\\\\\\\\\";\n              case \"\\n\": return \"\\\\n\";\n              case \"\\r\": return \"\\\\r\";\n              case \"\\t\": return \"\\\\t\";\n              case \"\\b\": return \"\\\\b\";\n              case \"\\f\": return \"\\\\f\";\n              case \"\\x0B\": return options.screw_ie8 ? \"\\\\v\" : \"\\\\x0B\";\n              case \"\\u2028\": return \"\\\\u2028\";\n              case \"\\u2029\": return \"\\\\u2029\";\n              case \"\\ufeff\": return \"\\\\ufeff\";\n              case \"\\0\":\n                  return /[0-7]/.test(str.charAt(i+1)) ? \"\\\\x00\" : \"\\\\0\";\n            }\n            return s;\n        });\n        function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        }\n        function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n        }\n        if (options.ascii_only) str = to_ascii(str);\n        switch (options.quote_style) {\n          case 1:\n            return quote_single();\n          case 2:\n            return quote_double();\n          case 3:\n            return quote == \"'\" ? quote_single() : quote_double();\n          default:\n            return dq > sq ? quote_single() : quote_double();\n        }\n    };\n\n    function encode_string(str, quote) {\n        var ret = make_string(str, quote);\n        if (options.inline_script) {\n            ret = ret.replace(/<\\x2fscript([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n            ret = ret.replace(/\\x3c!--/g, \"\\\\x3c!--\");\n            ret = ret.replace(/--\\x3e/g, \"--\\\\x3e\");\n        }\n        return ret;\n    };\n\n    function make_name(name) {\n        name = name.toString();\n        if (options.ascii_only)\n            name = to_ascii(name, true);\n        return name;\n    };\n\n    function make_indent(back) {\n        return repeat_string(\" \", options.indent_start + indentation - back * options.indent_level);\n    };\n\n    /* -----[ beautification/minification ]----- */\n\n    var might_need_space = false;\n    var might_need_semicolon = false;\n    var might_add_newline = 0;\n    var last = \"\";\n\n    var ensure_line_len = options.max_line_len ? function() {\n        if (current_col > options.max_line_len) {\n            if (might_add_newline) {\n                var left = OUTPUT.slice(0, might_add_newline);\n                var right = OUTPUT.slice(might_add_newline);\n                OUTPUT = left + \"\\n\" + right;\n                current_line++;\n                current_pos++;\n                current_col = right.length;\n            }\n            if (current_col > options.max_line_len) {\n                AST_Node.warn(\"Output exceeds {max_line_len} characters\", options);\n            }\n        }\n        might_add_newline = 0;\n    } : noop;\n\n    var requireSemicolonChars = makePredicate(\"( [ + * / - , .\");\n\n    function print(str) {\n        str = String(str);\n        var ch = str.charAt(0);\n        var prev = last.charAt(last.length - 1);\n        if (might_need_semicolon) {\n            might_need_semicolon = false;\n\n            if (prev == \":\" && ch == \"}\" || (!ch || \";}\".indexOf(ch) < 0) && prev != \";\") {\n                if (options.semicolons || requireSemicolonChars(ch)) {\n                    OUTPUT += \";\";\n                    current_col++;\n                    current_pos++;\n                } else {\n                    ensure_line_len();\n                    OUTPUT += \"\\n\";\n                    current_pos++;\n                    current_line++;\n                    current_col = 0;\n\n                    if (/^\\s+$/.test(str)) {\n                        // reset the semicolon flag, since we didn't print one\n                        // now and might still have to later\n                        might_need_semicolon = true;\n                    }\n                }\n\n                if (!options.beautify)\n                    might_need_space = false;\n            }\n        }\n\n        if (!options.beautify && options.preserve_line && stack[stack.length - 1]) {\n            var target_line = stack[stack.length - 1].start.line;\n            while (current_line < target_line) {\n                ensure_line_len();\n                OUTPUT += \"\\n\";\n                current_pos++;\n                current_line++;\n                current_col = 0;\n                might_need_space = false;\n            }\n        }\n\n        if (might_need_space) {\n            if ((is_identifier_char(prev)\n                    && (is_identifier_char(ch) || ch == \"\\\\\"))\n                || (ch == \"/\" && ch == prev)\n                || ((ch == \"+\" || ch == \"-\") && ch == last))\n            {\n                OUTPUT += \" \";\n                current_col++;\n                current_pos++;\n            }\n            might_need_space = false;\n        }\n        OUTPUT += str;\n        current_pos += str.length;\n        var a = str.split(/\\r?\\n/), n = a.length - 1;\n        current_line += n;\n        current_col += a[0].length;\n        if (n > 0) {\n            ensure_line_len();\n            current_col = a[n].length;\n        }\n        last = str;\n    };\n\n    var space = options.beautify ? function() {\n        print(\" \");\n    } : function() {\n        might_need_space = true;\n    };\n\n    var indent = options.beautify ? function(half) {\n        if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n        }\n    } : noop;\n\n    var with_indent = options.beautify ? function(col, cont) {\n        if (col === true) col = next_indent();\n        var save_indentation = indentation;\n        indentation = col;\n        var ret = cont();\n        indentation = save_indentation;\n        return ret;\n    } : function(col, cont) { return cont() };\n\n    var newline = options.beautify ? function() {\n        print(\"\\n\");\n    } : options.max_line_len ? function() {\n        ensure_line_len();\n        might_add_newline = OUTPUT.length;\n    } : noop;\n\n    var semicolon = options.beautify ? function() {\n        print(\";\");\n    } : function() {\n        might_need_semicolon = true;\n    };\n\n    function force_semicolon() {\n        might_need_semicolon = false;\n        print(\";\");\n    };\n\n    function next_indent() {\n        return indentation + options.indent_level;\n    };\n\n    function with_block(cont) {\n        var ret;\n        print(\"{\");\n        newline();\n        with_indent(next_indent(), function(){\n            ret = cont();\n        });\n        indent();\n        print(\"}\");\n        return ret;\n    };\n\n    function with_parens(cont) {\n        print(\"(\");\n        //XXX: still nice to have that for argument lists\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\")\");\n        return ret;\n    };\n\n    function with_square(cont) {\n        print(\"[\");\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\"]\");\n        return ret;\n    };\n\n    function comma() {\n        print(\",\");\n        space();\n    };\n\n    function colon() {\n        print(\":\");\n        if (options.space_colon) space();\n    };\n\n    var add_mapping = options.source_map ? function(token, name) {\n        try {\n            if (token) options.source_map.add(\n                token.file || \"?\",\n                current_line, current_col,\n                token.line, token.col,\n                (!name && token.type == \"name\") ? token.value : name\n            );\n        } catch(ex) {\n            AST_Node.warn(\"Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]\", {\n                file: token.file,\n                line: token.line,\n                col: token.col,\n                cline: current_line,\n                ccol: current_col,\n                name: name || \"\"\n            })\n        }\n    } : noop;\n\n    function get() {\n        if (might_add_newline) {\n            ensure_line_len();\n        }\n        return OUTPUT;\n    };\n\n    var stack = [];\n    return {\n        get             : get,\n        toString        : get,\n        indent          : indent,\n        indentation     : function() { return indentation },\n        current_width   : function() { return current_col - indentation },\n        should_break    : function() { return options.width && this.current_width() >= options.width },\n        newline         : newline,\n        print           : print,\n        space           : space,\n        comma           : comma,\n        colon           : colon,\n        last            : function() { return last },\n        semicolon       : semicolon,\n        force_semicolon : force_semicolon,\n        to_ascii        : to_ascii,\n        print_name      : function(name) { print(make_name(name)) },\n        print_string    : function(str, quote, escape_directive) {\n            var encoded = encode_string(str, quote);\n            if (escape_directive === true && encoded.indexOf(\"\\\\\") === -1) {\n                // Insert semicolons to break directive prologue\n                if (!EXPECT_DIRECTIVE.test(OUTPUT)) {\n                    force_semicolon();\n                }\n                force_semicolon();\n            }\n            print(encoded);\n        },\n        encode_string   : encode_string,\n        next_indent     : next_indent,\n        with_indent     : with_indent,\n        with_block      : with_block,\n        with_parens     : with_parens,\n        with_square     : with_square,\n        add_mapping     : add_mapping,\n        option          : function(opt) { return options[opt] },\n        comment_filter  : comment_filter,\n        line            : function() { return current_line },\n        col             : function() { return current_col },\n        pos             : function() { return current_pos },\n        push_node       : function(node) { stack.push(node) },\n        pop_node        : function() { return stack.pop() },\n        parent          : function(n) {\n            return stack[stack.length - 2 - (n || 0)];\n        }\n    };\n\n};\n\n/* -----[ code generators ]----- */\n\n(function(){\n\n    /* -----[ utils ]----- */\n\n    function DEFPRINT(nodetype, generator) {\n        nodetype.DEFMETHOD(\"_codegen\", generator);\n    };\n\n    var use_asm = false;\n    var in_directive = false;\n\n    AST_Node.DEFMETHOD(\"print\", function(stream, force_parens){\n        var self = this, generator = self._codegen, prev_use_asm = use_asm;\n        if (self instanceof AST_Directive && self.value == \"use asm\" && stream.parent() instanceof AST_Scope) {\n            use_asm = true;\n        }\n        function doit() {\n            self.add_comments(stream);\n            self.add_source_map(stream);\n            generator(self, stream);\n        }\n        stream.push_node(self);\n        if (force_parens || self.needs_parens(stream)) {\n            stream.with_parens(doit);\n        } else {\n            doit();\n        }\n        stream.pop_node();\n        if (self instanceof AST_Scope) {\n            use_asm = prev_use_asm;\n        }\n    });\n\n    AST_Node.DEFMETHOD(\"print_to_string\", function(options){\n        var s = OutputStream(options);\n        if (!options) s._readonly = true;\n        this.print(s);\n        return s.get();\n    });\n\n    /* -----[ comments ]----- */\n\n    AST_Node.DEFMETHOD(\"add_comments\", function(output){\n        if (output._readonly) return;\n        var self = this;\n        var start = self.start;\n        if (start && !start._comments_dumped) {\n            start._comments_dumped = true;\n            var comments = start.comments_before || [];\n\n            // XXX: ugly fix for https://github.com/mishoo/UglifyJS2/issues/112\n            //               and https://github.com/mishoo/UglifyJS2/issues/372\n            if (self instanceof AST_Exit && self.value) {\n                self.value.walk(new TreeWalker(function(node){\n                    if (node.start && node.start.comments_before) {\n                        comments = comments.concat(node.start.comments_before);\n                        node.start.comments_before = [];\n                    }\n                    if (node instanceof AST_Function ||\n                        node instanceof AST_Array ||\n                        node instanceof AST_Object)\n                    {\n                        return true; // don't go inside.\n                    }\n                }));\n            }\n\n            if (output.pos() == 0) {\n                if (comments.length > 0 && output.option(\"shebang\") && comments[0].type == \"comment5\") {\n                    output.print(\"#!\" + comments.shift().value + \"\\n\");\n                    output.indent();\n                }\n                var preamble = output.option(\"preamble\");\n                if (preamble) {\n                    output.print(preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n                }\n            }\n\n            comments = comments.filter(output.comment_filter, self);\n\n            // Keep single line comments after nlb, after nlb\n            if (!output.option(\"beautify\") && comments.length > 0 &&\n                /comment[134]/.test(comments[0].type) &&\n                output.col() !== 0 && comments[0].nlb)\n            {\n                output.print(\"\\n\");\n            }\n\n            comments.forEach(function(c){\n                if (/comment[134]/.test(c.type)) {\n                    output.print(\"//\" + c.value + \"\\n\");\n                    output.indent();\n                }\n                else if (c.type == \"comment2\") {\n                    output.print(\"/*\" + c.value + \"*/\");\n                    if (start.nlb) {\n                        output.print(\"\\n\");\n                        output.indent();\n                    } else {\n                        output.space();\n                    }\n                }\n            });\n        }\n    });\n\n    /* -----[ PARENTHESES ]----- */\n\n    function PARENS(nodetype, func) {\n        if (Array.isArray(nodetype)) {\n            nodetype.forEach(function(nodetype){\n                PARENS(nodetype, func);\n            });\n        } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n        }\n    };\n\n    PARENS(AST_Node, function(){\n        return false;\n    });\n\n    // a function expression needs parens around it when it's provably\n    // the first token to appear in a statement.\n    PARENS(AST_Function, function(output){\n        if (first_in_statement(output)) {\n            return true;\n        }\n\n        if (output.option('wrap_iife')) {\n            var p = output.parent();\n            return p instanceof AST_Call && p.expression === this;\n        }\n\n        return false;\n    });\n\n    // same goes for an object literal, because otherwise it would be\n    // interpreted as a block of code.\n    PARENS(AST_Object, function(output){\n        return first_in_statement(output);\n    });\n\n    PARENS(AST_Unary, function(output){\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this;\n    });\n\n    PARENS(AST_Seq, function(output){\n        var p = output.parent();\n        return p instanceof AST_Call             // (foo, bar)() or foo(1, (2, 3), 4)\n            || p instanceof AST_Unary            // !(foo, bar, baz)\n            || p instanceof AST_Binary           // 1 + (2, 3) + 4 ==> 8\n            || p instanceof AST_VarDef           // var a = (1, 2), b = a + a; ==> b == 4\n            || p instanceof AST_PropAccess       // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n            || p instanceof AST_Array            // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n            || p instanceof AST_ObjectProperty   // { foo: (1, 2) }.foo ==> 2\n            || p instanceof AST_Conditional      /* (false, true) ? (a = 10, b = 20) : (c = 30)\n                                                  * ==> 20 (side effect, set a := 10 and b := 20) */\n        ;\n    });\n\n    PARENS(AST_Binary, function(output){\n        var p = output.parent();\n        // (foo && bar)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // typeof (foo && bar)\n        if (p instanceof AST_Unary)\n            return true;\n        // (foo && bar)[\"prop\"], (foo && bar).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // this deals with precedence: 3 * (2 + 1)\n        if (p instanceof AST_Binary) {\n            var po = p.operator, pp = PRECEDENCE[po];\n            var so = this.operator, sp = PRECEDENCE[so];\n            if (pp > sp\n                || (pp == sp\n                    && this === p.right)) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_PropAccess, function(output){\n        var p = output.parent();\n        if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            try {\n                this.walk(new TreeWalker(function(node){\n                    if (node instanceof AST_Call) throw p;\n                }));\n            } catch(ex) {\n                if (ex !== p) throw ex;\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_Call, function(output){\n        var p = output.parent(), p1;\n        if (p instanceof AST_New && p.expression === this)\n            return true;\n\n        // workaround for Safari bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=123506\n        return this.expression instanceof AST_Function\n            && p instanceof AST_PropAccess\n            && p.expression === this\n            && (p1 = output.parent(1)) instanceof AST_Assign\n            && p1.left === p;\n    });\n\n    PARENS(AST_New, function(output){\n        var p = output.parent();\n        if (!need_constructor_parens(this, output)\n            && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n                || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)\n            return true;\n    });\n\n    PARENS(AST_Number, function(output){\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value < 0 || /^0/.test(make_num(value))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS([ AST_Assign, AST_Conditional ], function (output){\n        var p = output.parent();\n        // !(a = false) → true\n        if (p instanceof AST_Unary)\n            return true;\n        // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n        if (p instanceof AST_Binary && !(p instanceof AST_Assign))\n            return true;\n        // (a = func)() —or— new (a = Object)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (a = foo) ? bar : baz\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // (a = foo)[\"prop\"] —or— (a = foo).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    /* -----[ PRINTERS ]----- */\n\n    DEFPRINT(AST_Directive, function(self, output){\n        output.print_string(self.value, self.quote);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Debugger, function(self, output){\n        output.print(\"debugger\");\n        output.semicolon();\n    });\n\n    /* -----[ statements ]----- */\n\n    function display_body(body, is_toplevel, output, allow_directives) {\n        var last = body.length - 1;\n        in_directive = allow_directives;\n        body.forEach(function(stmt, i){\n            if (in_directive === true && !(stmt instanceof AST_Directive ||\n                stmt instanceof AST_EmptyStatement ||\n                (stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)\n            )) {\n                in_directive = false;\n            }\n            if (!(stmt instanceof AST_EmptyStatement)) {\n                output.indent();\n                stmt.print(output);\n                if (!(i == last && is_toplevel)) {\n                    output.newline();\n                    if (is_toplevel) output.newline();\n                }\n            }\n            if (in_directive === true &&\n                stmt instanceof AST_SimpleStatement &&\n                stmt.body instanceof AST_String\n            ) {\n                in_directive = false;\n            }\n        });\n        in_directive = false;\n    };\n\n    AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function(output){\n        force_statement(this.body, output);\n    });\n\n    DEFPRINT(AST_Statement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Toplevel, function(self, output){\n        display_body(self.body, true, output, true);\n        output.print(\"\");\n    });\n    DEFPRINT(AST_LabeledStatement, function(self, output){\n        self.label.print(output);\n        output.colon();\n        self.body.print(output);\n    });\n    DEFPRINT(AST_SimpleStatement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    function print_bracketed(body, output, allow_directives) {\n        if (body.length > 0) output.with_block(function(){\n            display_body(body, false, output, allow_directives);\n        });\n        else output.print(\"{}\");\n    };\n    DEFPRINT(AST_BlockStatement, function(self, output){\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_EmptyStatement, function(self, output){\n        output.semicolon();\n    });\n    DEFPRINT(AST_Do, function(self, output){\n        output.print(\"do\");\n        output.space();\n        make_block(self.body, output);\n        output.space();\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.semicolon();\n    });\n    DEFPRINT(AST_While, function(self, output){\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_For, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            if (self.init) {\n                if (self.init instanceof AST_Definitions) {\n                    self.init.print(output);\n                } else {\n                    parenthesize_for_noin(self.init, output, true);\n                }\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.condition) {\n                self.condition.print(output);\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.step) {\n                self.step.print(output);\n            }\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_ForIn, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            self.init.print(output);\n            output.space();\n            output.print(\"in\");\n            output.space();\n            self.object.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_With, function(self, output){\n        output.print(\"with\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n\n    /* -----[ functions ]----- */\n    AST_Lambda.DEFMETHOD(\"_do_print\", function(output, nokeyword){\n        var self = this;\n        if (!nokeyword) {\n            output.print(\"function\");\n        }\n        if (self.name) {\n            output.space();\n            self.name.print(output);\n        }\n        output.with_parens(function(){\n            self.argnames.forEach(function(arg, i){\n                if (i) output.comma();\n                arg.print(output);\n            });\n        });\n        output.space();\n        print_bracketed(self.body, output, true);\n    });\n    DEFPRINT(AST_Lambda, function(self, output){\n        self._do_print(output);\n    });\n\n    /* -----[ exits ]----- */\n    AST_Exit.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.value) {\n            output.space();\n            this.value.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Return, function(self, output){\n        self._do_print(output, \"return\");\n    });\n    DEFPRINT(AST_Throw, function(self, output){\n        self._do_print(output, \"throw\");\n    });\n\n    /* -----[ loop control ]----- */\n    AST_LoopControl.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.label) {\n            output.space();\n            this.label.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Break, function(self, output){\n        self._do_print(output, \"break\");\n    });\n    DEFPRINT(AST_Continue, function(self, output){\n        self._do_print(output, \"continue\");\n    });\n\n    /* -----[ if ]----- */\n    function make_then(self, output) {\n        var b = self.body;\n        if (output.option(\"bracketize\")\n            || !output.option(\"screw_ie8\") && b instanceof AST_Do)\n            return make_block(b, output);\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block brackets if needed.\n        if (!b) return output.force_semicolon();\n        while (true) {\n            if (b instanceof AST_If) {\n                if (!b.alternative) {\n                    make_block(self.body, output);\n                    return;\n                }\n                b = b.alternative;\n            }\n            else if (b instanceof AST_StatementWithBody) {\n                b = b.body;\n            }\n            else break;\n        }\n        force_statement(self.body, output);\n    };\n    DEFPRINT(AST_If, function(self, output){\n        output.print(\"if\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            if (self.alternative instanceof AST_If)\n                self.alternative.print(output);\n            else\n                force_statement(self.alternative, output);\n        } else {\n            self._do_print_body(output);\n        }\n    });\n\n    /* -----[ switch ]----- */\n    DEFPRINT(AST_Switch, function(self, output){\n        output.print(\"switch\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        var last = self.body.length - 1;\n        if (last < 0) output.print(\"{}\");\n        else output.with_block(function(){\n            self.body.forEach(function(branch, i){\n                output.indent(true);\n                branch.print(output);\n                if (i < last && branch.body.length > 0)\n                    output.newline();\n            });\n        });\n    });\n    AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function(output){\n        output.newline();\n        this.body.forEach(function(stmt){\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    });\n    DEFPRINT(AST_Default, function(self, output){\n        output.print(\"default:\");\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_Case, function(self, output){\n        output.print(\"case\");\n        output.space();\n        self.expression.print(output);\n        output.print(\":\");\n        self._do_print_body(output);\n    });\n\n    /* -----[ exceptions ]----- */\n    DEFPRINT(AST_Try, function(self, output){\n        output.print(\"try\");\n        output.space();\n        print_bracketed(self.body, output);\n        if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n        }\n        if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n        }\n    });\n    DEFPRINT(AST_Catch, function(self, output){\n        output.print(\"catch\");\n        output.space();\n        output.with_parens(function(){\n            self.argname.print(output);\n        });\n        output.space();\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_Finally, function(self, output){\n        output.print(\"finally\");\n        output.space();\n        print_bracketed(self.body, output);\n    });\n\n    /* -----[ var/const ]----- */\n    AST_Definitions.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        output.space();\n        this.definitions.forEach(function(def, i){\n            if (i) output.comma();\n            def.print(output);\n        });\n        var p = output.parent();\n        var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n        var avoid_semicolon = in_for && p.init === this;\n        if (!avoid_semicolon)\n            output.semicolon();\n    });\n    DEFPRINT(AST_Var, function(self, output){\n        self._do_print(output, \"var\");\n    });\n    DEFPRINT(AST_Const, function(self, output){\n        self._do_print(output, \"const\");\n    });\n\n    function parenthesize_for_noin(node, output, noin) {\n        if (!noin) node.print(output);\n        else try {\n            // need to take some precautions here:\n            //    https://github.com/mishoo/UglifyJS2/issues/60\n            node.walk(new TreeWalker(function(node){\n                if (node instanceof AST_Binary && node.operator == \"in\")\n                    throw output;\n            }));\n            node.print(output);\n        } catch(ex) {\n            if (ex !== output) throw ex;\n            node.print(output, true);\n        }\n    };\n\n    DEFPRINT(AST_VarDef, function(self, output){\n        self.name.print(output);\n        if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n        }\n    });\n\n    /* -----[ other expressions ]----- */\n    DEFPRINT(AST_Call, function(self, output){\n        self.expression.print(output);\n        if (self instanceof AST_New && !need_constructor_parens(self, output))\n            return;\n        output.with_parens(function(){\n            self.args.forEach(function(expr, i){\n                if (i) output.comma();\n                expr.print(output);\n            });\n        });\n    });\n    DEFPRINT(AST_New, function(self, output){\n        output.print(\"new\");\n        output.space();\n        AST_Call.prototype._codegen(self, output);\n    });\n\n    AST_Seq.DEFMETHOD(\"_do_print\", function(output){\n        this.car.print(output);\n        if (this.cdr) {\n            output.comma();\n            if (output.should_break()) {\n                output.newline();\n                output.indent();\n            }\n            this.cdr.print(output);\n        }\n    });\n    DEFPRINT(AST_Seq, function(self, output){\n        self._do_print(output);\n        // var p = output.parent();\n        // if (p instanceof AST_Statement) {\n        //     output.with_indent(output.next_indent(), function(){\n        //         self._do_print(output);\n        //     });\n        // } else {\n        //     self._do_print(output);\n        // }\n    });\n    DEFPRINT(AST_Dot, function(self, output){\n        var expr = self.expression;\n        expr.print(output);\n        if (expr instanceof AST_Number && expr.getValue() >= 0) {\n            if (!/[xa-f.)]/i.test(output.last())) {\n                output.print(\".\");\n            }\n        }\n        output.print(\".\");\n        // the name after dot would be mapped about here.\n        output.add_mapping(self.end);\n        output.print_name(self.property);\n    });\n    DEFPRINT(AST_Sub, function(self, output){\n        self.expression.print(output);\n        output.print(\"[\");\n        self.property.print(output);\n        output.print(\"]\");\n    });\n    DEFPRINT(AST_UnaryPrefix, function(self, output){\n        var op = self.operator;\n        output.print(op);\n        if (/^[a-z]/i.test(op)\n            || (/[+-]$/.test(op)\n                && self.expression instanceof AST_UnaryPrefix\n                && /^[+-]/.test(self.expression.operator))) {\n            output.space();\n        }\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPostfix, function(self, output){\n        self.expression.print(output);\n        output.print(self.operator);\n    });\n    DEFPRINT(AST_Binary, function(self, output){\n        var op = self.operator;\n        self.left.print(output);\n        if (op[0] == \">\" /* \">>\" \">>>\" \">\" \">=\" */\n            && self.left instanceof AST_UnaryPostfix\n            && self.left.operator == \"--\") {\n            // space is mandatory to avoid outputting -->\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        output.print(op);\n        if ((op == \"<\" || op == \"<<\")\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"!\"\n            && self.right.expression instanceof AST_UnaryPrefix\n            && self.right.expression.operator == \"--\") {\n            // space is mandatory to avoid outputting <!--\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        self.right.print(output);\n    });\n    DEFPRINT(AST_Conditional, function(self, output){\n        self.condition.print(output);\n        output.space();\n        output.print(\"?\");\n        output.space();\n        self.consequent.print(output);\n        output.space();\n        output.colon();\n        self.alternative.print(output);\n    });\n\n    /* -----[ literals ]----- */\n    DEFPRINT(AST_Array, function(self, output){\n        output.with_square(function(){\n            var a = self.elements, len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function(exp, i){\n                if (i) output.comma();\n                exp.print(output);\n                // If the final element is a hole, we need to make sure it\n                // doesn't look like a trailing comma, by inserting an actual\n                // trailing comma.\n                if (i === len - 1 && exp instanceof AST_Hole)\n                  output.comma();\n            });\n            if (len > 0) output.space();\n        });\n    });\n    DEFPRINT(AST_Object, function(self, output){\n        if (self.properties.length > 0) output.with_block(function(){\n            self.properties.forEach(function(prop, i){\n                if (i) {\n                    output.print(\",\");\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else output.print(\"{}\");\n    });\n\n    function print_property_name(key, quote, output) {\n        if (output.option(\"quote_keys\")) {\n            output.print_string(key + \"\");\n        } else if ((typeof key == \"number\"\n                    || !output.option(\"beautify\")\n                    && +key + \"\" == key)\n                   && parseFloat(key) >= 0) {\n            output.print(make_num(key));\n        } else if (RESERVED_WORDS(key) ? output.option(\"screw_ie8\") : is_identifier_string(key)) {\n            if (quote && output.option(\"keep_quoted_props\")) {\n                output.print_string(key, quote);\n            } else {\n                output.print_name(key);\n            }\n        } else {\n            output.print_string(key, quote);\n        }\n    }\n\n    DEFPRINT(AST_ObjectKeyVal, function(self, output){\n        print_property_name(self.key, self.quote, output);\n        output.colon();\n        self.value.print(output);\n    });\n    AST_ObjectProperty.DEFMETHOD(\"_print_getter_setter\", function(type, output) {\n        output.print(type);\n        output.space();\n        print_property_name(this.key.name, this.quote, output);\n        this.value._do_print(output, true);\n    });\n    DEFPRINT(AST_ObjectSetter, function(self, output){\n        self._print_getter_setter(\"set\", output);\n    });\n    DEFPRINT(AST_ObjectGetter, function(self, output){\n        self._print_getter_setter(\"get\", output);\n    });\n    DEFPRINT(AST_Symbol, function(self, output){\n        var def = self.definition();\n        output.print_name(def ? def.mangled_name || def.name : self.name);\n    });\n    DEFPRINT(AST_Hole, noop);\n    DEFPRINT(AST_This, function(self, output){\n        output.print(\"this\");\n    });\n    DEFPRINT(AST_Constant, function(self, output){\n        output.print(self.getValue());\n    });\n    DEFPRINT(AST_String, function(self, output){\n        output.print_string(self.getValue(), self.quote, in_directive);\n    });\n    DEFPRINT(AST_Number, function(self, output){\n        if (use_asm && self.start && self.start.raw != null) {\n            output.print(self.start.raw);\n        } else {\n            output.print(make_num(self.getValue()));\n        }\n    });\n\n    function regexp_safe_literal(code) {\n        return [\n            0x5c   , // \\\n            0x2f   , // /\n            0x2e   , // .\n            0x2b   , // +\n            0x2a   , // *\n            0x3f   , // ?\n            0x28   , // (\n            0x29   , // )\n            0x5b   , // [\n            0x5d   , // ]\n            0x7b   , // {\n            0x7d   , // }\n            0x24   , // $\n            0x5e   , // ^\n            0x3a   , // :\n            0x7c   , // |\n            0x21   , // !\n            0x0a   , // \\n\n            0x0d   , // \\r\n            0x00   , // \\0\n            0xfeff , // Unicode BOM\n            0x2028 , // unicode \"line separator\"\n            0x2029 , // unicode \"paragraph separator\"\n        ].indexOf(code) < 0;\n    };\n\n    DEFPRINT(AST_RegExp, function(self, output){\n        var str = self.getValue().toString();\n        if (output.option(\"ascii_only\")) {\n            str = output.to_ascii(str);\n        } else if (output.option(\"unescape_regexps\")) {\n            str = str.split(\"\\\\\\\\\").map(function(str){\n                return str.replace(/\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}/g, function(s){\n                    var code = parseInt(s.substr(2), 16);\n                    return regexp_safe_literal(code) ? String.fromCharCode(code) : s;\n                });\n            }).join(\"\\\\\\\\\");\n        }\n        output.print(str);\n        var p = output.parent();\n        if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self)\n            output.print(\" \");\n    });\n\n    function force_statement(stat, output) {\n        if (output.option(\"bracketize\")) {\n            make_block(stat, output);\n        } else {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.force_semicolon();\n            else\n                stat.print(output);\n        }\n    };\n\n    // self should be AST_New.  decide if we want to show parens or not.\n    function need_constructor_parens(self, output) {\n        // Always print parentheses with arguments\n        if (self.args.length > 0) return true;\n\n        return output.option(\"beautify\");\n    };\n\n    function best_of(a) {\n        var best = a[0], len = best.length;\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n                best = a[i];\n                len = best.length;\n            }\n        }\n        return best;\n    };\n\n    function make_num(num) {\n        var str = num.toString(10), a = [ str.replace(/^0\\./, \".\").replace('e+', 'e') ], m;\n        if (Math.floor(num) === num) {\n            if (num >= 0) {\n                a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n                       \"0\" + num.toString(8)); // same.\n            } else {\n                a.push(\"-0x\" + (-num).toString(16).toLowerCase(), // probably pointless\n                       \"-0\" + (-num).toString(8)); // same.\n            }\n            if ((m = /^(.*?)(0+)$/.exec(num))) {\n                a.push(m[1] + \"e\" + m[2].length);\n            }\n        } else if ((m = /^0?\\.(0+)(.*)$/.exec(num))) {\n            a.push(m[2] + \"e-\" + (m[1].length + m[2].length),\n                   str.substr(str.indexOf(\".\")));\n        }\n        return best_of(a);\n    };\n\n    function make_block(stmt, output) {\n        if (!stmt || stmt instanceof AST_EmptyStatement)\n            output.print(\"{}\");\n        else if (stmt instanceof AST_BlockStatement)\n            stmt.print(output);\n        else output.with_block(function(){\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    };\n\n    /* -----[ source map generators ]----- */\n\n    function DEFMAP(nodetype, generator) {\n        nodetype.DEFMETHOD(\"add_source_map\", function(stream){\n            generator(this, stream);\n        });\n    };\n\n    // We could easily add info for ALL nodes, but it seems to me that\n    // would be quite wasteful, hence this noop in the base class.\n    DEFMAP(AST_Node, noop);\n\n    function basic_sourcemap_gen(self, output) {\n        output.add_mapping(self.start);\n    };\n\n    // XXX: I'm not exactly sure if we need it for all of these nodes,\n    // or if we should add even more.\n\n    DEFMAP(AST_Directive, basic_sourcemap_gen);\n    DEFMAP(AST_Debugger, basic_sourcemap_gen);\n    DEFMAP(AST_Symbol, basic_sourcemap_gen);\n    DEFMAP(AST_Jump, basic_sourcemap_gen);\n    DEFMAP(AST_StatementWithBody, basic_sourcemap_gen);\n    DEFMAP(AST_LabeledStatement, noop); // since the label symbol will mark it\n    DEFMAP(AST_Lambda, basic_sourcemap_gen);\n    DEFMAP(AST_Switch, basic_sourcemap_gen);\n    DEFMAP(AST_SwitchBranch, basic_sourcemap_gen);\n    DEFMAP(AST_BlockStatement, basic_sourcemap_gen);\n    DEFMAP(AST_Toplevel, noop);\n    DEFMAP(AST_New, basic_sourcemap_gen);\n    DEFMAP(AST_Try, basic_sourcemap_gen);\n    DEFMAP(AST_Catch, basic_sourcemap_gen);\n    DEFMAP(AST_Finally, basic_sourcemap_gen);\n    DEFMAP(AST_Definitions, basic_sourcemap_gen);\n    DEFMAP(AST_Constant, basic_sourcemap_gen);\n    DEFMAP(AST_ObjectSetter, function(self, output){\n        output.add_mapping(self.start, self.key.name);\n    });\n    DEFMAP(AST_ObjectGetter, function(self, output){\n        output.add_mapping(self.start, self.key.name);\n    });\n    DEFMAP(AST_ObjectProperty, function(self, output){\n        output.add_mapping(self.start, self.key);\n    });\n\n})();\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction Compressor(options, false_by_default) {\n    if (!(this instanceof Compressor))\n        return new Compressor(options, false_by_default);\n    TreeTransformer.call(this, this.before, this.after);\n    this.options = defaults(options, {\n        angular       : false,\n        booleans      : !false_by_default,\n        cascade       : !false_by_default,\n        collapse_vars : !false_by_default,\n        comparisons   : !false_by_default,\n        conditionals  : !false_by_default,\n        dead_code     : !false_by_default,\n        drop_console  : false,\n        drop_debugger : !false_by_default,\n        evaluate      : !false_by_default,\n        expression    : false,\n        global_defs   : {},\n        hoist_funs    : !false_by_default,\n        hoist_vars    : false,\n        if_return     : !false_by_default,\n        join_vars     : !false_by_default,\n        keep_fargs    : true,\n        keep_fnames   : false,\n        keep_infinity : false,\n        loops         : !false_by_default,\n        negate_iife   : !false_by_default,\n        passes        : 1,\n        properties    : !false_by_default,\n        pure_getters  : !false_by_default && \"strict\",\n        pure_funcs    : null,\n        reduce_vars   : !false_by_default,\n        screw_ie8     : true,\n        sequences     : !false_by_default,\n        side_effects  : !false_by_default,\n        switches      : !false_by_default,\n        top_retain    : null,\n        toplevel      : !!(options && options[\"top_retain\"]),\n        unsafe        : false,\n        unsafe_comps  : false,\n        unsafe_math   : false,\n        unsafe_proto  : false,\n        unsafe_regexp : false,\n        unused        : !false_by_default,\n        warnings      : true,\n    }, true);\n    var pure_funcs = this.options[\"pure_funcs\"];\n    if (typeof pure_funcs == \"function\") {\n        this.pure_funcs = pure_funcs;\n    } else {\n        this.pure_funcs = pure_funcs ? function(node) {\n            return pure_funcs.indexOf(node.expression.print_to_string()) < 0;\n        } : return_true;\n    }\n    var top_retain = this.options[\"top_retain\"];\n    if (top_retain instanceof RegExp) {\n        this.top_retain = function(def) {\n            return top_retain.test(def.name);\n        };\n    } else if (typeof top_retain == \"function\") {\n        this.top_retain = top_retain;\n    } else if (top_retain) {\n        if (typeof top_retain == \"string\") {\n            top_retain = top_retain.split(/,/);\n        }\n        this.top_retain = function(def) {\n            return top_retain.indexOf(def.name) >= 0;\n        };\n    }\n    var sequences = this.options[\"sequences\"];\n    this.sequences_limit = sequences == 1 ? 200 : sequences | 0;\n    this.warnings_produced = {};\n};\n\nCompressor.prototype = new TreeTransformer;\nmerge(Compressor.prototype, {\n    option: function(key) { return this.options[key] },\n    compress: function(node) {\n        if (this.option(\"expression\")) {\n            node = node.process_expression(true);\n        }\n        var passes = +this.options.passes || 1;\n        for (var pass = 0; pass < passes && pass < 3; ++pass) {\n            if (pass > 0 || this.option(\"reduce_vars\"))\n                node.reset_opt_flags(this, true);\n            node = node.transform(this);\n        }\n        if (this.option(\"expression\")) {\n            node = node.process_expression(false);\n        }\n        return node;\n    },\n    info: function() {\n        if (this.options.warnings == \"verbose\") {\n            AST_Node.warn.apply(AST_Node, arguments);\n        }\n    },\n    warn: function(text, props) {\n        if (this.options.warnings) {\n            // only emit unique warnings\n            var message = string_template(text, props);\n            if (!(message in this.warnings_produced)) {\n                this.warnings_produced[message] = true;\n                AST_Node.warn.apply(AST_Node, arguments);\n            }\n        }\n    },\n    clear_warnings: function() {\n        this.warnings_produced = {};\n    },\n    before: function(node, descend, in_list) {\n        if (node._squeezed) return node;\n        var was_scope = false;\n        if (node instanceof AST_Scope) {\n            node = node.hoist_declarations(this);\n            was_scope = true;\n        }\n        // Before https://github.com/mishoo/UglifyJS2/pull/1602 AST_Node.optimize()\n        // would call AST_Node.transform() if a different instance of AST_Node is\n        // produced after OPT().\n        // This corrupts TreeWalker.stack, which cause AST look-ups to malfunction.\n        // Migrate and defer all children's AST_Node.transform() to below, which\n        // will now happen after this parent AST_Node has been properly substituted\n        // thus gives a consistent AST snapshot.\n        descend(node, this);\n        // Existing code relies on how AST_Node.optimize() worked, and omitting the\n        // following replacement call would result in degraded efficiency of both\n        // output and performance.\n        descend(node, this);\n        var opt = node.optimize(this);\n        if (was_scope && opt instanceof AST_Scope) {\n            opt.drop_unused(this);\n            descend(opt, this);\n        }\n        if (opt === node) opt._squeezed = true;\n        return opt;\n    }\n});\n\n(function(){\n\n    function OPT(node, optimizer) {\n        node.DEFMETHOD(\"optimize\", function(compressor){\n            var self = this;\n            if (self._optimized) return self;\n            if (compressor.has_directive(\"use asm\")) return self;\n            var opt = optimizer(self, compressor);\n            opt._optimized = true;\n            return opt;\n        });\n    };\n\n    OPT(AST_Node, function(self, compressor){\n        return self;\n    });\n\n    AST_Node.DEFMETHOD(\"equivalent_to\", function(node){\n        return this.TYPE == node.TYPE && this.print_to_string() == node.print_to_string();\n    });\n\n    AST_Node.DEFMETHOD(\"process_expression\", function(insert, compressor) {\n        var self = this;\n        var tt = new TreeTransformer(function(node) {\n            if (insert && node instanceof AST_SimpleStatement) {\n                return make_node(AST_Return, node, {\n                    value: node.body\n                });\n            }\n            if (!insert && node instanceof AST_Return) {\n                if (compressor) {\n                    var value = node.value && node.value.drop_side_effect_free(compressor, true);\n                    return value ? make_node(AST_SimpleStatement, node, {\n                        body: value\n                    }) : make_node(AST_EmptyStatement, node);\n                }\n                return make_node(AST_SimpleStatement, node, {\n                    body: node.value || make_node(AST_UnaryPrefix, node, {\n                        operator: \"void\",\n                        expression: make_node(AST_Number, node, {\n                            value: 0\n                        })\n                    })\n                });\n            }\n            if (node instanceof AST_Lambda && node !== self) {\n                return node;\n            }\n            if (node instanceof AST_Block) {\n                var index = node.body.length - 1;\n                if (index >= 0) {\n                    node.body[index] = node.body[index].transform(tt);\n                }\n            }\n            if (node instanceof AST_If) {\n                node.body = node.body.transform(tt);\n                if (node.alternative) {\n                    node.alternative = node.alternative.transform(tt);\n                }\n            }\n            if (node instanceof AST_With) {\n                node.body = node.body.transform(tt);\n            }\n            return node;\n        });\n        return self.transform(tt);\n    });\n\n    AST_Node.DEFMETHOD(\"reset_opt_flags\", function(compressor, rescan){\n        var reduce_vars = rescan && compressor.option(\"reduce_vars\");\n        var toplevel = compressor.option(\"toplevel\");\n        var safe_ids = Object.create(null);\n        var suppressor = new TreeWalker(function(node) {\n            if (node instanceof AST_Symbol) {\n                var d = node.definition();\n                if (node instanceof AST_SymbolRef) d.references.push(node);\n                d.fixed = false;\n            }\n        });\n        var tw = new TreeWalker(function(node, descend){\n            node._squeezed = false;\n            node._optimized = false;\n            if (reduce_vars) {\n                if (node instanceof AST_Toplevel) node.globals.each(reset_def);\n                if (node instanceof AST_Scope) node.variables.each(reset_def);\n                if (node instanceof AST_SymbolRef) {\n                    var d = node.definition();\n                    d.references.push(node);\n                    if (d.fixed === undefined || !is_safe(d)\n                        || is_modified(node, 0, node.fixed_value() instanceof AST_Lambda)) {\n                        d.fixed = false;\n                    } else {\n                        var parent = tw.parent();\n                        if (parent instanceof AST_Assign && parent.operator == \"=\" && node === parent.right\n                            || parent instanceof AST_Call && node !== parent.expression\n                            || parent instanceof AST_Return && node === parent.value && node.scope !== d.scope\n                            || parent instanceof AST_VarDef && node === parent.value) {\n                            d.escaped = true;\n                        }\n                    }\n                }\n                if (node instanceof AST_SymbolCatch) {\n                    node.definition().fixed = false;\n                }\n                if (node instanceof AST_VarDef) {\n                    var d = node.name.definition();\n                    if (d.fixed == null) {\n                        if (node.value) {\n                            d.fixed = function() {\n                                return node.value;\n                            };\n                            mark(d, false);\n                            descend();\n                        } else {\n                            d.fixed = null;\n                        }\n                        mark(d, true);\n                        return true;\n                    } else if (node.value) {\n                        d.fixed = false;\n                    }\n                }\n                if (node instanceof AST_Defun) {\n                    var d = node.name.definition();\n                    if (!toplevel && d.global || is_safe(d)) {\n                        d.fixed = false;\n                    } else {\n                        d.fixed = node;\n                        mark(d, true);\n                    }\n                    var save_ids = safe_ids;\n                    safe_ids = Object.create(null);\n                    descend();\n                    safe_ids = save_ids;\n                    return true;\n                }\n                if (node instanceof AST_Function) {\n                    push();\n                    var iife;\n                    if (!node.name\n                        && (iife = tw.parent()) instanceof AST_Call\n                        && iife.expression === node) {\n                        // Virtually turn IIFE parameters into variable definitions:\n                        //   (function(a,b) {...})(c,d) => (function() {var a=c,b=d; ...})()\n                        // So existing transformation rules can work on them.\n                        node.argnames.forEach(function(arg, i) {\n                            var d = arg.definition();\n                            if (!node.uses_arguments && d.fixed === undefined) {\n                                d.fixed = function() {\n                                    return iife.args[i] || make_node(AST_Undefined, iife);\n                                };\n                                mark(d, true);\n                            } else {\n                                d.fixed = false;\n                            }\n                        });\n                    }\n                    descend();\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_Accessor) {\n                    var save_ids = safe_ids;\n                    safe_ids = Object.create(null);\n                    descend();\n                    safe_ids = save_ids;\n                    return true;\n                }\n                if (node instanceof AST_Binary\n                    && (node.operator == \"&&\" || node.operator == \"||\")) {\n                    node.left.walk(tw);\n                    push();\n                    node.right.walk(tw);\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_Conditional) {\n                    node.condition.walk(tw);\n                    push();\n                    node.consequent.walk(tw);\n                    pop();\n                    push();\n                    node.alternative.walk(tw);\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_If || node instanceof AST_DWLoop) {\n                    node.condition.walk(tw);\n                    push();\n                    node.body.walk(tw);\n                    pop();\n                    if (node.alternative) {\n                        push();\n                        node.alternative.walk(tw);\n                        pop();\n                    }\n                    return true;\n                }\n                if (node instanceof AST_LabeledStatement) {\n                    push();\n                    node.body.walk(tw);\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_For) {\n                    if (node.init) node.init.walk(tw);\n                    push();\n                    if (node.condition) node.condition.walk(tw);\n                    node.body.walk(tw);\n                    if (node.step) node.step.walk(tw);\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_ForIn) {\n                    node.init.walk(suppressor);\n                    node.object.walk(tw);\n                    push();\n                    node.body.walk(tw);\n                    pop();\n                    return true;\n                }\n                if (node instanceof AST_Try) {\n                    push();\n                    walk_body(node, tw);\n                    pop();\n                    if (node.bcatch) {\n                        push();\n                        node.bcatch.walk(tw);\n                        pop();\n                    }\n                    if (node.bfinally) node.bfinally.walk(tw);\n                    return true;\n                }\n                if (node instanceof AST_SwitchBranch) {\n                    push();\n                    descend();\n                    pop();\n                    return true;\n                }\n            }\n        });\n        this.walk(tw);\n\n        function mark(def, safe) {\n            safe_ids[def.id] = safe;\n        }\n\n        function is_safe(def) {\n            if (safe_ids[def.id]) {\n                if (def.fixed == null) {\n                    var orig = def.orig[0];\n                    if (orig instanceof AST_SymbolFunarg || orig.name == \"arguments\") return false;\n                    def.fixed = make_node(AST_Undefined, orig);\n                }\n                return true;\n            }\n        }\n\n        function push() {\n            safe_ids = Object.create(safe_ids);\n        }\n\n        function pop() {\n            safe_ids = Object.getPrototypeOf(safe_ids);\n        }\n\n        function reset_def(def) {\n            def.escaped = false;\n            if (def.scope.uses_eval) {\n                def.fixed = false;\n            } else if (toplevel || !def.global || def.orig[0] instanceof AST_SymbolConst) {\n                def.fixed = undefined;\n            } else {\n                def.fixed = false;\n            }\n            def.references = [];\n            def.should_replace = undefined;\n        }\n\n        function is_modified(node, level, func) {\n            var parent = tw.parent(level);\n            if (is_lhs(node, parent)\n                || !func && parent instanceof AST_Call && parent.expression === node) {\n                return true;\n            } else if (parent instanceof AST_PropAccess && parent.expression === node) {\n                return !func && is_modified(parent, level + 1);\n            }\n        }\n    });\n\n    AST_SymbolRef.DEFMETHOD(\"fixed_value\", function() {\n        var fixed = this.definition().fixed;\n        if (!fixed || fixed instanceof AST_Node) return fixed;\n        return fixed();\n    });\n\n    function is_reference_const(ref) {\n        if (!(ref instanceof AST_SymbolRef)) return false;\n        var orig = ref.definition().orig;\n        for (var i = orig.length; --i >= 0;) {\n            if (orig[i] instanceof AST_SymbolConst) return true;\n        }\n    }\n\n    function find_variable(compressor, name) {\n        var scope, i = 0;\n        while (scope = compressor.parent(i++)) {\n            if (scope instanceof AST_Scope) break;\n            if (scope instanceof AST_Catch) {\n                scope = scope.argname.definition().scope;\n                break;\n            }\n        }\n        return scope.find_variable(name);\n    }\n\n    function make_node(ctor, orig, props) {\n        if (!props) props = {};\n        if (orig) {\n            if (!props.start) props.start = orig.start;\n            if (!props.end) props.end = orig.end;\n        }\n        return new ctor(props);\n    };\n\n    function make_node_from_constant(val, orig) {\n        switch (typeof val) {\n          case \"string\":\n            return make_node(AST_String, orig, {\n                value: val\n            });\n          case \"number\":\n            if (isNaN(val)) return make_node(AST_NaN, orig);\n            if (isFinite(val)) {\n                return 1 / val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                    operator: \"-\",\n                    expression: make_node(AST_Number, orig, { value: -val })\n                }) : make_node(AST_Number, orig, { value: val });\n            }\n            return val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                operator: \"-\",\n                expression: make_node(AST_Infinity, orig)\n            }) : make_node(AST_Infinity, orig);\n          case \"boolean\":\n            return make_node(val ? AST_True : AST_False, orig);\n          case \"undefined\":\n            return make_node(AST_Undefined, orig);\n          default:\n            if (val === null) {\n                return make_node(AST_Null, orig, { value: null });\n            }\n            if (val instanceof RegExp) {\n                return make_node(AST_RegExp, orig, { value: val });\n            }\n            throw new Error(string_template(\"Can't handle constant of type: {type}\", {\n                type: typeof val\n            }));\n        }\n    };\n\n    // we shouldn't compress (1,func)(something) to\n    // func(something) because that changes the meaning of\n    // the func (becomes lexical instead of global).\n    function maintain_this_binding(parent, orig, val) {\n        if (parent instanceof AST_UnaryPrefix && parent.operator == \"delete\"\n            || parent instanceof AST_Call && parent.expression === orig\n                && (val instanceof AST_PropAccess || val instanceof AST_SymbolRef && val.name == \"eval\")) {\n            return make_node(AST_Seq, orig, {\n                car: make_node(AST_Number, orig, {\n                    value: 0\n                }),\n                cdr: val\n            });\n        }\n        return val;\n    }\n\n    function as_statement_array(thing) {\n        if (thing === null) return [];\n        if (thing instanceof AST_BlockStatement) return thing.body;\n        if (thing instanceof AST_EmptyStatement) return [];\n        if (thing instanceof AST_Statement) return [ thing ];\n        throw new Error(\"Can't convert thing to statement array\");\n    };\n\n    function is_empty(thing) {\n        if (thing === null) return true;\n        if (thing instanceof AST_EmptyStatement) return true;\n        if (thing instanceof AST_BlockStatement) return thing.body.length == 0;\n        return false;\n    };\n\n    function loop_body(x) {\n        if (x instanceof AST_Switch) return x;\n        if (x instanceof AST_For || x instanceof AST_ForIn || x instanceof AST_DWLoop) {\n            return (x.body instanceof AST_BlockStatement ? x.body : x);\n        }\n        return x;\n    };\n\n    function is_iife_call(node) {\n        if (node instanceof AST_Call && !(node instanceof AST_New)) {\n            return node.expression instanceof AST_Function || is_iife_call(node.expression);\n        }\n        return false;\n    }\n\n    function tighten_body(statements, compressor) {\n        var CHANGED, max_iter = 10;\n        do {\n            CHANGED = false;\n            if (compressor.option(\"angular\")) {\n                statements = process_for_angular(statements);\n            }\n            statements = eliminate_spurious_blocks(statements);\n            if (compressor.option(\"dead_code\")) {\n                statements = eliminate_dead_code(statements, compressor);\n            }\n            if (compressor.option(\"if_return\")) {\n                statements = handle_if_return(statements, compressor);\n            }\n            if (compressor.sequences_limit > 0) {\n                statements = sequencesize(statements, compressor);\n            }\n            if (compressor.option(\"join_vars\")) {\n                statements = join_consecutive_vars(statements, compressor);\n            }\n            if (compressor.option(\"collapse_vars\")) {\n                statements = collapse_single_use_vars(statements, compressor);\n            }\n        } while (CHANGED && max_iter-- > 0);\n\n        return statements;\n\n        function collapse_single_use_vars(statements, compressor) {\n            // Iterate statements backwards looking for a statement with a var/const\n            // declaration immediately preceding it. Grab the rightmost var definition\n            // and if it has exactly one reference then attempt to replace its reference\n            // in the statement with the var value and then erase the var definition.\n\n            var self = compressor.self();\n            var var_defs_removed = false;\n            var toplevel = compressor.option(\"toplevel\");\n            for (var stat_index = statements.length; --stat_index >= 0;) {\n                var stat = statements[stat_index];\n                if (stat instanceof AST_Definitions) continue;\n\n                // Process child blocks of statement if present.\n                [stat, stat.body, stat.alternative, stat.bcatch, stat.bfinally].forEach(function(node) {\n                    node && node.body && collapse_single_use_vars(node.body, compressor);\n                });\n\n                // The variable definition must precede a statement.\n                if (stat_index <= 0) break;\n                var prev_stat_index = stat_index - 1;\n                var prev_stat = statements[prev_stat_index];\n                if (!(prev_stat instanceof AST_Definitions)) continue;\n                var var_defs = prev_stat.definitions;\n                if (var_defs == null) continue;\n\n                var var_names_seen = {};\n                var side_effects_encountered = false;\n                var lvalues_encountered = false;\n                var lvalues = {};\n\n                // Scan variable definitions from right to left.\n                for (var var_defs_index = var_defs.length; --var_defs_index >= 0;) {\n\n                    // Obtain var declaration and var name with basic sanity check.\n                    var var_decl = var_defs[var_defs_index];\n                    if (var_decl.value == null) break;\n                    var var_name = var_decl.name.name;\n                    if (!var_name || !var_name.length) break;\n\n                    // Bail if we've seen a var definition of same name before.\n                    if (var_name in var_names_seen) break;\n                    var_names_seen[var_name] = true;\n\n                    // Only interested in cases with just one reference to the variable.\n                    var def = self.find_variable && self.find_variable(var_name);\n                    if (!def || !def.references || def.references.length !== 1\n                        || var_name == \"arguments\" || (!toplevel && def.global)) {\n                        side_effects_encountered = true;\n                        continue;\n                    }\n                    var ref = def.references[0];\n\n                    // Don't replace ref if eval() or with statement in scope.\n                    if (ref.scope.uses_eval || ref.scope.uses_with) break;\n\n                    // Constant single use vars can be replaced in any scope.\n                    if (var_decl.value.is_constant()) {\n                        var ctt = new TreeTransformer(function(node) {\n                            var parent = ctt.parent();\n                            if (parent instanceof AST_IterationStatement\n                                && (parent.condition === node || parent.init === node)) {\n                                return node;\n                            }\n                            if (node === ref)\n                                return replace_var(node, parent, true);\n                        });\n                        stat.transform(ctt);\n                        continue;\n                    }\n\n                    // Restrict var replacement to constants if side effects encountered.\n                    if (side_effects_encountered |= lvalues_encountered) continue;\n\n                    var value_has_side_effects = var_decl.value.has_side_effects(compressor);\n                    // Non-constant single use vars can only be replaced in same scope.\n                    if (ref.scope !== self) {\n                        side_effects_encountered |= value_has_side_effects;\n                        continue;\n                    }\n\n                    // Detect lvalues in var value.\n                    var tw = new TreeWalker(function(node){\n                        if (node instanceof AST_SymbolRef && is_lvalue(node, tw.parent())) {\n                            lvalues[node.name] = lvalues_encountered = true;\n                        }\n                    });\n                    var_decl.value.walk(tw);\n\n                    // Replace the non-constant single use var in statement if side effect free.\n                    var unwind = false;\n                    var tt = new TreeTransformer(\n                        function preorder(node) {\n                            if (unwind) return node;\n                            var parent = tt.parent();\n                            if (node instanceof AST_Lambda\n                                || node instanceof AST_Try\n                                || node instanceof AST_With\n                                || node instanceof AST_Case\n                                || node instanceof AST_IterationStatement\n                                || (parent instanceof AST_If          && node !== parent.condition)\n                                || (parent instanceof AST_Conditional && node !== parent.condition)\n                                || (node instanceof AST_SymbolRef\n                                    && value_has_side_effects\n                                    && !are_references_in_scope(node.definition(), self))\n                                || (parent instanceof AST_Binary\n                                    && (parent.operator == \"&&\" || parent.operator == \"||\")\n                                    && node === parent.right)\n                                || (parent instanceof AST_Switch && node !== parent.expression)) {\n                                return side_effects_encountered = unwind = true, node;\n                            }\n                            function are_references_in_scope(def, scope) {\n                                if (def.orig.length === 1\n                                    && def.orig[0] instanceof AST_SymbolDefun) return true;\n                                if (def.scope !== scope) return false;\n                                var refs = def.references;\n                                for (var i = 0, len = refs.length; i < len; i++) {\n                                    if (refs[i].scope !== scope) return false;\n                                }\n                                return true;\n                            }\n                        },\n                        function postorder(node) {\n                            if (unwind) return node;\n                            if (node === ref)\n                                return unwind = true, replace_var(node, tt.parent(), false);\n                            if (side_effects_encountered |= node.has_side_effects(compressor))\n                                return unwind = true, node;\n                            if (lvalues_encountered && node instanceof AST_SymbolRef && node.name in lvalues) {\n                                side_effects_encountered = true;\n                                return unwind = true, node;\n                            }\n                        }\n                    );\n                    stat.transform(tt);\n                }\n            }\n\n            // Remove extraneous empty statments in block after removing var definitions.\n            // Leave at least one statement in `statements`.\n            if (var_defs_removed) for (var i = statements.length; --i >= 0;) {\n                if (statements.length > 1 && statements[i] instanceof AST_EmptyStatement)\n                    statements.splice(i, 1);\n            }\n\n            return statements;\n\n            function is_lvalue(node, parent) {\n                return node instanceof AST_SymbolRef && is_lhs(node, parent);\n            }\n            function replace_var(node, parent, is_constant) {\n                if (is_lvalue(node, parent)) return node;\n\n                // Remove var definition and return its value to the TreeTransformer to replace.\n                var value = maintain_this_binding(parent, node, var_decl.value);\n                var_decl.value = null;\n\n                var_defs.splice(var_defs_index, 1);\n                if (var_defs.length === 0) {\n                    statements[prev_stat_index] = make_node(AST_EmptyStatement, self);\n                    var_defs_removed = true;\n                }\n                // Further optimize statement after substitution.\n                stat.reset_opt_flags(compressor);\n\n                compressor.info(\"Collapsing \" + (is_constant ? \"constant\" : \"variable\") +\n                    \" \" + var_name + \" [{file}:{line},{col}]\", node.start);\n                CHANGED = true;\n                return value;\n            }\n        }\n\n        function process_for_angular(statements) {\n            function has_inject(comment) {\n                return /@ngInject/.test(comment.value);\n            }\n            function make_arguments_names_list(func) {\n                return func.argnames.map(function(sym){\n                    return make_node(AST_String, sym, { value: sym.name });\n                });\n            }\n            function make_array(orig, elements) {\n                return make_node(AST_Array, orig, { elements: elements });\n            }\n            function make_injector(func, name) {\n                return make_node(AST_SimpleStatement, func, {\n                    body: make_node(AST_Assign, func, {\n                        operator: \"=\",\n                        left: make_node(AST_Dot, name, {\n                            expression: make_node(AST_SymbolRef, name, name),\n                            property: \"$inject\"\n                        }),\n                        right: make_array(func, make_arguments_names_list(func))\n                    })\n                });\n            }\n            function check_expression(body) {\n                if (body && body.args) {\n                    // if this is a function call check all of arguments passed\n                    body.args.forEach(function(argument, index, array) {\n                        var comments = argument.start.comments_before;\n                        // if the argument is function preceded by @ngInject\n                        if (argument instanceof AST_Lambda && comments.length && has_inject(comments[0])) {\n                            // replace the function with an array of names of its parameters and function at the end\n                            array[index] = make_array(argument, make_arguments_names_list(argument).concat(argument));\n                        }\n                    });\n                    // if this is chained call check previous one recursively\n                    if (body.expression && body.expression.expression) {\n                        check_expression(body.expression.expression);\n                    }\n                }\n            }\n            return statements.reduce(function(a, stat){\n                a.push(stat);\n\n                if (stat.body && stat.body.args) {\n                    check_expression(stat.body);\n                } else {\n                    var token = stat.start;\n                    var comments = token.comments_before;\n                    if (comments && comments.length > 0) {\n                        var last = comments.pop();\n                        if (has_inject(last)) {\n                            // case 1: defun\n                            if (stat instanceof AST_Defun) {\n                                a.push(make_injector(stat, stat.name));\n                            }\n                            else if (stat instanceof AST_Definitions) {\n                                stat.definitions.forEach(function(def) {\n                                    if (def.value && def.value instanceof AST_Lambda) {\n                                        a.push(make_injector(def.value, def.name));\n                                    }\n                                });\n                            }\n                            else {\n                                compressor.warn(\"Unknown statement marked with @ngInject [{file}:{line},{col}]\", token);\n                            }\n                        }\n                    }\n                }\n\n                return a;\n            }, []);\n        }\n\n        function eliminate_spurious_blocks(statements) {\n            var seen_dirs = [];\n            return statements.reduce(function(a, stat){\n                if (stat instanceof AST_BlockStatement) {\n                    CHANGED = true;\n                    a.push.apply(a, eliminate_spurious_blocks(stat.body));\n                } else if (stat instanceof AST_EmptyStatement) {\n                    CHANGED = true;\n                } else if (stat instanceof AST_Directive) {\n                    if (seen_dirs.indexOf(stat.value) < 0) {\n                        a.push(stat);\n                        seen_dirs.push(stat.value);\n                    } else {\n                        CHANGED = true;\n                    }\n                } else {\n                    a.push(stat);\n                }\n                return a;\n            }, []);\n        };\n\n        function handle_if_return(statements, compressor) {\n            var self = compressor.self();\n            var multiple_if_returns = has_multiple_if_returns(statements);\n            var in_lambda = self instanceof AST_Lambda;\n            var ret = []; // Optimized statements, build from tail to front\n            loop: for (var i = statements.length; --i >= 0;) {\n                var stat = statements[i];\n                switch (true) {\n                  case (in_lambda && stat instanceof AST_Return && !stat.value && ret.length == 0):\n                    CHANGED = true;\n                    // note, ret.length is probably always zero\n                    // because we drop unreachable code before this\n                    // step.  nevertheless, it's good to check.\n                    continue loop;\n                  case stat instanceof AST_If:\n                    if (stat.body instanceof AST_Return) {\n                        //---\n                        // pretty silly case, but:\n                        // if (foo()) return; return; ==> foo(); return;\n                        if (((in_lambda && ret.length == 0)\n                             || (ret[0] instanceof AST_Return && !ret[0].value))\n                            && !stat.body.value && !stat.alternative) {\n                            CHANGED = true;\n                            var cond = make_node(AST_SimpleStatement, stat.condition, {\n                                body: stat.condition\n                            });\n                            ret.unshift(cond);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return x; return y; ==> return foo() ? x : y;\n                        if (ret[0] instanceof AST_Return && stat.body.value && ret[0].value && !stat.alternative) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.alternative = ret[0];\n                            ret[0] = stat.transform(compressor);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;\n                        if (multiple_if_returns && (ret.length == 0 || ret[0] instanceof AST_Return)\n                            && stat.body.value && !stat.alternative && in_lambda) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.alternative = ret[0] || make_node(AST_Return, stat, {\n                                value: null\n                            });\n                            ret[0] = stat.transform(compressor);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return; [ else x... ]; y... ==> if (!foo()) { x...; y... }\n                        if (!stat.body.value && in_lambda) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.condition = stat.condition.negate(compressor);\n                            var body = as_statement_array(stat.alternative).concat(ret);\n                            var funs = extract_functions_from_statement_array(body);\n                            stat.body = make_node(AST_BlockStatement, stat, {\n                                body: body\n                            });\n                            stat.alternative = null;\n                            ret = funs.concat([ stat.transform(compressor) ]);\n                            continue loop;\n                        }\n\n                        //---\n                        // if (a) return b; if (c) return d; e; ==> return a ? b : c ? d : void e;\n                        //\n                        // if sequences is not enabled, this can lead to an endless loop (issue #866).\n                        // however, with sequences on this helps producing slightly better output for\n                        // the example code.\n                        if (compressor.option(\"sequences\")\n                            && i > 0 && statements[i - 1] instanceof AST_If && statements[i - 1].body instanceof AST_Return\n                            && ret.length == 1 && in_lambda && ret[0] instanceof AST_SimpleStatement\n                            && !stat.alternative) {\n                            CHANGED = true;\n                            ret.push(make_node(AST_Return, ret[0], {\n                                value: null\n                            }).transform(compressor));\n                            ret.unshift(stat);\n                            continue loop;\n                        }\n                    }\n\n                    var ab = aborts(stat.body);\n                    var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n                    if (ab && ((ab instanceof AST_Return && !ab.value && in_lambda)\n                               || (ab instanceof AST_Continue && self === loop_body(lct))\n                               || (ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct))) {\n                        if (ab.label) {\n                            remove(ab.label.thedef.references, ab);\n                        }\n                        CHANGED = true;\n                        var body = as_statement_array(stat.body).slice(0, -1);\n                        stat = stat.clone();\n                        stat.condition = stat.condition.negate(compressor);\n                        stat.body = make_node(AST_BlockStatement, stat, {\n                            body: as_statement_array(stat.alternative).concat(ret)\n                        });\n                        stat.alternative = make_node(AST_BlockStatement, stat, {\n                            body: body\n                        });\n                        ret = [ stat.transform(compressor) ];\n                        continue loop;\n                    }\n\n                    var ab = aborts(stat.alternative);\n                    var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n                    if (ab && ((ab instanceof AST_Return && !ab.value && in_lambda)\n                               || (ab instanceof AST_Continue && self === loop_body(lct))\n                               || (ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct))) {\n                        if (ab.label) {\n                            remove(ab.label.thedef.references, ab);\n                        }\n                        CHANGED = true;\n                        stat = stat.clone();\n                        stat.body = make_node(AST_BlockStatement, stat.body, {\n                            body: as_statement_array(stat.body).concat(ret)\n                        });\n                        stat.alternative = make_node(AST_BlockStatement, stat.alternative, {\n                            body: as_statement_array(stat.alternative).slice(0, -1)\n                        });\n                        ret = [ stat.transform(compressor) ];\n                        continue loop;\n                    }\n\n                    ret.unshift(stat);\n                    break;\n                  default:\n                    ret.unshift(stat);\n                    break;\n                }\n            }\n            return ret;\n\n            function has_multiple_if_returns(statements) {\n                var n = 0;\n                for (var i = statements.length; --i >= 0;) {\n                    var stat = statements[i];\n                    if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                        if (++n > 1) return true;\n                    }\n                }\n                return false;\n            }\n        };\n\n        function eliminate_dead_code(statements, compressor) {\n            var has_quit = false;\n            var orig = statements.length;\n            var self = compressor.self();\n            statements = statements.reduce(function(a, stat){\n                if (has_quit) {\n                    extract_declarations_from_unreachable_code(compressor, stat, a);\n                } else {\n                    if (stat instanceof AST_LoopControl) {\n                        var lct = compressor.loopcontrol_target(stat);\n                        if ((stat instanceof AST_Break\n                             && !(lct instanceof AST_IterationStatement)\n                             && loop_body(lct) === self) || (stat instanceof AST_Continue\n                                                             && loop_body(lct) === self)) {\n                            if (stat.label) {\n                                remove(stat.label.thedef.references, stat);\n                            }\n                        } else {\n                            a.push(stat);\n                        }\n                    } else {\n                        a.push(stat);\n                    }\n                    if (aborts(stat)) has_quit = true;\n                }\n                return a;\n            }, []);\n            CHANGED = statements.length != orig;\n            return statements;\n        };\n\n        function sequencesize(statements, compressor) {\n            if (statements.length < 2) return statements;\n            var seq = [], ret = [];\n            function push_seq() {\n                seq = AST_Seq.from_array(seq);\n                if (seq) ret.push(make_node(AST_SimpleStatement, seq, {\n                    body: seq\n                }));\n                seq = [];\n            };\n            statements.forEach(function(stat){\n                if (stat instanceof AST_SimpleStatement) {\n                    if (seqLength(seq) >= compressor.sequences_limit) push_seq();\n                    var body = stat.body;\n                    if (seq.length > 0) body = body.drop_side_effect_free(compressor);\n                    if (body) seq.push(body);\n                } else {\n                    push_seq();\n                    ret.push(stat);\n                }\n            });\n            push_seq();\n            ret = sequencesize_2(ret, compressor);\n            CHANGED = ret.length != statements.length;\n            return ret;\n        };\n\n        function seqLength(a) {\n            for (var len = 0, i = 0; i < a.length; ++i) {\n                var stat = a[i];\n                if (stat instanceof AST_Seq) {\n                    len += stat.len();\n                } else {\n                    len++;\n                }\n            }\n            return len;\n        };\n\n        function sequencesize_2(statements, compressor) {\n            function cons_seq(right) {\n                ret.pop();\n                var left = prev.body;\n                if (left instanceof AST_Seq) {\n                    left.add(right);\n                } else {\n                    left = AST_Seq.cons(left, right);\n                }\n                return left.transform(compressor);\n            };\n            var ret = [], prev = null;\n            statements.forEach(function(stat){\n                if (prev) {\n                    if (stat instanceof AST_For) {\n                        var opera = {};\n                        try {\n                            prev.body.walk(new TreeWalker(function(node){\n                                if (node instanceof AST_Binary && node.operator == \"in\")\n                                    throw opera;\n                            }));\n                            if (stat.init && !(stat.init instanceof AST_Definitions)) {\n                                stat.init = cons_seq(stat.init);\n                            }\n                            else if (!stat.init) {\n                                stat.init = prev.body.drop_side_effect_free(compressor);\n                                ret.pop();\n                            }\n                        } catch(ex) {\n                            if (ex !== opera) throw ex;\n                        }\n                    }\n                    else if (stat instanceof AST_If) {\n                        stat.condition = cons_seq(stat.condition);\n                    }\n                    else if (stat instanceof AST_With) {\n                        stat.expression = cons_seq(stat.expression);\n                    }\n                    else if (stat instanceof AST_Exit && stat.value) {\n                        stat.value = cons_seq(stat.value);\n                    }\n                    else if (stat instanceof AST_Exit) {\n                        stat.value = cons_seq(make_node(AST_Undefined, stat).transform(compressor));\n                    }\n                    else if (stat instanceof AST_Switch) {\n                        stat.expression = cons_seq(stat.expression);\n                    }\n                }\n                ret.push(stat);\n                prev = stat instanceof AST_SimpleStatement ? stat : null;\n            });\n            return ret;\n        };\n\n        function join_consecutive_vars(statements, compressor) {\n            var prev = null;\n            return statements.reduce(function(a, stat){\n                if (stat instanceof AST_Definitions && prev && prev.TYPE == stat.TYPE) {\n                    prev.definitions = prev.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                }\n                else if (stat instanceof AST_For\n                         && prev instanceof AST_Var\n                         && (!stat.init || stat.init.TYPE == prev.TYPE)) {\n                    CHANGED = true;\n                    a.pop();\n                    if (stat.init) {\n                        stat.init.definitions = prev.definitions.concat(stat.init.definitions);\n                    } else {\n                        stat.init = prev;\n                    }\n                    a.push(stat);\n                    prev = stat;\n                }\n                else {\n                    prev = stat;\n                    a.push(stat);\n                }\n                return a;\n            }, []);\n        };\n\n    };\n\n    function extract_functions_from_statement_array(statements) {\n        var funs = [];\n        for (var i = statements.length - 1; i >= 0; --i) {\n            var stat = statements[i];\n            if (stat instanceof AST_Defun) {\n                statements.splice(i, 1);\n                funs.unshift(stat);\n            }\n        }\n        return funs;\n    }\n\n    function extract_declarations_from_unreachable_code(compressor, stat, target) {\n        if (!(stat instanceof AST_Defun)) {\n            compressor.warn(\"Dropping unreachable code [{file}:{line},{col}]\", stat.start);\n        }\n        stat.walk(new TreeWalker(function(node){\n            if (node instanceof AST_Definitions) {\n                compressor.warn(\"Declarations in unreachable code! [{file}:{line},{col}]\", node.start);\n                node.remove_initializers();\n                target.push(node);\n                return true;\n            }\n            if (node instanceof AST_Defun) {\n                target.push(node);\n                return true;\n            }\n            if (node instanceof AST_Scope) {\n                return true;\n            }\n        }));\n    };\n\n    function is_undefined(node, compressor) {\n        return node.is_undefined\n            || node instanceof AST_Undefined\n            || node instanceof AST_UnaryPrefix\n                && node.operator == \"void\"\n                && !node.expression.has_side_effects(compressor);\n    }\n\n    // may_throw_on_access()\n    // returns true if this node may be null, undefined or contain `AST_Accessor`\n    (function(def) {\n        AST_Node.DEFMETHOD(\"may_throw_on_access\", function(compressor) {\n            var pure_getters = compressor.option(\"pure_getters\");\n            return !pure_getters || this._throw_on_access(pure_getters);\n        });\n\n        function is_strict(pure_getters) {\n            return /strict/.test(pure_getters);\n        }\n\n        def(AST_Node, is_strict);\n        def(AST_Null, return_true);\n        def(AST_Undefined, return_true);\n        def(AST_Constant, return_false);\n        def(AST_Array, return_false);\n        def(AST_Object, function(pure_getters) {\n            if (!is_strict(pure_getters)) return false;\n            for (var i = this.properties.length; --i >=0;)\n                if (this.properties[i].value instanceof AST_Accessor) return true;\n            return false;\n        });\n        def(AST_Function, return_false);\n        def(AST_UnaryPostfix, return_false);\n        def(AST_UnaryPrefix, function() {\n            return this.operator == \"void\";\n        });\n        def(AST_Binary, function(pure_getters) {\n            switch (this.operator) {\n              case \"&&\":\n                return this.left._throw_on_access(pure_getters);\n              case \"||\":\n                return this.left._throw_on_access(pure_getters)\n                    && this.right._throw_on_access(pure_getters);\n              default:\n                return false;\n            }\n        })\n        def(AST_Assign, function(pure_getters) {\n            return this.operator == \"=\"\n                && this.right._throw_on_access(pure_getters);\n        })\n        def(AST_Conditional, function(pure_getters) {\n            return this.consequent._throw_on_access(pure_getters)\n                || this.alternative._throw_on_access(pure_getters);\n        })\n        def(AST_Seq, function(pure_getters) {\n            return this.cdr._throw_on_access(pure_getters);\n        });\n        def(AST_SymbolRef, function(pure_getters) {\n            if (this.is_undefined) return true;\n            if (!is_strict(pure_getters)) return false;\n            var fixed = this.fixed_value();\n            return !fixed || fixed._throw_on_access(pure_getters);\n        });\n    })(function(node, func) {\n        node.DEFMETHOD(\"_throw_on_access\", func);\n    });\n\n    /* -----[ boolean/negation helpers ]----- */\n\n    // methods to determine whether an expression has a boolean result type\n    (function (def){\n        var unary_bool = [ \"!\", \"delete\" ];\n        var binary_bool = [ \"in\", \"instanceof\", \"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">=\", \">\" ];\n        def(AST_Node, return_false);\n        def(AST_UnaryPrefix, function(){\n            return member(this.operator, unary_bool);\n        });\n        def(AST_Binary, function(){\n            return member(this.operator, binary_bool) ||\n                ( (this.operator == \"&&\" || this.operator == \"||\") &&\n                  this.left.is_boolean() && this.right.is_boolean() );\n        });\n        def(AST_Conditional, function(){\n            return this.consequent.is_boolean() && this.alternative.is_boolean();\n        });\n        def(AST_Assign, function(){\n            return this.operator == \"=\" && this.right.is_boolean();\n        });\n        def(AST_Seq, function(){\n            return this.cdr.is_boolean();\n        });\n        def(AST_True, return_true);\n        def(AST_False, return_true);\n    })(function(node, func){\n        node.DEFMETHOD(\"is_boolean\", func);\n    });\n\n    // methods to determine if an expression has a numeric result type\n    (function (def){\n        def(AST_Node, return_false);\n        def(AST_Number, return_true);\n        var unary = makePredicate(\"+ - ~ ++ --\");\n        def(AST_Unary, function(){\n            return unary(this.operator);\n        });\n        var binary = makePredicate(\"- * / % & | ^ << >> >>>\");\n        def(AST_Binary, function(compressor){\n            return binary(this.operator) || this.operator == \"+\"\n                && this.left.is_number(compressor)\n                && this.right.is_number(compressor);\n        });\n        def(AST_Assign, function(compressor){\n            return binary(this.operator.slice(0, -1))\n                || this.operator == \"=\" && this.right.is_number(compressor);\n        });\n        def(AST_Seq, function(compressor){\n            return this.cdr.is_number(compressor);\n        });\n        def(AST_Conditional, function(compressor){\n            return this.consequent.is_number(compressor) && this.alternative.is_number(compressor);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"is_number\", func);\n    });\n\n    // methods to determine if an expression has a string result type\n    (function (def){\n        def(AST_Node, return_false);\n        def(AST_String, return_true);\n        def(AST_UnaryPrefix, function(){\n            return this.operator == \"typeof\";\n        });\n        def(AST_Binary, function(compressor){\n            return this.operator == \"+\" &&\n                (this.left.is_string(compressor) || this.right.is_string(compressor));\n        });\n        def(AST_Assign, function(compressor){\n            return (this.operator == \"=\" || this.operator == \"+=\") && this.right.is_string(compressor);\n        });\n        def(AST_Seq, function(compressor){\n            return this.cdr.is_string(compressor);\n        });\n        def(AST_Conditional, function(compressor){\n            return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"is_string\", func);\n    });\n\n    var unary_side_effects = makePredicate(\"delete ++ --\");\n\n    function is_lhs(node, parent) {\n        if (parent instanceof AST_Unary && unary_side_effects(parent.operator)) return parent.expression;\n        if (parent instanceof AST_Assign && parent.left === node) return node;\n    }\n\n    (function (def){\n        AST_Node.DEFMETHOD(\"resolve_defines\", function(compressor) {\n            if (!compressor.option(\"global_defs\")) return;\n            var def = this._find_defs(compressor, \"\");\n            if (def) {\n                var node, parent = this, level = 0;\n                do {\n                    node = parent;\n                    parent = compressor.parent(level++);\n                } while (parent instanceof AST_PropAccess && parent.expression === node);\n                if (is_lhs(node, parent)) {\n                    compressor.warn('global_defs ' + this.print_to_string() + ' redefined [{file}:{line},{col}]', this.start);\n                } else {\n                    return def;\n                }\n            }\n        });\n        function to_node(value, orig) {\n            if (value instanceof AST_Node) return make_node(value.CTOR, orig, value);\n            if (Array.isArray(value)) return make_node(AST_Array, orig, {\n                elements: value.map(function(value) {\n                    return to_node(value, orig);\n                })\n            });\n            if (value && typeof value == \"object\") {\n                var props = [];\n                for (var key in value) {\n                    props.push(make_node(AST_ObjectKeyVal, orig, {\n                        key: key,\n                        value: to_node(value[key], orig)\n                    }));\n                }\n                return make_node(AST_Object, orig, {\n                    properties: props\n                });\n            }\n            return make_node_from_constant(value, orig);\n        }\n        def(AST_Node, noop);\n        def(AST_Dot, function(compressor, suffix){\n            return this.expression._find_defs(compressor, \".\" + this.property + suffix);\n        });\n        def(AST_SymbolRef, function(compressor, suffix){\n            if (!this.global()) return;\n            var name;\n            var defines = compressor.option(\"global_defs\");\n            if (defines && HOP(defines, (name = this.name + suffix))) {\n                var node = to_node(defines[name], this);\n                var top = compressor.find_parent(AST_Toplevel);\n                node.walk(new TreeWalker(function(node) {\n                    if (node instanceof AST_SymbolRef) {\n                        node.scope = top;\n                        node.thedef = top.def_global(node);\n                    }\n                }));\n                return node;\n            }\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"_find_defs\", func);\n    });\n\n    function best_of_expression(ast1, ast2) {\n        return ast1.print_to_string().length >\n            ast2.print_to_string().length\n            ? ast2 : ast1;\n    }\n\n    function best_of_statement(ast1, ast2) {\n        return best_of_expression(make_node(AST_SimpleStatement, ast1, {\n            body: ast1\n        }), make_node(AST_SimpleStatement, ast2, {\n            body: ast2\n        })).body;\n    }\n\n    function best_of(compressor, ast1, ast2) {\n        return (first_in_statement(compressor) ? best_of_statement : best_of_expression)(ast1, ast2);\n    }\n\n    // methods to evaluate a constant expression\n    (function (def){\n        // If the node has been successfully reduced to a constant,\n        // then its value is returned; otherwise the element itself\n        // is returned.\n        // They can be distinguished as constant value is never a\n        // descendant of AST_Node.\n        AST_Node.DEFMETHOD(\"evaluate\", function(compressor){\n            if (!compressor.option(\"evaluate\")) return this;\n            try {\n                var val = this._eval(compressor);\n                return !val || val instanceof RegExp || typeof val != \"object\" ? val : this;\n            } catch(ex) {\n                if (ex !== def) throw ex;\n                return this;\n            }\n        });\n        var unaryPrefix = makePredicate(\"! ~ - + void\");\n        AST_Node.DEFMETHOD(\"is_constant\", function(){\n            // Accomodate when compress option evaluate=false\n            // as well as the common constant expressions !0 and -1\n            if (this instanceof AST_Constant) {\n                return !(this instanceof AST_RegExp);\n            } else {\n                return this instanceof AST_UnaryPrefix\n                    && this.expression instanceof AST_Constant\n                    && unaryPrefix(this.operator);\n            }\n        });\n        // Obtain the constant value of an expression already known to be constant.\n        // Result only valid iff this.is_constant() is true.\n        AST_Node.DEFMETHOD(\"constant_value\", function(compressor){\n            // Accomodate when option evaluate=false.\n            if (this instanceof AST_Constant && !(this instanceof AST_RegExp)) {\n                return this.value;\n            }\n            // Accomodate the common constant expressions !0 and -1 when option evaluate=false.\n            if (this instanceof AST_UnaryPrefix\n                && this.expression instanceof AST_Constant) switch (this.operator) {\n              case \"!\":\n                return !this.expression.value;\n              case \"~\":\n                return ~this.expression.value;\n              case \"-\":\n                return -this.expression.value;\n              case \"+\":\n                return +this.expression.value;\n              default:\n                throw new Error(string_template(\"Cannot evaluate unary expression {value}\", {\n                    value: this.print_to_string()\n                }));\n            }\n            var result = this.evaluate(compressor);\n            if (result !== this) {\n                return result;\n            }\n            throw new Error(string_template(\"Cannot evaluate constant [{file}:{line},{col}]\", this.start));\n        });\n        def(AST_Statement, function(){\n            throw new Error(string_template(\"Cannot evaluate a statement [{file}:{line},{col}]\", this.start));\n        });\n        def(AST_Lambda, function(){\n            throw def;\n        });\n        function ev(node, compressor) {\n            if (!compressor) throw new Error(\"Compressor must be passed\");\n\n            return node._eval(compressor);\n        };\n        def(AST_Node, function(){\n            throw def;          // not constant\n        });\n        def(AST_Constant, function(){\n            return this.getValue();\n        });\n        def(AST_Array, function(compressor){\n            if (compressor.option(\"unsafe\")) {\n                return this.elements.map(function(element) {\n                    return ev(element, compressor);\n                });\n            }\n            throw def;\n        });\n        def(AST_Object, function(compressor){\n            if (compressor.option(\"unsafe\")) {\n                var val = {};\n                for (var i = 0, len = this.properties.length; i < len; i++) {\n                    var prop = this.properties[i];\n                    var key = prop.key;\n                    if (key instanceof AST_Symbol) {\n                        key = key.name;\n                    } else if (key instanceof AST_Node) {\n                        key = ev(key, compressor);\n                    }\n                    if (typeof Object.prototype[key] === 'function') {\n                        throw def;\n                    }\n                    val[key] = ev(prop.value, compressor);\n                }\n                return val;\n            }\n            throw def;\n        });\n        def(AST_UnaryPrefix, function(compressor){\n            var e = this.expression;\n            switch (this.operator) {\n              case \"!\": return !ev(e, compressor);\n              case \"typeof\":\n                // Function would be evaluated to an array and so typeof would\n                // incorrectly return 'object'. Hence making is a special case.\n                if (e instanceof AST_Function) return typeof function(){};\n\n                e = ev(e, compressor);\n\n                // typeof <RegExp> returns \"object\" or \"function\" on different platforms\n                // so cannot evaluate reliably\n                if (e instanceof RegExp) throw def;\n\n                return typeof e;\n              case \"void\": return void ev(e, compressor);\n              case \"~\": return ~ev(e, compressor);\n              case \"-\": return -ev(e, compressor);\n              case \"+\": return +ev(e, compressor);\n            }\n            throw def;\n        });\n        def(AST_Binary, function(c){\n            var left = this.left, right = this.right, result;\n            switch (this.operator) {\n              case \"&&\"  : result = ev(left, c) &&  ev(right, c); break;\n              case \"||\"  : result = ev(left, c) ||  ev(right, c); break;\n              case \"|\"   : result = ev(left, c) |   ev(right, c); break;\n              case \"&\"   : result = ev(left, c) &   ev(right, c); break;\n              case \"^\"   : result = ev(left, c) ^   ev(right, c); break;\n              case \"+\"   : result = ev(left, c) +   ev(right, c); break;\n              case \"*\"   : result = ev(left, c) *   ev(right, c); break;\n              case \"/\"   : result = ev(left, c) /   ev(right, c); break;\n              case \"%\"   : result = ev(left, c) %   ev(right, c); break;\n              case \"-\"   : result = ev(left, c) -   ev(right, c); break;\n              case \"<<\"  : result = ev(left, c) <<  ev(right, c); break;\n              case \">>\"  : result = ev(left, c) >>  ev(right, c); break;\n              case \">>>\" : result = ev(left, c) >>> ev(right, c); break;\n              case \"==\"  : result = ev(left, c) ==  ev(right, c); break;\n              case \"===\" : result = ev(left, c) === ev(right, c); break;\n              case \"!=\"  : result = ev(left, c) !=  ev(right, c); break;\n              case \"!==\" : result = ev(left, c) !== ev(right, c); break;\n              case \"<\"   : result = ev(left, c) <   ev(right, c); break;\n              case \"<=\"  : result = ev(left, c) <=  ev(right, c); break;\n              case \">\"   : result = ev(left, c) >   ev(right, c); break;\n              case \">=\"  : result = ev(left, c) >=  ev(right, c); break;\n              default:\n                  throw def;\n            }\n            if (isNaN(result) && c.find_parent(AST_With)) {\n                // leave original expression as is\n                throw def;\n            }\n            return result;\n        });\n        def(AST_Conditional, function(compressor){\n            return ev(this.condition, compressor)\n                ? ev(this.consequent, compressor)\n                : ev(this.alternative, compressor);\n        });\n        def(AST_SymbolRef, function(compressor){\n            if (!compressor.option(\"reduce_vars\") || this._evaluating) throw def;\n            this._evaluating = true;\n            try {\n                var fixed = this.fixed_value();\n                if (!fixed) throw def;\n                var value = ev(fixed, compressor);\n                if (!HOP(fixed, \"_eval\")) fixed._eval = function() {\n                    return value;\n                };\n                if (value && typeof value == \"object\" && this.definition().escaped) throw def;\n                return value;\n            } finally {\n                this._evaluating = false;\n            }\n        });\n        def(AST_PropAccess, function(compressor){\n            if (compressor.option(\"unsafe\")) {\n                var key = this.property;\n                if (key instanceof AST_Node) {\n                    key = ev(key, compressor);\n                }\n                var val = ev(this.expression, compressor);\n                if (val && HOP(val, key)) {\n                    return val[key];\n                }\n            }\n            throw def;\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"_eval\", func);\n    });\n\n    // method to negate an expression\n    (function(def){\n        function basic_negation(exp) {\n            return make_node(AST_UnaryPrefix, exp, {\n                operator: \"!\",\n                expression: exp\n            });\n        }\n        function best(orig, alt, first_in_statement) {\n            var negated = basic_negation(orig);\n            if (first_in_statement) {\n                var stat = make_node(AST_SimpleStatement, alt, {\n                    body: alt\n                });\n                return best_of_expression(negated, stat) === stat ? alt : negated;\n            }\n            return best_of_expression(negated, alt);\n        }\n        def(AST_Node, function(){\n            return basic_negation(this);\n        });\n        def(AST_Statement, function(){\n            throw new Error(\"Cannot negate a statement\");\n        });\n        def(AST_Function, function(){\n            return basic_negation(this);\n        });\n        def(AST_UnaryPrefix, function(){\n            if (this.operator == \"!\")\n                return this.expression;\n            return basic_negation(this);\n        });\n        def(AST_Seq, function(compressor){\n            var self = this.clone();\n            self.cdr = self.cdr.negate(compressor);\n            return self;\n        });\n        def(AST_Conditional, function(compressor, first_in_statement){\n            var self = this.clone();\n            self.consequent = self.consequent.negate(compressor);\n            self.alternative = self.alternative.negate(compressor);\n            return best(this, self, first_in_statement);\n        });\n        def(AST_Binary, function(compressor, first_in_statement){\n            var self = this.clone(), op = this.operator;\n            if (compressor.option(\"unsafe_comps\")) {\n                switch (op) {\n                  case \"<=\" : self.operator = \">\"  ; return self;\n                  case \"<\"  : self.operator = \">=\" ; return self;\n                  case \">=\" : self.operator = \"<\"  ; return self;\n                  case \">\"  : self.operator = \"<=\" ; return self;\n                }\n            }\n            switch (op) {\n              case \"==\" : self.operator = \"!=\"; return self;\n              case \"!=\" : self.operator = \"==\"; return self;\n              case \"===\": self.operator = \"!==\"; return self;\n              case \"!==\": self.operator = \"===\"; return self;\n              case \"&&\":\n                self.operator = \"||\";\n                self.left = self.left.negate(compressor, first_in_statement);\n                self.right = self.right.negate(compressor);\n                return best(this, self, first_in_statement);\n              case \"||\":\n                self.operator = \"&&\";\n                self.left = self.left.negate(compressor, first_in_statement);\n                self.right = self.right.negate(compressor);\n                return best(this, self, first_in_statement);\n            }\n            return basic_negation(this);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"negate\", function(compressor, first_in_statement){\n            return func.call(this, compressor, first_in_statement);\n        });\n    });\n\n    AST_Call.DEFMETHOD(\"has_pure_annotation\", function(compressor) {\n        if (!compressor.option(\"side_effects\")) return false;\n        if (this.pure !== undefined) return this.pure;\n        var pure = false;\n        var comments, last_comment;\n        if (this.start\n            && (comments = this.start.comments_before)\n            && comments.length\n            && /[@#]__PURE__/.test((last_comment = comments[comments.length - 1]).value)) {\n            pure = last_comment;\n        }\n        return this.pure = pure;\n    });\n\n    // determine if expression has side effects\n    (function(def){\n        def(AST_Node, return_true);\n\n        def(AST_EmptyStatement, return_false);\n        def(AST_Constant, return_false);\n        def(AST_This, return_false);\n\n        def(AST_Call, function(compressor){\n            if (!this.has_pure_annotation(compressor) && compressor.pure_funcs(this)) return true;\n            for (var i = this.args.length; --i >= 0;) {\n                if (this.args[i].has_side_effects(compressor))\n                    return true;\n            }\n            return false;\n        });\n\n        function any(list, compressor) {\n            for (var i = list.length; --i >= 0;)\n                if (list[i].has_side_effects(compressor))\n                    return true;\n            return false;\n        }\n\n        def(AST_Block, function(compressor){\n            return any(this.body, compressor);\n        });\n        def(AST_Switch, function(compressor){\n            return this.expression.has_side_effects(compressor)\n                || any(this.body, compressor);\n        });\n        def(AST_Case, function(compressor){\n            return this.expression.has_side_effects(compressor)\n                || any(this.body, compressor);\n        });\n        def(AST_Try, function(compressor){\n            return any(this.body, compressor)\n                || this.bcatch && this.bcatch.has_side_effects(compressor)\n                || this.bfinally && this.bfinally.has_side_effects(compressor);\n        });\n        def(AST_If, function(compressor){\n            return this.condition.has_side_effects(compressor)\n                || this.body && this.body.has_side_effects(compressor)\n                || this.alternative && this.alternative.has_side_effects(compressor);\n        });\n        def(AST_LabeledStatement, function(compressor){\n            return this.body.has_side_effects(compressor);\n        });\n        def(AST_SimpleStatement, function(compressor){\n            return this.body.has_side_effects(compressor);\n        });\n        def(AST_Defun, return_true);\n        def(AST_Function, return_false);\n        def(AST_Binary, function(compressor){\n            return this.left.has_side_effects(compressor)\n                || this.right.has_side_effects(compressor);\n        });\n        def(AST_Assign, return_true);\n        def(AST_Conditional, function(compressor){\n            return this.condition.has_side_effects(compressor)\n                || this.consequent.has_side_effects(compressor)\n                || this.alternative.has_side_effects(compressor);\n        });\n        def(AST_Unary, function(compressor){\n            return unary_side_effects(this.operator)\n                || this.expression.has_side_effects(compressor);\n        });\n        def(AST_SymbolRef, function(compressor){\n            return this.undeclared();\n        });\n        def(AST_Object, function(compressor){\n            return any(this.properties, compressor);\n        });\n        def(AST_ObjectProperty, function(compressor){\n            return this.value.has_side_effects(compressor);\n        });\n        def(AST_Array, function(compressor){\n            return any(this.elements, compressor);\n        });\n        def(AST_Dot, function(compressor){\n            return this.expression.may_throw_on_access(compressor)\n                || this.expression.has_side_effects(compressor);\n        });\n        def(AST_Sub, function(compressor){\n            return this.expression.may_throw_on_access(compressor)\n                || this.expression.has_side_effects(compressor)\n                || this.property.has_side_effects(compressor);\n        });\n        def(AST_Seq, function(compressor){\n            return this.car.has_side_effects(compressor)\n                || this.cdr.has_side_effects(compressor);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"has_side_effects\", func);\n    });\n\n    // tell me if a statement aborts\n    function aborts(thing) {\n        return thing && thing.aborts();\n    };\n    (function(def){\n        def(AST_Statement, return_null);\n        def(AST_Jump, return_this);\n        function block_aborts(){\n            var n = this.body.length;\n            return n > 0 && aborts(this.body[n - 1]);\n        };\n        def(AST_BlockStatement, block_aborts);\n        def(AST_SwitchBranch, block_aborts);\n        def(AST_If, function(){\n            return this.alternative && aborts(this.body) && aborts(this.alternative) && this;\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"aborts\", func);\n    });\n\n    /* -----[ optimizers ]----- */\n\n    OPT(AST_Directive, function(self, compressor){\n        if (compressor.has_directive(self.value) !== self) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        return self;\n    });\n\n    OPT(AST_Debugger, function(self, compressor){\n        if (compressor.option(\"drop_debugger\"))\n            return make_node(AST_EmptyStatement, self);\n        return self;\n    });\n\n    OPT(AST_LabeledStatement, function(self, compressor){\n        if (self.body instanceof AST_Break\n            && compressor.loopcontrol_target(self.body) === self.body) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        return self.label.references.length == 0 ? self.body : self;\n    });\n\n    OPT(AST_Block, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        return self;\n    });\n\n    OPT(AST_BlockStatement, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        switch (self.body.length) {\n          case 1: return self.body[0];\n          case 0: return make_node(AST_EmptyStatement, self);\n        }\n        return self;\n    });\n\n    AST_Scope.DEFMETHOD(\"drop_unused\", function(compressor){\n        var self = this;\n        if (compressor.has_directive(\"use asm\")) return self;\n        var toplevel = compressor.option(\"toplevel\");\n        if (compressor.option(\"unused\")\n            && (!(self instanceof AST_Toplevel) || toplevel)\n            && !self.uses_eval\n            && !self.uses_with) {\n            var assign_as_unused = !/keep_assign/.test(compressor.option(\"unused\"));\n            var drop_funcs = /funcs/.test(toplevel);\n            var drop_vars = /vars/.test(toplevel);\n            if (!(self instanceof AST_Toplevel) || toplevel == true) {\n                drop_funcs = drop_vars = true;\n            }\n            var in_use = [];\n            var in_use_ids = Object.create(null); // avoid expensive linear scans of in_use\n            if (self instanceof AST_Toplevel && compressor.top_retain) {\n                self.variables.each(function(def) {\n                    if (compressor.top_retain(def) && !(def.id in in_use_ids)) {\n                        in_use_ids[def.id] = true;\n                        in_use.push(def);\n                    }\n                });\n            }\n            var initializations = new Dictionary();\n            // pass 1: find out which symbols are directly used in\n            // this scope (not in nested scopes).\n            var scope = this;\n            var tw = new TreeWalker(function(node, descend){\n                if (node !== self) {\n                    if (node instanceof AST_Defun) {\n                        if (!drop_funcs && scope === self) {\n                            var node_def = node.name.definition();\n                            if (!(node_def.id in in_use_ids)) {\n                                in_use_ids[node_def.id] = true;\n                                in_use.push(node_def);\n                            }\n                        }\n                        initializations.add(node.name.name, node);\n                        return true; // don't go in nested scopes\n                    }\n                    if (node instanceof AST_Definitions && scope === self) {\n                        node.definitions.forEach(function(def){\n                            if (!drop_vars) {\n                                var node_def = def.name.definition();\n                                if (!(node_def.id in in_use_ids)) {\n                                    in_use_ids[node_def.id] = true;\n                                    in_use.push(node_def);\n                                }\n                            }\n                            if (def.value) {\n                                initializations.add(def.name.name, def.value);\n                                if (def.value.has_side_effects(compressor)) {\n                                    def.value.walk(tw);\n                                }\n                            }\n                        });\n                        return true;\n                    }\n                    if (assign_as_unused\n                        && node instanceof AST_Assign\n                        && node.operator == \"=\"\n                        && node.left instanceof AST_SymbolRef\n                        && !is_reference_const(node.left)\n                        && scope === self) {\n                        node.right.walk(tw);\n                        return true;\n                    }\n                    if (node instanceof AST_SymbolRef) {\n                        var node_def = node.definition();\n                        if (!(node_def.id in in_use_ids)) {\n                            in_use_ids[node_def.id] = true;\n                            in_use.push(node_def);\n                        }\n                        return true;\n                    }\n                    if (node instanceof AST_Scope) {\n                        var save_scope = scope;\n                        scope = node;\n                        descend();\n                        scope = save_scope;\n                        return true;\n                    }\n                }\n            });\n            self.walk(tw);\n            // pass 2: for every used symbol we need to walk its\n            // initialization code to figure out if it uses other\n            // symbols (that may not be in_use).\n            for (var i = 0; i < in_use.length; ++i) {\n                in_use[i].orig.forEach(function(decl){\n                    // undeclared globals will be instanceof AST_SymbolRef\n                    var init = initializations.get(decl.name);\n                    if (init) init.forEach(function(init){\n                        var tw = new TreeWalker(function(node){\n                            if (node instanceof AST_SymbolRef) {\n                                var node_def = node.definition();\n                                if (!(node_def.id in in_use_ids)) {\n                                    in_use_ids[node_def.id] = true;\n                                    in_use.push(node_def);\n                                }\n                            }\n                        });\n                        init.walk(tw);\n                    });\n                });\n            }\n            // pass 3: we should drop declarations not in_use\n            var tt = new TreeTransformer(\n                function before(node, descend, in_list) {\n                    if (node instanceof AST_Function\n                        && node.name\n                        && !compressor.option(\"keep_fnames\")) {\n                        var def = node.name.definition();\n                        // any declarations with same name will overshadow\n                        // name of this anonymous function and can therefore\n                        // never be used anywhere\n                        if (!(def.id in in_use_ids) || def.orig.length > 1)\n                            node.name = null;\n                    }\n                    if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {\n                        var trim = !compressor.option(\"keep_fargs\");\n                        for (var a = node.argnames, i = a.length; --i >= 0;) {\n                            var sym = a[i];\n                            if (!(sym.definition().id in in_use_ids)) {\n                                sym.__unused = true;\n                                if (trim) {\n                                    a.pop();\n                                    compressor[sym.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused function argument {name} [{file}:{line},{col}]\", {\n                                        name : sym.name,\n                                        file : sym.start.file,\n                                        line : sym.start.line,\n                                        col  : sym.start.col\n                                    });\n                                }\n                            }\n                            else {\n                                trim = false;\n                            }\n                        }\n                    }\n                    if (drop_funcs && node instanceof AST_Defun && node !== self) {\n                        if (!(node.name.definition().id in in_use_ids)) {\n                            compressor[node.name.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused function {name} [{file}:{line},{col}]\", {\n                                name : node.name.name,\n                                file : node.name.start.file,\n                                line : node.name.start.line,\n                                col  : node.name.start.col\n                            });\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        return node;\n                    }\n                    if (drop_vars && node instanceof AST_Definitions && !(tt.parent() instanceof AST_ForIn && tt.parent().init === node)) {\n                        var def = node.definitions.filter(function(def){\n                            if (def.value) def.value = def.value.transform(tt);\n                            var sym = def.name.definition();\n                            if (sym.id in in_use_ids) return true;\n                            if (sym.orig[0] instanceof AST_SymbolCatch) {\n                                def.value = def.value && def.value.drop_side_effect_free(compressor);\n                                return true;\n                            }\n                            var w = {\n                                name : def.name.name,\n                                file : def.name.start.file,\n                                line : def.name.start.line,\n                                col  : def.name.start.col\n                            };\n                            if (def.value && (def._unused_side_effects = def.value.drop_side_effect_free(compressor))) {\n                                compressor.warn(\"Side effects in initialization of unused variable {name} [{file}:{line},{col}]\", w);\n                                return true;\n                            }\n                            compressor[def.name.unreferenced() ? \"warn\" : \"info\"](\"Dropping unused variable {name} [{file}:{line},{col}]\", w);\n                            return false;\n                        });\n                        // place uninitialized names at the start\n                        def = mergeSort(def, function(a, b){\n                            if (!a.value && b.value) return -1;\n                            if (!b.value && a.value) return 1;\n                            return 0;\n                        });\n                        // for unused names whose initialization has\n                        // side effects, we can cascade the init. code\n                        // into the next one, or next statement.\n                        var side_effects = [];\n                        for (var i = 0; i < def.length;) {\n                            var x = def[i];\n                            if (x._unused_side_effects) {\n                                side_effects.push(x._unused_side_effects);\n                                def.splice(i, 1);\n                            } else {\n                                if (side_effects.length > 0) {\n                                    side_effects.push(x.value);\n                                    x.value = AST_Seq.from_array(side_effects);\n                                    side_effects = [];\n                                }\n                                ++i;\n                            }\n                        }\n                        if (side_effects.length > 0) {\n                            side_effects = make_node(AST_BlockStatement, node, {\n                                body: [ make_node(AST_SimpleStatement, node, {\n                                    body: AST_Seq.from_array(side_effects)\n                                }) ]\n                            });\n                        } else {\n                            side_effects = null;\n                        }\n                        if (def.length == 0 && !side_effects) {\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (def.length == 0) {\n                            return in_list ? MAP.splice(side_effects.body) : side_effects;\n                        }\n                        node.definitions = def;\n                        if (side_effects) {\n                            side_effects.body.unshift(node);\n                            return in_list ? MAP.splice(side_effects.body) : side_effects;\n                        }\n                        return node;\n                    }\n                    if (drop_vars && assign_as_unused\n                        && node instanceof AST_Assign\n                        && node.operator == \"=\"\n                        && node.left instanceof AST_SymbolRef) {\n                        var def = node.left.definition();\n                        if (!(def.id in in_use_ids)\n                            && self.variables.get(def.name) === def) {\n                            return maintain_this_binding(tt.parent(), node, node.right.transform(tt));\n                        }\n                    }\n                    // certain combination of unused name + side effect leads to:\n                    //    https://github.com/mishoo/UglifyJS2/issues/44\n                    //    https://github.com/mishoo/UglifyJS2/issues/1830\n                    // that's an invalid AST.\n                    // We fix it at this stage by moving the `var` outside the `for`.\n                    if (node instanceof AST_For) {\n                        descend(node, this);\n                        if (node.init instanceof AST_BlockStatement) {\n                            var block = node.init;\n                            node.init = block.body.pop();\n                            block.body.push(node);\n                            return in_list ? MAP.splice(block.body) : block;\n                        } else if (is_empty(node.init)) {\n                            node.init = null;\n                        }\n                        return node;\n                    }\n                    if (node instanceof AST_LabeledStatement && node.body instanceof AST_For) {\n                        descend(node, this);\n                        if (node.body instanceof AST_BlockStatement) {\n                            var block = node.body;\n                            node.body = block.body.pop();\n                            block.body.push(node);\n                            return in_list ? MAP.splice(block.body) : block;\n                        }\n                        return node;\n                    }\n                    if (node instanceof AST_Scope && node !== self)\n                        return node;\n                }\n            );\n            self.transform(tt);\n        }\n    });\n\n    AST_Scope.DEFMETHOD(\"hoist_declarations\", function(compressor){\n        var self = this;\n        if (compressor.has_directive(\"use asm\")) return self;\n        var hoist_funs = compressor.option(\"hoist_funs\");\n        var hoist_vars = compressor.option(\"hoist_vars\");\n        if (hoist_funs || hoist_vars) {\n            var dirs = [];\n            var hoisted = [];\n            var vars = new Dictionary(), vars_found = 0, var_decl = 0;\n            // let's count var_decl first, we seem to waste a lot of\n            // space if we hoist `var` when there's only one.\n            self.walk(new TreeWalker(function(node){\n                if (node instanceof AST_Scope && node !== self)\n                    return true;\n                if (node instanceof AST_Var) {\n                    ++var_decl;\n                    return true;\n                }\n            }));\n            hoist_vars = hoist_vars && var_decl > 1;\n            var tt = new TreeTransformer(\n                function before(node) {\n                    if (node !== self) {\n                        if (node instanceof AST_Directive) {\n                            dirs.push(node);\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (node instanceof AST_Defun && hoist_funs) {\n                            hoisted.push(node);\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (node instanceof AST_Var && hoist_vars) {\n                            node.definitions.forEach(function(def){\n                                vars.set(def.name.name, def);\n                                ++vars_found;\n                            });\n                            var seq = node.to_assignments(compressor);\n                            var p = tt.parent();\n                            if (p instanceof AST_ForIn && p.init === node) {\n                                if (seq == null) {\n                                    var def = node.definitions[0].name;\n                                    return make_node(AST_SymbolRef, def, def);\n                                }\n                                return seq;\n                            }\n                            if (p instanceof AST_For && p.init === node) {\n                                return seq;\n                            }\n                            if (!seq) return make_node(AST_EmptyStatement, node);\n                            return make_node(AST_SimpleStatement, node, {\n                                body: seq\n                            });\n                        }\n                        if (node instanceof AST_Scope)\n                            return node; // to avoid descending in nested scopes\n                    }\n                }\n            );\n            self = self.transform(tt);\n            if (vars_found > 0) {\n                // collect only vars which don't show up in self's arguments list\n                var defs = [];\n                vars.each(function(def, name){\n                    if (self instanceof AST_Lambda\n                        && find_if(function(x){ return x.name == def.name.name },\n                                   self.argnames)) {\n                        vars.del(name);\n                    } else {\n                        def = def.clone();\n                        def.value = null;\n                        defs.push(def);\n                        vars.set(name, def);\n                    }\n                });\n                if (defs.length > 0) {\n                    // try to merge in assignments\n                    for (var i = 0; i < self.body.length;) {\n                        if (self.body[i] instanceof AST_SimpleStatement) {\n                            var expr = self.body[i].body, sym, assign;\n                            if (expr instanceof AST_Assign\n                                && expr.operator == \"=\"\n                                && (sym = expr.left) instanceof AST_Symbol\n                                && vars.has(sym.name))\n                            {\n                                var def = vars.get(sym.name);\n                                if (def.value) break;\n                                def.value = expr.right;\n                                remove(defs, def);\n                                defs.push(def);\n                                self.body.splice(i, 1);\n                                continue;\n                            }\n                            if (expr instanceof AST_Seq\n                                && (assign = expr.car) instanceof AST_Assign\n                                && assign.operator == \"=\"\n                                && (sym = assign.left) instanceof AST_Symbol\n                                && vars.has(sym.name))\n                            {\n                                var def = vars.get(sym.name);\n                                if (def.value) break;\n                                def.value = assign.right;\n                                remove(defs, def);\n                                defs.push(def);\n                                self.body[i].body = expr.cdr;\n                                continue;\n                            }\n                        }\n                        if (self.body[i] instanceof AST_EmptyStatement) {\n                            self.body.splice(i, 1);\n                            continue;\n                        }\n                        if (self.body[i] instanceof AST_BlockStatement) {\n                            var tmp = [ i, 1 ].concat(self.body[i].body);\n                            self.body.splice.apply(self.body, tmp);\n                            continue;\n                        }\n                        break;\n                    }\n                    defs = make_node(AST_Var, self, {\n                        definitions: defs\n                    });\n                    hoisted.push(defs);\n                };\n            }\n            self.body = dirs.concat(hoisted, self.body);\n        }\n        return self;\n    });\n\n    // drop_side_effect_free()\n    // remove side-effect-free parts which only affects return value\n    (function(def){\n        // Drop side-effect-free elements from an array of expressions.\n        // Returns an array of expressions with side-effects or null\n        // if all elements were dropped. Note: original array may be\n        // returned if nothing changed.\n        function trim(nodes, compressor, first_in_statement) {\n            var ret = [], changed = false;\n            for (var i = 0, len = nodes.length; i < len; i++) {\n                var node = nodes[i].drop_side_effect_free(compressor, first_in_statement);\n                changed |= node !== nodes[i];\n                if (node) {\n                    ret.push(node);\n                    first_in_statement = false;\n                }\n            }\n            return changed ? ret.length ? ret : null : nodes;\n        }\n\n        def(AST_Node, return_this);\n        def(AST_Constant, return_null);\n        def(AST_This, return_null);\n        def(AST_Call, function(compressor, first_in_statement){\n            if (!this.has_pure_annotation(compressor) && compressor.pure_funcs(this)) {\n                if (this.expression instanceof AST_Function\n                    && (!this.expression.name || !this.expression.name.definition().references.length)) {\n                    var node = this.clone();\n                    node.expression = node.expression.process_expression(false, compressor);\n                    return node;\n                }\n                return this;\n            }\n            if (this.pure) {\n                compressor.warn(\"Dropping __PURE__ call [{file}:{line},{col}]\", this.start);\n                this.pure.value = this.pure.value.replace(/[@#]__PURE__/g, ' ');\n            }\n            var args = trim(this.args, compressor, first_in_statement);\n            return args && AST_Seq.from_array(args);\n        });\n        def(AST_Accessor, return_null);\n        def(AST_Function, return_null);\n        def(AST_Binary, function(compressor, first_in_statement){\n            var right = this.right.drop_side_effect_free(compressor);\n            if (!right) return this.left.drop_side_effect_free(compressor, first_in_statement);\n            switch (this.operator) {\n              case \"&&\":\n              case \"||\":\n                if (right === this.right) return this;\n                var node = this.clone();\n                node.right = right;\n                return node;\n              default:\n                var left = this.left.drop_side_effect_free(compressor, first_in_statement);\n                if (!left) return this.right.drop_side_effect_free(compressor, first_in_statement);\n                return make_node(AST_Seq, this, {\n                    car: left,\n                    cdr: right\n                });\n            }\n        });\n        def(AST_Assign, return_this);\n        def(AST_Conditional, function(compressor){\n            var consequent = this.consequent.drop_side_effect_free(compressor);\n            var alternative = this.alternative.drop_side_effect_free(compressor);\n            if (consequent === this.consequent && alternative === this.alternative) return this;\n            if (!consequent) return alternative ? make_node(AST_Binary, this, {\n                operator: \"||\",\n                left: this.condition,\n                right: alternative\n            }) : this.condition.drop_side_effect_free(compressor);\n            if (!alternative) return make_node(AST_Binary, this, {\n                operator: \"&&\",\n                left: this.condition,\n                right: consequent\n            });\n            var node = this.clone();\n            node.consequent = consequent;\n            node.alternative = alternative;\n            return node;\n        });\n        def(AST_Unary, function(compressor, first_in_statement){\n            if (unary_side_effects(this.operator)) return this;\n            if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef) return null;\n            var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n            if (first_in_statement\n                && this instanceof AST_UnaryPrefix\n                && is_iife_call(expression)) {\n                if (expression === this.expression && this.operator.length === 1) return this;\n                return make_node(AST_UnaryPrefix, this, {\n                    operator: this.operator.length === 1 ? this.operator : \"!\",\n                    expression: expression\n                });\n            }\n            return expression;\n        });\n        def(AST_SymbolRef, function() {\n            return this.undeclared() ? this : null;\n        });\n        def(AST_Object, function(compressor, first_in_statement){\n            var values = trim(this.properties, compressor, first_in_statement);\n            return values && AST_Seq.from_array(values);\n        });\n        def(AST_ObjectProperty, function(compressor, first_in_statement){\n            return this.value.drop_side_effect_free(compressor, first_in_statement);\n        });\n        def(AST_Array, function(compressor, first_in_statement){\n            var values = trim(this.elements, compressor, first_in_statement);\n            return values && AST_Seq.from_array(values);\n        });\n        def(AST_Dot, function(compressor, first_in_statement){\n            if (this.expression.may_throw_on_access(compressor)) return this;\n            return this.expression.drop_side_effect_free(compressor, first_in_statement);\n        });\n        def(AST_Sub, function(compressor, first_in_statement){\n            if (this.expression.may_throw_on_access(compressor)) return this;\n            var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n            if (!expression) return this.property.drop_side_effect_free(compressor, first_in_statement);\n            var property = this.property.drop_side_effect_free(compressor);\n            if (!property) return expression;\n            return make_node(AST_Seq, this, {\n                car: expression,\n                cdr: property\n            });\n        });\n        def(AST_Seq, function(compressor){\n            var cdr = this.cdr.drop_side_effect_free(compressor);\n            if (cdr === this.cdr) return this;\n            if (!cdr) return this.car;\n            return make_node(AST_Seq, this, {\n                car: this.car,\n                cdr: cdr\n            });\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"drop_side_effect_free\", func);\n    });\n\n    OPT(AST_SimpleStatement, function(self, compressor){\n        if (compressor.option(\"side_effects\")) {\n            var body = self.body;\n            var node = body.drop_side_effect_free(compressor, true);\n            if (!node) {\n                compressor.warn(\"Dropping side-effect-free statement [{file}:{line},{col}]\", self.start);\n                return make_node(AST_EmptyStatement, self);\n            }\n            if (node !== body) {\n                return make_node(AST_SimpleStatement, self, { body: node });\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_DWLoop, function(self, compressor){\n        if (!compressor.option(\"loops\")) return self;\n        var cond = self.condition.evaluate(compressor);\n        if (cond !== self.condition) {\n            if (cond) {\n                return make_node(AST_For, self, {\n                    body: self.body\n                });\n            }\n            if (compressor.option(\"dead_code\") && self instanceof AST_While) {\n                var a = [];\n                extract_declarations_from_unreachable_code(compressor, self.body, a);\n                return make_node(AST_BlockStatement, self, { body: a }).optimize(compressor);\n            }\n            if (self instanceof AST_Do) {\n                var has_loop_control = false;\n                var tw = new TreeWalker(function(node) {\n                    if (node instanceof AST_Scope || has_loop_control) return true;\n                    if (node instanceof AST_LoopControl && tw.loopcontrol_target(node) === self)\n                        return has_loop_control = true;\n                });\n                var parent = compressor.parent();\n                (parent instanceof AST_LabeledStatement ? parent : self).walk(tw);\n                if (!has_loop_control) return self.body;\n            }\n        }\n        if (self instanceof AST_While) {\n            return make_node(AST_For, self, self).optimize(compressor);\n        }\n        return self;\n    });\n\n    function if_break_in_loop(self, compressor) {\n        function drop_it(rest) {\n            rest = as_statement_array(rest);\n            if (self.body instanceof AST_BlockStatement) {\n                self.body = self.body.clone();\n                self.body.body = rest.concat(self.body.body.slice(1));\n                self.body = self.body.transform(compressor);\n            } else {\n                self.body = make_node(AST_BlockStatement, self.body, {\n                    body: rest\n                }).transform(compressor);\n            }\n            if_break_in_loop(self, compressor);\n        }\n        var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;\n        if (first instanceof AST_If) {\n            if (first.body instanceof AST_Break\n                && compressor.loopcontrol_target(first.body) === compressor.self()) {\n                if (self.condition) {\n                    self.condition = make_node(AST_Binary, self.condition, {\n                        left: self.condition,\n                        operator: \"&&\",\n                        right: first.condition.negate(compressor),\n                    });\n                } else {\n                    self.condition = first.condition.negate(compressor);\n                }\n                drop_it(first.alternative);\n            }\n            else if (first.alternative instanceof AST_Break\n                     && compressor.loopcontrol_target(first.alternative) === compressor.self()) {\n                if (self.condition) {\n                    self.condition = make_node(AST_Binary, self.condition, {\n                        left: self.condition,\n                        operator: \"&&\",\n                        right: first.condition,\n                    });\n                } else {\n                    self.condition = first.condition;\n                }\n                drop_it(first.body);\n            }\n        }\n    };\n\n    OPT(AST_For, function(self, compressor){\n        if (!compressor.option(\"loops\")) return self;\n        if (self.condition) {\n            var cond = self.condition.evaluate(compressor);\n            if (compressor.option(\"dead_code\") && !cond) {\n                var a = [];\n                if (self.init instanceof AST_Statement) {\n                    a.push(self.init);\n                }\n                else if (self.init) {\n                    a.push(make_node(AST_SimpleStatement, self.init, {\n                        body: self.init\n                    }));\n                }\n                extract_declarations_from_unreachable_code(compressor, self.body, a);\n                return make_node(AST_BlockStatement, self, { body: a }).optimize(compressor);\n            }\n            if (cond !== self.condition) {\n                cond = make_node_from_constant(cond, self.condition).transform(compressor);\n                self.condition = best_of_expression(cond, self.condition);\n            }\n        }\n        if_break_in_loop(self, compressor);\n        return self;\n    });\n\n    OPT(AST_If, function(self, compressor){\n        if (is_empty(self.alternative)) self.alternative = null;\n\n        if (!compressor.option(\"conditionals\")) return self;\n        // if condition can be statically determined, warn and drop\n        // one of the blocks.  note, statically determined implies\n        // “has no side effects”; also it doesn't work for cases like\n        // `x && true`, though it probably should.\n        var cond = self.condition.evaluate(compressor);\n        if (cond !== self.condition) {\n            if (cond) {\n                compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.condition.start);\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    if (self.alternative) {\n                        extract_declarations_from_unreachable_code(compressor, self.alternative, a);\n                    }\n                    a.push(self.body);\n                    return make_node(AST_BlockStatement, self, { body: a }).optimize(compressor);\n                }\n            } else {\n                compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.condition.start);\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    extract_declarations_from_unreachable_code(compressor, self.body, a);\n                    if (self.alternative) a.push(self.alternative);\n                    return make_node(AST_BlockStatement, self, { body: a }).optimize(compressor);\n                }\n            }\n            cond = make_node_from_constant(cond, self.condition).transform(compressor);\n            self.condition = best_of_expression(cond, self.condition);\n        }\n        var negated = self.condition.negate(compressor);\n        var self_condition_length = self.condition.print_to_string().length;\n        var negated_length = negated.print_to_string().length;\n        var negated_is_best = negated_length < self_condition_length;\n        if (self.alternative && negated_is_best) {\n            negated_is_best = false; // because we already do the switch here.\n            // no need to swap values of self_condition_length and negated_length\n            // here because they are only used in an equality comparison later on.\n            self.condition = negated;\n            var tmp = self.body;\n            self.body = self.alternative || make_node(AST_EmptyStatement, self);\n            self.alternative = tmp;\n        }\n        if (is_empty(self.body) && is_empty(self.alternative)) {\n            return make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition.clone()\n            }).optimize(compressor);\n        }\n        if (self.body instanceof AST_SimpleStatement\n            && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Conditional, self, {\n                    condition   : self.condition,\n                    consequent  : self.body.body,\n                    alternative : self.alternative.body\n                })\n            }).optimize(compressor);\n        }\n        if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {\n            if (self_condition_length === negated_length && !negated_is_best\n                && self.condition instanceof AST_Binary && self.condition.operator == \"||\") {\n                // although the code length of self.condition and negated are the same,\n                // negated does not require additional surrounding parentheses.\n                // see https://github.com/mishoo/UglifyJS2/issues/979\n                negated_is_best = true;\n            }\n            if (negated_is_best) return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"||\",\n                    left     : negated,\n                    right    : self.body.body\n                })\n            }).optimize(compressor);\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"&&\",\n                    left     : self.condition,\n                    right    : self.body.body\n                })\n            }).optimize(compressor);\n        }\n        if (self.body instanceof AST_EmptyStatement\n            && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"||\",\n                    left     : self.condition,\n                    right    : self.alternative.body\n                })\n            }).optimize(compressor);\n        }\n        if (self.body instanceof AST_Exit\n            && self.alternative instanceof AST_Exit\n            && self.body.TYPE == self.alternative.TYPE) {\n            return make_node(self.body.CTOR, self, {\n                value: make_node(AST_Conditional, self, {\n                    condition   : self.condition,\n                    consequent  : self.body.value || make_node(AST_Undefined, self.body),\n                    alternative : self.alternative.value || make_node(AST_Undefined, self.alternative)\n                }).transform(compressor)\n            }).optimize(compressor);\n        }\n        if (self.body instanceof AST_If\n            && !self.body.alternative\n            && !self.alternative) {\n            self = make_node(AST_If, self, {\n                condition: make_node(AST_Binary, self.condition, {\n                    operator: \"&&\",\n                    left: self.condition,\n                    right: self.body.condition\n                }),\n                body: self.body.body,\n                alternative: null\n            });\n        }\n        if (aborts(self.body)) {\n            if (self.alternative) {\n                var alt = self.alternative;\n                self.alternative = null;\n                return make_node(AST_BlockStatement, self, {\n                    body: [ self, alt ]\n                }).optimize(compressor);\n            }\n        }\n        if (aborts(self.alternative)) {\n            var body = self.body;\n            self.body = self.alternative;\n            self.condition = negated_is_best ? negated : self.condition.negate(compressor);\n            self.alternative = null;\n            return make_node(AST_BlockStatement, self, {\n                body: [ self, body ]\n            }).optimize(compressor);\n        }\n        return self;\n    });\n\n    OPT(AST_Switch, function(self, compressor){\n        if (!compressor.option(\"switches\")) return self;\n        var branch;\n        var value = self.expression.evaluate(compressor);\n        if (value !== self.expression) {\n            var expression = make_node_from_constant(value, self.expression).transform(compressor);\n            self.expression = best_of_expression(expression, self.expression);\n        }\n        if (!compressor.option(\"dead_code\")) return self;\n        var decl = [];\n        var body = [];\n        var default_branch;\n        var exact_match;\n        for (var i = 0, len = self.body.length; i < len && !exact_match; i++) {\n            branch = self.body[i];\n            if (branch instanceof AST_Default) {\n                if (!default_branch) {\n                    default_branch = branch;\n                } else {\n                    eliminate_branch(branch, body[body.length - 1]);\n                }\n            } else if (value !== self.expression) {\n                var exp = branch.expression.evaluate(compressor);\n                if (exp === value) {\n                    exact_match = branch;\n                    if (default_branch) {\n                        var default_index = body.indexOf(default_branch);\n                        body.splice(default_index, 1);\n                        eliminate_branch(default_branch, body[default_index - 1]);\n                        default_branch = null;\n                    }\n                } else if (exp !== branch.expression) {\n                    eliminate_branch(branch, body[body.length - 1]);\n                    continue;\n                }\n            }\n            if (aborts(branch)) {\n                var prev = body[body.length - 1];\n                if (aborts(prev) && prev.body.length == branch.body.length\n                    && make_node(AST_BlockStatement, prev, prev).equivalent_to(make_node(AST_BlockStatement, branch, branch))) {\n                    prev.body = [];\n                }\n            }\n            body.push(branch);\n        }\n        while (i < len) eliminate_branch(self.body[i++], body[body.length - 1]);\n        if (body.length > 0) {\n            body[0].body = decl.concat(body[0].body);\n        }\n        self.body = body;\n        while (branch = body[body.length - 1]) {\n            var stat = branch.body[branch.body.length - 1];\n            if (stat instanceof AST_Break && compressor.loopcontrol_target(stat) === self)\n                branch.body.pop();\n            if (branch.body.length || branch instanceof AST_Case\n                && (default_branch || branch.expression.has_side_effects(compressor))) break;\n            if (body.pop() === default_branch) default_branch = null;\n        }\n        if (body.length == 0) {\n            return make_node(AST_BlockStatement, self, {\n                body: decl.concat(make_node(AST_SimpleStatement, self.expression, {\n                    body: self.expression\n                }))\n            }).optimize(compressor);\n        }\n        if (body.length == 1 && (body[0] === exact_match || body[0] === default_branch)) {\n            var has_break = false;\n            var tw = new TreeWalker(function(node) {\n                if (has_break\n                    || node instanceof AST_Lambda\n                    || node instanceof AST_SimpleStatement) return true;\n                if (node instanceof AST_Break && tw.loopcontrol_target(node) === self)\n                    has_break = true;\n            });\n            self.walk(tw);\n            if (!has_break) {\n                body = body[0].body.slice();\n                body.unshift(make_node(AST_SimpleStatement, self.expression, {\n                    body: self.expression\n                }));\n                return make_node(AST_BlockStatement, self, {\n                    body: body\n                }).optimize(compressor);\n            }\n        }\n        return self;\n\n        function eliminate_branch(branch, prev) {\n            if (prev && !aborts(prev)) {\n                prev.body = prev.body.concat(branch.body);\n            } else {\n                extract_declarations_from_unreachable_code(compressor, branch, decl);\n            }\n        }\n    });\n\n    OPT(AST_Try, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        if (self.bcatch && self.bfinally && all(self.bfinally.body, is_empty)) self.bfinally = null;\n        if (all(self.body, is_empty)) {\n            var body = [];\n            if (self.bcatch) extract_declarations_from_unreachable_code(compressor, self.bcatch, body);\n            if (self.bfinally) body = body.concat(self.bfinally.body);\n            return make_node(AST_BlockStatement, self, {\n                body: body\n            }).optimize(compressor);\n        }\n        return self;\n    });\n\n    AST_Definitions.DEFMETHOD(\"remove_initializers\", function(){\n        this.definitions.forEach(function(def){ def.value = null });\n    });\n\n    AST_Definitions.DEFMETHOD(\"to_assignments\", function(compressor){\n        var reduce_vars = compressor.option(\"reduce_vars\");\n        var assignments = this.definitions.reduce(function(a, def){\n            if (def.value) {\n                var name = make_node(AST_SymbolRef, def.name, def.name);\n                a.push(make_node(AST_Assign, def, {\n                    operator : \"=\",\n                    left     : name,\n                    right    : def.value\n                }));\n                if (reduce_vars) name.definition().fixed = false;\n            }\n            return a;\n        }, []);\n        if (assignments.length == 0) return null;\n        return AST_Seq.from_array(assignments);\n    });\n\n    OPT(AST_Definitions, function(self, compressor){\n        if (self.definitions.length == 0)\n            return make_node(AST_EmptyStatement, self);\n        return self;\n    });\n\n    OPT(AST_Call, function(self, compressor){\n        var exp = self.expression;\n        if (compressor.option(\"reduce_vars\")\n            && exp instanceof AST_SymbolRef) {\n            var def = exp.definition();\n            var fixed = exp.fixed_value();\n            if (fixed instanceof AST_Defun) {\n                def.fixed = fixed = make_node(AST_Function, fixed, fixed).clone(true);\n            }\n            if (fixed instanceof AST_Function) {\n                exp = fixed;\n                if (compressor.option(\"unused\")\n                    && def.references.length == 1\n                    && !(def.scope.uses_arguments\n                        && def.orig[0] instanceof AST_SymbolFunarg)\n                    && !def.scope.uses_eval\n                    && compressor.find_parent(AST_Scope) === def.scope) {\n                    self.expression = exp;\n                }\n            }\n        }\n        if (compressor.option(\"unused\")\n            && exp instanceof AST_Function\n            && !exp.uses_arguments\n            && !exp.uses_eval) {\n            var pos = 0, last = 0;\n            for (var i = 0, len = self.args.length; i < len; i++) {\n                var trim = i >= exp.argnames.length;\n                if (trim || exp.argnames[i].__unused) {\n                    var node = self.args[i].drop_side_effect_free(compressor);\n                    if (node) {\n                        self.args[pos++] = node;\n                    } else if (!trim) {\n                        self.args[pos++] = make_node(AST_Number, self.args[i], {\n                            value: 0\n                        });\n                        continue;\n                    }\n                } else {\n                    self.args[pos++] = self.args[i];\n                }\n                last = pos;\n            }\n            self.args.length = last;\n        }\n        if (compressor.option(\"unsafe\")) {\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n                switch (exp.name) {\n                  case \"Array\":\n                    if (self.args.length != 1) {\n                        return make_node(AST_Array, self, {\n                            elements: self.args\n                        }).optimize(compressor);\n                    }\n                    break;\n                  case \"Object\":\n                    if (self.args.length == 0) {\n                        return make_node(AST_Object, self, {\n                            properties: []\n                        });\n                    }\n                    break;\n                  case \"String\":\n                    if (self.args.length == 0) return make_node(AST_String, self, {\n                        value: \"\"\n                    });\n                    if (self.args.length <= 1) return make_node(AST_Binary, self, {\n                        left: self.args[0],\n                        operator: \"+\",\n                        right: make_node(AST_String, self, { value: \"\" })\n                    }).optimize(compressor);\n                    break;\n                  case \"Number\":\n                    if (self.args.length == 0) return make_node(AST_Number, self, {\n                        value: 0\n                    });\n                    if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                        expression: self.args[0],\n                        operator: \"+\"\n                    }).optimize(compressor);\n                  case \"Boolean\":\n                    if (self.args.length == 0) return make_node(AST_False, self);\n                    if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                        expression: make_node(AST_UnaryPrefix, self, {\n                            expression: self.args[0],\n                            operator: \"!\"\n                        }),\n                        operator: \"!\"\n                    }).optimize(compressor);\n                    break;\n                  case \"Function\":\n                    // new Function() => function(){}\n                    if (self.args.length == 0) return make_node(AST_Function, self, {\n                        argnames: [],\n                        body: []\n                    });\n                    if (all(self.args, function(x){ return x instanceof AST_String })) {\n                        // quite a corner-case, but we can handle it:\n                        //   https://github.com/mishoo/UglifyJS2/issues/203\n                        // if the code argument is a constant, then we can minify it.\n                        try {\n                            var code = \"(function(\" + self.args.slice(0, -1).map(function(arg){\n                                return arg.value;\n                            }).join(\",\") + \"){\" + self.args[self.args.length - 1].value + \"})()\";\n                            var ast = parse(code);\n                            ast.figure_out_scope({ screw_ie8: compressor.option(\"screw_ie8\") });\n                            var comp = new Compressor(compressor.options);\n                            ast = ast.transform(comp);\n                            ast.figure_out_scope({ screw_ie8: compressor.option(\"screw_ie8\") });\n                            ast.mangle_names();\n                            var fun;\n                            try {\n                                ast.walk(new TreeWalker(function(node){\n                                    if (node instanceof AST_Lambda) {\n                                        fun = node;\n                                        throw ast;\n                                    }\n                                }));\n                            } catch(ex) {\n                                if (ex !== ast) throw ex;\n                            };\n                            if (!fun) return self;\n                            var args = fun.argnames.map(function(arg, i){\n                                return make_node(AST_String, self.args[i], {\n                                    value: arg.print_to_string()\n                                });\n                            });\n                            var code = OutputStream();\n                            AST_BlockStatement.prototype._codegen.call(fun, fun, code);\n                            code = code.toString().replace(/^\\{|\\}$/g, \"\");\n                            args.push(make_node(AST_String, self.args[self.args.length - 1], {\n                                value: code\n                            }));\n                            self.args = args;\n                            return self;\n                        } catch(ex) {\n                            if (ex instanceof JS_Parse_Error) {\n                                compressor.warn(\"Error parsing code passed to new Function [{file}:{line},{col}]\", self.args[self.args.length - 1].start);\n                                compressor.warn(ex.toString());\n                            } else {\n                                console.log(ex);\n                                throw ex;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            else if (exp instanceof AST_Dot && exp.property == \"toString\" && self.args.length == 0) {\n                return make_node(AST_Binary, self, {\n                    left: make_node(AST_String, self, { value: \"\" }),\n                    operator: \"+\",\n                    right: exp.expression\n                }).optimize(compressor);\n            }\n            else if (exp instanceof AST_Dot && exp.expression instanceof AST_Array && exp.property == \"join\") EXIT: {\n                var separator;\n                if (self.args.length > 0) {\n                    separator = self.args[0].evaluate(compressor);\n                    if (separator === self.args[0]) break EXIT; // not a constant\n                }\n                var elements = [];\n                var consts = [];\n                exp.expression.elements.forEach(function(el) {\n                    var value = el.evaluate(compressor);\n                    if (value !== el) {\n                        consts.push(value);\n                    } else {\n                        if (consts.length > 0) {\n                            elements.push(make_node(AST_String, self, {\n                                value: consts.join(separator)\n                            }));\n                            consts.length = 0;\n                        }\n                        elements.push(el);\n                    }\n                });\n                if (consts.length > 0) {\n                    elements.push(make_node(AST_String, self, {\n                        value: consts.join(separator)\n                    }));\n                }\n                if (elements.length == 0) return make_node(AST_String, self, { value: \"\" });\n                if (elements.length == 1) {\n                    if (elements[0].is_string(compressor)) {\n                        return elements[0];\n                    }\n                    return make_node(AST_Binary, elements[0], {\n                        operator : \"+\",\n                        left     : make_node(AST_String, self, { value: \"\" }),\n                        right    : elements[0]\n                    });\n                }\n                if (separator == \"\") {\n                    var first;\n                    if (elements[0].is_string(compressor)\n                        || elements[1].is_string(compressor)) {\n                        first = elements.shift();\n                    } else {\n                        first = make_node(AST_String, self, { value: \"\" });\n                    }\n                    return elements.reduce(function(prev, el){\n                        return make_node(AST_Binary, el, {\n                            operator : \"+\",\n                            left     : prev,\n                            right    : el\n                        });\n                    }, first).optimize(compressor);\n                }\n                // need this awkward cloning to not affect original element\n                // best_of will decide which one to get through.\n                var node = self.clone();\n                node.expression = node.expression.clone();\n                node.expression.expression = node.expression.expression.clone();\n                node.expression.expression.elements = elements;\n                return best_of(compressor, self, node);\n            }\n            else if (exp instanceof AST_Dot && exp.expression.is_string(compressor) && exp.property == \"charAt\") {\n                var arg = self.args[0];\n                var index = arg ? arg.evaluate(compressor) : 0;\n                if (index !== arg) {\n                    return make_node(AST_Sub, exp, {\n                        expression: exp.expression,\n                        property: make_node_from_constant(index | 0, arg || exp)\n                    }).optimize(compressor);\n                }\n            }\n        }\n        if (exp instanceof AST_Function) {\n            if (exp.body[0] instanceof AST_Return) {\n                var value = exp.body[0].value;\n                if (!value || value.is_constant()) {\n                    var args = self.args.concat(value || make_node(AST_Undefined, self));\n                    return AST_Seq.from_array(args).transform(compressor);\n                }\n            }\n            if (compressor.option(\"side_effects\") && all(exp.body, is_empty)) {\n                var args = self.args.concat(make_node(AST_Undefined, self));\n                return AST_Seq.from_array(args).transform(compressor);\n            }\n        }\n        if (compressor.option(\"drop_console\")) {\n            if (exp instanceof AST_PropAccess) {\n                var name = exp.expression;\n                while (name.expression) {\n                    name = name.expression;\n                }\n                if (name instanceof AST_SymbolRef\n                    && name.name == \"console\"\n                    && name.undeclared()) {\n                    return make_node(AST_Undefined, self).optimize(compressor);\n                }\n            }\n        }\n        if (compressor.option(\"negate_iife\")\n            && compressor.parent() instanceof AST_SimpleStatement\n            && is_iife_call(self)) {\n            return self.negate(compressor, true);\n        }\n        return self;\n    });\n\n    OPT(AST_New, function(self, compressor){\n        if (compressor.option(\"unsafe\")) {\n            var exp = self.expression;\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n                switch (exp.name) {\n                  case \"Object\":\n                  case \"RegExp\":\n                  case \"Function\":\n                  case \"Error\":\n                  case \"Array\":\n                    return make_node(AST_Call, self, self).transform(compressor);\n                }\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Seq, function(self, compressor){\n        if (!compressor.option(\"side_effects\"))\n            return self;\n        self.car = self.car.drop_side_effect_free(compressor, first_in_statement(compressor));\n        if (!self.car) return maintain_this_binding(compressor.parent(), self, self.cdr);\n        if (compressor.option(\"cascade\")) {\n            var left;\n            if (self.car instanceof AST_Assign\n                && !self.car.left.has_side_effects(compressor)) {\n                left = self.car.left;\n            } else if (self.car instanceof AST_Unary\n                && (self.car.operator == \"++\" || self.car.operator == \"--\")) {\n                left = self.car.expression;\n            }\n            if (left\n                && !(left instanceof AST_SymbolRef\n                    && (left.definition().orig[0] instanceof AST_SymbolLambda\n                        || is_reference_const(left)))) {\n                var parent, field;\n                var cdr = self.cdr;\n                while (true) {\n                    if (cdr.equivalent_to(left)) {\n                        var car = self.car instanceof AST_UnaryPostfix ? make_node(AST_UnaryPrefix, self.car, {\n                            operator: self.car.operator,\n                            expression: left\n                        }) : self.car;\n                        if (parent) {\n                            parent[field] = car;\n                            return self.cdr;\n                        }\n                        return car;\n                    }\n                    if (cdr instanceof AST_Binary && !(cdr instanceof AST_Assign)) {\n                        if (cdr.left.is_constant()) {\n                            if (cdr.operator == \"||\" || cdr.operator == \"&&\") break;\n                            field = \"right\";\n                        } else {\n                            field = \"left\";\n                        }\n                    } else if (cdr instanceof AST_Call\n                        || cdr instanceof AST_Unary && !unary_side_effects(cdr.operator)) {\n                        field = \"expression\";\n                    } else break;\n                    parent = cdr;\n                    cdr = cdr[field];\n                }\n            }\n        }\n        if (is_undefined(self.cdr, compressor)) {\n            return make_node(AST_UnaryPrefix, self, {\n                operator   : \"void\",\n                expression : self.car\n            });\n        }\n        return self;\n    });\n\n    AST_Unary.DEFMETHOD(\"lift_sequences\", function(compressor){\n        if (compressor.option(\"sequences\")) {\n            if (this.expression instanceof AST_Seq) {\n                var seq = this.expression;\n                var x = seq.to_array();\n                var e = this.clone();\n                e.expression = x.pop();\n                x.push(e);\n                seq = AST_Seq.from_array(x).transform(compressor);\n                return seq;\n            }\n        }\n        return this;\n    });\n\n    OPT(AST_UnaryPostfix, function(self, compressor){\n        return self.lift_sequences(compressor);\n    });\n\n    OPT(AST_UnaryPrefix, function(self, compressor){\n        var e = self.expression;\n        if (self.operator == \"delete\"\n            && !(e instanceof AST_SymbolRef\n                || e instanceof AST_PropAccess\n                || e instanceof AST_NaN\n                || e instanceof AST_Infinity\n                || e instanceof AST_Undefined)) {\n            if (e instanceof AST_Seq) {\n                e = e.to_array();\n                e.push(make_node(AST_True, self));\n                return AST_Seq.from_array(e).optimize(compressor);\n            }\n            return make_node(AST_Seq, self, {\n                car: e,\n                cdr: make_node(AST_True, self)\n            }).optimize(compressor);\n        }\n        var seq = self.lift_sequences(compressor);\n        if (seq !== self) {\n            return seq;\n        }\n        if (compressor.option(\"side_effects\") && self.operator == \"void\") {\n            e = e.drop_side_effect_free(compressor);\n            if (e) {\n                self.expression = e;\n                return self;\n            } else {\n                return make_node(AST_Undefined, self).optimize(compressor);\n            }\n        }\n        if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n            switch (self.operator) {\n              case \"!\":\n                if (e instanceof AST_UnaryPrefix && e.operator == \"!\") {\n                    // !!foo ==> foo, if we're in boolean context\n                    return e.expression;\n                }\n                if (e instanceof AST_Binary) {\n                    self = best_of(compressor, self, e.negate(compressor, first_in_statement(compressor)));\n                }\n                break;\n              case \"typeof\":\n                // typeof always returns a non-empty string, thus it's\n                // always true in booleans\n                compressor.warn(\"Boolean expression always true [{file}:{line},{col}]\", self.start);\n                return (e instanceof AST_SymbolRef ? make_node(AST_True, self) : make_node(AST_Seq, self, {\n                    car: e,\n                    cdr: make_node(AST_True, self)\n                })).optimize(compressor);\n            }\n        }\n        if (self.operator == \"-\" && e instanceof AST_Infinity) {\n            e = e.transform(compressor);\n        }\n        if (e instanceof AST_Binary\n            && (self.operator == \"+\" || self.operator == \"-\")\n            && (e.operator == \"*\" || e.operator == \"/\" || e.operator == \"%\")) {\n            return make_node(AST_Binary, self, {\n                operator: e.operator,\n                left: make_node(AST_UnaryPrefix, e.left, {\n                    operator: self.operator,\n                    expression: e.left\n                }),\n                right: e.right\n            });\n        }\n        // avoids infinite recursion of numerals\n        if (self.operator != \"-\"\n            || !(e instanceof AST_Number || e instanceof AST_Infinity)) {\n            var ev = self.evaluate(compressor);\n            if (ev !== self) {\n                ev = make_node_from_constant(ev, self).optimize(compressor);\n                return best_of(compressor, ev, self);\n            }\n        }\n        return self;\n    });\n\n    AST_Binary.DEFMETHOD(\"lift_sequences\", function(compressor){\n        if (compressor.option(\"sequences\")) {\n            if (this.left instanceof AST_Seq) {\n                var seq = this.left;\n                var x = seq.to_array();\n                var e = this.clone();\n                e.left = x.pop();\n                x.push(e);\n                return AST_Seq.from_array(x).optimize(compressor);\n            }\n            if (this.right instanceof AST_Seq && !this.left.has_side_effects(compressor)) {\n                var assign = this.operator == \"=\" && this.left instanceof AST_SymbolRef;\n                var root = this.right.clone();\n                var cursor, seq = root;\n                while (assign || !seq.car.has_side_effects(compressor)) {\n                    cursor = seq;\n                    if (seq.cdr instanceof AST_Seq) {\n                        seq = seq.cdr = seq.cdr.clone();\n                    } else break;\n                }\n                if (cursor) {\n                    var e = this.clone();\n                    e.right = cursor.cdr;\n                    cursor.cdr = e;\n                    return root.optimize(compressor);\n                }\n            }\n        }\n        return this;\n    });\n\n    var commutativeOperators = makePredicate(\"== === != !== * & | ^\");\n\n    OPT(AST_Binary, function(self, compressor){\n        function reversible() {\n            return self.left.is_constant()\n                || self.right.is_constant()\n                || !self.left.has_side_effects(compressor)\n                    && !self.right.has_side_effects(compressor);\n        }\n        function reverse(op) {\n            if (reversible()) {\n                if (op) self.operator = op;\n                var tmp = self.left;\n                self.left = self.right;\n                self.right = tmp;\n            }\n        }\n        if (commutativeOperators(self.operator)) {\n            if (self.right.is_constant()\n                && !self.left.is_constant()) {\n                // if right is a constant, whatever side effects the\n                // left side might have could not influence the\n                // result.  hence, force switch.\n\n                if (!(self.left instanceof AST_Binary\n                      && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                    reverse();\n                }\n            }\n        }\n        self = self.lift_sequences(compressor);\n        if (compressor.option(\"comparisons\")) switch (self.operator) {\n          case \"===\":\n          case \"!==\":\n            if ((self.left.is_string(compressor) && self.right.is_string(compressor)) ||\n                (self.left.is_number(compressor) && self.right.is_number(compressor)) ||\n                (self.left.is_boolean() && self.right.is_boolean())) {\n                self.operator = self.operator.substr(0, 2);\n            }\n            // XXX: intentionally falling down to the next case\n          case \"==\":\n          case \"!=\":\n            // \"undefined\" == typeof x => undefined === x\n            if (self.left instanceof AST_String\n                && self.left.value == \"undefined\"\n                && self.right instanceof AST_UnaryPrefix\n                && self.right.operator == \"typeof\") {\n                var expr = self.right.expression;\n                if (expr instanceof AST_SymbolRef ? !expr.undeclared()\n                    : !(expr instanceof AST_PropAccess) || compressor.option(\"screw_ie8\")) {\n                    self.right = expr;\n                    self.left = make_node(AST_Undefined, self.left).optimize(compressor);\n                    if (self.operator.length == 2) self.operator += \"=\";\n                }\n            }\n            break;\n        }\n        if (compressor.option(\"booleans\") && self.operator == \"+\" && compressor.in_boolean_context()) {\n            var ll = self.left.evaluate(compressor);\n            var rr = self.right.evaluate(compressor);\n            if (ll && typeof ll == \"string\") {\n                compressor.warn(\"+ in boolean context always true [{file}:{line},{col}]\", self.start);\n                return make_node(AST_Seq, self, {\n                    car: self.right,\n                    cdr: make_node(AST_True, self)\n                }).optimize(compressor);\n            }\n            if (rr && typeof rr == \"string\") {\n                compressor.warn(\"+ in boolean context always true [{file}:{line},{col}]\", self.start);\n                return make_node(AST_Seq, self, {\n                    car: self.left,\n                    cdr: make_node(AST_True, self)\n                }).optimize(compressor);\n            }\n        }\n        if (compressor.option(\"comparisons\") && self.is_boolean()) {\n            if (!(compressor.parent() instanceof AST_Binary)\n                || compressor.parent() instanceof AST_Assign) {\n                var negated = make_node(AST_UnaryPrefix, self, {\n                    operator: \"!\",\n                    expression: self.negate(compressor, first_in_statement(compressor))\n                });\n                self = best_of(compressor, self, negated);\n            }\n            if (compressor.option(\"unsafe_comps\")) {\n                switch (self.operator) {\n                  case \"<\": reverse(\">\"); break;\n                  case \"<=\": reverse(\">=\"); break;\n                }\n            }\n        }\n        if (self.operator == \"+\") {\n            if (self.right instanceof AST_String\n                && self.right.getValue() == \"\"\n                && self.left.is_string(compressor)) {\n                return self.left;\n            }\n            if (self.left instanceof AST_String\n                && self.left.getValue() == \"\"\n                && self.right.is_string(compressor)) {\n                return self.right;\n            }\n            if (self.left instanceof AST_Binary\n                && self.left.operator == \"+\"\n                && self.left.left instanceof AST_String\n                && self.left.left.getValue() == \"\"\n                && self.right.is_string(compressor)) {\n                self.left = self.left.right;\n                return self.transform(compressor);\n            }\n        }\n        if (compressor.option(\"evaluate\")) {\n            switch (self.operator) {\n              case \"&&\":\n                var ll = self.left.evaluate(compressor);\n                if (!ll) {\n                    compressor.warn(\"Condition left of && always false [{file}:{line},{col}]\", self.start);\n                    return maintain_this_binding(compressor.parent(), self, self.left).optimize(compressor);\n                } else if (ll !== self.left) {\n                    compressor.warn(\"Condition left of && always true [{file}:{line},{col}]\", self.start);\n                    return maintain_this_binding(compressor.parent(), self, self.right).optimize(compressor);\n                }\n                if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n                    var rr = self.right.evaluate(compressor);\n                    if (!rr) {\n                        compressor.warn(\"Boolean && always false [{file}:{line},{col}]\", self.start);\n                        return make_node(AST_Seq, self, {\n                            car: self.left,\n                            cdr: make_node(AST_False, self)\n                        }).optimize(compressor);\n                    } else if (rr !== self.right) {\n                        compressor.warn(\"Dropping side-effect-free && in boolean context [{file}:{line},{col}]\", self.start);\n                        return self.left.optimize(compressor);\n                    }\n                }\n                break;\n              case \"||\":\n                var ll = self.left.evaluate(compressor);\n                if (!ll) {\n                    compressor.warn(\"Condition left of || always false [{file}:{line},{col}]\", self.start);\n                    return maintain_this_binding(compressor.parent(), self, self.right).optimize(compressor);\n                } else if (ll !== self.left) {\n                    compressor.warn(\"Condition left of || always true [{file}:{line},{col}]\", self.start);\n                    return maintain_this_binding(compressor.parent(), self, self.left).optimize(compressor);\n                }\n                if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n                    var rr = self.right.evaluate(compressor);\n                    if (!rr) {\n                        compressor.warn(\"Dropping side-effect-free || in boolean context [{file}:{line},{col}]\", self.start);\n                        return self.left.optimize(compressor);\n                    } else if (rr !== self.right) {\n                        compressor.warn(\"Boolean || always true [{file}:{line},{col}]\", self.start);\n                        return make_node(AST_Seq, self, {\n                            car: self.left,\n                            cdr: make_node(AST_True, self)\n                        }).optimize(compressor);\n                    }\n                }\n                break;\n            }\n            var associative = true;\n            switch (self.operator) {\n              case \"+\":\n                // \"foo\" + (\"bar\" + x) => \"foobar\" + x\n                if (self.left instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == \"+\"\n                    && self.right.left instanceof AST_Constant\n                    && self.right.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_String, self.left, {\n                            value: \"\" + self.left.getValue() + self.right.left.getValue(),\n                            start: self.left.start,\n                            end: self.right.left.end\n                        }),\n                        right: self.right.right\n                    });\n                }\n                // (x + \"foo\") + \"bar\" => x + \"foobar\"\n                if (self.right instanceof AST_Constant\n                    && self.left instanceof AST_Binary\n                    && self.left.operator == \"+\"\n                    && self.left.right instanceof AST_Constant\n                    && self.left.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: self.left.left,\n                        right: make_node(AST_String, self.right, {\n                            value: \"\" + self.left.right.getValue() + self.right.getValue(),\n                            start: self.left.right.start,\n                            end: self.right.end\n                        })\n                    });\n                }\n                // (x + \"foo\") + (\"bar\" + y) => (x + \"foobar\") + y\n                if (self.left instanceof AST_Binary\n                    && self.left.operator == \"+\"\n                    && self.left.is_string(compressor)\n                    && self.left.right instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == \"+\"\n                    && self.right.left instanceof AST_Constant\n                    && self.right.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_Binary, self.left, {\n                            operator: \"+\",\n                            left: self.left.left,\n                            right: make_node(AST_String, self.left.right, {\n                                value: \"\" + self.left.right.getValue() + self.right.left.getValue(),\n                                start: self.left.right.start,\n                                end: self.right.left.end\n                            })\n                        }),\n                        right: self.right.right\n                    });\n                }\n                // a + -b => a - b\n                if (self.right instanceof AST_UnaryPrefix\n                    && self.right.operator == \"-\"\n                    && self.left.is_number(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"-\",\n                        left: self.left,\n                        right: self.right.expression\n                    });\n                    break;\n                }\n                // -a + b => b - a\n                if (self.left instanceof AST_UnaryPrefix\n                    && self.left.operator == \"-\"\n                    && reversible()\n                    && self.right.is_number(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"-\",\n                        left: self.right,\n                        right: self.left.expression\n                    });\n                    break;\n                }\n              case \"*\":\n                associative = compressor.option(\"unsafe_math\");\n              case \"&\":\n              case \"|\":\n              case \"^\":\n                // a + +b => +b + a\n                if (self.left.is_number(compressor)\n                    && self.right.is_number(compressor)\n                    && reversible()\n                    && !(self.left instanceof AST_Binary\n                        && self.left.operator != self.operator\n                        && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                    var reversed = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: self.right,\n                        right: self.left\n                    });\n                    if (self.right instanceof AST_Constant\n                        && !(self.left instanceof AST_Constant)) {\n                        self = best_of(compressor, reversed, self);\n                    } else {\n                        self = best_of(compressor, self, reversed);\n                    }\n                }\n                if (associative && self.is_number(compressor)) {\n                    // a + (b + c) => (a + b) + c\n                    if (self.right instanceof AST_Binary\n                        && self.right.operator == self.operator) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: self.left,\n                                right: self.right.left,\n                                start: self.left.start,\n                                end: self.right.left.end\n                            }),\n                            right: self.right.right\n                        });\n                    }\n                    // (n + 2) + 3 => 5 + n\n                    // (2 * n) * 3 => 6 + n\n                    if (self.right instanceof AST_Constant\n                        && self.left instanceof AST_Binary\n                        && self.left.operator == self.operator) {\n                        if (self.left.left instanceof AST_Constant) {\n                            self = make_node(AST_Binary, self, {\n                                operator: self.operator,\n                                left: make_node(AST_Binary, self.left, {\n                                    operator: self.operator,\n                                    left: self.left.left,\n                                    right: self.right,\n                                    start: self.left.left.start,\n                                    end: self.right.end\n                                }),\n                                right: self.left.right\n                            });\n                        } else if (self.left.right instanceof AST_Constant) {\n                            self = make_node(AST_Binary, self, {\n                                operator: self.operator,\n                                left: make_node(AST_Binary, self.left, {\n                                    operator: self.operator,\n                                    left: self.left.right,\n                                    right: self.right,\n                                    start: self.left.right.start,\n                                    end: self.right.end\n                                }),\n                                right: self.left.left\n                            });\n                        }\n                    }\n                    // (a | 1) | (2 | d) => (3 | a) | b\n                    if (self.left instanceof AST_Binary\n                        && self.left.operator == self.operator\n                        && self.left.right instanceof AST_Constant\n                        && self.right instanceof AST_Binary\n                        && self.right.operator == self.operator\n                        && self.right.left instanceof AST_Constant) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: make_node(AST_Binary, self.left.left, {\n                                    operator: self.operator,\n                                    left: self.left.right,\n                                    right: self.right.left,\n                                    start: self.left.right.start,\n                                    end: self.right.left.end\n                                }),\n                                right: self.left.left\n                            }),\n                            right: self.right.right\n                        });\n                    }\n                }\n            }\n        }\n        // x && (y && z)  ==>  x && y && z\n        // x || (y || z)  ==>  x || y || z\n        // x + (\"y\" + z)  ==>  x + \"y\" + z\n        // \"x\" + (y + \"z\")==>  \"x\" + y + \"z\"\n        if (self.right instanceof AST_Binary\n            && self.right.operator == self.operator\n            && (self.operator == \"&&\"\n                || self.operator == \"||\"\n                || (self.operator == \"+\"\n                    && (self.right.left.is_string(compressor)\n                        || (self.left.is_string(compressor)\n                            && self.right.right.is_string(compressor))))))\n        {\n            self.left = make_node(AST_Binary, self.left, {\n                operator : self.operator,\n                left     : self.left,\n                right    : self.right.left\n            });\n            self.right = self.right.right;\n            return self.transform(compressor);\n        }\n        var ev = self.evaluate(compressor);\n        if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n        }\n        return self;\n    });\n\n    OPT(AST_SymbolRef, function(self, compressor){\n        var def = self.resolve_defines(compressor);\n        if (def) {\n            return def.optimize(compressor);\n        }\n        // testing against !self.scope.uses_with first is an optimization\n        if (compressor.option(\"screw_ie8\")\n            && self.undeclared()\n            && (!self.scope.uses_with || !compressor.find_parent(AST_With))) {\n            switch (self.name) {\n              case \"undefined\":\n                return make_node(AST_Undefined, self).optimize(compressor);\n              case \"NaN\":\n                return make_node(AST_NaN, self).optimize(compressor);\n              case \"Infinity\":\n                return make_node(AST_Infinity, self).optimize(compressor);\n            }\n        }\n        if (compressor.option(\"evaluate\")\n            && compressor.option(\"reduce_vars\")\n            && is_lhs(self, compressor.parent()) !== self) {\n            var d = self.definition();\n            var fixed = self.fixed_value();\n            if (fixed) {\n                if (d.should_replace === undefined) {\n                    var init = fixed.evaluate(compressor);\n                    if (init !== fixed && (compressor.option(\"unsafe_regexp\") || !(init instanceof RegExp))) {\n                        init = make_node_from_constant(init, fixed);\n                        var value = init.optimize(compressor).print_to_string().length;\n                        var fn;\n                        if (has_symbol_ref(fixed)) {\n                            fn = function() {\n                                var result = init.optimize(compressor);\n                                return result === init ? result.clone(true) : result;\n                            };\n                        } else {\n                            value = Math.min(value, fixed.print_to_string().length);\n                            fn = function() {\n                                var result = best_of_expression(init.optimize(compressor), fixed);\n                                return result === init || result === fixed ? result.clone(true) : result;\n                            };\n                        }\n                        var name = d.name.length;\n                        var overhead = 0;\n                        if (compressor.option(\"unused\") && (!d.global || compressor.option(\"toplevel\"))) {\n                            overhead = (name + 2 + value) / d.references.length;\n                        }\n                        d.should_replace = value <= name + overhead ? fn : false;\n                    } else {\n                        d.should_replace = false;\n                    }\n                }\n                if (d.should_replace) {\n                    return d.should_replace();\n                }\n            }\n        }\n        return self;\n\n        function has_symbol_ref(value) {\n            var found;\n            value.walk(new TreeWalker(function(node) {\n                if (node instanceof AST_SymbolRef) found = true;\n                if (found) return true;\n            }));\n            return found;\n        }\n    });\n\n    function is_atomic(lhs, self) {\n        return lhs instanceof AST_SymbolRef || lhs.TYPE === self.TYPE;\n    }\n\n    OPT(AST_Undefined, function(self, compressor){\n        if (compressor.option(\"unsafe\")) {\n            var undef = find_variable(compressor, \"undefined\");\n            if (undef) {\n                var ref = make_node(AST_SymbolRef, self, {\n                    name   : \"undefined\",\n                    scope  : undef.scope,\n                    thedef : undef\n                });\n                ref.is_undefined = true;\n                return ref;\n            }\n        }\n        var lhs = is_lhs(compressor.self(), compressor.parent());\n        if (lhs && is_atomic(lhs, self)) return self;\n        return make_node(AST_UnaryPrefix, self, {\n            operator: \"void\",\n            expression: make_node(AST_Number, self, {\n                value: 0\n            })\n        });\n    });\n\n    OPT(AST_Infinity, function(self, compressor){\n        var lhs = is_lhs(compressor.self(), compressor.parent());\n        if (lhs && is_atomic(lhs, self)) return self;\n        if (compressor.option(\"keep_infinity\")\n            && !(lhs && !is_atomic(lhs, self))\n            && !find_variable(compressor, \"Infinity\"))\n            return self;\n        return make_node(AST_Binary, self, {\n            operator: \"/\",\n            left: make_node(AST_Number, self, {\n                value: 1\n            }),\n            right: make_node(AST_Number, self, {\n                value: 0\n            })\n        });\n    });\n\n    OPT(AST_NaN, function(self, compressor){\n        var lhs = is_lhs(compressor.self(), compressor.parent());\n        if (lhs && !is_atomic(lhs, self)\n            || find_variable(compressor, \"NaN\")) {\n            return make_node(AST_Binary, self, {\n                operator: \"/\",\n                left: make_node(AST_Number, self, {\n                    value: 0\n                }),\n                right: make_node(AST_Number, self, {\n                    value: 0\n                })\n            });\n        }\n        return self;\n    });\n\n    var ASSIGN_OPS = [ '+', '-', '/', '*', '%', '>>', '<<', '>>>', '|', '^', '&' ];\n    var ASSIGN_OPS_COMMUTATIVE = [ '*', '|', '^', '&' ];\n    OPT(AST_Assign, function(self, compressor){\n        self = self.lift_sequences(compressor);\n        if (self.operator == \"=\" && self.left instanceof AST_SymbolRef && self.right instanceof AST_Binary) {\n            // x = expr1 OP expr2\n            if (self.right.left instanceof AST_SymbolRef\n                && self.right.left.name == self.left.name\n                && member(self.right.operator, ASSIGN_OPS)) {\n                // x = x - 2  --->  x -= 2\n                self.operator = self.right.operator + \"=\";\n                self.right = self.right.right;\n            }\n            else if (self.right.right instanceof AST_SymbolRef\n                && self.right.right.name == self.left.name\n                && member(self.right.operator, ASSIGN_OPS_COMMUTATIVE)\n                && !self.right.left.has_side_effects(compressor)) {\n                // x = 2 & x  --->  x &= 2\n                self.operator = self.right.operator + \"=\";\n                self.right = self.right.left;\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Conditional, function(self, compressor){\n        if (!compressor.option(\"conditionals\")) return self;\n        if (self.condition instanceof AST_Seq) {\n            var car = self.condition.car;\n            self.condition = self.condition.cdr;\n            return AST_Seq.cons(car, self);\n        }\n        var cond = self.condition.evaluate(compressor);\n        if (cond !== self.condition) {\n            if (cond) {\n                compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.start);\n                return maintain_this_binding(compressor.parent(), self, self.consequent);\n            } else {\n                compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.start);\n                return maintain_this_binding(compressor.parent(), self, self.alternative);\n            }\n        }\n        var negated = cond.negate(compressor, first_in_statement(compressor));\n        if (best_of(compressor, cond, negated) === negated) {\n            self = make_node(AST_Conditional, self, {\n                condition: negated,\n                consequent: self.alternative,\n                alternative: self.consequent\n            });\n        }\n        var condition = self.condition;\n        var consequent = self.consequent;\n        var alternative = self.alternative;\n        // x?x:y --> x||y\n        if (condition instanceof AST_SymbolRef\n            && consequent instanceof AST_SymbolRef\n            && condition.definition() === consequent.definition()) {\n            return make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: alternative\n            });\n        }\n        // if (foo) exp = something; else exp = something_else;\n        //                   |\n        //                   v\n        // exp = foo ? something : something_else;\n        if (consequent instanceof AST_Assign\n            && alternative instanceof AST_Assign\n            && consequent.operator == alternative.operator\n            && consequent.left.equivalent_to(alternative.left)\n            && (!self.condition.has_side_effects(compressor)\n                || consequent.operator == \"=\"\n                    && !consequent.left.has_side_effects(compressor))) {\n            return make_node(AST_Assign, self, {\n                operator: consequent.operator,\n                left: consequent.left,\n                right: make_node(AST_Conditional, self, {\n                    condition: self.condition,\n                    consequent: consequent.right,\n                    alternative: alternative.right\n                })\n            });\n        }\n        // x ? y(a) : y(b) --> y(x ? a : b)\n        if (consequent instanceof AST_Call\n            && alternative.TYPE === consequent.TYPE\n            && consequent.args.length == 1\n            && alternative.args.length == 1\n            && consequent.expression.equivalent_to(alternative.expression)\n            && !consequent.expression.has_side_effects(compressor)) {\n            consequent.args[0] = make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: consequent.args[0],\n                alternative: alternative.args[0]\n            });\n            return consequent;\n        }\n        // x?y?z:a:a --> x&&y?z:a\n        if (consequent instanceof AST_Conditional\n            && consequent.alternative.equivalent_to(alternative)) {\n            return make_node(AST_Conditional, self, {\n                condition: make_node(AST_Binary, self, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: consequent.condition\n                }),\n                consequent: consequent.consequent,\n                alternative: alternative\n            });\n        }\n        // x ? y : y --> x, y\n        if (consequent.equivalent_to(alternative)) {\n            return make_node(AST_Seq, self, {\n                car: self.condition,\n                cdr: consequent\n            }).optimize(compressor);\n        }\n\n        if (is_true(self.consequent)) {\n            if (is_false(self.alternative)) {\n                // c ? true : false ---> !!c\n                return booleanize(self.condition);\n            }\n            // c ? true : x ---> !!c || x\n            return make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: booleanize(self.condition),\n                right: self.alternative\n            });\n        }\n        if (is_false(self.consequent)) {\n            if (is_true(self.alternative)) {\n                // c ? false : true ---> !c\n                return booleanize(self.condition.negate(compressor));\n            }\n            // c ? false : x ---> !c && x\n            return make_node(AST_Binary, self, {\n                operator: \"&&\",\n                left: booleanize(self.condition.negate(compressor)),\n                right: self.alternative\n            });\n        }\n        if (is_true(self.alternative)) {\n            // c ? x : true ---> !c || x\n            return make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: booleanize(self.condition.negate(compressor)),\n                right: self.consequent\n            });\n        }\n        if (is_false(self.alternative)) {\n            // c ? x : false ---> !!c && x\n            return make_node(AST_Binary, self, {\n                operator: \"&&\",\n                left: booleanize(self.condition),\n                right: self.consequent\n            });\n        }\n\n        return self;\n\n        function booleanize(node) {\n            if (node.is_boolean()) return node;\n            // !!expression\n            return make_node(AST_UnaryPrefix, node, {\n                operator: \"!\",\n                expression: node.negate(compressor)\n            });\n        }\n\n        // AST_True or !0\n        function is_true(node) {\n            return node instanceof AST_True\n                || (node instanceof AST_UnaryPrefix\n                    && node.operator == \"!\"\n                    && node.expression instanceof AST_Constant\n                    && !node.expression.value);\n        }\n        // AST_False or !1\n        function is_false(node) {\n            return node instanceof AST_False\n                || (node instanceof AST_UnaryPrefix\n                    && node.operator == \"!\"\n                    && node.expression instanceof AST_Constant\n                    && !!node.expression.value);\n        }\n    });\n\n    OPT(AST_Boolean, function(self, compressor){\n        if (compressor.option(\"booleans\")) {\n            var p = compressor.parent();\n            if (p instanceof AST_Binary && (p.operator == \"==\"\n                                            || p.operator == \"!=\")) {\n                compressor.warn(\"Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]\", {\n                    operator : p.operator,\n                    value    : self.value,\n                    file     : p.start.file,\n                    line     : p.start.line,\n                    col      : p.start.col,\n                });\n                return make_node(AST_Number, self, {\n                    value: +self.value\n                });\n            }\n            return make_node(AST_UnaryPrefix, self, {\n                operator: \"!\",\n                expression: make_node(AST_Number, self, {\n                    value: 1 - self.value\n                })\n            });\n        }\n        return self;\n    });\n\n    OPT(AST_Sub, function(self, compressor){\n        var prop = self.property;\n        if (prop instanceof AST_String && compressor.option(\"properties\")) {\n            prop = prop.getValue();\n            if (RESERVED_WORDS(prop) ? compressor.option(\"screw_ie8\") : is_identifier_string(prop)) {\n                return make_node(AST_Dot, self, {\n                    expression : self.expression,\n                    property   : prop\n                }).optimize(compressor);\n            }\n            var v = parseFloat(prop);\n            if (!isNaN(v) && v.toString() == prop) {\n                self.property = make_node(AST_Number, self.property, {\n                    value: v\n                });\n            }\n        }\n        var ev = self.evaluate(compressor);\n        if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n        }\n        return self;\n    });\n\n    OPT(AST_Dot, function(self, compressor){\n        var def = self.resolve_defines(compressor);\n        if (def) {\n            return def.optimize(compressor);\n        }\n        var prop = self.property;\n        if (RESERVED_WORDS(prop) && !compressor.option(\"screw_ie8\")) {\n            return make_node(AST_Sub, self, {\n                expression : self.expression,\n                property   : make_node(AST_String, self, {\n                    value: prop\n                })\n            }).optimize(compressor);\n        }\n        if (compressor.option(\"unsafe_proto\")\n            && self.expression instanceof AST_Dot\n            && self.expression.property == \"prototype\") {\n            var exp = self.expression.expression;\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) switch (exp.name) {\n              case \"Array\":\n                self.expression = make_node(AST_Array, self.expression, {\n                    elements: []\n                });\n                break;\n              case \"Object\":\n                self.expression = make_node(AST_Object, self.expression, {\n                    properties: []\n                });\n                break;\n              case \"String\":\n                self.expression = make_node(AST_String, self.expression, {\n                    value: \"\"\n                });\n                break;\n            }\n        }\n        var ev = self.evaluate(compressor);\n        if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n        }\n        return self;\n    });\n\n    function literals_in_boolean_context(self, compressor) {\n        if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n            return best_of(compressor, self, make_node(AST_Seq, self, {\n                car: self,\n                cdr: make_node(AST_True, self)\n            }).optimize(compressor));\n        }\n        return self;\n    };\n    OPT(AST_Array, literals_in_boolean_context);\n    OPT(AST_Object, literals_in_boolean_context);\n    OPT(AST_RegExp, literals_in_boolean_context);\n\n    OPT(AST_Return, function(self, compressor){\n        if (self.value && is_undefined(self.value, compressor)) {\n            self.value = null;\n        }\n        return self;\n    });\n\n    OPT(AST_VarDef, function(self, compressor){\n        var defines = compressor.option(\"global_defs\");\n        if (defines && HOP(defines, self.name.name)) {\n            compressor.warn('global_defs ' + self.name.name + ' redefined [{file}:{line},{col}]', self.start);\n        }\n        return self;\n    });\n\n})();\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// a small wrapper around fitzgen's source-map library\nfunction SourceMap(options) {\n    options = defaults(options, {\n        file : null,\n        root : null,\n        orig : null,\n\n        orig_line_diff : 0,\n        dest_line_diff : 0,\n    });\n    var generator = new MOZ_SourceMap.SourceMapGenerator({\n        file       : options.file,\n        sourceRoot : options.root\n    });\n    var orig_map = options.orig && new MOZ_SourceMap.SourceMapConsumer(options.orig);\n\n    if (orig_map && Array.isArray(options.orig.sources)) {\n        orig_map._sources.toArray().forEach(function(source) {\n            var sourceContent = orig_map.sourceContentFor(source, true);\n            if (sourceContent) {\n                generator.setSourceContent(source, sourceContent);\n            }\n        });\n    }\n\n    function add(source, gen_line, gen_col, orig_line, orig_col, name) {\n        if (orig_map) {\n            var info = orig_map.originalPositionFor({\n                line: orig_line,\n                column: orig_col\n            });\n            if (info.source === null) {\n                return;\n            }\n            source = info.source;\n            orig_line = info.line;\n            orig_col = info.column;\n            name = info.name || name;\n        }\n        generator.addMapping({\n            generated : { line: gen_line + options.dest_line_diff, column: gen_col },\n            original  : { line: orig_line + options.orig_line_diff, column: orig_col },\n            source    : source,\n            name      : name\n        });\n    };\n    return {\n        add        : add,\n        get        : function() { return generator },\n        toString   : function() { return JSON.stringify(generator.toJSON()); }\n    };\n};\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n(function(){\n\n    var normalize_directives = function(body) {\n        var in_directive = true;\n\n        for (var i = 0; i < body.length; i++) {\n            if (in_directive && body[i] instanceof AST_Statement && body[i].body instanceof AST_String) {\n                body[i] = new AST_Directive({\n                    start: body[i].start,\n                    end: body[i].end,\n                    value: body[i].body.value\n                });\n            } else if (in_directive && !(body[i] instanceof AST_Statement && body[i].body instanceof AST_String)) {\n                in_directive = false;\n            }\n        }\n\n        return body;\n    };\n\n    var MOZ_TO_ME = {\n        Program: function(M) {\n            return new AST_Toplevel({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: normalize_directives(M.body.map(from_moz))\n            });\n        },\n        FunctionDeclaration: function(M) {\n            return new AST_Defun({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n        FunctionExpression: function(M) {\n            return new AST_Function({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n        ExpressionStatement: function(M) {\n            return new AST_SimpleStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: from_moz(M.expression)\n            });\n        },\n        TryStatement: function(M) {\n            var handlers = M.handlers || [M.handler];\n            if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {\n                throw new Error(\"Multiple catch clauses are not supported.\");\n            }\n            return new AST_Try({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                body     : from_moz(M.block).body,\n                bcatch   : from_moz(handlers[0]),\n                bfinally : M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null\n            });\n        },\n        Property: function(M) {\n            var key = M.key;\n            var args = {\n                start    : my_start_token(key),\n                end      : my_end_token(M.value),\n                key      : key.type == \"Identifier\" ? key.name : key.value,\n                value    : from_moz(M.value)\n            };\n            if (M.kind == \"init\") return new AST_ObjectKeyVal(args);\n            args.key = new AST_SymbolAccessor({\n                name: args.key\n            });\n            args.value = new AST_Accessor(args.value);\n            if (M.kind == \"get\") return new AST_ObjectGetter(args);\n            if (M.kind == \"set\") return new AST_ObjectSetter(args);\n        },\n        ArrayExpression: function(M) {\n            return new AST_Array({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                elements : M.elements.map(function(elem){\n                    return elem === null ? new AST_Hole() : from_moz(elem);\n                })\n            });\n        },\n        ObjectExpression: function(M) {\n            return new AST_Object({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                properties : M.properties.map(function(prop){\n                    prop.type = \"Property\";\n                    return from_moz(prop)\n                })\n            });\n        },\n        SequenceExpression: function(M) {\n            return AST_Seq.from_array(M.expressions.map(from_moz));\n        },\n        MemberExpression: function(M) {\n            return new (M.computed ? AST_Sub : AST_Dot)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                property   : M.computed ? from_moz(M.property) : M.property.name,\n                expression : from_moz(M.object)\n            });\n        },\n        SwitchCase: function(M) {\n            return new (M.test ? AST_Case : AST_Default)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.test),\n                body       : M.consequent.map(from_moz)\n            });\n        },\n        VariableDeclaration: function(M) {\n            return new (M.kind === \"const\" ? AST_Const : AST_Var)({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                definitions : M.declarations.map(from_moz)\n            });\n        },\n        Literal: function(M) {\n            var val = M.value, args = {\n                start  : my_start_token(M),\n                end    : my_end_token(M)\n            };\n            if (val === null) return new AST_Null(args);\n            switch (typeof val) {\n              case \"string\":\n                args.value = val;\n                return new AST_String(args);\n              case \"number\":\n                args.value = val;\n                return new AST_Number(args);\n              case \"boolean\":\n                return new (val ? AST_True : AST_False)(args);\n              default:\n                var rx = M.regex;\n                if (rx && rx.pattern) {\n                    // RegExpLiteral as per ESTree AST spec\n                    args.value = new RegExp(rx.pattern, rx.flags).toString();\n                } else {\n                    // support legacy RegExp\n                    args.value = M.regex && M.raw ? M.raw : val;\n                }\n                return new AST_RegExp(args);\n            }\n        },\n        Identifier: function(M) {\n            var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n            return new (  p.type == \"LabeledStatement\" ? AST_Label\n                        : p.type == \"VariableDeclarator\" && p.id === M ? (p.kind == \"const\" ? AST_SymbolConst : AST_SymbolVar)\n                        : p.type == \"FunctionExpression\" ? (p.id === M ? AST_SymbolLambda : AST_SymbolFunarg)\n                        : p.type == \"FunctionDeclaration\" ? (p.id === M ? AST_SymbolDefun : AST_SymbolFunarg)\n                        : p.type == \"CatchClause\" ? AST_SymbolCatch\n                        : p.type == \"BreakStatement\" || p.type == \"ContinueStatement\" ? AST_LabelRef\n                        : AST_SymbolRef)({\n                            start : my_start_token(M),\n                            end   : my_end_token(M),\n                            name  : M.name\n                        });\n        }\n    };\n\n    MOZ_TO_ME.UpdateExpression =\n    MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {\n        var prefix = \"prefix\" in M ? M.prefix\n            : M.type == \"UnaryExpression\" ? true : false;\n        return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({\n            start      : my_start_token(M),\n            end        : my_end_token(M),\n            operator   : M.operator,\n            expression : from_moz(M.argument)\n        });\n    };\n\n    map(\"EmptyStatement\", AST_EmptyStatement);\n    map(\"BlockStatement\", AST_BlockStatement, \"body@body\");\n    map(\"IfStatement\", AST_If, \"test>condition, consequent>body, alternate>alternative\");\n    map(\"LabeledStatement\", AST_LabeledStatement, \"label>label, body>body\");\n    map(\"BreakStatement\", AST_Break, \"label>label\");\n    map(\"ContinueStatement\", AST_Continue, \"label>label\");\n    map(\"WithStatement\", AST_With, \"object>expression, body>body\");\n    map(\"SwitchStatement\", AST_Switch, \"discriminant>expression, cases@body\");\n    map(\"ReturnStatement\", AST_Return, \"argument>value\");\n    map(\"ThrowStatement\", AST_Throw, \"argument>value\");\n    map(\"WhileStatement\", AST_While, \"test>condition, body>body\");\n    map(\"DoWhileStatement\", AST_Do, \"test>condition, body>body\");\n    map(\"ForStatement\", AST_For, \"init>init, test>condition, update>step, body>body\");\n    map(\"ForInStatement\", AST_ForIn, \"left>init, right>object, body>body\");\n    map(\"DebuggerStatement\", AST_Debugger);\n    map(\"VariableDeclarator\", AST_VarDef, \"id>name, init>value\");\n    map(\"CatchClause\", AST_Catch, \"param>argname, body%body\");\n\n    map(\"ThisExpression\", AST_This);\n    map(\"BinaryExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"LogicalExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"AssignmentExpression\", AST_Assign, \"operator=operator, left>left, right>right\");\n    map(\"ConditionalExpression\", AST_Conditional, \"test>condition, consequent>consequent, alternate>alternative\");\n    map(\"NewExpression\", AST_New, \"callee>expression, arguments@args\");\n    map(\"CallExpression\", AST_Call, \"callee>expression, arguments@args\");\n\n    def_to_moz(AST_Toplevel, function To_Moz_Program(M) {\n        return to_moz_scope(\"Program\", M);\n    });\n\n    def_to_moz(AST_Defun, function To_Moz_FunctionDeclaration(M) {\n        return {\n            type: \"FunctionDeclaration\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            body: to_moz_scope(\"BlockStatement\", M)\n        }\n    });\n\n    def_to_moz(AST_Function, function To_Moz_FunctionExpression(M) {\n        return {\n            type: \"FunctionExpression\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            body: to_moz_scope(\"BlockStatement\", M)\n        }\n    });\n\n    def_to_moz(AST_Directive, function To_Moz_Directive(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: {\n                type: \"Literal\",\n                value: M.value\n            }\n        };\n    });\n\n    def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: to_moz(M.body)\n        };\n    });\n\n    def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {\n        return {\n            type: \"SwitchCase\",\n            test: to_moz(M.expression),\n            consequent: M.body.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Try, function To_Moz_TryStatement(M) {\n        return {\n            type: \"TryStatement\",\n            block: to_moz_block(M),\n            handler: to_moz(M.bcatch),\n            guardedHandlers: [],\n            finalizer: to_moz(M.bfinally)\n        };\n    });\n\n    def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n        return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            guard: null,\n            body: to_moz_block(M)\n        };\n    });\n\n    def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {\n        return {\n            type: \"VariableDeclaration\",\n            kind: M instanceof AST_Const ? \"const\" : \"var\",\n            declarations: M.definitions.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Seq, function To_Moz_SequenceExpression(M) {\n        return {\n            type: \"SequenceExpression\",\n            expressions: M.to_array().map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {\n        var isComputed = M instanceof AST_Sub;\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: isComputed,\n            property: isComputed ? to_moz(M.property) : {type: \"Identifier\", name: M.property}\n        };\n    });\n\n    def_to_moz(AST_Unary, function To_Moz_Unary(M) {\n        return {\n            type: M.operator == \"++\" || M.operator == \"--\" ? \"UpdateExpression\" : \"UnaryExpression\",\n            operator: M.operator,\n            prefix: M instanceof AST_UnaryPrefix,\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n        return {\n            type: M.operator == \"&&\" || M.operator == \"||\" ? \"LogicalExpression\" : \"BinaryExpression\",\n            left: to_moz(M.left),\n            operator: M.operator,\n            right: to_moz(M.right)\n        };\n    });\n\n    def_to_moz(AST_Array, function To_Moz_ArrayExpression(M) {\n        return {\n            type: \"ArrayExpression\",\n            elements: M.elements.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {\n        return {\n            type: \"ObjectExpression\",\n            properties: M.properties.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_ObjectProperty, function To_Moz_Property(M) {\n        var key = {\n            type: \"Literal\",\n            value: M.key instanceof AST_SymbolAccessor ? M.key.name : M.key\n        };\n        var kind;\n        if (M instanceof AST_ObjectKeyVal) {\n            kind = \"init\";\n        } else\n        if (M instanceof AST_ObjectGetter) {\n            kind = \"get\";\n        } else\n        if (M instanceof AST_ObjectSetter) {\n            kind = \"set\";\n        }\n        return {\n            type: \"Property\",\n            kind: kind,\n            key: key,\n            value: to_moz(M.value)\n        };\n    });\n\n    def_to_moz(AST_Symbol, function To_Moz_Identifier(M) {\n        var def = M.definition();\n        return {\n            type: \"Identifier\",\n            name: def ? def.mangled_name || def.name : M.name\n        };\n    });\n\n    def_to_moz(AST_RegExp, function To_Moz_RegExpLiteral(M) {\n        var value = M.value;\n        return {\n            type: \"Literal\",\n            value: value,\n            raw: value.toString(),\n            regex: {\n                pattern: value.source,\n                flags: value.toString().match(/[gimuy]*$/)[0]\n            }\n        };\n    });\n\n    def_to_moz(AST_Constant, function To_Moz_Literal(M) {\n        var value = M.value;\n        if (typeof value === 'number' && (value < 0 || (value === 0 && 1 / value < 0))) {\n            return {\n                type: \"UnaryExpression\",\n                operator: \"-\",\n                prefix: true,\n                argument: {\n                    type: \"Literal\",\n                    value: -value,\n                    raw: M.start.raw\n                }\n            };\n        }\n        return {\n            type: \"Literal\",\n            value: value,\n            raw: M.start.raw\n        };\n    });\n\n    def_to_moz(AST_Atom, function To_Moz_Atom(M) {\n        return {\n            type: \"Identifier\",\n            name: String(M.value)\n        };\n    });\n\n    AST_Boolean.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Null.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Hole.DEFMETHOD(\"to_mozilla_ast\", function To_Moz_ArrayHole() { return null });\n\n    AST_Block.DEFMETHOD(\"to_mozilla_ast\", AST_BlockStatement.prototype.to_mozilla_ast);\n    AST_Lambda.DEFMETHOD(\"to_mozilla_ast\", AST_Function.prototype.to_mozilla_ast);\n\n    /* -----[ tools ]----- */\n\n    function raw_token(moznode) {\n        if (moznode.type == \"Literal\") {\n            return moznode.raw != null ? moznode.raw : moznode.value + \"\";\n        }\n    }\n\n    function my_start_token(moznode) {\n        var loc = moznode.loc, start = loc && loc.start;\n        var range = moznode.range;\n        return new AST_Token({\n            file    : loc && loc.source,\n            line    : start && start.line,\n            col     : start && start.column,\n            pos     : range ? range[0] : moznode.start,\n            endline : start && start.line,\n            endcol  : start && start.column,\n            endpos  : range ? range[0] : moznode.start,\n            raw     : raw_token(moznode),\n        });\n    };\n\n    function my_end_token(moznode) {\n        var loc = moznode.loc, end = loc && loc.end;\n        var range = moznode.range;\n        return new AST_Token({\n            file    : loc && loc.source,\n            line    : end && end.line,\n            col     : end && end.column,\n            pos     : range ? range[1] : moznode.end,\n            endline : end && end.line,\n            endcol  : end && end.column,\n            endpos  : range ? range[1] : moznode.end,\n            raw     : raw_token(moznode),\n        });\n    };\n\n    function map(moztype, mytype, propmap) {\n        var moz_to_me = \"function From_Moz_\" + moztype + \"(M){\\n\";\n        moz_to_me += \"return new U2.\" + mytype.name + \"({\\n\" +\n            \"start: my_start_token(M),\\n\" +\n            \"end: my_end_token(M)\";\n\n        var me_to_moz = \"function To_Moz_\" + moztype + \"(M){\\n\";\n        me_to_moz += \"return {\\n\" +\n            \"type: \" + JSON.stringify(moztype);\n\n        if (propmap) propmap.split(/\\s*,\\s*/).forEach(function(prop){\n            var m = /([a-z0-9$_]+)(=|@|>|%)([a-z0-9$_]+)/i.exec(prop);\n            if (!m) throw new Error(\"Can't understand property map: \" + prop);\n            var moz = m[1], how = m[2], my = m[3];\n            moz_to_me += \",\\n\" + my + \": \";\n            me_to_moz += \",\\n\" + moz + \": \";\n            switch (how) {\n                case \"@\":\n                    moz_to_me += \"M.\" + moz + \".map(from_moz)\";\n                    me_to_moz += \"M.\" +  my + \".map(to_moz)\";\n                    break;\n                case \">\":\n                    moz_to_me += \"from_moz(M.\" + moz + \")\";\n                    me_to_moz += \"to_moz(M.\" + my + \")\";\n                    break;\n                case \"=\":\n                    moz_to_me += \"M.\" + moz;\n                    me_to_moz += \"M.\" + my;\n                    break;\n                case \"%\":\n                    moz_to_me += \"from_moz(M.\" + moz + \").body\";\n                    me_to_moz += \"to_moz_block(M)\";\n                    break;\n                default:\n                    throw new Error(\"Can't understand operator in propmap: \" + prop);\n            }\n        });\n\n        moz_to_me += \"\\n})\\n}\";\n        me_to_moz += \"\\n}\\n}\";\n\n        //moz_to_me = parse(moz_to_me).print_to_string({ beautify: true });\n        //me_to_moz = parse(me_to_moz).print_to_string({ beautify: true });\n        //console.log(moz_to_me);\n\n        moz_to_me = new Function(\"U2\", \"my_start_token\", \"my_end_token\", \"from_moz\", \"return(\" + moz_to_me + \")\")(\n            exports, my_start_token, my_end_token, from_moz\n        );\n        me_to_moz = new Function(\"to_moz\", \"to_moz_block\", \"to_moz_scope\", \"return(\" + me_to_moz + \")\")(\n            to_moz, to_moz_block, to_moz_scope\n        );\n        MOZ_TO_ME[moztype] = moz_to_me;\n        def_to_moz(mytype, me_to_moz);\n    };\n\n    var FROM_MOZ_STACK = null;\n\n    function from_moz(node) {\n        FROM_MOZ_STACK.push(node);\n        var ret = node != null ? MOZ_TO_ME[node.type](node) : null;\n        FROM_MOZ_STACK.pop();\n        return ret;\n    };\n\n    AST_Node.from_mozilla_ast = function(node){\n        var save_stack = FROM_MOZ_STACK;\n        FROM_MOZ_STACK = [];\n        var ast = from_moz(node);\n        FROM_MOZ_STACK = save_stack;\n        return ast;\n    };\n\n    function set_moz_loc(mynode, moznode, myparent) {\n        var start = mynode.start;\n        var end = mynode.end;\n        if (start.pos != null && end.endpos != null) {\n            moznode.range = [start.pos, end.endpos];\n        }\n        if (start.line) {\n            moznode.loc = {\n                start: {line: start.line, column: start.col},\n                end: end.endline ? {line: end.endline, column: end.endcol} : null\n            };\n            if (start.file) {\n                moznode.loc.source = start.file;\n            }\n        }\n        return moznode;\n    };\n\n    function def_to_moz(mytype, handler) {\n        mytype.DEFMETHOD(\"to_mozilla_ast\", function() {\n            return set_moz_loc(this, handler(this));\n        });\n    };\n\n    function to_moz(node) {\n        return node != null ? node.to_mozilla_ast() : null;\n    };\n\n    function to_moz_block(node) {\n        return {\n            type: \"BlockStatement\",\n            body: node.body.map(to_moz)\n        };\n    };\n\n    function to_moz_scope(type, node) {\n        var body = node.body.map(to_moz);\n        if (node.body[0] instanceof AST_SimpleStatement && node.body[0].body instanceof AST_String) {\n            body.unshift(to_moz(new AST_EmptyStatement(node.body[0])));\n        }\n        return {\n            type: type,\n            body: body\n        };\n    };\n})();\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction find_builtins() {\n    // NaN will be included due to Number.NaN\n    var a = [\n        \"null\",\n        \"true\",\n        \"false\",\n        \"Infinity\",\n        \"-Infinity\",\n        \"undefined\",\n    ];\n    [ Object, Array, Function, Number,\n      String, Boolean, Error, Math,\n      Date, RegExp\n    ].forEach(function(ctor){\n        Object.getOwnPropertyNames(ctor).map(add);\n        if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n        }\n    });\n    function add(name) {\n        push_uniq(a, name);\n    }\n    return a;\n}\n\nfunction mangle_properties(ast, options) {\n    options = defaults(options, {\n        cache: null,\n        debug: false,\n        ignore_quoted: false,\n        only_cache: false,\n        regex: null,\n        reserved: null,\n    });\n\n    var reserved = options.reserved;\n    if (reserved == null)\n        reserved = find_builtins();\n\n    var cache = options.cache;\n    if (cache == null) {\n        cache = {\n            cname: -1,\n            props: new Dictionary()\n        };\n    }\n\n    var regex = options.regex;\n    var ignore_quoted = options.ignore_quoted;\n\n    // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n    // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n    // the same as passing an empty string.\n    var debug = (options.debug !== false);\n    var debug_name_suffix;\n    if (debug) {\n        debug_name_suffix = (options.debug === true ? \"\" : options.debug);\n    }\n\n    var names_to_mangle = [];\n    var unmangleable = [];\n    var ignored = {};\n\n    // step 1: find candidates to mangle\n    ast.walk(new TreeWalker(function(node){\n        if (node instanceof AST_ObjectKeyVal) {\n            add(node.key, ignore_quoted && node.quote);\n        }\n        else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            add(node.key.name);\n        }\n        else if (node instanceof AST_Dot) {\n            add(node.property);\n        }\n        else if (node instanceof AST_Sub) {\n            addStrings(node.property, ignore_quoted);\n        }\n    }));\n\n    // step 2: transform the tree, renaming properties\n    return ast.transform(new TreeTransformer(function(node){\n        if (node instanceof AST_ObjectKeyVal) {\n            if (!(ignore_quoted && node.quote))\n                node.key = mangle(node.key);\n        }\n        else if (node instanceof AST_ObjectProperty) {\n            // setter or getter\n            node.key.name = mangle(node.key.name);\n        }\n        else if (node instanceof AST_Dot) {\n            node.property = mangle(node.property);\n        }\n        else if (node instanceof AST_Sub) {\n            if (!ignore_quoted)\n                node.property = mangleStrings(node.property);\n        }\n        // else if (node instanceof AST_String) {\n        //     if (should_mangle(node.value)) {\n        //         AST_Node.warn(\n        //             \"Found \\\"{prop}\\\" property candidate for mangling in an arbitrary string [{file}:{line},{col}]\", {\n        //                 file : node.start.file,\n        //                 line : node.start.line,\n        //                 col  : node.start.col,\n        //                 prop : node.value\n        //             }\n        //         );\n        //     }\n        // }\n    }));\n\n    // only function declarations after this line\n\n    function can_mangle(name) {\n        if (unmangleable.indexOf(name) >= 0) return false;\n        if (reserved.indexOf(name) >= 0) return false;\n        if (options.only_cache) {\n            return cache.props.has(name);\n        }\n        if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n        return true;\n    }\n\n    function should_mangle(name) {\n        if (ignore_quoted && name in ignored) return false;\n        if (regex && !regex.test(name)) return false;\n        if (reserved.indexOf(name) >= 0) return false;\n        return cache.props.has(name)\n            || names_to_mangle.indexOf(name) >= 0;\n    }\n\n    function add(name, ignore) {\n        if (ignore) {\n            ignored[name] = true;\n            return;\n        }\n\n        if (can_mangle(name))\n            push_uniq(names_to_mangle, name);\n\n        if (!should_mangle(name)) {\n            push_uniq(unmangleable, name);\n        }\n    }\n\n    function mangle(name) {\n        if (!should_mangle(name)) {\n            return name;\n        }\n\n        var mangled = cache.props.get(name);\n        if (!mangled) {\n            if (debug) {\n                // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n                var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n                if (can_mangle(debug_mangled) && !(ignore_quoted && debug_mangled in ignored)) {\n                    mangled = debug_mangled;\n                }\n            }\n\n            // either debug mode is off, or it is on and we could not use the mangled name\n            if (!mangled) {\n                // note can_mangle() does not check if the name collides with the 'ignored' set\n                // (filled with quoted properties when ignore_quoted set). Make sure we add this\n                // check so we don't collide with a quoted name.\n                do {\n                    mangled = base54(++cache.cname);\n                } while (!can_mangle(mangled) || (ignore_quoted && mangled in ignored));\n            }\n\n            cache.props.set(name, mangled);\n        }\n        return mangled;\n    }\n\n    function addStrings(node, ignore) {\n        var out = {};\n        try {\n            (function walk(node){\n                node.walk(new TreeWalker(function(node){\n                    if (node instanceof AST_Seq) {\n                        walk(node.cdr);\n                        return true;\n                    }\n                    if (node instanceof AST_String) {\n                        add(node.value, ignore);\n                        return true;\n                    }\n                    if (node instanceof AST_Conditional) {\n                        walk(node.consequent);\n                        walk(node.alternative);\n                        return true;\n                    }\n                    throw out;\n                }));\n            })(node);\n        } catch(ex) {\n            if (ex !== out) throw ex;\n        }\n    }\n\n    function mangleStrings(node) {\n        return node.transform(new TreeTransformer(function(node){\n            if (node instanceof AST_Seq) {\n                node.cdr = mangleStrings(node.cdr);\n            }\n            else if (node instanceof AST_String) {\n                node.value = mangle(node.value);\n            }\n            else if (node instanceof AST_Conditional) {\n                node.consequent = mangleStrings(node.consequent);\n                node.alternative = mangleStrings(node.alternative);\n            }\n            return node;\n        }));\n    }\n\n}\n\nexports[\"Compressor\"] = Compressor;\nexports[\"DefaultsError\"] = DefaultsError;\nexports[\"Dictionary\"] = Dictionary;\nexports[\"JS_Parse_Error\"] = JS_Parse_Error;\nexports[\"MAP\"] = MAP;\nexports[\"OutputStream\"] = OutputStream;\nexports[\"SourceMap\"] = SourceMap;\nexports[\"TreeTransformer\"] = TreeTransformer;\nexports[\"TreeWalker\"] = TreeWalker;\nexports[\"base54\"] = base54;\nexports[\"defaults\"] = defaults;\nexports[\"mangle_properties\"] = mangle_properties;\nexports[\"merge\"] = merge;\nexports[\"parse\"] = parse;\nexports[\"push_uniq\"] = push_uniq;\nexports[\"string_template\"] = string_template;\nexports[\"tokenizer\"] = tokenizer;\nexports[\"is_identifier\"] = is_identifier;\nexports[\"SymbolDef\"] = SymbolDef;\n\nAST_Node.warn_function = function(txt) { logger.error(\"uglifyjs WARN: \" + txt); };\n\nexports.AST_Node.warn_function = function(txt) {\n    console.error(\"WARN: %s\", txt);\n};\n\nfunction read_source_map(code) {\n    var match = /\\n\\/\\/# sourceMappingURL=data:application\\/json(;.*?)?;base64,(.*)/.exec(code);\n    if (!match) {\n        exports.AST_Node.warn(\"inline source map not found\");\n        return null;\n    }\n    return JSON.parse(new Buffer(match[2], \"base64\"));\n}\n\nexports.minify = function(files, options, name) {\n    options = exports.defaults(options, {\n        compress         : {},\n        fromString       : false,\n        inSourceMap      : null,\n        mangle           : {},\n        mangleProperties : false,\n        nameCache        : null,\n        outFileName      : null,\n        output           : null,\n        outSourceMap     : null,\n        parse            : {},\n        sourceMapInline  : false,\n        sourceMapUrl     : null,\n        sourceRoot       : null,\n        spidermonkey     : false,\n        warnings         : false,\n    });\n    exports.base54.reset();\n\n    var inMap = options.inSourceMap;\n    if (typeof inMap == \"string\" && inMap != \"inline\") {\n        inMap = JSON.parse(rjsFile.readFile(inMap, \"utf8\"));\n    }\n\n    // 1. parse\n    var toplevel = null,\n        sourcesContent = {};\n\n    if (options.spidermonkey) {\n        if (inMap == \"inline\") {\n            throw new Error(\"inline source map only works with built-in parser\");\n        }\n        toplevel = exports.AST_Node.from_mozilla_ast(files);\n    } else {\n        var addFile = function(file, fileUrl) {\n            var code = options.fromString\n                ? file\n                : rjsFile.readFile(file, \"utf8\");\n            if (inMap == \"inline\") {\n                inMap = read_source_map(code);\n            }\n            sourcesContent[fileUrl] = code;\n            toplevel = exports.parse(code, {\n                filename: fileUrl,\n                toplevel: toplevel,\n                bare_returns: options.parse ? options.parse.bare_returns : undefined\n            });\n        }\n        if (!options.fromString) {\n            files = exports.simple_glob(files);\n            if (inMap == \"inline\" && files.length > 1) {\n                throw new Error(\"inline source map only works with singular input\");\n            }\n        }\n        [].concat(files).forEach(function (files, i) {\n            if (typeof files === 'string') {\n                addFile(files, options.fromString ? i : files);\n            } else {\n                for (var fileUrl in files) {\n                    addFile(files[fileUrl], fileUrl);\n                }\n            }\n        });\n    }\n    if (options.wrap) {\n      toplevel = toplevel.wrap_commonjs(options.wrap, options.exportAll);\n    }\n\n    // 2. compress\n    if (options.compress) {\n        var compress = { warnings: options.warnings };\n        exports.merge(compress, options.compress);\n        toplevel.figure_out_scope(options.mangle);\n        var sq = exports.Compressor(compress);\n        toplevel = sq.compress(toplevel);\n    }\n\n    // 3. mangle properties\n    if (options.mangleProperties || options.nameCache) {\n        options.mangleProperties.cache = exports.readNameCache(options.nameCache, \"props\");\n        toplevel = exports.mangle_properties(toplevel, options.mangleProperties);\n        exports.writeNameCache(options.nameCache, \"props\", options.mangleProperties.cache);\n    }\n\n    // 4. mangle\n    if (options.mangle) {\n        toplevel.figure_out_scope(options.mangle);\n        toplevel.compute_char_frequency(options.mangle);\n        toplevel.mangle_names(options.mangle);\n    }\n\n    // 5. output\n    var output = { max_line_len: 32000 };\n    if (options.outSourceMap || options.sourceMapInline) {\n        output.source_map = exports.SourceMap({\n            // prefer outFileName, otherwise use outSourceMap without .map suffix\n            file: options.outFileName || (typeof options.outSourceMap === 'string' ? options.outSourceMap.replace(/\\.map$/i, '') : null),\n            orig: inMap,\n            root: options.sourceRoot\n        });\n        if (options.sourceMapIncludeSources) {\n            for (var file in sourcesContent) {\n                if (sourcesContent.hasOwnProperty(file)) {\n                    output.source_map.get().setSourceContent(file, sourcesContent[file]);\n                }\n            }\n        }\n\n    }\n    if (options.output) {\n        exports.merge(output, options.output);\n    }\n    var stream = exports.OutputStream(output);\n    toplevel.print(stream);\n\n\n    var source_map = output.source_map;\n    if (source_map) {\n        source_map = source_map + \"\";\n    }\n\n    var mappingUrlPrefix = \"\\n//# sourceMappingURL=\";\n    if (options.sourceMapInline) {\n        stream += mappingUrlPrefix + \"data:application/json;charset=utf-8;base64,\" + new Buffer(source_map).toString(\"base64\");\n    } else if (options.outSourceMap && typeof options.outSourceMap === \"string\" && options.sourceMapUrl !== false) {\n        stream += mappingUrlPrefix + (typeof options.sourceMapUrl === \"string\" ? options.sourceMapUrl : options.outSourceMap);\n    }\n\n    return {\n        code : stream + \"\",\n        map  : source_map\n    };\n};\n\n// exports.describe_ast = function() {\n//     function doitem(ctor) {\n//         var sub = {};\n//         ctor.SUBCLASSES.forEach(function(ctor){\n//             sub[ctor.TYPE] = doitem(ctor);\n//         });\n//         var ret = {};\n//         if (ctor.SELF_PROPS.length > 0) ret.props = ctor.SELF_PROPS;\n//         if (ctor.SUBCLASSES.length > 0) ret.sub = sub;\n//         return ret;\n//     }\n//     return doitem(exports.AST_Node).sub;\n// }\n\nexports.describe_ast = function() {\n    var out = exports.OutputStream({ beautify: true });\n    function doitem(ctor) {\n        out.print(\"AST_\" + ctor.TYPE);\n        var props = ctor.SELF_PROPS.filter(function(prop){\n            return !/^\\$/.test(prop);\n        });\n        if (props.length > 0) {\n            out.space();\n            out.with_parens(function(){\n                props.forEach(function(prop, i){\n                    if (i) out.space();\n                    out.print(prop);\n                });\n            });\n        }\n        if (ctor.documentation) {\n            out.space();\n            out.print_string(ctor.documentation);\n        }\n        if (ctor.SUBCLASSES.length > 0) {\n            out.space();\n            out.with_block(function(){\n                ctor.SUBCLASSES.forEach(function(ctor, i){\n                    out.indent();\n                    doitem(ctor);\n                    out.newline();\n                });\n            });\n        }\n    };\n    doitem(exports.AST_Node);\n    return out + \"\";\n};\n\nfunction readReservedFile(filename, reserved) {\n    if (!reserved) {\n        reserved = { vars: [], props: [] };\n    }\n    var data = rjsFile.readFile(filename, \"utf8\");\n    data = JSON.parse(data);\n    if (data.vars) {\n        data.vars.forEach(function(name){\n            exports.push_uniq(reserved.vars, name);\n        });\n    }\n    if (data.props) {\n        data.props.forEach(function(name){\n            exports.push_uniq(reserved.props, name);\n        });\n    }\n    return reserved;\n}\n\nexports.readReservedFile = readReservedFile;\n\nexports.readDefaultReservedFile = function(reserved) {\n    return readReservedFile(require.resolve(\"./domprops.json\"), reserved);\n};\n\nexports.readNameCache = function(filename, key) {\n    var cache = null;\n    if (filename) {\n        try {\n            var cache = rjsFile.readFile(filename, \"utf8\");\n            cache = JSON.parse(cache)[key];\n            if (!cache) throw \"init\";\n            cache.props = exports.Dictionary.fromObject(cache.props);\n        } catch(ex) {\n            cache = {\n                cname: -1,\n                props: new exports.Dictionary()\n            };\n        }\n    }\n    return cache;\n};\n\nexports.writeNameCache = function(filename, key, cache) {\n    if (filename) {\n        var data;\n        try {\n            data = rjsFile.readFile(filename, \"utf8\");\n            data = JSON.parse(data);\n        } catch(ex) {\n            data = {};\n        }\n        data[key] = {\n            cname: cache.cname,\n            props: cache.props.toObject()\n        };\n        rjsFile.writeFile(filename, JSON.stringify(data, null, 2), \"utf8\");\n    }\n};\n\n// A file glob function that only supports \"*\" and \"?\" wildcards in the basename.\n// Example: \"foo/bar/*baz??.*.js\"\n// Argument `glob` may be a string or an array of strings.\n// Returns an array of strings. Garbage in, garbage out.\nexports.simple_glob = function simple_glob(glob) {\n    if (Array.isArray(glob)) {\n        return [].concat.apply([], glob.map(simple_glob));\n    }\n    if (glob.match(/\\*|\\?/)) {\n        var dir = path.dirname(glob);\n        try {\n            var entries = fs.readdirSync(dir);\n        } catch (ex) {}\n        if (entries) {\n            var pattern = \"^\" + path.basename(glob)\n                .replace(/[.+^$[\\]\\\\(){}]/g, \"\\\\$&\")\n                .replace(/\\*/g, \"[^/\\\\\\\\]*\")\n                .replace(/\\?/g, \"[^/\\\\\\\\]\") + \"$\";\n            var mod = process.platform === \"win32\" ? \"i\" : \"\";\n            var rx = new RegExp(pattern, mod);\n            var results = entries.filter(function(name) {\n                return rx.test(name);\n            }).map(function(name) {\n                return path.join(dir, name);\n            });\n            if (results.length) return results;\n        }\n    }\n    return [ glob ];\n};\n\n\n});\n/*jslint plusplus: true */\n/*global define: false */\n\ndefine('parse', ['./esprimaAdapter', 'lang'], function (esprima, lang) {\n    'use strict';\n\n    function arrayToString(ary) {\n        var output = '[';\n        if (ary) {\n            ary.forEach(function (item, i) {\n                output += (i > 0 ? ',' : '') + '\"' + lang.jsEscape(item) + '\"';\n            });\n        }\n        output += ']';\n\n        return output;\n    }\n\n    //This string is saved off because JSLint complains\n    //about obj.arguments use, as 'reserved word'\n    var argPropName = 'arguments',\n        //Default object to use for \"scope\" checking for UMD identifiers.\n        emptyScope = {},\n        mixin = lang.mixin,\n        hasProp = lang.hasProp;\n\n    //From an esprima example for traversing its ast.\n    function traverse(object, visitor) {\n        var child;\n\n        if (!object) {\n            return;\n        }\n\n        if (visitor.call(null, object) === false) {\n            return false;\n        }\n        for (var i = 0, keys = Object.keys(object); i < keys.length; i++) {\n            child = object[keys[i]];\n            if (typeof child === 'object' && child !== null) {\n                if (traverse(child, visitor) === false) {\n                    return false;\n                }\n            }\n        }\n    }\n\n    //Like traverse, but visitor returning false just\n    //stops that subtree analysis, not the rest of tree\n    //visiting.\n    function traverseBroad(object, visitor) {\n        var child;\n\n        if (!object) {\n            return;\n        }\n\n        if (visitor.call(null, object) === false) {\n            return false;\n        }\n        for (var i = 0, keys = Object.keys(object); i < keys.length; i++) {\n            child = object[key];\n            if (typeof child === 'object' && child !== null) {\n                traverseBroad(child, visitor);\n            }\n        }\n    }\n\n    /**\n     * Pulls out dependencies from an array literal with just string members.\n     * If string literals, will just return those string values in an array,\n     * skipping other items in the array.\n     *\n     * @param {Node} node an AST node.\n     *\n     * @returns {Array} an array of strings.\n     * If null is returned, then it means the input node was not a valid\n     * dependency.\n     */\n    function getValidDeps(node) {\n        if (!node || node.type !== 'ArrayExpression' || !node.elements) {\n            return;\n        }\n\n        var deps = [];\n\n        node.elements.some(function (elem) {\n            if (elem.type === 'Literal') {\n                deps.push(elem.value);\n            }\n        });\n\n        return deps.length ? deps : undefined;\n    }\n\n    // Detects regular or arrow function expressions as the desired expression\n    // type.\n    function isFnExpression(node) {\n        return (node && (node.type === 'FunctionExpression' ||\n                             node.type === 'ArrowFunctionExpression'));\n    }\n\n    /**\n     * Main parse function. Returns a string of any valid require or\n     * define/require.def calls as part of one JavaScript source string.\n     * @param {String} moduleName the module name that represents this file.\n     * It is used to create a default define if there is not one already for the\n     * file. This allows properly tracing dependencies for builds. Otherwise, if\n     * the file just has a require() call, the file dependencies will not be\n     * properly reflected: the file will come before its dependencies.\n     * @param {String} moduleName\n     * @param {String} fileName\n     * @param {String} fileContents\n     * @param {Object} options optional options. insertNeedsDefine: true will\n     * add calls to require.needsDefine() if appropriate.\n     * @returns {String} JS source string or null, if no require or\n     * define/require.def calls are found.\n     */\n    function parse(moduleName, fileName, fileContents, options) {\n        options = options || {};\n\n        //Set up source input\n        var i, moduleCall, depString,\n            moduleDeps = [],\n            result = '',\n            moduleList = [],\n            needsDefine = true,\n            astRoot = esprima.parse(fileContents);\n\n        parse.recurse(astRoot, function (callName, config, name, deps, node, factoryIdentifier, fnExpScope) {\n            if (!deps) {\n                deps = [];\n            }\n\n            if (callName === 'define' && (!name || name === moduleName)) {\n                needsDefine = false;\n            }\n\n            if (!name) {\n                //If there is no module name, the dependencies are for\n                //this file/default module name.\n                moduleDeps = moduleDeps.concat(deps);\n            } else {\n                moduleList.push({\n                    name: name,\n                    deps: deps\n                });\n            }\n\n            if (callName === 'define' && factoryIdentifier && hasProp(fnExpScope, factoryIdentifier)) {\n                return factoryIdentifier;\n            }\n\n            //If define was found, no need to dive deeper, unless\n            //the config explicitly wants to dig deeper.\n            return !!options.findNestedDependencies;\n        }, options);\n\n        if (options.insertNeedsDefine && needsDefine) {\n            result += 'require.needsDefine(\"' + moduleName + '\");';\n        }\n\n        if (moduleDeps.length || moduleList.length) {\n            for (i = 0; i < moduleList.length; i++) {\n                moduleCall = moduleList[i];\n                if (result) {\n                    result += '\\n';\n                }\n\n                //If this is the main module for this file, combine any\n                //\"anonymous\" dependencies (could come from a nested require\n                //call) with this module.\n                if (moduleCall.name === moduleName) {\n                    moduleCall.deps = moduleCall.deps.concat(moduleDeps);\n                    moduleDeps = [];\n                }\n\n                depString = arrayToString(moduleCall.deps);\n                result += 'define(\"' + moduleCall.name + '\",' +\n                          depString + ');';\n            }\n            if (moduleDeps.length) {\n                if (result) {\n                    result += '\\n';\n                }\n                depString = arrayToString(moduleDeps);\n                result += 'define(\"' + moduleName + '\",' + depString + ');';\n            }\n        }\n\n        return result || null;\n    }\n\n    parse.traverse = traverse;\n    parse.traverseBroad = traverseBroad;\n    parse.isFnExpression = isFnExpression;\n\n    /**\n     * Handles parsing a file recursively for require calls.\n     * @param {Array} parentNode the AST node to start with.\n     * @param {Function} onMatch function to call on a parse match.\n     * @param {Object} [options] This is normally the build config options if\n     * it is passed.\n     * @param {Object} [fnExpScope] holds list of function expresssion\n     * argument identifiers, set up internally, not passed in\n     */\n    parse.recurse = function (object, onMatch, options, fnExpScope) {\n        //Like traverse, but skips if branches that would not be processed\n        //after has application that results in tests of true or false boolean\n        //literal values.\n        var keys, child, result, i, params, param, tempObject,\n            hasHas = options && options.has;\n\n        fnExpScope = fnExpScope || emptyScope;\n\n        if (!object) {\n            return;\n        }\n\n        //If has replacement has resulted in if(true){} or if(false){}, take\n        //the appropriate branch and skip the other one.\n        if (hasHas && object.type === 'IfStatement' && object.test.type &&\n                object.test.type === 'Literal') {\n            if (object.test.value) {\n                //Take the if branch\n                this.recurse(object.consequent, onMatch, options, fnExpScope);\n            } else {\n                //Take the else branch\n                this.recurse(object.alternate, onMatch, options, fnExpScope);\n            }\n        } else {\n            result = this.parseNode(object, onMatch, fnExpScope);\n            if (result === false) {\n                return;\n            } else if (typeof result === 'string') {\n                return result;\n            }\n\n            //Build up a \"scope\" object that informs nested recurse calls if\n            //the define call references an identifier that is likely a UMD\n            //wrapped function expression argument.\n            //Catch (function(a) {... wrappers\n            if (object.type === 'ExpressionStatement' && object.expression &&\n                    object.expression.type === 'CallExpression' && object.expression.callee &&\n                    isFnExpression(object.expression.callee)) {\n                tempObject = object.expression.callee;\n            }\n            // Catch !function(a) {... wrappers\n            if (object.type === 'UnaryExpression' && object.argument &&\n                object.argument.type === 'CallExpression' && object.argument.callee &&\n                isFnExpression(object.argument.callee)) {\n                tempObject = object.argument.callee;\n            }\n            if (tempObject && tempObject.params && tempObject.params.length) {\n                params = tempObject.params;\n                fnExpScope = mixin({}, fnExpScope, true);\n                for (i = 0; i < params.length; i++) {\n                    param = params[i];\n                    if (param.type === 'Identifier') {\n                        fnExpScope[param.name] = true;\n                    }\n                }\n            }\n\n            for (i = 0, keys = Object.keys(object); i < keys.length; i++) {\n                child = object[keys[i]];\n                if (typeof child === 'object' && child !== null) {\n                    result = this.recurse(child, onMatch, options, fnExpScope);\n                    if (typeof result === 'string' && hasProp(fnExpScope, result)) {\n                        //The result was still in fnExpScope so break. Otherwise,\n                        //was a return from a a tree that had a UMD definition,\n                        //but now out of that scope so keep siblings.\n                        break;\n                    }\n                }\n            }\n\n            //Check for an identifier for a factory function identifier being\n            //passed in as a function expression, indicating a UMD-type of\n            //wrapping.\n            if (typeof result === 'string') {\n                if (hasProp(fnExpScope, result)) {\n                    //result still in scope, keep jumping out indicating the\n                    //identifier still in use.\n                    return result;\n                }\n\n                return;\n            }\n        }\n    };\n\n    /**\n     * Determines if the file defines the require/define module API.\n     * Specifically, it looks for the `define.amd = ` expression.\n     * @param {String} fileName\n     * @param {String} fileContents\n     * @returns {Boolean}\n     */\n    parse.definesRequire = function (fileName, fileContents) {\n        var foundDefine = false,\n            foundDefineAmd = false;\n\n        traverse(esprima.parse(fileContents), function (node) {\n            // Look for a top level declaration of a define, like\n            // var requirejs, require, define, off Program body.\n            if (node.type === 'Program' && node.body && node.body.length) {\n                foundDefine = node.body.some(function(bodyNode) {\n                    // var define\n                    if (bodyNode.type === 'VariableDeclaration') {\n                        var decls = bodyNode.declarations;\n                        if (decls) {\n                            var hasVarDefine = decls.some(function(declNode) {\n                                return (declNode.type === 'VariableDeclarator' &&\n                                        declNode.id &&\n                                        declNode.id.type === 'Identifier' &&\n                                        declNode.id.name === 'define');\n                            });\n                            if (hasVarDefine) {\n                                return true;\n                            }\n                        }\n                    }\n\n                    // function define() {}\n                    if (bodyNode.type === 'FunctionDeclaration' &&\n                        bodyNode.id &&\n                        bodyNode.id.type === 'Identifier' &&\n                        bodyNode.id.name === 'define') {\n                        return true;\n                    }\n\n\n\n\n\n\n                });\n            }\n\n            // Need define variable found first, before detecting define.amd.\n            if (foundDefine && parse.hasDefineAmd(node)) {\n                foundDefineAmd = true;\n\n                //Stop traversal\n                return false;\n            }\n        });\n\n        return foundDefine && foundDefineAmd;\n    };\n\n    /**\n     * Finds require(\"\") calls inside a CommonJS anonymous module wrapped in a\n     * define(function(require, exports, module){}) wrapper. These dependencies\n     * will be added to a modified define() call that lists the dependencies\n     * on the outside of the function.\n     * @param {String} fileName\n     * @param {String|Object} fileContents: a string of contents, or an already\n     * parsed AST tree.\n     * @returns {Array} an array of module names that are dependencies. Always\n     * returns an array, but could be of length zero.\n     */\n    parse.getAnonDeps = function (fileName, fileContents) {\n        var astRoot = typeof fileContents === 'string' ?\n                      esprima.parse(fileContents) : fileContents,\n            defFunc = this.findAnonDefineFactory(astRoot);\n\n        return parse.getAnonDepsFromNode(defFunc);\n    };\n\n    /**\n     * Finds require(\"\") calls inside a CommonJS anonymous module wrapped\n     * in a define function, given an AST node for the definition function.\n     * @param {Node} node the AST node for the definition function.\n     * @returns {Array} and array of dependency names. Can be of zero length.\n     */\n    parse.getAnonDepsFromNode = function (node) {\n        var deps = [],\n            funcArgLength;\n\n        if (node) {\n            this.findRequireDepNames(node, deps);\n\n            //If no deps, still add the standard CommonJS require, exports,\n            //module, in that order, to the deps, but only if specified as\n            //function args. In particular, if exports is used, it is favored\n            //over the return value of the function, so only add it if asked.\n            funcArgLength = node.params && node.params.length;\n            if (funcArgLength) {\n                deps = (funcArgLength > 1 ? [\"require\", \"exports\", \"module\"] :\n                        [\"require\"]).concat(deps);\n            }\n        }\n        return deps;\n    };\n\n    parse.isDefineNodeWithArgs = function (node) {\n        return node && node.type === 'CallExpression' &&\n               node.callee && node.callee.type === 'Identifier' &&\n               node.callee.name === 'define' && node[argPropName];\n    };\n\n    /**\n     * Finds the function in define(function (require, exports, module){});\n     * @param {Array} node\n     * @returns {Boolean}\n     */\n    parse.findAnonDefineFactory = function (node) {\n        var match;\n\n        traverse(node, function (node) {\n            var arg0, arg1;\n\n            if (parse.isDefineNodeWithArgs(node)) {\n\n                //Just the factory function passed to define\n                arg0 = node[argPropName][0];\n                if (isFnExpression(arg0)) {\n                    match = arg0;\n                    return false;\n                }\n\n                //A string literal module ID followed by the factory function.\n                arg1 = node[argPropName][1];\n                if (arg0.type === 'Literal' && isFnExpression(arg1)) {\n                    match = arg1;\n                    return false;\n                }\n            }\n        });\n\n        return match;\n    };\n\n    /**\n     * Finds any config that is passed to requirejs. That includes calls to\n     * require/requirejs.config(), as well as require({}, ...) and\n     * requirejs({}, ...)\n     * @param {String} fileContents\n     *\n     * @returns {Object} a config details object with the following properties:\n     * - config: {Object} the config object found. Can be undefined if no\n     * config found.\n     * - range: {Array} the start index and end index in the contents where\n     * the config was found. Can be undefined if no config found.\n     * Can throw an error if the config in the file cannot be evaluated in\n     * a build context to valid JavaScript.\n     */\n    parse.findConfig = function (fileContents) {\n        /*jslint evil: true */\n        var jsConfig, foundConfig, stringData, foundRange, quote, quoteMatch,\n            quoteRegExp = /(:\\s|\\[\\s*)(['\"])/,\n            astRoot = esprima.parse(fileContents, {\n                loc: true\n            });\n\n        traverse(astRoot, function (node) {\n            var arg,\n                requireType = parse.hasRequire(node);\n\n            if (requireType && (requireType === 'require' ||\n                    requireType === 'requirejs' ||\n                    requireType === 'requireConfig' ||\n                    requireType === 'requirejsConfig')) {\n\n                arg = node[argPropName] && node[argPropName][0];\n\n                if (arg && arg.type === 'ObjectExpression') {\n                    stringData = parse.nodeToString(fileContents, arg);\n                    jsConfig = stringData.value;\n                    foundRange = stringData.range;\n                    return false;\n                }\n            } else {\n                arg = parse.getRequireObjectLiteral(node);\n                if (arg) {\n                    stringData = parse.nodeToString(fileContents, arg);\n                    jsConfig = stringData.value;\n                    foundRange = stringData.range;\n                    return false;\n                }\n            }\n        });\n\n        if (jsConfig) {\n            // Eval the config\n            quoteMatch = quoteRegExp.exec(jsConfig);\n            quote = (quoteMatch && quoteMatch[2]) || '\"';\n            foundConfig = eval('(' + jsConfig + ')');\n        }\n\n        return {\n            config: foundConfig,\n            range: foundRange,\n            quote: quote\n        };\n    };\n\n    /** Returns the node for the object literal assigned to require/requirejs,\n     * for holding a declarative config.\n     */\n    parse.getRequireObjectLiteral = function (node) {\n        if (node.id && node.id.type === 'Identifier' &&\n                (node.id.name === 'require' || node.id.name === 'requirejs') &&\n                node.init && node.init.type === 'ObjectExpression') {\n            return node.init;\n        }\n    };\n\n    /**\n     * Renames require/requirejs/define calls to be ns + '.' + require/requirejs/define\n     * Does *not* do .config calls though. See pragma.namespace for the complete\n     * set of namespace transforms. This function is used because require calls\n     * inside a define() call should not be renamed, so a simple regexp is not\n     * good enough.\n     * @param  {String} fileContents the contents to transform.\n     * @param  {String} ns the namespace, *not* including trailing dot.\n     * @return {String} the fileContents with the namespace applied\n     */\n    parse.renameNamespace = function (fileContents, ns) {\n        var lines,\n            locs = [],\n            astRoot = esprima.parse(fileContents, {\n                loc: true\n            });\n\n        parse.recurse(astRoot, function (callName, config, name, deps, node) {\n            locs.push(node.loc);\n            //Do not recurse into define functions, they should be using\n            //local defines.\n            return callName !== 'define';\n        }, {});\n\n        if (locs.length) {\n            lines = fileContents.split('\\n');\n\n            //Go backwards through the found locs, adding in the namespace name\n            //in front.\n            locs.reverse();\n            locs.forEach(function (loc) {\n                var startIndex = loc.start.column,\n                //start.line is 1-based, not 0 based.\n                lineIndex = loc.start.line - 1,\n                line = lines[lineIndex];\n\n                lines[lineIndex] = line.substring(0, startIndex) +\n                                   ns + '.' +\n                                   line.substring(startIndex,\n                                                      line.length);\n            });\n\n            fileContents = lines.join('\\n');\n        }\n\n        return fileContents;\n    };\n\n    /**\n     * Finds all dependencies specified in dependency arrays and inside\n     * simplified commonjs wrappers.\n     * @param {String} fileName\n     * @param {String} fileContents\n     *\n     * @returns {Array} an array of dependency strings. The dependencies\n     * have not been normalized, they may be relative IDs.\n     */\n    parse.findDependencies = function (fileName, fileContents, options) {\n        var dependencies = [],\n            astRoot = esprima.parse(fileContents);\n\n        parse.recurse(astRoot, function (callName, config, name, deps) {\n            if (deps) {\n                dependencies = dependencies.concat(deps);\n            }\n        }, options);\n\n        return dependencies;\n    };\n\n    /**\n     * Finds only CJS dependencies, ones that are the form\n     * require('stringLiteral')\n     */\n    parse.findCjsDependencies = function (fileName, fileContents) {\n        var dependencies = [];\n\n        traverse(esprima.parse(fileContents), function (node) {\n            var arg;\n\n            if (node && node.type === 'CallExpression' && node.callee &&\n                    node.callee.type === 'Identifier' &&\n                    node.callee.name === 'require' && node[argPropName] &&\n                    node[argPropName].length === 1) {\n                arg = node[argPropName][0];\n                if (arg.type === 'Literal') {\n                    dependencies.push(arg.value);\n                }\n            }\n        });\n\n        return dependencies;\n    };\n\n    //function define() {}\n    parse.hasDefDefine = function (node) {\n        return node.type === 'FunctionDeclaration' && node.id &&\n                    node.id.type === 'Identifier' && node.id.name === 'define';\n    };\n\n    //define.amd = ...\n    parse.hasDefineAmd = function (node) {\n        return node && node.type === 'AssignmentExpression' &&\n            node.left && node.left.type === 'MemberExpression' &&\n            node.left.object && node.left.object.name === 'define' &&\n            node.left.property && node.left.property.name === 'amd';\n    };\n\n    //define.amd reference, as in: if (define.amd)\n    parse.refsDefineAmd = function (node) {\n        return node && node.type === 'MemberExpression' &&\n        node.object && node.object.name === 'define' &&\n        node.object.type === 'Identifier' &&\n        node.property && node.property.name === 'amd' &&\n        node.property.type === 'Identifier';\n    };\n\n    //require(), requirejs(), require.config() and requirejs.config()\n    parse.hasRequire = function (node) {\n        var callName,\n            c = node && node.callee;\n\n        if (node && node.type === 'CallExpression' && c) {\n            if (c.type === 'Identifier' &&\n                    (c.name === 'require' ||\n                    c.name === 'requirejs')) {\n                //A require/requirejs({}, ...) call\n                callName = c.name;\n            } else if (c.type === 'MemberExpression' &&\n                    c.object &&\n                    c.object.type === 'Identifier' &&\n                    (c.object.name === 'require' ||\n                        c.object.name === 'requirejs') &&\n                    c.property && c.property.name === 'config') {\n                // require/requirejs.config({}) call\n                callName = c.object.name + 'Config';\n            }\n        }\n\n        return callName;\n    };\n\n    //define()\n    parse.hasDefine = function (node) {\n        return node && node.type === 'CallExpression' && node.callee &&\n            node.callee.type === 'Identifier' &&\n            node.callee.name === 'define';\n    };\n\n    /**\n     * If there is a named define in the file, returns the name. Does not\n     * scan for mulitple names, just the first one.\n     */\n    parse.getNamedDefine = function (fileContents) {\n        var name;\n        traverse(esprima.parse(fileContents), function (node) {\n            if (node && node.type === 'CallExpression' && node.callee &&\n            node.callee.type === 'Identifier' &&\n            node.callee.name === 'define' &&\n            node[argPropName] && node[argPropName][0] &&\n            node[argPropName][0].type === 'Literal') {\n                name = node[argPropName][0].value;\n                return false;\n            }\n        });\n\n        return name;\n    };\n\n    /**\n     * Finds all the named define module IDs in a file.\n     */\n    parse.getAllNamedDefines = function (fileContents, excludeMap) {\n        var names = [];\n        parse.recurse(esprima.parse(fileContents),\n        function (callName, config, name, deps, node, factoryIdentifier, fnExpScope) {\n            if (callName === 'define' && name) {\n                if (!excludeMap.hasOwnProperty(name)) {\n                    names.push(name);\n                }\n            }\n\n            //If a UMD definition that points to a factory that is an Identifier,\n            //indicate processing should not traverse inside the UMD definition.\n            if (callName === 'define' && factoryIdentifier && hasProp(fnExpScope, factoryIdentifier)) {\n                return factoryIdentifier;\n            }\n\n            //If define was found, no need to dive deeper, unless\n            //the config explicitly wants to dig deeper.\n            return true;\n        }, {});\n\n        return names;\n    };\n\n    /**\n     * Determines if define(), require({}|[]) or requirejs was called in the\n     * file. Also finds out if define() is declared and if define.amd is called.\n     */\n    parse.usesAmdOrRequireJs = function (fileName, fileContents) {\n        var uses;\n\n        traverse(esprima.parse(fileContents), function (node) {\n            var type, callName, arg;\n\n            if (parse.hasDefDefine(node)) {\n                //function define() {}\n                type = 'declaresDefine';\n            } else if (parse.hasDefineAmd(node)) {\n                type = 'defineAmd';\n            } else {\n                callName = parse.hasRequire(node);\n                if (callName) {\n                    arg = node[argPropName] && node[argPropName][0];\n                    if (arg && (arg.type === 'ObjectExpression' ||\n                            arg.type === 'ArrayExpression')) {\n                        type = callName;\n                    }\n                } else if (parse.hasDefine(node)) {\n                    type = 'define';\n                }\n            }\n\n            if (type) {\n                if (!uses) {\n                    uses = {};\n                }\n                uses[type] = true;\n            }\n        });\n\n        return uses;\n    };\n\n    /**\n     * Determines if require(''), exports.x =, module.exports =,\n     * __dirname, __filename are used. So, not strictly traditional CommonJS,\n     * also checks for Node variants.\n     */\n    parse.usesCommonJs = function (fileName, fileContents) {\n        var uses = null,\n            assignsExports = false;\n\n\n        traverse(esprima.parse(fileContents), function (node) {\n            var type,\n                exp = node.expression || node.init;\n\n            if (node.type === 'Identifier' &&\n                    (node.name === '__dirname' || node.name === '__filename')) {\n                type = node.name.substring(2);\n            } else if (node.type === 'VariableDeclarator' && node.id &&\n                    node.id.type === 'Identifier' &&\n                        node.id.name === 'exports') {\n                //Hmm, a variable assignment for exports, so does not use cjs\n                //exports.\n                type = 'varExports';\n            } else if (exp && exp.type === 'AssignmentExpression' && exp.left &&\n                    exp.left.type === 'MemberExpression' && exp.left.object) {\n                if (exp.left.object.name === 'module' && exp.left.property &&\n                        exp.left.property.name === 'exports') {\n                    type = 'moduleExports';\n                } else if (exp.left.object.name === 'exports' &&\n                        exp.left.property) {\n                    type = 'exports';\n                } else if (exp.left.object.type === 'MemberExpression' &&\n                           exp.left.object.object.name === 'module' &&\n                           exp.left.object.property.name === 'exports' &&\n                           exp.left.object.property.type === 'Identifier') {\n                    type = 'moduleExports';\n                }\n\n            } else if (node && node.type === 'CallExpression' && node.callee &&\n                    node.callee.type === 'Identifier' &&\n                    node.callee.name === 'require' && node[argPropName] &&\n                    node[argPropName].length === 1 &&\n                    node[argPropName][0].type === 'Literal') {\n                type = 'require';\n            }\n\n            if (type) {\n                if (type === 'varExports') {\n                    assignsExports = true;\n                } else if (type !== 'exports' || !assignsExports) {\n                    if (!uses) {\n                        uses = {};\n                    }\n                    uses[type] = true;\n                }\n            }\n        });\n\n        return uses;\n    };\n\n\n    parse.findRequireDepNames = function (node, deps) {\n        traverse(node, function (node) {\n            var arg;\n\n            if (node && node.type === 'CallExpression' && node.callee &&\n                    node.callee.type === 'Identifier' &&\n                    node.callee.name === 'require' &&\n                    node[argPropName] && node[argPropName].length === 1) {\n\n                arg = node[argPropName][0];\n                if (arg.type === 'Literal') {\n                    deps.push(arg.value);\n                }\n            }\n        });\n    };\n\n    /**\n     * Determines if a specific node is a valid require or define/require.def\n     * call.\n     * @param {Array} node\n     * @param {Function} onMatch a function to call when a match is found.\n     * It is passed the match name, and the config, name, deps possible args.\n     * The config, name and deps args are not normalized.\n     * @param {Object} fnExpScope an object whose keys are all function\n     * expression identifiers that should be in scope. Useful for UMD wrapper\n     * detection to avoid parsing more into the wrapped UMD code.\n     *\n     * @returns {String} a JS source string with the valid require/define call.\n     * Otherwise null.\n     */\n    parse.parseNode = function (node, onMatch, fnExpScope) {\n        var name, deps, cjsDeps, arg, factory, exp, refsDefine, bodyNode,\n            args = node && node[argPropName],\n            callName = parse.hasRequire(node),\n            isUmd = false;\n\n        if (callName === 'require' || callName === 'requirejs') {\n            //A plain require/requirejs call\n            arg = node[argPropName] && node[argPropName][0];\n            if (arg && arg.type !== 'ArrayExpression') {\n                if (arg.type === 'ObjectExpression') {\n                    //A config call, try the second arg.\n                    arg = node[argPropName][1];\n                }\n            }\n\n            deps = getValidDeps(arg);\n            if (!deps) {\n                return;\n            }\n\n            return onMatch(\"require\", null, null, deps, node);\n        } else if (parse.hasDefine(node) && args && args.length) {\n            name = args[0];\n            deps = args[1];\n            factory = args[2];\n\n            if (name.type === 'ArrayExpression') {\n                //No name, adjust args\n                factory = deps;\n                deps = name;\n                name = null;\n            } else if (isFnExpression(name)) {\n                //Just the factory, no name or deps\n                factory = name;\n                name = deps = null;\n            } else if (name.type === 'Identifier' && args.length === 1 &&\n                       hasProp(fnExpScope, name.name)) {\n                //define(e) where e is a UMD identifier for the factory\n                //function.\n                isUmd = true;\n                factory = name;\n                name = null;\n            } else if (name.type !== 'Literal') {\n                 //An object literal, just null out\n                name = deps = factory = null;\n            }\n\n            if (name && name.type === 'Literal' && deps) {\n                if (isFnExpression(deps)) {\n                    //deps is the factory\n                    factory = deps;\n                    deps = null;\n                } else if (deps.type === 'ObjectExpression') {\n                    //deps is object literal, null out\n                    deps = factory = null;\n                } else if (deps.type === 'Identifier') {\n                    if (args.length === 2) {\n                        //define('id', factory)\n                        deps = factory = null;\n                    } else if (args.length === 3 && isFnExpression(factory)) {\n                        //define('id', depsIdentifier, factory)\n                        //Since identifier, cannot know the deps, but do not\n                        //error out, assume they are taken care of outside of\n                        //static parsing.\n                        deps = null;\n                    }\n                }\n            }\n\n            if (deps && deps.type === 'ArrayExpression') {\n                deps = getValidDeps(deps);\n            } else if (isFnExpression(factory)) {\n                //If no deps and a factory function, could be a commonjs sugar\n                //wrapper, scan the function for dependencies.\n                cjsDeps = parse.getAnonDepsFromNode(factory);\n                if (cjsDeps.length) {\n                    deps = cjsDeps;\n                }\n            } else if (deps || (factory && !isUmd)) {\n                //Does not match the shape of an AMD call.\n                return;\n            }\n\n            //Just save off the name as a string instead of an AST object.\n            if (name && name.type === 'Literal') {\n                name = name.value;\n            }\n\n            return onMatch(\"define\", null, name, deps, node,\n                           (factory && factory.type === 'Identifier' ? factory.name : undefined),\n                           fnExpScope);\n        } else if (node.type === 'CallExpression' && node.callee &&\n                   isFnExpression(node.callee) &&\n                   node.callee.body && node.callee.body.body &&\n                   node.callee.body.body.length === 1 &&\n                   node.callee.body.body[0].type === 'IfStatement') {\n            bodyNode = node.callee.body.body[0];\n            //Look for a define(Identifier) case, but only if inside an\n            //if that has a define.amd test\n            if (bodyNode.consequent && bodyNode.consequent.body) {\n                exp = bodyNode.consequent.body[0];\n                if (exp.type === 'ExpressionStatement' && exp.expression &&\n                    parse.hasDefine(exp.expression) &&\n                    exp.expression.arguments &&\n                    exp.expression.arguments.length === 1 &&\n                    exp.expression.arguments[0].type === 'Identifier') {\n\n                    //Calls define(Identifier) as first statement in body.\n                    //Confirm the if test references define.amd\n                    traverse(bodyNode.test, function (node) {\n                        if (parse.refsDefineAmd(node)) {\n                            refsDefine = true;\n                            return false;\n                        }\n                    });\n\n                    if (refsDefine) {\n                        return onMatch(\"define\", null, null, null, exp.expression,\n                                       exp.expression.arguments[0].name, fnExpScope);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Converts an AST node into a JS source string by extracting\n     * the node's location from the given contents string. Assumes\n     * esprima.parse() with loc was done.\n     * @param {String} contents\n     * @param {Object} node\n     * @returns {String} a JS source string.\n     */\n    parse.nodeToString = function (contents, node) {\n        var extracted,\n            loc = node.loc,\n            lines = contents.split('\\n'),\n            firstLine = loc.start.line > 1 ?\n                        lines.slice(0, loc.start.line - 1).join('\\n') + '\\n' :\n                        '',\n            preamble = firstLine +\n                       lines[loc.start.line - 1].substring(0, loc.start.column);\n\n        if (loc.start.line === loc.end.line) {\n            extracted = lines[loc.start.line - 1].substring(loc.start.column,\n                                                            loc.end.column);\n        } else {\n            extracted =  lines[loc.start.line - 1].substring(loc.start.column) +\n                     '\\n' +\n                     lines.slice(loc.start.line, loc.end.line - 1).join('\\n') +\n                     '\\n' +\n                     lines[loc.end.line - 1].substring(0, loc.end.column);\n        }\n\n        return {\n            value: extracted,\n            range: [\n                preamble.length,\n                preamble.length + extracted.length\n            ]\n        };\n    };\n\n    /**\n     * Extracts license comments from JS text.\n     * @param {String} fileName\n     * @param {String} contents\n     * @returns {String} a string of license comments.\n     */\n    parse.getLicenseComments = function (fileName, contents) {\n        var commentNode, refNode, subNode, value, i, j,\n            //xpconnect's Reflect does not support comment or range, but\n            //prefer continued operation vs strict parity of operation,\n            //as license comments can be expressed in other ways, like\n            //via wrap args, or linked via sourcemaps.\n            ast = esprima.parse(contents, {\n                comment: true,\n                range: true\n            }),\n            result = '',\n            existsMap = {},\n            lineEnd = contents.indexOf('\\r') === -1 ? '\\n' : '\\r\\n';\n\n        if (ast.comments) {\n            for (i = 0; i < ast.comments.length; i++) {\n                commentNode = ast.comments[i];\n\n                if (commentNode.type === 'Line') {\n                    value = '//' + commentNode.value + lineEnd;\n                    refNode = commentNode;\n\n                    if (i + 1 >= ast.comments.length) {\n                        value += lineEnd;\n                    } else {\n                        //Look for immediately adjacent single line comments\n                        //since it could from a multiple line comment made out\n                        //of single line comments. Like this comment.\n                        for (j = i + 1; j < ast.comments.length; j++) {\n                            subNode = ast.comments[j];\n                            if (subNode.type === 'Line' &&\n                                    subNode.range[0] === refNode.range[1] + 1) {\n                                //Adjacent single line comment. Collect it.\n                                value += '//' + subNode.value + lineEnd;\n                                refNode = subNode;\n                            } else {\n                                //No more single line comment blocks. Break out\n                                //and continue outer looping.\n                                break;\n                            }\n                        }\n                        value += lineEnd;\n                        i = j - 1;\n                    }\n                } else {\n                    value = '/*' + commentNode.value + '*/' + lineEnd + lineEnd;\n                }\n\n                if (!existsMap[value] && (value.indexOf('license') !== -1 ||\n                        (commentNode.type === 'Block' &&\n                            value.indexOf('/*!') === 0) ||\n                        value.indexOf('opyright') !== -1 ||\n                        value.indexOf('(c)') !== -1)) {\n\n                    result += value;\n                    existsMap[value] = true;\n                }\n\n            }\n        }\n\n        return result;\n    };\n\n    return parse;\n});\n/*global define */\n\ndefine('transform', [ './esprimaAdapter', './parse', 'logger', 'lang'],\nfunction (esprima, parse, logger, lang) {\n    'use strict';\n    var transform,\n        baseIndentRegExp = /^([ \\t]+)/,\n        indentRegExp = /\\{[\\r\\n]+([ \\t]+)/,\n        keyRegExp = /^[_A-Za-z]([A-Za-z\\d_]*)$/,\n        bulkIndentRegExps = {\n            '\\n': /\\n/g,\n            '\\r\\n': /\\r\\n/g\n        };\n\n    function applyIndent(str, indent, lineReturn) {\n        var regExp = bulkIndentRegExps[lineReturn];\n        return str.replace(regExp, '$&' + indent);\n    }\n\n    transform = {\n        toTransport: function (namespace, moduleName, path, contents, onFound, options) {\n            options = options || {};\n\n            var astRoot, contentLines, modLine,\n                foundAnon,\n                scanCount = 0,\n                scanReset = false,\n                defineInfos = [],\n                applySourceUrl = function (contents) {\n                    if (options.useSourceUrl) {\n                        contents = 'eval(\"' + lang.jsEscape(contents) +\n                            '\\\\n//# sourceURL=' + (path.indexOf('/') === 0 ? '' : '/') +\n                            path +\n                            '\");\\n';\n                    }\n                    return contents;\n                };\n\n            try {\n                astRoot = esprima.parse(contents, {\n                    loc: true\n                });\n            } catch (e) {\n                logger.trace('toTransport skipping ' + path + ': ' +\n                             e.toString());\n                return contents;\n            }\n\n            //Find the define calls and their position in the files.\n            parse.traverse(astRoot, function (node) {\n                var args, firstArg, firstArgLoc, factoryNode,\n                    needsId, depAction, foundId, init,\n                    sourceUrlData, range,\n                    namespaceExists = false;\n\n                // If a bundle script with a define declaration, do not\n                // parse any further at this level. Likely a built layer\n                // by some other tool.\n                if (node.type === 'VariableDeclarator' &&\n                    node.id && node.id.name === 'define' &&\n                    node.id.type === 'Identifier') {\n                    init = node.init;\n                    if (init && init.callee &&\n                        init.callee.type === 'CallExpression' &&\n                        init.callee.callee &&\n                        init.callee.callee.type === 'Identifier' &&\n                        init.callee.callee.name === 'require' &&\n                        init.callee.arguments && init.callee.arguments.length === 1 &&\n                        init.callee.arguments[0].type === 'Literal' &&\n                        init.callee.arguments[0].value &&\n                        init.callee.arguments[0].value.indexOf('amdefine') !== -1) {\n                        // the var define = require('amdefine')(module) case,\n                        // keep going in that case.\n                    } else {\n                        return false;\n                    }\n                }\n\n                namespaceExists = namespace &&\n                                node.type === 'CallExpression' &&\n                                node.callee  && node.callee.object &&\n                                node.callee.object.type === 'Identifier' &&\n                                node.callee.object.name === namespace &&\n                                node.callee.property.type === 'Identifier' &&\n                                node.callee.property.name === 'define';\n\n                if (namespaceExists || parse.isDefineNodeWithArgs(node)) {\n                    //The arguments are where its at.\n                    args = node.arguments;\n                    if (!args || !args.length) {\n                        return;\n                    }\n\n                    firstArg = args[0];\n                    firstArgLoc = firstArg.loc;\n\n                    if (args.length === 1) {\n                        if (firstArg.type === 'Identifier') {\n                            //The define(factory) case, but\n                            //only allow it if one Identifier arg,\n                            //to limit impact of false positives.\n                            needsId = true;\n                            depAction = 'empty';\n                        } else if (parse.isFnExpression(firstArg)) {\n                            //define(function(){})\n                            factoryNode = firstArg;\n                            needsId = true;\n                            depAction = 'scan';\n                        } else if (firstArg.type === 'ObjectExpression') {\n                            //define({});\n                            needsId = true;\n                            depAction = 'skip';\n                        } else if (firstArg.type === 'Literal' &&\n                                   typeof firstArg.value === 'number') {\n                            //define('12345');\n                            needsId = true;\n                            depAction = 'skip';\n                        } else if (firstArg.type === 'UnaryExpression' &&\n                                   firstArg.operator === '-' &&\n                                   firstArg.argument &&\n                                   firstArg.argument.type === 'Literal' &&\n                                   typeof firstArg.argument.value === 'number') {\n                            //define('-12345');\n                            needsId = true;\n                            depAction = 'skip';\n                        } else if (firstArg.type === 'MemberExpression' &&\n                                   firstArg.object &&\n                                   firstArg.property &&\n                                   firstArg.property.type === 'Identifier') {\n                            //define(this.key);\n                            needsId = true;\n                            depAction = 'empty';\n                        }\n                    } else if (firstArg.type === 'ArrayExpression') {\n                        //define([], ...);\n                        needsId = true;\n                        depAction = 'skip';\n                    } else if (firstArg.type === 'Literal' &&\n                               typeof firstArg.value === 'string') {\n                        //define('string', ....)\n                        //Already has an ID.\n                        needsId = false;\n                        if (args.length === 2 &&\n                            parse.isFnExpression(args[1])) {\n                            //Needs dependency scanning.\n                            factoryNode = args[1];\n                            depAction = 'scan';\n                        } else {\n                            depAction = 'skip';\n                        }\n                    } else {\n                        //Unknown define entity, keep looking, even\n                        //in the subtree for this node.\n                        return;\n                    }\n\n                    range = {\n                        foundId: foundId,\n                        needsId: needsId,\n                        depAction: depAction,\n                        namespaceExists: namespaceExists,\n                        node: node,\n                        defineLoc: node.loc,\n                        firstArgLoc: firstArgLoc,\n                        factoryNode: factoryNode,\n                        sourceUrlData: sourceUrlData\n                    };\n\n                    //Only transform ones that do not have IDs. If it has an\n                    //ID but no dependency array, assume it is something like\n                    //a phonegap implementation, that has its own internal\n                    //define that cannot handle dependency array constructs,\n                    //and if it is a named module, then it means it has been\n                    //set for transport form.\n                    if (range.needsId) {\n                        if (foundAnon) {\n                            logger.trace(path + ' has more than one anonymous ' +\n                                'define. May be a built file from another ' +\n                                'build system like, Ender. Skipping normalization.');\n                            defineInfos = [];\n                            return false;\n                        } else {\n                            foundAnon = range;\n                            defineInfos.push(range);\n                        }\n                    } else if (depAction === 'scan') {\n                        scanCount += 1;\n                        if (scanCount > 1) {\n                            //Just go back to an array that just has the\n                            //anon one, since this is an already optimized\n                            //file like the phonegap one.\n                            if (!scanReset) {\n                                defineInfos =  foundAnon ? [foundAnon] : [];\n                                scanReset = true;\n                            }\n                        } else {\n                            defineInfos.push(range);\n                        }\n                    }\n                }\n            });\n\n\n            if (!defineInfos.length) {\n                return applySourceUrl(contents);\n            }\n\n            //Reverse the matches, need to start from the bottom of\n            //the file to modify it, so that the ranges are still true\n            //further up.\n            defineInfos.reverse();\n\n            contentLines = contents.split('\\n');\n\n            modLine = function (loc, contentInsertion) {\n                var startIndex = loc.start.column,\n                //start.line is 1-based, not 0 based.\n                lineIndex = loc.start.line - 1,\n                line = contentLines[lineIndex];\n                contentLines[lineIndex] = line.substring(0, startIndex) +\n                                           contentInsertion +\n                                           line.substring(startIndex,\n                                                              line.length);\n            };\n\n            defineInfos.forEach(function (info) {\n                var deps,\n                    contentInsertion = '',\n                    depString = '';\n\n                //Do the modifications \"backwards\", in other words, start with the\n                //one that is farthest down and work up, so that the ranges in the\n                //defineInfos still apply. So that means deps, id, then namespace.\n                if (info.needsId && moduleName) {\n                    contentInsertion += \"'\" + moduleName + \"',\";\n                }\n\n                if (info.depAction === 'scan') {\n                    deps = parse.getAnonDepsFromNode(info.factoryNode);\n\n                    if (deps.length) {\n                        depString = '[' + deps.map(function (dep) {\n                            return \"'\" + dep + \"'\";\n                        }) + ']';\n                    } else {\n                        depString = '[]';\n                    }\n                    depString +=  ',';\n\n                    if (info.factoryNode) {\n                        //Already have a named module, need to insert the\n                        //dependencies after the name.\n                        modLine(info.factoryNode.loc, depString);\n                    } else {\n                        contentInsertion += depString;\n                    }\n                }\n\n                if (contentInsertion) {\n                    modLine(info.firstArgLoc, contentInsertion);\n                }\n\n                //Do namespace last so that ui does not mess upthe parenRange\n                //used above.\n                if (namespace && !info.namespaceExists) {\n                    modLine(info.defineLoc, namespace + '.');\n                }\n\n                //Notify any listener for the found info\n                if (onFound) {\n                    onFound(info);\n                }\n            });\n\n            contents = contentLines.join('\\n');\n\n            return applySourceUrl(contents);\n        },\n\n        /**\n         * Modify the contents of a require.config/requirejs.config call. This\n         * call will LOSE any existing comments that are in the config string.\n         *\n         * @param  {String} fileContents String that may contain a config call\n         * @param  {Function} onConfig Function called when the first config\n         * call is found. It will be passed an Object which is the current\n         * config, and the onConfig function should return an Object to use\n         * as the config.\n         * @return {String} the fileContents with the config changes applied.\n         */\n        modifyConfig: function (fileContents, onConfig) {\n            var details = parse.findConfig(fileContents),\n                config = details.config;\n\n            if (config) {\n                config = onConfig(config);\n                if (config) {\n                    return transform.serializeConfig(config,\n                                              fileContents,\n                                              details.range[0],\n                                              details.range[1],\n                                              {\n                                                quote: details.quote\n                                              });\n                }\n            }\n\n            return fileContents;\n        },\n\n        serializeConfig: function (config, fileContents, start, end, options) {\n            //Calculate base level of indent\n            var indent, match, configString, outDentRegExp,\n                baseIndent = '',\n                startString = fileContents.substring(0, start),\n                existingConfigString = fileContents.substring(start, end),\n                lineReturn = existingConfigString.indexOf('\\r') === -1 ? '\\n' : '\\r\\n',\n                lastReturnIndex = startString.lastIndexOf('\\n');\n\n            //Get the basic amount of indent for the require config call.\n            if (lastReturnIndex === -1) {\n                lastReturnIndex = 0;\n            }\n\n            match = baseIndentRegExp.exec(startString.substring(lastReturnIndex + 1, start));\n            if (match && match[1]) {\n                baseIndent = match[1];\n            }\n\n            //Calculate internal indentation for config\n            match = indentRegExp.exec(existingConfigString);\n            if (match && match[1]) {\n                indent = match[1];\n            }\n\n            if (!indent || indent.length < baseIndent) {\n                indent = '  ';\n            } else {\n                indent = indent.substring(baseIndent.length);\n            }\n\n            outDentRegExp = new RegExp('(' + lineReturn + ')' + indent, 'g');\n\n            configString = transform.objectToString(config, {\n                                                    indent: indent,\n                                                    lineReturn: lineReturn,\n                                                    outDentRegExp: outDentRegExp,\n                                                    quote: options && options.quote\n                                                });\n\n            //Add in the base indenting level.\n            configString = applyIndent(configString, baseIndent, lineReturn);\n\n            return startString + configString + fileContents.substring(end);\n        },\n\n        /**\n         * Tries converting a JS object to a string. This will likely suck, and\n         * is tailored to the type of config expected in a loader config call.\n         * So, hasOwnProperty fields, strings, numbers, arrays and functions,\n         * no weird recursively referenced stuff.\n         * @param  {Object} obj        the object to convert\n         * @param  {Object} options    options object with the following values:\n         *         {String} indent     the indentation to use for each level\n         *         {String} lineReturn the type of line return to use\n         *         {outDentRegExp} outDentRegExp the regexp to use to outdent functions\n         *         {String} quote      the quote type to use, ' or \". Optional. Default is \"\n         * @param  {String} totalIndent the total indent to print for this level\n         * @return {String}            a string representation of the object.\n         */\n        objectToString: function (obj, options, totalIndent) {\n            var startBrace, endBrace, nextIndent,\n                first = true,\n                value = '',\n                lineReturn = options.lineReturn,\n                indent = options.indent,\n                outDentRegExp = options.outDentRegExp,\n                quote = options.quote || '\"';\n\n            totalIndent = totalIndent || '';\n            nextIndent = totalIndent + indent;\n\n            if (obj === null) {\n                value = 'null';\n            } else if (obj === undefined) {\n                value = 'undefined';\n            } else if (typeof obj === 'number' || typeof obj === 'boolean') {\n                value = obj;\n            } else if (typeof obj === 'string') {\n                //Use double quotes in case the config may also work as JSON.\n                value = quote + lang.jsEscape(obj) + quote;\n            } else if (lang.isArray(obj)) {\n                lang.each(obj, function (item, i) {\n                    value += (i !== 0 ? ',' + lineReturn : '' ) +\n                        nextIndent +\n                        transform.objectToString(item,\n                                                 options,\n                                                 nextIndent);\n                });\n\n                startBrace = '[';\n                endBrace = ']';\n            } else if (lang.isFunction(obj) || lang.isRegExp(obj)) {\n                //The outdent regexp just helps pretty up the conversion\n                //just in node. Rhino strips comments and does a different\n                //indent scheme for Function toString, so not really helpful\n                //there.\n                value = obj.toString().replace(outDentRegExp, '$1');\n            } else {\n                //An object\n                lang.eachProp(obj, function (v, prop) {\n                    value += (first ? '': ',' + lineReturn) +\n                        nextIndent +\n                        (keyRegExp.test(prop) ? prop : quote + lang.jsEscape(prop) + quote )+\n                        ': ' +\n                        transform.objectToString(v,\n                                                 options,\n                                                 nextIndent);\n                    first = false;\n                });\n                startBrace = '{';\n                endBrace = '}';\n            }\n\n            if (startBrace) {\n                value = startBrace +\n                        lineReturn +\n                        value +\n                        lineReturn + totalIndent +\n                        endBrace;\n            }\n\n            return value;\n        }\n    };\n\n    return transform;\n});\n/*jslint regexp: true, plusplus: true  */\n/*global define: false */\n\ndefine('pragma', ['parse', 'logger'], function (parse, logger) {\n    'use strict';\n    function Temp() {}\n\n    function create(obj, mixin) {\n        Temp.prototype = obj;\n        var temp = new Temp(), prop;\n\n        //Avoid any extra memory hanging around\n        Temp.prototype = null;\n\n        if (mixin) {\n            for (prop in mixin) {\n                if (mixin.hasOwnProperty(prop) && !temp.hasOwnProperty(prop)) {\n                    temp[prop] = mixin[prop];\n                }\n            }\n        }\n\n        return temp; // Object\n    }\n\n    var pragma = {\n        conditionalRegExp: /(exclude|include)Start\\s*\\(\\s*[\"'](\\w+)[\"']\\s*,(.*)\\)/,\n        useStrictRegExp: /(^|[^{]\\r?\\n)['\"]use strict['\"];/g,\n        hasRegExp: /has\\s*\\(\\s*['\"]([^'\"]+)['\"]\\s*\\)/g,\n        configRegExp: /(^|[^\\.])(requirejs|require)(\\.config)\\s*\\(/g,\n        nsWrapRegExp: /\\/\\*requirejs namespace: true \\*\\//,\n        apiDefRegExp: /var requirejs,\\s*require,\\s*define;/,\n        defineCheckRegExp: /typeof(\\s+|\\s*\\(\\s*)define(\\s*\\))?\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\.\\s*amd/g,\n        defineStringCheckRegExp: /typeof\\s+define\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\[\\s*[\"']amd[\"']\\s*\\]/g,\n        defineTypeFirstCheckRegExp: /\\s*[\"']function[\"']\\s*==(=?)\\s*typeof\\s+define\\s*&&\\s*define\\s*\\.\\s*amd/g,\n        defineJQueryRegExp: /typeof\\s+define\\s*===?\\s*[\"']function[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*&&\\s*define\\s*\\.\\s*amd\\s*\\.\\s*jQuery/g,\n        defineHasRegExp: /typeof\\s+define\\s*==(=)?\\s*['\"]function['\"]\\s*&&\\s*typeof\\s+define\\.amd\\s*==(=)?\\s*['\"]object['\"]\\s*&&\\s*define\\.amd/g,\n        defineTernaryRegExp: /typeof\\s+define\\s*===?\\s*['\"]function[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*\\?\\s*define/,\n        defineExistsRegExp: /\\s+typeof\\s+define\\s*!==?\\s*['\"]undefined[\"']\\s*/,\n        defineExistsAndAmdRegExp: /typeof\\s+define\\s*!==?\\s*['\"]undefined[\"']\\s*&&\\s*define\\s*\\.\\s*amd\\s*/,\n        amdefineRegExp: /if\\s*\\(\\s*typeof define\\s*\\!==\\s*['\"]function['\"]\\s*\\)\\s*\\{\\s*[^\\{\\}]+amdefine[^\\{\\}]+\\}/g,\n\n        removeStrict: function (contents, config) {\n            return config.useStrict ? contents : contents.replace(pragma.useStrictRegExp, '$1');\n        },\n\n        namespace: function (fileContents, ns, onLifecycleName) {\n            if (ns) {\n                //Namespace require/define calls\n                fileContents = fileContents.replace(pragma.configRegExp, '$1' + ns + '.$2$3(');\n\n\n                fileContents = parse.renameNamespace(fileContents, ns);\n\n                //Namespace define ternary use:\n                fileContents = fileContents.replace(pragma.defineTernaryRegExp,\n                                                    \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd ? \" + ns + \".define\");\n\n                //Namespace define jquery use:\n                fileContents = fileContents.replace(pragma.defineJQueryRegExp,\n                                                    \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd && \" + ns + \".define.amd.jQuery\");\n\n                //Namespace has.js define use:\n                fileContents = fileContents.replace(pragma.defineHasRegExp,\n                                                    \"typeof \" + ns + \".define === 'function' && typeof \" + ns + \".define.amd === 'object' && \" + ns + \".define.amd\");\n\n                //Namespace async.js define use:\n                fileContents = fileContents.replace(pragma.defineExistsAndAmdRegExp,\n                                                    \"typeof \" + ns + \".define !== 'undefined' && \" + ns + \".define.amd\");\n\n                //Namespace define checks.\n                //Do these ones last, since they are a subset of the more specific\n                //checks above.\n                fileContents = fileContents.replace(pragma.defineCheckRegExp,\n                                                    \"typeof \" + ns + \".define === 'function' && \" + ns + \".define.amd\");\n                fileContents = fileContents.replace(pragma.defineStringCheckRegExp,\n                                                    \"typeof \" + ns + \".define === 'function' && \" + ns + \".define['amd']\");\n                fileContents = fileContents.replace(pragma.defineTypeFirstCheckRegExp,\n                                                    \"'function' === typeof \" + ns + \".define && \" + ns + \".define.amd\");\n                fileContents = fileContents.replace(pragma.defineExistsRegExp,\n                                                    \"typeof \" + ns + \".define !== 'undefined'\");\n\n                //Check for require.js with the require/define definitions\n                if (pragma.apiDefRegExp.test(fileContents) &&\n                    fileContents.indexOf(\"if (!\" + ns + \" || !\" + ns + \".requirejs)\") === -1) {\n                    //Wrap the file contents in a typeof check, and a function\n                    //to contain the API globals.\n                    fileContents = \"var \" + ns + \";(function () { if (!\" + ns + \" || !\" + ns + \".requirejs) {\\n\" +\n                                    \"if (!\" + ns + \") { \" + ns + ' = {}; } else { require = ' + ns + '; }\\n' +\n                                    fileContents +\n                                    \"\\n\" +\n                                    ns + \".requirejs = requirejs;\" +\n                                    ns + \".require = require;\" +\n                                    ns + \".define = define;\\n\" +\n                                    \"}\\n}());\";\n                }\n\n                //Finally, if the file wants a special wrapper because it ties\n                //in to the requirejs internals in a way that would not fit\n                //the above matches, do that. Look for /*requirejs namespace: true*/\n                if (pragma.nsWrapRegExp.test(fileContents)) {\n                    //Remove the pragma.\n                    fileContents = fileContents.replace(pragma.nsWrapRegExp, '');\n\n                    //Alter the contents.\n                    fileContents = '(function () {\\n' +\n                                   'var require = ' + ns + '.require,' +\n                                   'requirejs = ' + ns + '.requirejs,' +\n                                   'define = ' + ns + '.define;\\n' +\n                                   fileContents +\n                                   '\\n}());';\n                }\n            }\n\n            return fileContents;\n        },\n\n        /**\n         * processes the fileContents for some //>> conditional statements\n         */\n        process: function (fileName, fileContents, config, onLifecycleName, pluginCollector) {\n            /*jslint evil: true */\n            var foundIndex = -1, startIndex = 0, lineEndIndex, conditionLine,\n                matches, type, marker, condition, isTrue, endRegExp, endMatches,\n                endMarkerIndex, shouldInclude, startLength, lifecycleHas, deps,\n                i, dep, moduleName, collectorMod,\n                lifecyclePragmas, pragmas = config.pragmas, hasConfig = config.has,\n                //Legacy arg defined to help in dojo conversion script. Remove later\n                //when dojo no longer needs conversion:\n                kwArgs = pragmas;\n\n            //Mix in a specific lifecycle scoped object, to allow targeting\n            //some pragmas/has tests to only when files are saved, or at different\n            //lifecycle events. Do not bother with kwArgs in this section, since\n            //the old dojo kwArgs were for all points in the build lifecycle.\n            if (onLifecycleName) {\n                lifecyclePragmas = config['pragmas' + onLifecycleName];\n                lifecycleHas = config['has' + onLifecycleName];\n\n                if (lifecyclePragmas) {\n                    pragmas = create(pragmas || {}, lifecyclePragmas);\n                }\n\n                if (lifecycleHas) {\n                    hasConfig = create(hasConfig || {}, lifecycleHas);\n                }\n            }\n\n            //Replace has references if desired\n            if (hasConfig) {\n                fileContents = fileContents.replace(pragma.hasRegExp, function (match, test) {\n                    if (hasConfig.hasOwnProperty(test)) {\n                        return !!hasConfig[test];\n                    }\n                    return match;\n                });\n            }\n\n            if (!config.skipPragmas) {\n\n                while ((foundIndex = fileContents.indexOf(\"//>>\", startIndex)) !== -1) {\n                    //Found a conditional. Get the conditional line.\n                    lineEndIndex = fileContents.indexOf(\"\\n\", foundIndex);\n                    if (lineEndIndex === -1) {\n                        lineEndIndex = fileContents.length - 1;\n                    }\n\n                    //Increment startIndex past the line so the next conditional search can be done.\n                    startIndex = lineEndIndex + 1;\n\n                    //Break apart the conditional.\n                    conditionLine = fileContents.substring(foundIndex, lineEndIndex + 1);\n                    matches = conditionLine.match(pragma.conditionalRegExp);\n                    if (matches) {\n                        type = matches[1];\n                        marker = matches[2];\n                        condition = matches[3];\n                        isTrue = false;\n                        //See if the condition is true.\n                        try {\n                            isTrue = !!eval(\"(\" + condition + \")\");\n                        } catch (e) {\n                            throw \"Error in file: \" +\n                                   fileName +\n                                   \". Conditional comment: \" +\n                                   conditionLine +\n                                   \" failed with this error: \" + e;\n                        }\n\n                        //Find the endpoint marker.\n                        endRegExp = new RegExp('\\\\/\\\\/\\\\>\\\\>\\\\s*' + type + 'End\\\\(\\\\s*[\\'\"]' + marker + '[\\'\"]\\\\s*\\\\)', \"g\");\n                        endMatches = endRegExp.exec(fileContents.substring(startIndex, fileContents.length));\n                        if (endMatches) {\n                            endMarkerIndex = startIndex + endRegExp.lastIndex - endMatches[0].length;\n\n                            //Find the next line return based on the match position.\n                            lineEndIndex = fileContents.indexOf(\"\\n\", endMarkerIndex);\n                            if (lineEndIndex === -1) {\n                                lineEndIndex = fileContents.length - 1;\n                            }\n\n                            //Should we include the segment?\n                            shouldInclude = ((type === \"exclude\" && !isTrue) || (type === \"include\" && isTrue));\n\n                            //Remove the conditional comments, and optionally remove the content inside\n                            //the conditional comments.\n                            startLength = startIndex - foundIndex;\n                            fileContents = fileContents.substring(0, foundIndex) +\n                                (shouldInclude ? fileContents.substring(startIndex, endMarkerIndex) : \"\") +\n                                fileContents.substring(lineEndIndex + 1, fileContents.length);\n\n                            //Move startIndex to foundIndex, since that is the new position in the file\n                            //where we need to look for more conditionals in the next while loop pass.\n                            startIndex = foundIndex;\n                        } else {\n                            throw \"Error in file: \" +\n                                  fileName +\n                                  \". Cannot find end marker for conditional comment: \" +\n                                  conditionLine;\n\n                        }\n                    }\n                }\n            }\n\n            //If need to find all plugin resources to optimize, do that now,\n            //before namespacing, since the namespacing will change the API\n            //names.\n            //If there is a plugin collector, scan the file for plugin resources.\n            if (config.optimizeAllPluginResources && pluginCollector) {\n                try {\n                    deps = parse.findDependencies(fileName, fileContents);\n                    if (deps.length) {\n                        for (i = 0; i < deps.length; i++) {\n                            dep = deps[i];\n                            if (dep.indexOf('!') !== -1) {\n                                moduleName = dep.split('!')[0];\n                                collectorMod = pluginCollector[moduleName];\n                                if (!collectorMod) {\n                                 collectorMod = pluginCollector[moduleName] = [];\n                                }\n                                collectorMod.push(dep);\n                            }\n                        }\n                    }\n                } catch (eDep) {\n                    logger.error('Parse error looking for plugin resources in ' +\n                                 fileName + ', skipping.');\n                }\n            }\n\n            //Strip amdefine use for node-shared modules.\n            if (!config.keepAmdefine) {\n                fileContents = fileContents.replace(pragma.amdefineRegExp, '');\n            }\n\n            //Do namespacing\n            if (onLifecycleName === 'OnSave' && config.namespace) {\n                fileContents = pragma.namespace(fileContents, config.namespace, onLifecycleName);\n            }\n\n\n            return pragma.removeStrict(fileContents, config);\n        }\n    };\n\n    return pragma;\n});\n\nif(env === 'browser') {\n/*jslint strict: false */\n/*global define: false */\n\ndefine('browser/optimize', {});\n\n}\n\nif(env === 'node') {\n/*jslint strict: false */\n/*global define: false */\n\ndefine('node/optimize', {});\n\n}\n\nif(env === 'rhino') {\n/*jslint sloppy: true, plusplus: true */\n/*global define, java, Packages, com */\n\ndefine('rhino/optimize', ['logger', 'env!env/file'], function (logger, file) {\n\n    //Add .reduce to Rhino so UglifyJS can run in Rhino,\n    //inspired by https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/reduce\n    //but rewritten for brevity, and to be good enough for use by UglifyJS.\n    if (!Array.prototype.reduce) {\n        Array.prototype.reduce = function (fn /*, initialValue */) {\n            var i = 0,\n                length = this.length,\n                accumulator;\n\n            if (arguments.length >= 2) {\n                accumulator = arguments[1];\n            } else {\n                if (length) {\n                    while (!(i in this)) {\n                        i++;\n                    }\n                    accumulator = this[i++];\n                }\n            }\n\n            for (; i < length; i++) {\n                if (i in this) {\n                    accumulator = fn.call(undefined, accumulator, this[i], i, this);\n                }\n            }\n\n            return accumulator;\n        };\n    }\n\n    var JSSourceFilefromCode, optimize,\n        mapRegExp = /\"file\":\"[^\"]+\"/;\n\n    //Bind to Closure compiler, but if it is not available, do not sweat it.\n    try {\n        // Try older closure compiler that worked on Java 6\n        JSSourceFilefromCode = java.lang.Class.forName('com.google.javascript.jscomp.JSSourceFile').getMethod('fromCode', [java.lang.String, java.lang.String]);\n    } catch (e) {\n        try {\n            // Try for newer closure compiler that needs Java 7+\n            JSSourceFilefromCode = java.lang.Class.forName('com.google.javascript.jscomp.SourceFile').getMethod('fromCode', [java.lang.String, java.lang.String]);\n        } catch (e) {\n            try {\n                // Try Nashorn style\n                var stringClass = Java.type(\"java.lang.String\").class;\n                JSSourceFilefromCode = Java.type(\"com.google.javascript.jscomp.SourceFile\").class.getMethod(\"fromCode\", [stringClass, stringClass]);\n            } catch (e) {}\n        }\n    }\n\n    //Helper for closure compiler, because of weird Java-JavaScript interactions.\n    function closurefromCode(filename, content) {\n        return JSSourceFilefromCode.invoke(null, [filename, content]);\n    }\n\n\n    function getFileWriter(fileName, encoding) {\n        var outFile = new java.io.File(fileName), outWriter, parentDir;\n\n        parentDir = outFile.getAbsoluteFile().getParentFile();\n        if (!parentDir.exists()) {\n            if (!parentDir.mkdirs()) {\n                throw \"Could not create directory: \" + parentDir.getAbsolutePath();\n            }\n        }\n\n        if (encoding) {\n            outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile), encoding);\n        } else {\n            outWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(outFile));\n        }\n\n        return new java.io.BufferedWriter(outWriter);\n    }\n\n    optimize = {\n        closure: function (fileName, fileContents, outFileName, keepLines, config) {\n            config = config || {};\n            var result, mappings, optimized, compressed, baseName, writer,\n                outBaseName, outFileNameMap, outFileNameMapContent,\n                srcOutFileName, concatNameMap,\n                jscomp = Packages.com.google.javascript.jscomp,\n                flags = Packages.com.google.common.flags,\n                //Set up source input\n                jsSourceFile = closurefromCode(String(fileName), String(fileContents)),\n                sourceListArray = new java.util.ArrayList(),\n                externList = new java.util.ArrayList(),\n                options, option, FLAG_compilation_level, compiler, externExportsPath,\n                Compiler = Packages.com.google.javascript.jscomp.Compiler,\n                CommandLineRunner = Packages.com.google.javascript.jscomp.CommandLineRunner;\n\n            logger.trace(\"Minifying file: \" + fileName);\n\n            baseName = (new java.io.File(fileName)).getName();\n\n            //Set up options\n            options = new jscomp.CompilerOptions();\n            for (option in config.CompilerOptions) {\n                // options are false by default and jslint wanted an if statement in this for loop\n                if (config.CompilerOptions[option]) {\n                    options[option] = config.CompilerOptions[option];\n                }\n\n            }\n            options.prettyPrint = keepLines || options.prettyPrint;\n\n            FLAG_compilation_level = jscomp.CompilationLevel[config.CompilationLevel || 'SIMPLE_OPTIMIZATIONS'];\n            FLAG_compilation_level.setOptionsForCompilationLevel(options);\n\n            if (config.generateSourceMaps) {\n                mappings = new java.util.ArrayList();\n\n                mappings.add(new com.google.javascript.jscomp.SourceMap.LocationMapping(fileName, baseName + \".src.js\"));\n                options.setSourceMapLocationMappings(mappings);\n                options.setSourceMapOutputPath(fileName + \".map\");\n            }\n\n            //If we need to pass an externs file to Closure so that it does not create aliases\n            //for certain symbols, do so here.\n            externList.addAll(CommandLineRunner.getDefaultExterns());\n            if (config.externExportsPath) {\n                externExportsPath = config.externExportsPath;\n                externList.add(jscomp.SourceFile.fromFile(externExportsPath));\n            }\n\n            //Trigger the compiler\n            Compiler.setLoggingLevel(Packages.java.util.logging.Level[config.loggingLevel || 'WARNING']);\n            compiler = new Compiler();\n\n            //fill the sourceArrrayList; we need the ArrayList because the only overload of compile\n            //accepting the getDefaultExterns return value (a List) also wants the sources as a List\n            sourceListArray.add(jsSourceFile);\n\n            result = compiler.compile(externList, sourceListArray, options);\n            if (result.success) {\n                optimized = String(compiler.toSource());\n\n                if (config.generateSourceMaps && result.sourceMap && outFileName) {\n                    outBaseName = (new java.io.File(outFileName)).getName();\n\n                    srcOutFileName = outFileName + \".src.js\";\n                    outFileNameMap = outFileName + \".map\";\n\n                    //If previous .map file exists, move it to the \".src.js\"\n                    //location. Need to update the sourceMappingURL part in the\n                    //src.js file too.\n                    if (file.exists(outFileNameMap)) {\n                        concatNameMap = outFileNameMap.replace(/\\.map$/, '.src.js.map');\n                        file.saveFile(concatNameMap, file.readFile(outFileNameMap));\n                        file.saveFile(srcOutFileName,\n                                      fileContents.replace(/\\/\\# sourceMappingURL=(.+).map/,\n                                                           '/# sourceMappingURL=$1.src.js.map'));\n                    } else {\n                        file.saveUtf8File(srcOutFileName, fileContents);\n                    }\n\n                    writer = getFileWriter(outFileNameMap, \"utf-8\");\n                    result.sourceMap.appendTo(writer, outFileName);\n                    writer.close();\n\n                    //Not sure how better to do this, but right now the .map file\n                    //leaks the full OS path in the \"file\" property. Manually\n                    //modify it to not do that.\n                    file.saveFile(outFileNameMap,\n                        file.readFile(outFileNameMap).replace(mapRegExp, '\"file\":\"' + baseName + '\"'));\n\n                    fileContents = optimized + \"\\n//# sourceMappingURL=\" + outBaseName + \".map\";\n                } else {\n                    fileContents = optimized;\n                }\n                return fileContents;\n            } else {\n                throw new Error('Cannot closure compile file: ' + fileName + '. Skipping it.');\n            }\n\n            return fileContents;\n        }\n    };\n\n    return optimize;\n});\n}\n\nif(env === 'xpconnect') {\ndefine('xpconnect/optimize', {});\n}\n/*jslint plusplus: true, nomen: true, regexp: true */\n/*global define: false */\n\ndefine('optimize', [ 'lang', 'logger', 'env!env/optimize', 'env!env/file', 'parse',\n         'pragma', 'uglifyjs',\n         'source-map'],\nfunction (lang,   logger,   envOptimize,        file,           parse,\n          pragma, uglify,\n          sourceMap) {\n    'use strict';\n\n    var optimize,\n        cssImportRegExp = /\\@import\\s+(url\\()?\\s*([^);]+)\\s*(\\))?([\\w, ]*)(;)?/ig,\n        cssCommentImportRegExp = /\\/\\*[^\\*]*@import[^\\*]*\\*\\//g,\n        cssUrlRegExp = /\\url\\(\\s*([^\\)]+)\\s*\\)?/g,\n        protocolRegExp = /^\\w+:/,\n        SourceMapGenerator = sourceMap.SourceMapGenerator,\n        SourceMapConsumer = sourceMap.SourceMapConsumer,\n        es5PlusGuidance = 'If the source uses ES2015 or later syntax, please pass \"optimize: \\'none\\'\" to r.js and use an ES2015+ compatible minifier after running r.js. The included UglifyJS only understands ES5 or earlier syntax.';\n\n    /**\n     * If an URL from a CSS url value contains start/end quotes, remove them.\n     * This is not done in the regexp, since my regexp fu is not that strong,\n     * and the CSS spec allows for ' and \" in the URL if they are backslash escaped.\n     * @param {String} url\n     */\n    function cleanCssUrlQuotes(url) {\n        //Make sure we are not ending in whitespace.\n        //Not very confident of the css regexps above that there will not be ending\n        //whitespace.\n        url = url.replace(/\\s+$/, \"\");\n\n        if (url.charAt(0) === \"'\" || url.charAt(0) === \"\\\"\") {\n            url = url.substring(1, url.length - 1);\n        }\n\n        return url;\n    }\n\n    function fixCssUrlPaths(fileName, path, contents, cssPrefix) {\n        return contents.replace(cssUrlRegExp, function (fullMatch, urlMatch) {\n            var firstChar, hasProtocol, parts, i,\n                fixedUrlMatch = cleanCssUrlQuotes(urlMatch);\n\n            fixedUrlMatch = fixedUrlMatch.replace(lang.backSlashRegExp, \"/\");\n\n            //Only do the work for relative URLs. Skip things that start with / or #, or have\n            //a protocol.\n            firstChar = fixedUrlMatch.charAt(0);\n            hasProtocol = protocolRegExp.test(fixedUrlMatch);\n            if (firstChar !== \"/\" && firstChar !== \"#\" && !hasProtocol) {\n                //It is a relative URL, tack on the cssPrefix and path prefix\n                urlMatch = cssPrefix + path + fixedUrlMatch;\n            } else if (!hasProtocol) {\n                logger.trace(fileName + \"\\n  URL not a relative URL, skipping: \" + urlMatch);\n            }\n\n            //Collapse .. and .\n            parts = urlMatch.split(\"/\");\n            for (i = parts.length - 1; i > 0; i--) {\n                if (parts[i] === \".\") {\n                    parts.splice(i, 1);\n                } else if (parts[i] === \"..\") {\n                    if (i !== 0 && parts[i - 1] !== \"..\") {\n                        parts.splice(i - 1, 2);\n                        i -= 1;\n                    }\n                }\n            }\n\n            return \"url(\" + parts.join(\"/\") + \")\";\n        });\n    }\n\n    /**\n     * Inlines nested stylesheets that have @import calls in them.\n     * @param {String} fileName the file name\n     * @param {String} fileContents the file contents\n     * @param {String} cssImportIgnore comma delimited string of files to ignore\n     * @param {String} cssPrefix string to be prefixed before relative URLs\n     * @param {Object} included an object used to track the files already imported\n     */\n    function flattenCss(fileName, fileContents, cssImportIgnore, cssPrefix, included, topLevel) {\n        //Find the last slash in the name.\n        fileName = fileName.replace(lang.backSlashRegExp, \"/\");\n        var endIndex = fileName.lastIndexOf(\"/\"),\n            //Make a file path based on the last slash.\n            //If no slash, so must be just a file name. Use empty string then.\n            filePath = (endIndex !== -1) ? fileName.substring(0, endIndex + 1) : \"\",\n            //store a list of merged files\n            importList = [],\n            skippedList = [];\n\n        //First make a pass by removing any commented out @import calls.\n        fileContents = fileContents.replace(cssCommentImportRegExp, '');\n\n        //Make sure we have a delimited ignore list to make matching faster\n        if (cssImportIgnore && cssImportIgnore.charAt(cssImportIgnore.length - 1) !== \",\") {\n            cssImportIgnore += \",\";\n        }\n\n        fileContents = fileContents.replace(cssImportRegExp, function (fullMatch, urlStart, importFileName, urlEnd, mediaTypes) {\n            //Only process media type \"all\" or empty media type rules.\n            if (mediaTypes && ((mediaTypes.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '')) !== \"all\")) {\n                skippedList.push(fileName);\n                return fullMatch;\n            }\n\n            importFileName = cleanCssUrlQuotes(importFileName);\n\n            //Ignore the file import if it is part of an ignore list.\n            if (cssImportIgnore && cssImportIgnore.indexOf(importFileName + \",\") !== -1) {\n                return fullMatch;\n            }\n\n            //Make sure we have a unix path for the rest of the operation.\n            importFileName = importFileName.replace(lang.backSlashRegExp, \"/\");\n\n            try {\n                //if a relative path, then tack on the filePath.\n                //If it is not a relative path, then the readFile below will fail,\n                //and we will just skip that import.\n                var fullImportFileName = importFileName.charAt(0) === \"/\" ? importFileName : filePath + importFileName,\n                    importContents = file.readFile(fullImportFileName),\n                    importEndIndex, importPath, flat;\n\n                //Skip the file if it has already been included.\n                if (included[fullImportFileName]) {\n                    return '';\n                }\n                included[fullImportFileName] = true;\n\n                //Make sure to flatten any nested imports.\n                flat = flattenCss(fullImportFileName, importContents, cssImportIgnore, cssPrefix, included);\n                importContents = flat.fileContents;\n\n                if (flat.importList.length) {\n                    importList.push.apply(importList, flat.importList);\n                }\n                if (flat.skippedList.length) {\n                    skippedList.push.apply(skippedList, flat.skippedList);\n                }\n\n                //Make the full import path\n                importEndIndex = importFileName.lastIndexOf(\"/\");\n\n                //Make a file path based on the last slash.\n                //If no slash, so must be just a file name. Use empty string then.\n                importPath = (importEndIndex !== -1) ? importFileName.substring(0, importEndIndex + 1) : \"\";\n\n                //fix url() on relative import (#5)\n                importPath = importPath.replace(/^\\.\\//, '');\n\n                //Modify URL paths to match the path represented by this file.\n                importContents = fixCssUrlPaths(importFileName, importPath, importContents, cssPrefix);\n\n                importList.push(fullImportFileName);\n                return importContents;\n            } catch (e) {\n                logger.warn(fileName + \"\\n  Cannot inline css import, skipping: \" + importFileName);\n                return fullMatch;\n            }\n        });\n\n        if (cssPrefix && topLevel) {\n            //Modify URL paths to match the path represented by this file.\n            fileContents = fixCssUrlPaths(fileName, '', fileContents, cssPrefix);\n        }\n\n        return {\n            importList : importList,\n            skippedList: skippedList,\n            fileContents : fileContents\n        };\n    }\n\n    optimize = {\n        /**\n         * Optimizes a file that contains JavaScript content. Optionally collects\n         * plugin resources mentioned in a file, and then passes the content\n         * through an minifier if one is specified via config.optimize.\n         *\n         * @param {String} fileName the name of the file to optimize\n         * @param {String} fileContents the contents to optimize. If this is\n         * a null value, then fileName will be used to read the fileContents.\n         * @param {String} outFileName the name of the file to use for the\n         * saved optimized content.\n         * @param {Object} config the build config object.\n         * @param {Array} [pluginCollector] storage for any plugin resources\n         * found.\n         */\n        jsFile: function (fileName, fileContents, outFileName, config, pluginCollector) {\n            if (!fileContents) {\n                fileContents = file.readFile(fileName);\n            }\n\n            fileContents = optimize.js(fileName, fileContents, outFileName, config, pluginCollector);\n\n            file.saveUtf8File(outFileName, fileContents);\n        },\n\n        /**\n         * Optimizes a file that contains JavaScript content. Optionally collects\n         * plugin resources mentioned in a file, and then passes the content\n         * through an minifier if one is specified via config.optimize.\n         *\n         * @param {String} fileName the name of the file that matches the\n         * fileContents.\n         * @param {String} fileContents the string of JS to optimize.\n         * @param {Object} [config] the build config object.\n         * @param {Array} [pluginCollector] storage for any plugin resources\n         * found.\n         */\n        js: function (fileName, fileContents, outFileName, config, pluginCollector) {\n            var optFunc, optConfig,\n                parts = (String(config.optimize)).split('.'),\n                optimizerName = parts[0],\n                keepLines = parts[1] === 'keepLines',\n                licenseContents = '';\n\n            config = config || {};\n\n            //Apply pragmas/namespace renaming\n            fileContents = pragma.process(fileName, fileContents, config, 'OnSave', pluginCollector);\n\n            //Optimize the JS files if asked.\n            if (optimizerName && optimizerName !== 'none') {\n                optFunc = envOptimize[optimizerName] || optimize.optimizers[optimizerName];\n                if (!optFunc) {\n                    throw new Error('optimizer with name of \"' +\n                                    optimizerName +\n                                    '\" not found for this environment');\n                }\n\n                optConfig = config[optimizerName] || {};\n                if (config.generateSourceMaps) {\n                    optConfig.generateSourceMaps = !!config.generateSourceMaps;\n                    optConfig._buildSourceMap = config._buildSourceMap;\n                }\n\n                try {\n                    if (config.preserveLicenseComments) {\n                        //Pull out any license comments for prepending after optimization.\n                        try {\n                            licenseContents = parse.getLicenseComments(fileName, fileContents);\n                        } catch (e) {\n                            throw new Error('Cannot parse file: ' + fileName + ' for comments. Skipping it. Error is:\\n' + e.toString());\n                        }\n                    }\n\n                    if (config.generateSourceMaps && licenseContents) {\n                        optConfig.preamble = licenseContents;\n                        licenseContents = '';\n                    }\n\n                    fileContents = licenseContents + optFunc(fileName,\n                                                             fileContents,\n                                                             outFileName,\n                                                             keepLines,\n                                                             optConfig);\n                    if (optConfig._buildSourceMap && optConfig._buildSourceMap !== config._buildSourceMap) {\n                        config._buildSourceMap = optConfig._buildSourceMap;\n                    }\n                } catch (e) {\n                    if (config.throwWhen && config.throwWhen.optimize) {\n                        throw e;\n                    } else {\n                        logger.error(e);\n                    }\n                }\n            } else {\n                if (config._buildSourceMap) {\n                    config._buildSourceMap = null;\n                }\n            }\n\n            return fileContents;\n        },\n\n        /**\n         * Optimizes one CSS file, inlining @import calls, stripping comments, and\n         * optionally removes line returns.\n         * @param {String} fileName the path to the CSS file to optimize\n         * @param {String} outFileName the path to save the optimized file.\n         * @param {Object} config the config object with the optimizeCss and\n         * cssImportIgnore options.\n         */\n        cssFile: function (fileName, outFileName, config) {\n\n            //Read in the file. Make sure we have a JS string.\n            var originalFileContents = file.readFile(fileName),\n                flat = flattenCss(fileName, originalFileContents, config.cssImportIgnore, config.cssPrefix, {}, true),\n                //Do not use the flattened CSS if there was one that was skipped.\n                fileContents = flat.skippedList.length ? originalFileContents : flat.fileContents,\n                startIndex, endIndex, buildText, comment;\n\n            if (flat.skippedList.length) {\n                logger.warn('Cannot inline @imports for ' + fileName +\n                            ',\\nthe following files had media queries in them:\\n' +\n                            flat.skippedList.join('\\n'));\n            }\n\n            //Do comment removal.\n            try {\n                if (config.optimizeCss.indexOf(\".keepComments\") === -1) {\n                    startIndex = 0;\n                    //Get rid of comments.\n                    while ((startIndex = fileContents.indexOf(\"/*\", startIndex)) !== -1) {\n                        endIndex = fileContents.indexOf(\"*/\", startIndex + 2);\n                        if (endIndex === -1) {\n                            throw \"Improper comment in CSS file: \" + fileName;\n                        }\n                        comment = fileContents.substring(startIndex, endIndex);\n\n                        if (config.preserveLicenseComments &&\n                            (comment.indexOf('license') !== -1 ||\n                             comment.indexOf('opyright') !== -1 ||\n                             comment.indexOf('(c)') !== -1)) {\n                            //Keep the comment, just increment the startIndex\n                            startIndex = endIndex;\n                        } else {\n                            fileContents = fileContents.substring(0, startIndex) + fileContents.substring(endIndex + 2, fileContents.length);\n                            startIndex = 0;\n                        }\n                    }\n                }\n                //Get rid of newlines.\n                if (config.optimizeCss.indexOf(\".keepLines\") === -1) {\n                    fileContents = fileContents.replace(/[\\r\\n]/g, \" \");\n                    fileContents = fileContents.replace(/\\s+/g, \" \");\n                    fileContents = fileContents.replace(/\\{\\s/g, \"{\");\n                    fileContents = fileContents.replace(/\\s\\}/g, \"}\");\n                } else {\n                    //Remove multiple empty lines.\n                    fileContents = fileContents.replace(/(\\r\\n)+/g, \"\\r\\n\");\n                    fileContents = fileContents.replace(/(\\n)+/g, \"\\n\");\n                }\n                //Remove unnecessary whitespace\n                if (config.optimizeCss.indexOf(\".keepWhitespace\") === -1) {\n                    //Remove leading and trailing whitespace from lines\n                    fileContents = fileContents.replace(/^[ \\t]+/gm, \"\");\n                    fileContents = fileContents.replace(/[ \\t]+$/gm, \"\");\n                    //Remove whitespace after semicolon, colon, curly brackets and commas\n                    fileContents = fileContents.replace(/(;|:|\\{|}|,)[ \\t]+/g, \"$1\");\n                    //Remove whitespace before opening curly brackets\n                    fileContents = fileContents.replace(/[ \\t]+(\\{)/g, \"$1\");\n                    //Truncate double whitespace\n                    fileContents = fileContents.replace(/([ \\t])+/g, \"$1\");\n                    //Remove empty lines\n                    fileContents = fileContents.replace(/^[ \\t]*[\\r\\n]/gm,'');\n                }\n            } catch (e) {\n                fileContents = originalFileContents;\n                logger.error(\"Could not optimized CSS file: \" + fileName + \", error: \" + e);\n            }\n\n            file.saveUtf8File(outFileName, fileContents);\n\n            //text output to stdout and/or written to build.txt file\n            buildText = \"\\n\"+ outFileName.replace(config.dir, \"\") +\"\\n----------------\\n\";\n            flat.importList.push(fileName);\n            buildText += flat.importList.map(function(path){\n                return path.replace(config.dir, \"\");\n            }).join(\"\\n\");\n\n            return {\n                importList: flat.importList,\n                buildText: buildText +\"\\n\"\n            };\n        },\n\n        /**\n         * Optimizes CSS files, inlining @import calls, stripping comments, and\n         * optionally removes line returns.\n         * @param {String} startDir the path to the top level directory\n         * @param {Object} config the config object with the optimizeCss and\n         * cssImportIgnore options.\n         */\n        css: function (startDir, config) {\n            var buildText = \"\",\n                importList = [],\n                shouldRemove = config.dir && config.removeCombined,\n                i, fileName, result, fileList;\n            if (config.optimizeCss.indexOf(\"standard\") !== -1) {\n                fileList = file.getFilteredFileList(startDir, /\\.css$/, true);\n                if (fileList) {\n                    for (i = 0; i < fileList.length; i++) {\n                        fileName = fileList[i];\n                        logger.trace(\"Optimizing (\" + config.optimizeCss + \") CSS file: \" + fileName);\n                        result = optimize.cssFile(fileName, fileName, config);\n                        buildText += result.buildText;\n                        if (shouldRemove) {\n                            result.importList.pop();\n                            importList = importList.concat(result.importList);\n                        }\n                    }\n                }\n\n                if (shouldRemove) {\n                    importList.forEach(function (path) {\n                        if (file.exists(path)) {\n                            file.deleteFile(path);\n                        }\n                    });\n                }\n            }\n            return buildText;\n        },\n\n        optimizers: {\n            uglify: function (fileName, fileContents, outFileName, keepLines, config) {\n                var result, existingMap, resultMap, finalMap, sourceIndex,\n                    uconfig = {},\n                    existingMapPath = outFileName + '.map',\n                    baseName = fileName && fileName.split('/').pop();\n\n                config = config || {};\n\n                lang.mixin(uconfig, config, true);\n\n                uconfig.fromString = true;\n\n                if (config.preamble) {\n                    uconfig.output = {preamble: config.preamble};\n                }\n\n\n                if (config.generateSourceMaps && (outFileName || config._buildSourceMap)) {\n                    uconfig.outSourceMap = baseName + '.map';\n\n                    if (config._buildSourceMap) {\n                        existingMap = JSON.parse(config._buildSourceMap);\n                        uconfig.inSourceMap = existingMap;\n                    } else if (file.exists(existingMapPath)) {\n                        uconfig.inSourceMap = existingMapPath;\n                        existingMap = JSON.parse(file.readFile(existingMapPath));\n                    }\n                }\n\n                logger.trace(\"Uglify file: \" + fileName);\n\n                try {\n                    //var tempContents = fileContents.replace(/\\/\\/\\# sourceMappingURL=.*$/, '');\n                    result = uglify.minify(fileContents, uconfig, baseName + '.src.js');\n                    if (uconfig.outSourceMap && result.map) {\n                        resultMap = result.map;\n                        if (!existingMap && !config._buildSourceMap) {\n                            file.saveFile(outFileName + '.src.js', fileContents);\n                        }\n\n                        fileContents = result.code;\n\n                        if (config._buildSourceMap) {\n                            config._buildSourceMap = resultMap;\n                        } else {\n                            file.saveFile(outFileName + '.map', resultMap);\n                        }\n                    } else {\n                        fileContents = result.code;\n                    }\n                } catch (e) {\n                    var errorString = e.toString();\n                    var isSyntaxError = /SyntaxError/.test(errorString);\n                    throw new Error('Cannot uglify file: ' + fileName +\n                                    '. Skipping it. Error is:\\n' + errorString +\n                                  (isSyntaxError ? '\\n\\n' + es5PlusGuidance : ''));\n                }\n                return fileContents;\n            }\n        }\n    };\n\n    return optimize;\n});\n/*\n * This file patches require.js to communicate with the build system.\n */\n\n//Using sloppy since this uses eval for some code like plugins,\n//which may not be strict mode compliant. So if use strict is used\n//below they will have strict rules applied and may cause an error.\n/*jslint sloppy: true, nomen: true, plusplus: true, regexp: true */\n/*global require, define: true */\n\n//NOT asking for require as a dependency since the goal is to modify the\n//global require below\ndefine('requirePatch', [ 'env!env/file', 'pragma', 'parse', 'lang', 'logger', 'commonJs', 'prim'], function (\n    file,\n    pragma,\n    parse,\n    lang,\n    logger,\n    commonJs,\n    prim\n) {\n\n    var allowRun = true,\n        hasProp = lang.hasProp,\n        falseProp = lang.falseProp,\n        getOwn = lang.getOwn,\n        // Used to strip out use strict from toString()'d functions for the\n        // shim config since they will explicitly want to not be bound by strict,\n        // but some envs, explicitly xpcshell, adds a use strict.\n        useStrictRegExp = /['\"]use strict['\"];/g,\n        //Absolute path if starts with /, \\, or x:\n        absoluteUrlRegExp = /^[\\/\\\\]|^\\w:/;\n\n    //Turn off throwing on resolution conflict, that was just an older prim\n    //idea about finding errors early, but does not comply with how promises\n    //should operate.\n    prim.hideResolutionConflict = true;\n\n    //This method should be called when the patches to require should take hold.\n    return function () {\n        if (!allowRun) {\n            return;\n        }\n        allowRun = false;\n\n        var layer,\n            pluginBuilderRegExp = /([\"']?)pluginBuilder([\"']?)\\s*[=\\:]\\s*[\"']([^'\"\\s]+)[\"']/,\n            oldNewContext = require.s.newContext,\n            oldDef,\n\n            //create local undefined values for module and exports,\n            //so that when files are evaled in this function they do not\n            //see the node values used for r.js\n            exports,\n            module;\n\n        /**\n         * Reset \"global\" build caches that are kept around between\n         * build layer builds. Useful to do when there are multiple\n         * top level requirejs.optimize() calls.\n         */\n        require._cacheReset = function () {\n            //Stored raw text caches, used by browser use.\n            require._cachedRawText = {};\n            //Stored cached file contents for reuse in other layers.\n            require._cachedFileContents = {};\n            //Store which cached files contain a require definition.\n            require._cachedDefinesRequireUrls = {};\n        };\n        require._cacheReset();\n\n        /**\n         * Makes sure the URL is something that can be supported by the\n         * optimization tool.\n         * @param {String} url\n         * @returns {Boolean}\n         */\n        require._isSupportedBuildUrl = function (url) {\n            //Ignore URLs with protocols, hosts or question marks, means either network\n            //access is needed to fetch it or it is too dynamic. Note that\n            //on Windows, full paths are used for some urls, which include\n            //the drive, like c:/something, so need to test for something other\n            //than just a colon.\n            if (url.indexOf(\"://\") === -1 && url.indexOf(\"?\") === -1 &&\n                    url.indexOf('empty:') !== 0 && url.indexOf('//') !== 0) {\n                return true;\n            } else {\n                if (!layer.ignoredUrls[url]) {\n                    if (url.indexOf('empty:') === -1) {\n                        logger.info('Cannot optimize network URL, skipping: ' + url);\n                    }\n                    layer.ignoredUrls[url] = true;\n                }\n                return false;\n            }\n        };\n\n        function normalizeUrlWithBase(context, moduleName, url) {\n            //Adjust the URL if it was not transformed to use baseUrl, but only\n            //if the URL is not already an absolute path.\n            if (require.jsExtRegExp.test(moduleName) &&\n                !absoluteUrlRegExp.test(url)) {\n                url = (context.config.dir || context.config.dirBaseUrl) + url;\n            }\n            return url;\n        }\n\n        //Overrides the new context call to add existing tracking features.\n        require.s.newContext = function (name) {\n            var context = oldNewContext(name),\n                oldEnable = context.enable,\n                moduleProto = context.Module.prototype,\n                oldInit = moduleProto.init,\n                oldCallPlugin = moduleProto.callPlugin;\n\n            //Only do this for the context used for building.\n            if (name === '_') {\n                //For build contexts, do everything sync\n                context.nextTick = function (fn) {\n                    fn();\n                };\n\n                context.needFullExec = {};\n                context.fullExec = {};\n                context.plugins = {};\n                context.buildShimExports = {};\n\n                //Override the shim exports function generator to just\n                //spit out strings that can be used in the stringified\n                //build output.\n                context.makeShimExports = function (value) {\n                    var fn;\n                    if (context.config.wrapShim) {\n                        fn = function () {\n                            var str = 'return ';\n                            // If specifies an export that is just a global\n                            // name, no dot for a `this.` and such, then also\n                            // attach to the global, for `var a = {}` files\n                            // where the function closure would hide that from\n                            // the global object.\n                            if (value.exports && value.exports.indexOf('.') === -1) {\n                                str += 'root.' + value.exports + ' = ';\n                            }\n\n                            if (value.init) {\n                                str += '(' + value.init.toString()\n                                       .replace(useStrictRegExp, '') + '.apply(this, arguments))';\n                            }\n                            if (value.init && value.exports) {\n                                str += ' || ';\n                            }\n                            if (value.exports) {\n                                str += value.exports;\n                            }\n                            str += ';';\n                            return str;\n                        };\n                    } else {\n                        fn = function () {\n                            return '(function (global) {\\n' +\n                                '    return function () {\\n' +\n                                '        var ret, fn;\\n' +\n                                (value.init ?\n                                        ('       fn = ' + value.init.toString()\n                                        .replace(useStrictRegExp, '') + ';\\n' +\n                                        '        ret = fn.apply(global, arguments);\\n') : '') +\n                                (value.exports ?\n                                        '        return ret || global.' + value.exports + ';\\n' :\n                                        '        return ret;\\n') +\n                                '    };\\n' +\n                                '}(this))';\n                        };\n                    }\n\n                    return fn;\n                };\n\n                context.enable = function (depMap, parent) {\n                    var id = depMap.id,\n                        parentId = parent && parent.map.id,\n                        needFullExec = context.needFullExec,\n                        fullExec = context.fullExec,\n                        mod = getOwn(context.registry, id);\n\n                    if (mod && !mod.defined) {\n                        if (parentId && getOwn(needFullExec, parentId)) {\n                            needFullExec[id] = depMap;\n                        }\n\n                    } else if ((getOwn(needFullExec, id) && falseProp(fullExec, id)) ||\n                               (parentId && getOwn(needFullExec, parentId) &&\n                                falseProp(fullExec, id))) {\n                        context.require.undef(id);\n                    }\n\n                    return oldEnable.apply(context, arguments);\n                };\n\n                //Override load so that the file paths can be collected.\n                context.load = function (moduleName, url) {\n                    /*jslint evil: true */\n                    var contents, pluginBuilderMatch, builderName,\n                        shim, shimExports;\n\n                    //Do not mark the url as fetched if it is\n                    //not an empty: URL, used by the optimizer.\n                    //In that case we need to be sure to call\n                    //load() for each module that is mapped to\n                    //empty: so that dependencies are satisfied\n                    //correctly.\n                    if (url.indexOf('empty:') === 0) {\n                        delete context.urlFetched[url];\n                    }\n\n                    //Only handle urls that can be inlined, so that means avoiding some\n                    //URLs like ones that require network access or may be too dynamic,\n                    //like JSONP\n                    if (require._isSupportedBuildUrl(url)) {\n                        //Adjust the URL if it was not transformed to use baseUrl.\n                        url = normalizeUrlWithBase(context, moduleName, url);\n\n                        //Save the module name to path  and path to module name mappings.\n                        layer.buildPathMap[moduleName] = url;\n                        layer.buildFileToModule[url] = moduleName;\n\n                        if (hasProp(context.plugins, moduleName)) {\n                            //plugins need to have their source evaled as-is.\n                            context.needFullExec[moduleName] = true;\n                        }\n\n                        prim().start(function () {\n                            if (hasProp(require._cachedFileContents, url) &&\n                                    (falseProp(context.needFullExec, moduleName) ||\n                                    getOwn(context.fullExec, moduleName))) {\n                                contents = require._cachedFileContents[url];\n\n                                //If it defines require, mark it so it can be hoisted.\n                                //Done here and in the else below, before the\n                                //else block removes code from the contents.\n                                //Related to #263\n                                if (!layer.existingRequireUrl && require._cachedDefinesRequireUrls[url]) {\n                                    layer.existingRequireUrl = url;\n                                }\n                            } else {\n                                //Load the file contents, process for conditionals, then\n                                //evaluate it.\n                                return require._cacheReadAsync(url).then(function (text) {\n                                    contents = text;\n\n                                    if (context.config.cjsTranslate &&\n                                        (!context.config.shim || !lang.hasProp(context.config.shim, moduleName))) {\n                                        contents = commonJs.convert(url, contents);\n                                    }\n\n                                    //If there is a read filter, run it now.\n                                    if (context.config.onBuildRead) {\n                                        contents = context.config.onBuildRead(moduleName, url, contents);\n                                    }\n\n                                    contents = pragma.process(url, contents, context.config, 'OnExecute');\n\n                                    //Find out if the file contains a require() definition. Need to know\n                                    //this so we can inject plugins right after it, but before they are needed,\n                                    //and to make sure this file is first, so that define calls work.\n                                    try {\n                                        if (!layer.existingRequireUrl && parse.definesRequire(url, contents)) {\n                                            layer.existingRequireUrl = url;\n                                            require._cachedDefinesRequireUrls[url] = true;\n                                        }\n                                    } catch (e1) {\n                                        throw new Error('Parse error using esprima ' +\n                                                        'for file: ' + url + '\\n' + e1);\n                                    }\n                                }).then(function () {\n                                    if (hasProp(context.plugins, moduleName)) {\n                                        //This is a loader plugin, check to see if it has a build extension,\n                                        //otherwise the plugin will act as the plugin builder too.\n                                        pluginBuilderMatch = pluginBuilderRegExp.exec(contents);\n                                        if (pluginBuilderMatch) {\n                                            //Load the plugin builder for the plugin contents.\n                                            builderName = context.makeModuleMap(pluginBuilderMatch[3],\n                                                                                context.makeModuleMap(moduleName),\n                                                                                null,\n                                                                                true).id;\n                                            return require._cacheReadAsync(context.nameToUrl(builderName));\n                                        }\n                                    }\n                                    return contents;\n                                }).then(function (text) {\n                                    contents = text;\n\n                                    //Parse out the require and define calls.\n                                    //Do this even for plugins in case they have their own\n                                    //dependencies that may be separate to how the pluginBuilder works.\n                                    try {\n                                        if (falseProp(context.needFullExec, moduleName)) {\n                                            contents = parse(moduleName, url, contents, {\n                                                insertNeedsDefine: true,\n                                                has: context.config.has,\n                                                findNestedDependencies: context.config.findNestedDependencies\n                                            });\n                                        }\n                                    } catch (e2) {\n                                        throw new Error('Parse error using esprima ' +\n                                                        'for file: ' + url + '\\n' + e2);\n                                    }\n\n                                    require._cachedFileContents[url] = contents;\n                                });\n                            }\n                        }).then(function () {\n                            if (contents) {\n                                eval(contents);\n                            }\n\n                            try {\n                                //If have a string shim config, and this is\n                                //a fully executed module, try to see if\n                                //it created a variable in this eval scope\n                                if (getOwn(context.needFullExec, moduleName)) {\n                                    shim = getOwn(context.config.shim, moduleName);\n                                    if (shim && shim.exports) {\n                                        shimExports = eval(shim.exports);\n                                        if (typeof shimExports !== 'undefined') {\n                                            context.buildShimExports[moduleName] = shimExports;\n                                        }\n                                    }\n                                }\n\n                                //Need to close out completion of this module\n                                //so that listeners will get notified that it is available.\n                                context.completeLoad(moduleName);\n                            } catch (e) {\n                                //Track which module could not complete loading.\n                                if (!e.moduleTree) {\n                                    e.moduleTree = [];\n                                }\n                                e.moduleTree.push(moduleName);\n                                throw e;\n                            }\n                        }).then(null, function (eOuter) {\n\n                            if (!eOuter.fileName) {\n                                eOuter.fileName = url;\n                            }\n                            throw eOuter;\n                        }).end();\n                    } else {\n                        //With unsupported URLs still need to call completeLoad to\n                        //finish loading.\n                        context.completeLoad(moduleName);\n                    }\n                };\n\n                //Marks module has having a name, and optionally executes the\n                //callback, but only if it meets certain criteria.\n                context.execCb = function (name, cb, args, exports) {\n                    var buildShimExports = getOwn(layer.context.buildShimExports, name);\n\n                    if (buildShimExports) {\n                        return buildShimExports;\n                    } else if (cb.__requireJsBuild || getOwn(layer.context.needFullExec, name)) {\n                        return cb.apply(exports, args);\n                    }\n                    return undefined;\n                };\n\n                moduleProto.init = function (depMaps) {\n                    if (context.needFullExec[this.map.id]) {\n                        lang.each(depMaps, lang.bind(this, function (depMap) {\n                            if (typeof depMap === 'string') {\n                                depMap = context.makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false, true);\n                            }\n\n                            if (!context.fullExec[depMap.id]) {\n                                context.require.undef(depMap.id);\n                            }\n                        }));\n                    }\n\n                    return oldInit.apply(this, arguments);\n                };\n\n                moduleProto.callPlugin = function () {\n                    var map = this.map,\n                        pluginMap = context.makeModuleMap(map.prefix),\n                        pluginId = pluginMap.id,\n                        pluginMod = getOwn(context.registry, pluginId);\n\n                    context.plugins[pluginId] = true;\n                    context.needFullExec[pluginId] = map;\n\n                    //If the module is not waiting to finish being defined,\n                    //undef it and start over, to get full execution.\n                    if (falseProp(context.fullExec, pluginId) && (!pluginMod || pluginMod.defined)) {\n                        context.require.undef(pluginMap.id);\n                    }\n\n                    return oldCallPlugin.apply(this, arguments);\n                };\n            }\n\n            return context;\n        };\n\n        //Clear up the existing context so that the newContext modifications\n        //above will be active.\n        delete require.s.contexts._;\n\n        /** Reset state for each build layer pass. */\n        require._buildReset = function () {\n            var oldContext = require.s.contexts._;\n\n            //Clear up the existing context.\n            delete require.s.contexts._;\n\n            //Set up new context, so the layer object can hold onto it.\n            require({});\n\n            layer = require._layer = {\n                buildPathMap: {},\n                buildFileToModule: {},\n                buildFilePaths: [],\n                pathAdded: {},\n                modulesWithNames: {},\n                needsDefine: {},\n                existingRequireUrl: \"\",\n                ignoredUrls: {},\n                context: require.s.contexts._\n            };\n\n            //Return the previous context in case it is needed, like for\n            //the basic config object.\n            return oldContext;\n        };\n\n        require._buildReset();\n\n        //Override define() to catch modules that just define an object, so that\n        //a dummy define call is not put in the build file for them. They do\n        //not end up getting defined via context.execCb, so we need to catch them\n        //at the define call.\n        oldDef = define;\n\n        //This function signature does not have to be exact, just match what we\n        //are looking for.\n        define = function (name) {\n            if (typeof name === \"string\" && falseProp(layer.needsDefine, name)) {\n                layer.modulesWithNames[name] = true;\n            }\n            return oldDef.apply(require, arguments);\n        };\n\n        define.amd = oldDef.amd;\n\n        //Add some utilities for plugins\n        require._readFile = file.readFile;\n        require._fileExists = function (path) {\n            return file.exists(path);\n        };\n\n        //Called when execManager runs for a dependency. Used to figure out\n        //what order of execution.\n        require.onResourceLoad = function (context, map) {\n            var id = map.id,\n                url;\n\n            // Fix up any maps that need to be normalized as part of the fullExec\n            // plumbing for plugins to participate in the build.\n            if (context.plugins && lang.hasProp(context.plugins, id)) {\n                lang.eachProp(context.needFullExec, function(value, prop) {\n                    // For plugin entries themselves, they do not have a map\n                    // value in needFullExec, just a \"true\" entry.\n                    if (value !== true && value.prefix === id && value.unnormalized) {\n                        var map = context.makeModuleMap(value.originalName, value.parentMap);\n                        context.needFullExec[map.id] = map;\n                    }\n                });\n            }\n\n            //If build needed a full execution, indicate it\n            //has been done now. But only do it if the context is tracking\n            //that. Only valid for the context used in a build, not for\n            //other contexts being run, like for useLib, plain requirejs\n            //use in node/rhino.\n            if (context.needFullExec && getOwn(context.needFullExec, id)) {\n                context.fullExec[id] = map;\n            }\n\n            //A plugin.\n            if (map.prefix) {\n                if (falseProp(layer.pathAdded, id)) {\n                    layer.buildFilePaths.push(id);\n                    //For plugins the real path is not knowable, use the name\n                    //for both module to file and file to module mappings.\n                    layer.buildPathMap[id] = id;\n                    layer.buildFileToModule[id] = id;\n                    layer.modulesWithNames[id] = true;\n                    layer.pathAdded[id] = true;\n                }\n            } else if (map.url && require._isSupportedBuildUrl(map.url)) {\n                //If the url has not been added to the layer yet, and it\n                //is from an actual file that was loaded, add it now.\n                url = normalizeUrlWithBase(context, id, map.url);\n                if (!layer.pathAdded[url] && getOwn(layer.buildPathMap, id)) {\n                    //Remember the list of dependencies for this layer.\n                    layer.buildFilePaths.push(url);\n                    layer.pathAdded[url] = true;\n                }\n            }\n        };\n\n        //Called by output of the parse() function, when a file does not\n        //explicitly call define, probably just require, but the parse()\n        //function normalizes on define() for dependency mapping and file\n        //ordering works correctly.\n        require.needsDefine = function (moduleName) {\n            layer.needsDefine[moduleName] = true;\n        };\n    };\n});\n/*jslint */\n/*global define: false, console: false */\n\ndefine('commonJs', ['env!env/file', 'parse'], function (file, parse) {\n    'use strict';\n    var commonJs = {\n        //Set to false if you do not want this file to log. Useful in environments\n        //like node where you want the work to happen without noise.\n        useLog: true,\n\n        convertDir: function (commonJsPath, savePath) {\n            var fileList, i,\n                jsFileRegExp = /\\.js$/,\n                fileName, convertedFileName, fileContents;\n\n            //Get list of files to convert.\n            fileList = file.getFilteredFileList(commonJsPath, /\\w/, true);\n\n            //Normalize on front slashes and make sure the paths do not end in a slash.\n            commonJsPath = commonJsPath.replace(/\\\\/g, \"/\");\n            savePath = savePath.replace(/\\\\/g, \"/\");\n            if (commonJsPath.charAt(commonJsPath.length - 1) === \"/\") {\n                commonJsPath = commonJsPath.substring(0, commonJsPath.length - 1);\n            }\n            if (savePath.charAt(savePath.length - 1) === \"/\") {\n                savePath = savePath.substring(0, savePath.length - 1);\n            }\n\n            //Cycle through all the JS files and convert them.\n            if (!fileList || !fileList.length) {\n                if (commonJs.useLog) {\n                    if (commonJsPath === \"convert\") {\n                        //A request just to convert one file.\n                        console.log('\\n\\n' + commonJs.convert(savePath, file.readFile(savePath)));\n                    } else {\n                        console.log(\"No files to convert in directory: \" + commonJsPath);\n                    }\n                }\n            } else {\n                for (i = 0; i < fileList.length; i++) {\n                    fileName = fileList[i];\n                    convertedFileName = fileName.replace(commonJsPath, savePath);\n\n                    //Handle JS files.\n                    if (jsFileRegExp.test(fileName)) {\n                        fileContents = file.readFile(fileName);\n                        fileContents = commonJs.convert(fileName, fileContents);\n                        file.saveUtf8File(convertedFileName, fileContents);\n                    } else {\n                        //Just copy the file over.\n                        file.copyFile(fileName, convertedFileName, true);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Does the actual file conversion.\n         *\n         * @param {String} fileName the name of the file.\n         *\n         * @param {String} fileContents the contents of a file :)\n         *\n         * @returns {String} the converted contents\n         */\n        convert: function (fileName, fileContents) {\n            //Strip out comments.\n            try {\n                var preamble = '',\n                    commonJsProps = parse.usesCommonJs(fileName, fileContents);\n\n                //First see if the module is not already RequireJS-formatted.\n                if (parse.usesAmdOrRequireJs(fileName, fileContents) || !commonJsProps) {\n                    return fileContents;\n                }\n\n                if (commonJsProps.dirname || commonJsProps.filename) {\n                    preamble = 'var __filename = module.uri || \"\", ' +\n                               '__dirname = __filename.substring(0, __filename.lastIndexOf(\"/\") + 1); ';\n                }\n\n                //Construct the wrapper boilerplate.\n                fileContents = 'define(function (require, exports, module) {' +\n                    preamble +\n                    fileContents +\n                    '\\n});\\n';\n\n            } catch (e) {\n                console.log(\"commonJs.convert: COULD NOT CONVERT: \" + fileName + \", so skipping it. Error was: \" + e);\n                return fileContents;\n            }\n\n            return fileContents;\n        }\n    };\n\n    return commonJs;\n});\n/*jslint plusplus: true, nomen: true, regexp: true  */\n/*global define, requirejs, java, process, console */\n\n\ndefine('build', function (require) {\n    'use strict';\n\n    var build,\n        lang = require('lang'),\n        prim = require('prim'),\n        logger = require('logger'),\n        file = require('env!env/file'),\n        parse = require('parse'),\n        optimize = require('optimize'),\n        pragma = require('pragma'),\n        transform = require('transform'),\n        requirePatch = require('requirePatch'),\n        env = require('env'),\n        commonJs = require('commonJs'),\n        SourceMapGenerator = require('source-map').SourceMapGenerator,\n        hasProp = lang.hasProp,\n        getOwn = lang.getOwn,\n        falseProp = lang.falseProp,\n        endsWithSemiColonRegExp = /;\\s*$/,\n        endsWithSlashRegExp = /[\\/\\\\]$/,\n        resourceIsModuleIdRegExp = /^[\\w\\/\\\\\\.]+$/,\n        deepCopyProps = {\n            layer: true\n        };\n\n    //Deep copy a config object, but do not copy over the \"layer\" property,\n    //as it can be a deeply nested structure with a full requirejs context.\n    function copyConfig(obj) {\n        return lang.deeplikeCopy(obj, deepCopyProps);\n    }\n\n    prim.nextTick = function (fn) {\n        fn();\n    };\n\n    //Now map require to the outermost requirejs, now that we have\n    //local dependencies for this module. The rest of the require use is\n    //manipulating the requirejs loader.\n    require = requirejs;\n\n    //Caching function for performance. Attached to\n    //require so it can be reused in requirePatch.js. _cachedRawText\n    //set up by requirePatch.js\n    require._cacheReadAsync = function (path, encoding) {\n        var d;\n\n        if (lang.hasProp(require._cachedRawText, path)) {\n            d = prim();\n            d.resolve(require._cachedRawText[path]);\n            return d.promise;\n        } else {\n            return file.readFileAsync(path, encoding).then(function (text) {\n                require._cachedRawText[path] = text;\n                return text;\n            });\n        }\n    };\n\n    function makeBuildBaseConfig() {\n        return {\n            appDir: \"\",\n            pragmas: {},\n            paths: {},\n            optimize: \"uglify\",\n            optimizeCss: \"standard.keepLines.keepWhitespace\",\n            inlineText: true,\n            isBuild: true,\n            optimizeAllPluginResources: false,\n            findNestedDependencies: false,\n            preserveLicenseComments: true,\n            writeBuildTxt: true,\n            //Some builds can take a while, up the default limit.\n            waitSeconds: 30,\n            //By default, all files/directories are copied, unless\n            //they match this regexp, by default just excludes .folders\n            dirExclusionRegExp: file.dirExclusionRegExp,\n            _buildPathToModuleIndex: {}\n        };\n    }\n\n    /**\n     * Some JS may not be valid if concatenated with other JS, in particular\n     * the style of omitting semicolons and rely on ASI. Add a semicolon in\n     * those cases.\n     */\n    function addSemiColon(text, config) {\n        if (config.skipSemiColonInsertion || endsWithSemiColonRegExp.test(text)) {\n            return text;\n        } else {\n            return text + \";\";\n        }\n    }\n\n    function endsWithSlash(dirName) {\n        if (dirName.charAt(dirName.length - 1) !== \"/\") {\n            dirName += \"/\";\n        }\n        return dirName;\n    }\n\n    function endsWithNewLine(text) {\n        if (text.charAt(text.length - 1) !== \"\\n\") {\n            text += \"\\n\";\n        }\n        return text;\n    }\n\n    //Method used by plugin writeFile calls, defined up here to avoid\n    //jslint warning about \"making a function in a loop\".\n    function makeWriteFile(namespace, layer) {\n        function writeFile(name, contents) {\n            logger.trace('Saving plugin-optimized file: ' + name);\n            file.saveUtf8File(name, contents);\n        }\n\n        writeFile.asModule = function (moduleName, fileName, contents) {\n            writeFile(fileName,\n                build.toTransport(namespace, moduleName, fileName, contents, layer));\n        };\n\n        return writeFile;\n    }\n\n    /**\n     * Appends singleContents to fileContents and returns the result.  If a sourceMapGenerator\n     * is provided, adds singleContents to the source map.\n     *\n     * @param {string} fileContents - The file contents to which to append singleContents\n     * @param {string} singleContents - The additional contents to append to fileContents\n     * @param {string} path - An absolute path of a file whose name to use in the source map.\n     * The file need not actually exist if the code in singleContents is generated.\n     * @param {{out: ?string, baseUrl: ?string}} config - The build configuration object.\n     * @param {?{_buildPath: ?string}} module - An object with module information.\n     * @param {?SourceMapGenerator} sourceMapGenerator - An instance of Mozilla's SourceMapGenerator,\n     * or null if no source map is being generated.\n     * @returns {string} fileContents with singleContents appended\n     */\n    function appendToFileContents(fileContents, singleContents, path, config, module, sourceMapGenerator) {\n        var refPath, sourceMapPath, resourcePath, pluginId, sourceMapLineNumber, lineCount, parts, i;\n        if (sourceMapGenerator) {\n            if (config.out) {\n                refPath = config.baseUrl;\n            } else if (module && module._buildPath) {\n                refPath = module._buildPath;\n            } else {\n                refPath = \"\";\n            }\n            parts = path.split('!');\n            if (parts.length === 1) {\n                //Not a plugin resource, fix the path\n                sourceMapPath = build.makeRelativeFilePath(refPath, path);\n            } else {\n                //Plugin resource. If it looks like just a plugin\n                //followed by a module ID, pull off the plugin\n                //and put it at the end of the name, otherwise\n                //just leave it alone.\n                pluginId = parts.shift();\n                resourcePath = parts.join('!');\n                if (resourceIsModuleIdRegExp.test(resourcePath)) {\n                    sourceMapPath = build.makeRelativeFilePath(refPath, require.toUrl(resourcePath)) +\n                                    '!' + pluginId;\n                } else {\n                    sourceMapPath = path;\n                }\n            }\n\n            sourceMapLineNumber = fileContents.split('\\n').length - 1;\n            lineCount = singleContents.split('\\n').length;\n            for (i = 1; i <= lineCount; i += 1) {\n                sourceMapGenerator.addMapping({\n                    generated: {\n                        line: sourceMapLineNumber + i,\n                        column: 0\n                    },\n                    original: {\n                        line: i,\n                        column: 0\n                    },\n                    source: sourceMapPath\n                });\n            }\n\n            //Store the content of the original in the source\n            //map since other transforms later like minification\n            //can mess up translating back to the original\n            //source.\n            sourceMapGenerator.setSourceContent(sourceMapPath, singleContents);\n        }\n        fileContents += singleContents;\n        return fileContents;\n    }\n\n    /**\n     * Main API entry point into the build. The args argument can either be\n     * an array of arguments (like the onese passed on a command-line),\n     * or it can be a JavaScript object that has the format of a build profile\n     * file.\n     *\n     * If it is an object, then in addition to the normal properties allowed in\n     * a build profile file, the object should contain one other property:\n     *\n     * The object could also contain a \"buildFile\" property, which is a string\n     * that is the file path to a build profile that contains the rest\n     * of the build profile directives.\n     *\n     * This function does not return a status, it should throw an error if\n     * there is a problem completing the build.\n     */\n    build = function (args) {\n        var buildFile, cmdConfig, errorMsg, errorStack, stackMatch, errorTree,\n            i, j, errorMod,\n            stackRegExp = /( {4}at[^\\n]+)\\n/,\n            standardIndent = '  ';\n\n        return prim().start(function () {\n            if (!args || lang.isArray(args)) {\n                if (!args || args.length < 1) {\n                    logger.error(\"build.js buildProfile.js\\n\" +\n                          \"where buildProfile.js is the name of the build file (see example.build.js for hints on how to make a build file).\");\n                    return undefined;\n                }\n\n                //Next args can include a build file path as well as other build args.\n                //build file path comes first. If it does not contain an = then it is\n                //a build file path. Otherwise, just all build args.\n                if (args[0].indexOf(\"=\") === -1) {\n                    buildFile = args[0];\n                    args.splice(0, 1);\n                }\n\n                //Remaining args are options to the build\n                cmdConfig = build.convertArrayToObject(args);\n                cmdConfig.buildFile = buildFile;\n            } else {\n                cmdConfig = args;\n            }\n\n            return build._run(cmdConfig);\n        }).then(null, function (e) {\n            var err;\n\n            errorMsg = e.toString();\n            errorTree = e.moduleTree;\n            stackMatch = stackRegExp.exec(errorMsg);\n\n            if (stackMatch) {\n                errorMsg += errorMsg.substring(0, stackMatch.index + stackMatch[0].length + 1);\n            }\n\n            //If a module tree that shows what module triggered the error,\n            //print it out.\n            if (errorTree && errorTree.length > 0) {\n                errorMsg += '\\nIn module tree:\\n';\n\n                for (i = errorTree.length - 1; i > -1; i--) {\n                    errorMod = errorTree[i];\n                    if (errorMod) {\n                        for (j = errorTree.length - i; j > -1; j--) {\n                            errorMsg += standardIndent;\n                        }\n                        errorMsg += errorMod + '\\n';\n                    }\n                }\n\n                logger.error(errorMsg);\n            }\n\n            errorStack = e.stack;\n\n            if (typeof args === 'string' && args.indexOf('stacktrace=true') !== -1) {\n                errorMsg += '\\n' + errorStack;\n            } else {\n                if (!stackMatch && errorStack) {\n                    //Just trim out the first \"at\" in the stack.\n                    stackMatch = stackRegExp.exec(errorStack);\n                    if (stackMatch) {\n                        errorMsg += '\\n' + stackMatch[0] || '';\n                    }\n                }\n            }\n\n            err = new Error(errorMsg);\n            err.originalError = e;\n            throw err;\n        });\n    };\n\n    build._run = function (cmdConfig) {\n        var buildPaths, fileName, fileNames,\n            paths, i,\n            baseConfig, config,\n            modules, srcPath, buildContext,\n            destPath, moduleMap, parentModuleMap, context,\n            resources, resource, plugin, fileContents,\n            pluginProcessed = {},\n            buildFileContents = \"\",\n            pluginCollector = {};\n\n        return prim().start(function () {\n            var prop;\n\n            //Can now run the patches to require.js to allow it to be used for\n            //build generation. Do it here instead of at the top of the module\n            //because we want normal require behavior to load the build tool\n            //then want to switch to build mode.\n            requirePatch();\n\n            config = build.createConfig(cmdConfig);\n            paths = config.paths;\n\n            //Remove the previous build dir, in case it contains source transforms,\n            //like the ones done with onBuildRead and onBuildWrite.\n            if (config.dir && !config.keepBuildDir && file.exists(config.dir)) {\n                file.deleteFile(config.dir);\n            }\n\n            if (!config.out && !config.cssIn) {\n                //This is not just a one-off file build but a full build profile, with\n                //lots of files to process.\n\n                //First copy all the baseUrl content\n                file.copyDir((config.appDir || config.baseUrl), config.dir, /\\w/, true);\n\n                //Adjust baseUrl if config.appDir is in play, and set up build output paths.\n                buildPaths = {};\n                if (config.appDir) {\n                    //All the paths should be inside the appDir, so just adjust\n                    //the paths to use the dirBaseUrl\n                    for (prop in paths) {\n                        if (hasProp(paths, prop)) {\n                            buildPaths[prop] = paths[prop].replace(config.appDir, config.dir);\n                        }\n                    }\n                } else {\n                    //If no appDir, then make sure to copy the other paths to this directory.\n                    for (prop in paths) {\n                        if (hasProp(paths, prop)) {\n                            //Set up build path for each path prefix, but only do so\n                            //if the path falls out of the current baseUrl\n                            if (paths[prop].indexOf(config.baseUrl) === 0) {\n                                buildPaths[prop] = paths[prop].replace(config.baseUrl, config.dirBaseUrl);\n                            } else {\n                                buildPaths[prop] = paths[prop] === 'empty:' ? 'empty:' : prop;\n\n                                //Make sure source path is fully formed with baseUrl,\n                                //if it is a relative URL.\n                                srcPath = paths[prop];\n                                if (srcPath.indexOf('/') !== 0 && srcPath.indexOf(':') === -1) {\n                                    srcPath = config.baseUrl + srcPath;\n                                }\n\n                                destPath = config.dirBaseUrl + buildPaths[prop];\n\n                                //Skip empty: paths\n                                if (srcPath !== 'empty:') {\n                                    //If the srcPath is a directory, copy the whole directory.\n                                    if (file.exists(srcPath) && file.isDirectory(srcPath)) {\n                                        //Copy files to build area. Copy all files (the /\\w/ regexp)\n                                        file.copyDir(srcPath, destPath, /\\w/, true);\n                                    } else {\n                                        //Try a .js extension\n                                        srcPath += '.js';\n                                        destPath += '.js';\n                                        file.copyFile(srcPath, destPath);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            //Figure out source file location for each module layer. Do this by seeding require\n            //with source area configuration. This is needed so that later the module layers\n            //can be manually copied over to the source area, since the build may be\n            //require multiple times and the above copyDir call only copies newer files.\n            require({\n                baseUrl: config.baseUrl,\n                paths: paths,\n                packagePaths: config.packagePaths,\n                packages: config.packages\n            });\n            buildContext = require.s.contexts._;\n            modules = config.modules;\n\n            if (modules) {\n                modules.forEach(function (module) {\n                    if (module.name) {\n                        module._sourcePath = buildContext.nameToUrl(module.name);\n                        //If the module does not exist, and this is not a \"new\" module layer,\n                        //as indicated by a true \"create\" property on the module, and\n                        //it is not a plugin-loaded resource, and there is no\n                        //'rawText' containing the module's source then throw an error.\n                        if (!file.exists(module._sourcePath) && !module.create &&\n                                module.name.indexOf('!') === -1 &&\n                                (!config.rawText || !lang.hasProp(config.rawText, module.name))) {\n                            throw new Error(\"ERROR: module path does not exist: \" +\n                                            module._sourcePath + \" for module named: \" + module.name +\n                                            \". Path is relative to: \" + file.absPath('.'));\n                        }\n                    }\n                });\n            }\n\n            if (config.out) {\n                //Just set up the _buildPath for the module layer.\n                require(config);\n                if (!config.cssIn) {\n                    config.modules[0]._buildPath = typeof config.out === 'function' ?\n                                                   'FUNCTION' : config.out;\n                }\n            } else if (!config.cssIn) {\n                //Now set up the config for require to use the build area, and calculate the\n                //build file locations. Pass along any config info too.\n                baseConfig = {\n                    baseUrl: config.dirBaseUrl,\n                    paths: buildPaths\n                };\n\n                lang.mixin(baseConfig, config);\n                require(baseConfig);\n\n                if (modules) {\n                    modules.forEach(function (module) {\n                        if (module.name) {\n                            module._buildPath = buildContext.nameToUrl(module.name, null);\n\n                            //If buildPath and sourcePath are the same, throw since this\n                            //would result in modifying source. This condition can happen\n                            //with some more tricky paths: config and appDir/baseUrl\n                            //setting, which is a sign of incorrect config.\n                            if (module._buildPath === module._sourcePath &&\n                                !config.allowSourceOverwrites) {\n                                throw new Error('Module ID \\'' + module.name  +\n                                                '\\' has a source path that is same as output path: ' +\n                                                module._sourcePath +\n                                                '. Stopping, config is malformed.');\n                            }\n\n                            // Copy the file, but only if it is not provided in rawText.\n                            if (!module.create && (!config.rawText || !lang.hasProp(config.rawText, module.name))) {\n                                file.copyFile(module._sourcePath, module._buildPath);\n                            }\n                        }\n                    });\n                }\n            }\n\n            //Run CSS optimizations before doing JS module tracing, to allow\n            //things like text loader plugins loading CSS to get the optimized\n            //CSS.\n            if (config.optimizeCss && config.optimizeCss !== \"none\" && config.dir) {\n                buildFileContents += optimize.css(config.dir, config);\n            }\n        }).then(function() {\n            baseConfig = copyConfig(require.s.contexts._.config);\n        }).then(function () {\n            var actions = [];\n\n            if (modules) {\n                actions = modules.map(function (module, i) {\n                    return function () {\n                        //Save off buildPath to module index in a hash for quicker\n                        //lookup later.\n                        config._buildPathToModuleIndex[file.normalize(module._buildPath)] = i;\n\n                        //Call require to calculate dependencies.\n                        return build.traceDependencies(module, config, baseConfig)\n                            .then(function (layer) {\n                                module.layer = layer;\n                            });\n                    };\n                });\n\n                return prim.serial(actions);\n            }\n        }).then(function () {\n            var actions;\n\n            if (modules) {\n                //Now build up shadow layers for anything that should be excluded.\n                //Do this after tracing dependencies for each module, in case one\n                //of those modules end up being one of the excluded values.\n                actions = modules.map(function (module) {\n                    return function () {\n                        if (module.exclude) {\n                            module.excludeLayers = [];\n                            return prim.serial(module.exclude.map(function (exclude, i) {\n                                return function () {\n                                    //See if it is already in the list of modules.\n                                    //If not trace dependencies for it.\n                                    var found = build.findBuildModule(exclude, modules);\n                                    if (found) {\n                                        module.excludeLayers[i] = found;\n                                    } else {\n                                        return build.traceDependencies({name: exclude}, config, baseConfig)\n                                            .then(function (layer) {\n                                                module.excludeLayers[i] = { layer: layer };\n                                            });\n                                    }\n                                };\n                            }));\n                        }\n                    };\n                });\n\n                return prim.serial(actions);\n            }\n        }).then(function () {\n            if (modules) {\n                return prim.serial(modules.map(function (module) {\n                    return function () {\n                        if (module.exclude) {\n                            //module.exclude is an array of module names. For each one,\n                            //get the nested dependencies for it via a matching entry\n                            //in the module.excludeLayers array.\n                            module.exclude.forEach(function (excludeModule, i) {\n                                var excludeLayer = module.excludeLayers[i].layer,\n                                    map = excludeLayer.buildFileToModule;\n                                excludeLayer.buildFilePaths.forEach(function(filePath){\n                                    build.removeModulePath(map[filePath], filePath, module.layer);\n                                });\n                            });\n                        }\n                        if (module.excludeShallow) {\n                            //module.excludeShallow is an array of module names.\n                            //shallow exclusions are just that module itself, and not\n                            //its nested dependencies.\n                            module.excludeShallow.forEach(function (excludeShallowModule) {\n                                var path = getOwn(module.layer.buildPathMap, excludeShallowModule);\n                                if (path) {\n                                    build.removeModulePath(excludeShallowModule, path, module.layer);\n                                }\n                            });\n                        }\n\n                        //Flatten them and collect the build output for each module.\n                        return build.flattenModule(module, module.layer, config).then(function (builtModule) {\n                            var finalText, baseName;\n                            //Save it to a temp file for now, in case there are other layers that\n                            //contain optimized content that should not be included in later\n                            //layer optimizations. See issue #56.\n                            if (module._buildPath === 'FUNCTION') {\n                                module._buildText = builtModule.text;\n                                module._buildSourceMap = builtModule.sourceMap;\n                            } else {\n                                finalText = builtModule.text;\n                                if (builtModule.sourceMap) {\n                                    baseName = module._buildPath.split('/');\n                                    baseName = baseName.pop();\n                                    finalText += '\\n//# sourceMappingURL=' + baseName + '.map';\n                                    file.saveUtf8File(module._buildPath + '.map', builtModule.sourceMap);\n                                }\n                                file.saveUtf8File(module._buildPath + '-temp', finalText);\n\n                            }\n                            buildFileContents += builtModule.buildText;\n                        });\n                    };\n                }));\n            }\n        }).then(function () {\n            var moduleName, outOrigSourceMap,\n                bundlesConfig = {},\n                bundlesConfigOutFile = config.bundlesConfigOutFile;\n\n            if (modules) {\n                //Now move the build layers to their final position.\n                modules.forEach(function (module) {\n                    var entryConfig,\n                        finalPath = module._buildPath;\n\n                    if (finalPath !== 'FUNCTION') {\n                        if (file.exists(finalPath)) {\n                            file.deleteFile(finalPath);\n                        }\n                        file.renameFile(finalPath + '-temp', finalPath);\n\n                        //If bundles config should be written out, scan the\n                        //built file for module IDs. Favor doing this reparse\n                        //since tracking the IDs as the file is built has some\n                        //edge cases around files that had more than one ID in\n                        //them already, and likely loader plugin-written contents.\n                        if (bundlesConfigOutFile) {\n                            entryConfig = bundlesConfig[module.name] = [];\n                            var bundleContents = file.readFile(finalPath);\n                            var excludeMap = {};\n                            excludeMap[module.name] = true;\n                            var parsedIds = parse.getAllNamedDefines(bundleContents, excludeMap);\n                            entryConfig.push.apply(entryConfig, parsedIds);\n                        }\n\n                        //And finally, if removeCombined is specified, remove\n                        //any of the files that were used in this layer.\n                        //Be sure not to remove other build layers.\n                        if (config.removeCombined && !config.out) {\n                            module.layer.buildFilePaths.forEach(function (path) {\n                                var isLayer = modules.some(function (mod) {\n                                        return mod._buildPath === path;\n                                    }),\n                                    relPath = build.makeRelativeFilePath(config.dir, path);\n\n                                if (file.exists(path) &&\n                                    // not a build layer target\n                                    !isLayer &&\n                                    // not outside the build directory\n                                    relPath.indexOf('..') !== 0) {\n                                    file.deleteFile(path);\n                                }\n                            });\n                        }\n                    }\n\n                    //Signal layer is done\n                    if (config.onModuleBundleComplete) {\n                        config.onModuleBundleComplete(module.onCompleteData);\n                    }\n                });\n\n                //Write out bundles config, if it is wanted.\n                if (bundlesConfigOutFile) {\n                    var text = file.readFile(bundlesConfigOutFile);\n                    text = transform.modifyConfig(text, function (config) {\n                        if (!config.bundles) {\n                            config.bundles = {};\n                        }\n\n                        lang.eachProp(bundlesConfig, function (value, prop) {\n                            config.bundles[prop] = value;\n                        });\n\n                        return config;\n                    });\n\n                    file.saveUtf8File(bundlesConfigOutFile, text);\n                }\n            }\n\n            //If removeCombined in play, remove any empty directories that\n            //may now exist because of its use\n            if (config.removeCombined && !config.out && config.dir) {\n                file.deleteEmptyDirs(config.dir);\n            }\n\n            //Do other optimizations.\n            if (config.out && !config.cssIn) {\n                //Just need to worry about one JS file.\n                fileName = config.modules[0]._buildPath;\n                if (fileName === 'FUNCTION') {\n                    outOrigSourceMap = config.modules[0]._buildSourceMap;\n                    config._buildSourceMap = outOrigSourceMap;\n                    config.modules[0]._buildText = optimize.js((config.modules[0].name ||\n                                                                config.modules[0].include[0] ||\n                                                                fileName) + '.build.js',\n                                                               config.modules[0]._buildText,\n                                                               null,\n                                                               config);\n                    if (config._buildSourceMap && config._buildSourceMap !== outOrigSourceMap) {\n                        config.modules[0]._buildSourceMap = config._buildSourceMap;\n                        config._buildSourceMap = null;\n                    }\n                } else {\n                    optimize.jsFile(fileName, null, fileName, config);\n                }\n            } else if (!config.cssIn) {\n                //Normal optimizations across modules.\n\n                //JS optimizations.\n                fileNames = file.getFilteredFileList(config.dir, /\\.js$/, true);\n                fileNames.forEach(function (fileName) {\n                    var cfg, override, moduleIndex;\n\n                    //Generate the module name from the config.dir root.\n                    moduleName = fileName.replace(config.dir, '');\n                    //Get rid of the extension\n                    moduleName = moduleName.substring(0, moduleName.length - 3);\n\n                    //If there is an override for a specific layer build module,\n                    //and this file is that module, mix in the override for use\n                    //by optimize.jsFile.\n                    moduleIndex = getOwn(config._buildPathToModuleIndex, fileName);\n                    //Normalize, since getOwn could have returned undefined\n                    moduleIndex = moduleIndex === 0 || moduleIndex > 0 ? moduleIndex : -1;\n\n                    //Try to avoid extra work if the other files do not need to\n                    //be read. Build layers should be processed at the very\n                    //least for optimization.\n                    if (moduleIndex > -1 || !config.skipDirOptimize ||\n                            config.normalizeDirDefines === \"all\" ||\n                            config.cjsTranslate) {\n                        //Convert the file to transport format, but without a name\n                        //inserted (by passing null for moduleName) since the files are\n                        //standalone, one module per file.\n                        fileContents = file.readFile(fileName);\n\n\n                        //For builds, if wanting cjs translation, do it now, so that\n                        //the individual modules can be loaded cross domain via\n                        //plain script tags.\n                        if (config.cjsTranslate &&\n                            (!config.shim || !lang.hasProp(config.shim, moduleName))) {\n                            fileContents = commonJs.convert(fileName, fileContents);\n                        }\n\n                        if (moduleIndex === -1) {\n                            if (config.onBuildRead) {\n                                fileContents = config.onBuildRead(moduleName,\n                                                                  fileName,\n                                                                  fileContents);\n                            }\n\n                            //Only do transport normalization if this is not a build\n                            //layer (since it was already normalized) and if\n                            //normalizeDirDefines indicated all should be done.\n                            if (config.normalizeDirDefines === \"all\") {\n                                fileContents = build.toTransport(config.namespace,\n                                                             null,\n                                                             fileName,\n                                                             fileContents);\n                            }\n\n                            if (config.onBuildWrite) {\n                                fileContents = config.onBuildWrite(moduleName,\n                                                                   fileName,\n                                                                   fileContents);\n                            }\n                        }\n\n                        override = moduleIndex > -1 ?\n                                   config.modules[moduleIndex].override : null;\n                        if (override) {\n                            cfg = build.createOverrideConfig(config, override);\n                        } else {\n                            cfg = config;\n                        }\n\n                        if (moduleIndex > -1 || !config.skipDirOptimize) {\n                            optimize.jsFile(fileName, fileContents, fileName, cfg, pluginCollector);\n                        }\n                    }\n                });\n\n                //Normalize all the plugin resources.\n                context = require.s.contexts._;\n\n                for (moduleName in pluginCollector) {\n                    if (hasProp(pluginCollector, moduleName)) {\n                        parentModuleMap = context.makeModuleMap(moduleName);\n                        resources = pluginCollector[moduleName];\n                        for (i = 0; i < resources.length; i++) {\n                            resource = resources[i];\n                            moduleMap = context.makeModuleMap(resource, parentModuleMap);\n                            if (falseProp(context.plugins, moduleMap.prefix)) {\n                                //Set the value in context.plugins so it\n                                //will be evaluated as a full plugin.\n                                context.plugins[moduleMap.prefix] = true;\n\n                                //Do not bother if the plugin is not available.\n                                if (!file.exists(require.toUrl(moduleMap.prefix + '.js'))) {\n                                    continue;\n                                }\n\n                                //Rely on the require in the build environment\n                                //to be synchronous\n                                context.require([moduleMap.prefix]);\n\n                                //Now that the plugin is loaded, redo the moduleMap\n                                //since the plugin will need to normalize part of the path.\n                                moduleMap = context.makeModuleMap(resource, parentModuleMap);\n                            }\n\n                            //Only bother with plugin resources that can be handled\n                            //processed by the plugin, via support of the writeFile\n                            //method.\n                            if (falseProp(pluginProcessed, moduleMap.id)) {\n                                //Only do the work if the plugin was really loaded.\n                                //Using an internal access because the file may\n                                //not really be loaded.\n                                plugin = getOwn(context.defined, moduleMap.prefix);\n                                if (plugin && plugin.writeFile) {\n                                    plugin.writeFile(\n                                        moduleMap.prefix,\n                                        moduleMap.name,\n                                        require,\n                                        makeWriteFile(\n                                            config.namespace\n                                        ),\n                                        context.config\n                                    );\n                                }\n\n                                pluginProcessed[moduleMap.id] = true;\n                            }\n                        }\n\n                    }\n                }\n\n                //console.log('PLUGIN COLLECTOR: ' + JSON.stringify(pluginCollector, null, \"  \"));\n\n\n                //All module layers are done, write out the build.txt file.\n                if (config.writeBuildTxt) {\n                    file.saveUtf8File(config.dir + \"build.txt\", buildFileContents);\n                }\n            }\n\n            //If just have one CSS file to optimize, do that here.\n            if (config.cssIn) {\n                buildFileContents += optimize.cssFile(config.cssIn, config.out, config).buildText;\n            }\n\n            if (typeof config.out === 'function') {\n                config.out(config.modules[0]._buildText, config.modules[0]._buildSourceMap);\n            }\n\n            //Print out what was built into which layers.\n            if (buildFileContents) {\n                logger.info(buildFileContents);\n                return buildFileContents;\n            }\n\n            return '';\n        });\n    };\n\n    /**\n     * Converts command line args like \"paths.foo=../some/path\"\n     * result.paths = { foo: '../some/path' } where prop = paths,\n     * name = paths.foo and value = ../some/path, so it assumes the\n     * name=value splitting has already happened.\n     */\n    function stringDotToObj(result, name, value) {\n        var parts = name.split('.');\n\n        parts.forEach(function (prop, i) {\n            if (i === parts.length - 1) {\n                result[prop] = value;\n            } else {\n                if (falseProp(result, prop)) {\n                    result[prop] = {};\n                }\n                result = result[prop];\n            }\n\n        });\n    }\n\n    build.objProps = {\n        paths: true,\n        wrap: true,\n        pragmas: true,\n        pragmasOnSave: true,\n        has: true,\n        hasOnSave: true,\n        uglify: true,\n        uglify2: true,\n        closure: true,\n        map: true,\n        throwWhen: true,\n        rawText: true\n    };\n\n    build.hasDotPropMatch = function (prop) {\n        var dotProp,\n            index = prop.indexOf('.');\n\n        if (index !== -1) {\n            dotProp = prop.substring(0, index);\n            return hasProp(build.objProps, dotProp);\n        }\n        return false;\n    };\n\n    /**\n     * Converts an array that has String members of \"name=value\"\n     * into an object, where the properties on the object are the names in the array.\n     * Also converts the strings \"true\" and \"false\" to booleans for the values.\n     * member name/value pairs, and converts some comma-separated lists into\n     * arrays.\n     * @param {Array} ary\n     */\n    build.convertArrayToObject = function (ary) {\n        var result = {}, i, separatorIndex, prop, value,\n            needArray = {\n                \"include\": true,\n                \"exclude\": true,\n                \"excludeShallow\": true,\n                \"insertRequire\": true,\n                \"stubModules\": true,\n                \"deps\": true,\n                \"mainConfigFile\": true,\n                \"wrap.startFile\": true,\n                \"wrap.endFile\": true\n            };\n\n        for (i = 0; i < ary.length; i++) {\n            separatorIndex = ary[i].indexOf(\"=\");\n            if (separatorIndex === -1) {\n                throw \"Malformed name/value pair: [\" + ary[i] + \"]. Format should be name=value\";\n            }\n\n            value = ary[i].substring(separatorIndex + 1, ary[i].length);\n            if (value === \"true\") {\n                value = true;\n            } else if (value === \"false\") {\n                value = false;\n            }\n\n            prop = ary[i].substring(0, separatorIndex);\n\n            //Convert to array if necessary\n            if (getOwn(needArray, prop)) {\n                value = value.split(\",\");\n            }\n\n            if (build.hasDotPropMatch(prop)) {\n                stringDotToObj(result, prop, value);\n            } else {\n                result[prop] = value;\n            }\n        }\n        return result; //Object\n    };\n\n    build.makeAbsPath = function (path, absFilePath) {\n        if (!absFilePath) {\n            return path;\n        }\n\n        //Add abspath if necessary. If path starts with a slash or has a colon,\n        //then already is an abolute path.\n        if (path.indexOf('/') !== 0 && path.indexOf(':') === -1) {\n            path = absFilePath +\n                   (absFilePath.charAt(absFilePath.length - 1) === '/' ? '' : '/') +\n                   path;\n            path = file.normalize(path);\n        }\n        return path.replace(lang.backSlashRegExp, '/');\n    };\n\n    build.makeAbsObject = function (props, obj, absFilePath) {\n        var i, prop;\n        if (obj) {\n            for (i = 0; i < props.length; i++) {\n                prop = props[i];\n                if (hasProp(obj, prop) && typeof obj[prop] === 'string') {\n                    obj[prop] = build.makeAbsPath(obj[prop], absFilePath);\n                }\n            }\n        }\n    };\n\n    /**\n     * For any path in a possible config, make it absolute relative\n     * to the absFilePath passed in.\n     */\n    build.makeAbsConfig = function (config, absFilePath) {\n        var props, prop, i;\n\n        props = [\"appDir\", \"dir\", \"baseUrl\"];\n        for (i = 0; i < props.length; i++) {\n            prop = props[i];\n\n            if (getOwn(config, prop)) {\n                //Add abspath if necessary, make sure these paths end in\n                //slashes\n                if (prop === \"baseUrl\") {\n                    config.originalBaseUrl = config.baseUrl;\n                    if (config.appDir) {\n                        //If baseUrl with an appDir, the baseUrl is relative to\n                        //the appDir, *not* the absFilePath. appDir and dir are\n                        //made absolute before baseUrl, so this will work.\n                        config.baseUrl = build.makeAbsPath(config.originalBaseUrl, config.appDir);\n                    } else {\n                        //The dir output baseUrl is same as regular baseUrl, both\n                        //relative to the absFilePath.\n                        config.baseUrl = build.makeAbsPath(config[prop], absFilePath);\n                    }\n                } else {\n                    config[prop] = build.makeAbsPath(config[prop], absFilePath);\n                }\n\n                config[prop] = endsWithSlash(config[prop]);\n            }\n        }\n\n        build.makeAbsObject((config.out === \"stdout\" ? [\"cssIn\"] : [\"out\", \"cssIn\"]),\n                            config, absFilePath);\n        build.makeAbsObject([\"startFile\", \"endFile\"], config.wrap, absFilePath);\n        build.makeAbsObject([\"externExportsPath\"], config.closure, absFilePath);\n    };\n\n    /**\n     * Creates a relative path to targetPath from refPath.\n     * Only deals with file paths, not folders. If folders,\n     * make sure paths end in a trailing '/'.\n     */\n    build.makeRelativeFilePath = function (refPath, targetPath) {\n        var i, dotLength, finalParts, length, targetParts, targetName,\n            refParts = refPath.split('/'),\n            hasEndSlash = endsWithSlashRegExp.test(targetPath),\n            dotParts = [];\n\n        targetPath = file.normalize(targetPath);\n        if (hasEndSlash && !endsWithSlashRegExp.test(targetPath)) {\n            targetPath += '/';\n        }\n        targetParts = targetPath.split('/');\n        //Pull off file name\n        targetName = targetParts.pop();\n\n        //Also pop off the ref file name to make the matches against\n        //targetParts equivalent.\n        refParts.pop();\n\n        length = refParts.length;\n\n        for (i = 0; i < length; i += 1) {\n            if (refParts[i] !== targetParts[i]) {\n                break;\n            }\n        }\n\n        //Now i is the index in which they diverge.\n        finalParts = targetParts.slice(i);\n\n        dotLength = length - i;\n        for (i = 0; i > -1 && i < dotLength; i += 1) {\n            dotParts.push('..');\n        }\n\n        return dotParts.join('/') + (dotParts.length ? '/' : '') +\n               finalParts.join('/') + (finalParts.length ? '/' : '') +\n               targetName;\n    };\n\n    build.nestedMix = {\n        paths: true,\n        has: true,\n        hasOnSave: true,\n        pragmas: true,\n        pragmasOnSave: true\n    };\n\n    /**\n     * Mixes additional source config into target config, and merges some\n     * nested config, like paths, correctly.\n     */\n    function mixConfig(target, source, skipArrays) {\n        var prop, value, isArray, targetValue;\n\n        for (prop in source) {\n            if (hasProp(source, prop)) {\n                //If the value of the property is a plain object, then\n                //allow a one-level-deep mixing of it.\n                value = source[prop];\n                isArray = lang.isArray(value);\n                if (typeof value === 'object' && value &&\n                        !isArray && !lang.isFunction(value) &&\n                        !lang.isRegExp(value)) {\n\n                    // TODO: need to generalize this work, maybe also reuse\n                    // the work done in requirejs configure, perhaps move to\n                    // just a deep copy/merge overall. However, given the\n                    // amount of observable change, wait for a dot release.\n                    // This change is in relation to #645\n                    if (prop === 'map') {\n                        if (!target.map) {\n                            target.map = {};\n                        }\n                        lang.deepMix(target.map, source.map);\n                    } else {\n                        target[prop] = lang.mixin({}, target[prop], value, true);\n                    }\n                } else if (isArray) {\n                    if (!skipArrays) {\n                        // Some config, like packages, are arrays. For those,\n                        // just merge the results.\n                        targetValue = target[prop];\n                        if (lang.isArray(targetValue)) {\n                            target[prop] = targetValue.concat(value);\n                        } else {\n                            target[prop] = value;\n                        }\n                    }\n                } else {\n                    target[prop] = value;\n                }\n            }\n        }\n\n        //Set up log level since it can affect if errors are thrown\n        //or caught and passed to errbacks while doing config setup.\n        if (lang.hasProp(target, 'logLevel')) {\n            logger.logLevel(target.logLevel);\n        }\n    }\n\n    /**\n     * Converts a wrap.startFile or endFile to be start/end as a string.\n     * the startFile/endFile values can be arrays.\n     */\n    function flattenWrapFile(config, keyName, absFilePath) {\n        var wrap = config.wrap,\n            keyFileName = keyName + 'File',\n            keyMapName = '__' + keyName + 'Map';\n\n        if (typeof wrap[keyName] !== 'string' && wrap[keyFileName]) {\n            wrap[keyName] = '';\n            if (typeof wrap[keyFileName] === 'string') {\n                wrap[keyFileName] = [wrap[keyFileName]];\n            }\n            wrap[keyMapName] = [];\n            wrap[keyFileName].forEach(function (fileName) {\n                var absPath = build.makeAbsPath(fileName, absFilePath),\n                    fileText = endsWithNewLine(file.readFile(absPath));\n                wrap[keyMapName].push(function (fileContents, cfg, sourceMapGenerator) {\n                    return appendToFileContents(fileContents, fileText, absPath, cfg, null, sourceMapGenerator);\n                });\n                wrap[keyName] += fileText;\n            });\n        } else if (wrap[keyName] === null ||  wrap[keyName] === undefined) {\n            //Allow missing one, just set to empty string.\n            wrap[keyName] = '';\n        } else if (typeof wrap[keyName] === 'string') {\n            wrap[keyName] = endsWithNewLine(wrap[keyName]);\n            wrap[keyMapName] = [\n                function (fileContents, cfg, sourceMapGenerator) {\n                    var absPath = build.makeAbsPath(\"config-wrap-\" + keyName + \"-default.js\", absFilePath);\n                    return appendToFileContents(fileContents, wrap[keyName], absPath, cfg, null, sourceMapGenerator);\n                }\n            ];\n        } else {\n            throw new Error('wrap.' + keyName + ' or wrap.' + keyFileName + ' malformed');\n        }\n    }\n\n    function normalizeWrapConfig(config, absFilePath) {\n        //Get any wrap text.\n        try {\n            if (config.wrap) {\n                if (config.wrap === true) {\n                    //Use default values.\n                    config.wrap = {\n                        start: '(function () {\\n',\n                        end: '}());',\n                        __startMap: [\n                            function (fileContents, cfg, sourceMapGenerator) {\n                                return appendToFileContents(fileContents, \"(function () {\\n\",\n                                                            build.makeAbsPath(\"config-wrap-start-default.js\",\n                                                                              absFilePath), cfg, null,\n                                                            sourceMapGenerator);\n                            }\n                        ],\n                        __endMap: [\n                            function (fileContents, cfg, sourceMapGenerator) {\n                                return appendToFileContents(fileContents, \"}());\",\n                                                            build.makeAbsPath(\"config-wrap-end-default.js\", absFilePath),\n                                                            cfg, null, sourceMapGenerator);\n                            }\n                        ]\n                    };\n                } else {\n                    flattenWrapFile(config, 'start', absFilePath);\n                    flattenWrapFile(config, 'end', absFilePath);\n                }\n            }\n        } catch (wrapError) {\n            throw new Error('Malformed wrap config: ' + wrapError.toString());\n        }\n    }\n\n    /**\n     * Creates a config object for an optimization build.\n     * It will also read the build profile if it is available, to create\n     * the configuration.\n     *\n     * @param {Object} cfg config options that take priority\n     * over defaults and ones in the build file. These options could\n     * be from a command line, for instance.\n     *\n     * @param {Object} the created config object.\n     */\n    build.createConfig = function (cfg) {\n        /*jslint evil: true */\n        var buildFileContents, buildFileConfig, mainConfig,\n            mainConfigFile, mainConfigPath, buildFile, absFilePath,\n            config = {},\n            buildBaseConfig = makeBuildBaseConfig();\n\n        //Make sure all paths are relative to current directory.\n        absFilePath = file.absPath('.');\n        build.makeAbsConfig(cfg, absFilePath);\n        build.makeAbsConfig(buildBaseConfig, absFilePath);\n\n        lang.mixin(config, buildBaseConfig);\n        lang.mixin(config, cfg, true);\n\n        //Set up log level early since it can affect if errors are thrown\n        //or caught and passed to errbacks, even while constructing config.\n        if (lang.hasProp(config, 'logLevel')) {\n            logger.logLevel(config.logLevel);\n        }\n\n        if (config.buildFile) {\n            //A build file exists, load it to get more config.\n            buildFile = file.absPath(config.buildFile);\n\n            //Find the build file, and make sure it exists, if this is a build\n            //that has a build profile, and not just command line args with an in=path\n            if (!file.exists(buildFile)) {\n                throw new Error(\"ERROR: build file does not exist: \" + buildFile);\n            }\n\n            absFilePath = config.baseUrl = file.absPath(file.parent(buildFile));\n\n            //Load build file options.\n            buildFileContents = file.readFile(buildFile);\n            try {\n                //Be a bit lenient in the file ending in a ; or ending with\n                //a //# sourceMappingUrl comment, mostly for compiled languages\n                //that create a config, like typescript.\n                buildFileContents = buildFileContents\n                                    .replace(/\\/\\/\\#[^\\n\\r]+[\\n\\r]*$/, '')\n                                    .trim()\n                                    .replace(/;$/, '');\n\n                buildFileConfig = eval(\"(\" + buildFileContents + \")\");\n                build.makeAbsConfig(buildFileConfig, absFilePath);\n\n                //Mix in the config now so that items in mainConfigFile can\n                //be resolved relative to them if necessary, like if appDir\n                //is set here, but the baseUrl is in mainConfigFile. Will\n                //re-mix in the same build config later after mainConfigFile\n                //is processed, since build config should take priority.\n                mixConfig(config, buildFileConfig);\n            } catch (e) {\n                throw new Error(\"Build file \" + buildFile + \" is malformed: \" + e);\n            }\n        }\n\n        mainConfigFile = config.mainConfigFile || (buildFileConfig && buildFileConfig.mainConfigFile);\n        if (mainConfigFile) {\n            if (typeof mainConfigFile === 'string') {\n                mainConfigFile = [mainConfigFile];\n            }\n\n            mainConfigFile.forEach(function (configFile) {\n                configFile = build.makeAbsPath(configFile, absFilePath);\n                if (!file.exists(configFile)) {\n                    throw new Error(configFile + ' does not exist.');\n                }\n                try {\n                    mainConfig = parse.findConfig(file.readFile(configFile)).config;\n                } catch (configError) {\n                    throw new Error('The config in mainConfigFile ' +\n                            configFile +\n                            ' cannot be used because it cannot be evaluated' +\n                            ' correctly while running in the optimizer. Try only' +\n                            ' using a config that is also valid JSON, or do not use' +\n                            ' mainConfigFile and instead copy the config values needed' +\n                            ' into a build file or command line arguments given to the optimizer.\\n' +\n                            'Source error from parsing: ' + configFile + ': ' + configError);\n                }\n                if (mainConfig) {\n                    mainConfigPath = configFile.substring(0, configFile.lastIndexOf('/'));\n\n                    //Add in some existing config, like appDir, since they can be\n                    //used inside the configFile -- paths and baseUrl are\n                    //relative to them.\n                    if (config.appDir && !mainConfig.appDir) {\n                        mainConfig.appDir = config.appDir;\n                    }\n\n                    //If no baseUrl, then use the directory holding the main config.\n                    if (!mainConfig.baseUrl) {\n                        mainConfig.baseUrl = mainConfigPath;\n                    }\n\n                    build.makeAbsConfig(mainConfig, mainConfigPath);\n                    mixConfig(config, mainConfig);\n                }\n            });\n        }\n\n        //Mix in build file config, but only after mainConfig has been mixed in.\n        //Since this is a re-application, skip array merging.\n        if (buildFileConfig) {\n            mixConfig(config, buildFileConfig, true);\n        }\n\n        //Re-apply the override config values. Command line\n        //args should take precedence over build file values.\n        //Since this is a re-application, skip array merging.\n        mixConfig(config, cfg, true);\n\n        //Fix paths to full paths so that they can be adjusted consistently\n        //lately to be in the output area.\n        lang.eachProp(config.paths, function (value, prop) {\n            if (lang.isArray(value)) {\n                throw new Error('paths fallback not supported in optimizer. ' +\n                                'Please provide a build config path override ' +\n                                'for ' + prop);\n            }\n            config.paths[prop] = build.makeAbsPath(value, config.baseUrl);\n        });\n\n        //Set final output dir\n        if (hasProp(config, \"baseUrl\")) {\n            if (config.appDir) {\n                if (!config.originalBaseUrl) {\n                    throw new Error('Please set a baseUrl in the build config');\n                }\n                config.dirBaseUrl = build.makeAbsPath(config.originalBaseUrl, config.dir);\n            } else {\n                config.dirBaseUrl = config.dir || config.baseUrl;\n            }\n            //Make sure dirBaseUrl ends in a slash, since it is\n            //concatenated with other strings.\n            config.dirBaseUrl = endsWithSlash(config.dirBaseUrl);\n        }\n\n        if (config.bundlesConfigOutFile) {\n            if (!config.dir) {\n                throw new Error('bundlesConfigOutFile can only be used with optimizations ' +\n                                'that use \"dir\".');\n            }\n            config.bundlesConfigOutFile = build.makeAbsPath(config.bundlesConfigOutFile, config.dir);\n        }\n\n        //If out=stdout, write output to STDOUT instead of a file.\n        if (config.out && config.out === 'stdout') {\n            config.out = function (content) {\n                var e = env.get();\n                if (e === 'rhino') {\n                    var out = new java.io.PrintStream(java.lang.System.out, true, 'UTF-8');\n                    out.println(content);\n                } else if (e === 'node') {\n                    process.stdout.write(content, 'utf8');\n                } else {\n                    console.log(content);\n                }\n            };\n        }\n\n        //Check for errors in config\n        if (config.main) {\n            throw new Error('\"main\" passed as an option, but the ' +\n                            'supported option is called \"name\".');\n        }\n        if (config.out && !config.name && !config.modules && !config.include &&\n                !config.cssIn) {\n            throw new Error('Missing either a \"name\", \"include\" or \"modules\" ' +\n                            'option');\n        }\n        if (config.cssIn) {\n            if (config.dir || config.appDir) {\n                throw new Error('cssIn is only for the output of single file ' +\n                    'CSS optimizations and is not compatible with \"dir\" or \"appDir\" configuration.');\n            }\n            if (!config.out) {\n                throw new Error('\"out\" option missing.');\n            }\n        }\n        if (!config.cssIn && !config.baseUrl) {\n            //Just use the current directory as the baseUrl\n            config.baseUrl = './';\n        }\n        if (!config.out && !config.dir) {\n            throw new Error('Missing either an \"out\" or \"dir\" config value. ' +\n                            'If using \"appDir\" for a full project optimization, ' +\n                            'use \"dir\". If you want to optimize to one file, ' +\n                            'use \"out\".');\n        }\n        if (config.appDir && config.out) {\n            throw new Error('\"appDir\" is not compatible with \"out\". Use \"dir\" ' +\n                            'instead. appDir is used to copy whole projects, ' +\n                            'where \"out\" with \"baseUrl\" is used to just ' +\n                            'optimize to one file.');\n        }\n        if (config.out && config.dir) {\n            throw new Error('The \"out\" and \"dir\" options are incompatible.' +\n                            ' Use \"out\" if you are targeting a single file' +\n                            ' for optimization, and \"dir\" if you want the appDir' +\n                            ' or baseUrl directories optimized.');\n        }\n\n\n        if (config.dir) {\n            // Make sure the output dir is not set to a parent of the\n            // source dir or the same dir, as it will result in source\n            // code deletion.\n            if (!config.allowSourceOverwrites && (config.dir === config.baseUrl ||\n                config.dir === config.appDir ||\n                (config.baseUrl && build.makeRelativeFilePath(config.dir,\n                                           config.baseUrl).indexOf('..') !== 0) ||\n                (config.appDir &&\n                    build.makeRelativeFilePath(config.dir, config.appDir).indexOf('..') !== 0))) {\n                throw new Error('\"dir\" is set to a parent or same directory as' +\n                                ' \"appDir\" or \"baseUrl\". This can result in' +\n                                ' the deletion of source code. Stopping. If' +\n                                ' you want to allow possible overwriting of' +\n                                ' source code, set \"allowSourceOverwrites\"' +\n                                ' to true in the build config, but do so at' +\n                                ' your own risk. In that case, you may want' +\n                                ' to also set \"keepBuildDir\" to true.');\n            }\n        }\n\n        if (config.insertRequire && !lang.isArray(config.insertRequire)) {\n            throw new Error('insertRequire should be a list of module IDs' +\n                            ' to insert in to a require([]) call.');\n        }\n\n        //Support older configs with uglify2 settings, but now that uglify1 has\n        //been removed, just translate it to 'uglify' settings.\n        if (config.optimize === 'uglify2') {\n            config.optimize = 'uglify';\n        }\n        if (config.uglify2) {\n            config.uglify = config.uglify2;\n            delete config.uglify2;\n        }\n\n        if (config.generateSourceMaps) {\n            if (config.preserveLicenseComments && !(config.optimize === 'none' || config.optimize === 'uglify')) {\n                throw new Error('Cannot use preserveLicenseComments and ' +\n                    'generateSourceMaps together, unless optimize is set ' +\n                    'to \\'uglify\\'. Either explicitly set preserveLicenseComments ' +\n                    'to false (default is true) or turn off generateSourceMaps. ' +\n                    'If you want source maps with license comments, see: ' +\n                    'http://requirejs.org/docs/errors.html#sourcemapcomments');\n            } else if (config.optimize !== 'none' &&\n                       config.optimize !== 'closure' &&\n                       config.optimize !== 'uglify') {\n                //Allow optimize: none to pass, since it is useful when toggling\n                //minification on and off to debug something, and it implicitly\n                //works, since it does not need a source map.\n                throw new Error('optimize: \"' + config.optimize +\n                    '\" does not support generateSourceMaps.');\n            }\n        }\n\n        if ((config.name || config.include) && !config.modules) {\n            //Just need to build one file, but may be part of a whole appDir/\n            //baseUrl copy, but specified on the command line, so cannot do\n            //the modules array setup. So create a modules section in that\n            //case.\n            config.modules = [\n                {\n                    name: config.name,\n                    out: config.out,\n                    create: config.create,\n                    include: config.include,\n                    exclude: config.exclude,\n                    excludeShallow: config.excludeShallow,\n                    insertRequire: config.insertRequire,\n                    stubModules: config.stubModules\n                }\n            ];\n            delete config.stubModules;\n        } else if (config.modules && config.out) {\n            throw new Error('If the \"modules\" option is used, then there ' +\n                            'should be a \"dir\" option set and \"out\" should ' +\n                            'not be used since \"out\" is only for single file ' +\n                            'optimization output.');\n        } else if (config.modules && config.name) {\n            throw new Error('\"name\" and \"modules\" options are incompatible. ' +\n                            'Either use \"name\" if doing a single file ' +\n                            'optimization, or \"modules\" if you want to target ' +\n                            'more than one file for optimization.');\n        }\n\n        if (config.out && !config.cssIn) {\n            //Just one file to optimize.\n\n            //Does not have a build file, so set up some defaults.\n            //Optimizing CSS should not be allowed, unless explicitly\n            //asked for on command line. In that case the only task is\n            //to optimize a CSS file.\n            if (!cfg.optimizeCss) {\n                config.optimizeCss = \"none\";\n            }\n        }\n\n        //Normalize cssPrefix\n        if (config.cssPrefix) {\n            //Make sure cssPrefix ends in a slash\n            config.cssPrefix = endsWithSlash(config.cssPrefix);\n        } else {\n            config.cssPrefix = '';\n        }\n\n        //Cycle through modules and normalize\n        if (config.modules && config.modules.length) {\n            config.modules.forEach(function (mod) {\n                if (lang.isArray(mod) || typeof mod === 'string' || !mod) {\n                    throw new Error('modules config item is malformed: it should' +\n                                    ' be an object with a \\'name\\' property.');\n                }\n\n                //Combine any local stubModules with global values.\n                if (config.stubModules) {\n                    mod.stubModules = config.stubModules.concat(mod.stubModules || []);\n                }\n\n                //Create a hash lookup for the stubModules config to make lookup\n                //cheaper later.\n                if (mod.stubModules) {\n                    mod.stubModules._byName = {};\n                    mod.stubModules.forEach(function (id) {\n                        mod.stubModules._byName[id] = true;\n                    });\n                }\n\n                // Legacy command support, which allowed a single string ID\n                // for include.\n                if (typeof mod.include === 'string') {\n                    mod.include = [mod.include];\n                }\n\n                //Allow wrap config in overrides, but normalize it.\n                if (mod.override) {\n                    normalizeWrapConfig(mod.override, absFilePath);\n                }\n            });\n        }\n\n        normalizeWrapConfig(config, absFilePath);\n\n        //Do final input verification\n        if (config.context) {\n            throw new Error('The build argument \"context\" is not supported' +\n                            ' in a build. It should only be used in web' +\n                            ' pages.');\n        }\n\n        //Set up normalizeDirDefines. If not explicitly set, if optimize \"none\",\n        //set to \"skip\" otherwise set to \"all\".\n        if (!hasProp(config, 'normalizeDirDefines')) {\n            if (config.optimize === 'none' || config.skipDirOptimize) {\n                config.normalizeDirDefines = 'skip';\n            } else {\n                config.normalizeDirDefines = 'all';\n            }\n        }\n\n        //Set file.fileExclusionRegExp if desired\n        if (hasProp(config, 'fileExclusionRegExp')) {\n            if (typeof config.fileExclusionRegExp === \"string\") {\n                file.exclusionRegExp = new RegExp(config.fileExclusionRegExp);\n            } else {\n                file.exclusionRegExp = config.fileExclusionRegExp;\n            }\n        } else if (hasProp(config, 'dirExclusionRegExp')) {\n            //Set file.dirExclusionRegExp if desired, this is the old\n            //name for fileExclusionRegExp before 1.0.2. Support for backwards\n            //compatibility\n            file.exclusionRegExp = config.dirExclusionRegExp;\n        }\n\n        //Track the deps, but in a different key, so that they are not loaded\n        //as part of config seeding before all config is in play (#648). Was\n        //going to merge this in with \"include\", but include is added after\n        //the \"name\" target. To preserve what r.js has done previously, make\n        //sure \"deps\" comes before the \"name\".\n        if (config.deps) {\n            config._depsInclude = config.deps;\n        }\n\n\n        //Remove things that may cause problems in the build.\n        //deps already merged above\n        delete config.deps;\n        delete config.jQuery;\n        delete config.enforceDefine;\n        delete config.urlArgs;\n\n        return config;\n    };\n\n    /**\n     * finds the module being built/optimized with the given moduleName,\n     * or returns null.\n     * @param {String} moduleName\n     * @param {Array} modules\n     * @returns {Object} the module object from the build profile, or null.\n     */\n    build.findBuildModule = function (moduleName, modules) {\n        var i, module;\n        for (i = 0; i < modules.length; i++) {\n            module = modules[i];\n            if (module.name === moduleName) {\n                return module;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Removes a module name and path from a layer, if it is supposed to be\n     * excluded from the layer.\n     * @param {String} moduleName the name of the module\n     * @param {String} path the file path for the module\n     * @param {Object} layer the layer to remove the module/path from\n     */\n    build.removeModulePath = function (module, path, layer) {\n        var index = layer.buildFilePaths.indexOf(path);\n        if (index !== -1) {\n            layer.buildFilePaths.splice(index, 1);\n        }\n    };\n\n    /**\n     * Uses the module build config object to trace the dependencies for the\n     * given module.\n     *\n     * @param {Object} module the module object from the build config info.\n     * @param {Object} config the build config object.\n     * @param {Object} [baseLoaderConfig] the base loader config to use for env resets.\n     *\n     * @returns {Object} layer information about what paths and modules should\n     * be in the flattened module.\n     */\n    build.traceDependencies = function (module, config, baseLoaderConfig) {\n        var include, override, layer, context, oldContext,\n            rawTextByIds,\n            syncChecks = {\n                rhino: true,\n                node: true,\n                xpconnect: true\n            },\n            deferred = prim();\n\n        //Reset some state set up in requirePatch.js, and clean up require's\n        //current context.\n        oldContext = require._buildReset();\n\n        //Grab the reset layer and context after the reset, but keep the\n        //old config to reuse in the new context.\n        layer = require._layer;\n        context = layer.context;\n\n        //Put back basic config, use a fresh object for it.\n        if (baseLoaderConfig) {\n            require(copyConfig(baseLoaderConfig));\n        }\n\n        logger.trace(\"\\nTracing dependencies for: \" + (module.name ||\n                     (typeof module.out === 'function' ? 'FUNCTION' : module.out)));\n        include = config._depsInclude ||  [];\n        include = include.concat(module.name && !module.create ? [module.name] : []);\n        if (module.include) {\n            include = include.concat(module.include);\n        }\n\n        //If there are overrides to basic config, set that up now.;\n        if (module.override) {\n            if (baseLoaderConfig) {\n                override = build.createOverrideConfig(baseLoaderConfig, module.override);\n            } else {\n                override = copyConfig(module.override);\n            }\n            require(override);\n        }\n\n        //Now, populate the rawText cache with any values explicitly passed in\n        //via config.\n        rawTextByIds = require.s.contexts._.config.rawText;\n        if (rawTextByIds) {\n            lang.eachProp(rawTextByIds, function (contents, id) {\n                var url = require.toUrl(id) + '.js';\n                require._cachedRawText[url] = contents;\n            });\n        }\n\n\n        //Configure the callbacks to be called.\n        deferred.reject.__requireJsBuild = true;\n\n        //Use a wrapping function so can check for errors.\n        function includeFinished(value) {\n            //If a sync build environment, check for errors here, instead of\n            //in the then callback below, since some errors, like two IDs pointed\n            //to same URL but only one anon ID will leave the loader in an\n            //unresolved state since a setTimeout cannot be used to check for\n            //timeout.\n            var hasError = false;\n            if (syncChecks[env.get()]) {\n                try {\n                    build.checkForErrors(context, layer);\n                } catch (e) {\n                    hasError = true;\n                    deferred.reject(e);\n                }\n            }\n\n            if (!hasError) {\n                deferred.resolve(value);\n            }\n        }\n        includeFinished.__requireJsBuild = true;\n\n        //Figure out module layer dependencies by calling require to do the work.\n        require(include, includeFinished, deferred.reject);\n\n        // If a sync env, then with the \"two IDs to same anon module path\"\n        // issue, the require never completes, need to check for errors\n        // here.\n        if (syncChecks[env.get()]) {\n            build.checkForErrors(context, layer);\n        }\n\n        return deferred.promise.then(function () {\n            //Reset config\n            if (module.override && baseLoaderConfig) {\n                require(copyConfig(baseLoaderConfig));\n            }\n\n            build.checkForErrors(context, layer);\n\n            return layer;\n        });\n    };\n\n    build.checkForErrors = function (context, layer) {\n        //Check to see if it all loaded. If not, then throw, and give\n        //a message on what is left.\n        var id, prop, mod, idParts, pluginId, pluginResources,\n            errMessage = '',\n            failedPluginMap = {},\n            failedPluginIds = [],\n            errIds = [],\n            errUrlMap = {},\n            errUrlConflicts = {},\n            hasErrUrl = false,\n            hasUndefined = false,\n            defined = context.defined,\n            registry = context.registry;\n\n        function populateErrUrlMap(id, errUrl, skipNew) {\n            // Loader plugins do not have an errUrl, so skip them.\n            if (!errUrl) {\n                return;\n            }\n\n            if (!skipNew) {\n                errIds.push(id);\n            }\n\n            if (errUrlMap[errUrl]) {\n                hasErrUrl = true;\n                //This error module has the same URL as another\n                //error module, could be misconfiguration.\n                if (!errUrlConflicts[errUrl]) {\n                    errUrlConflicts[errUrl] = [];\n                    //Store the original module that had the same URL.\n                    errUrlConflicts[errUrl].push(errUrlMap[errUrl]);\n                }\n                errUrlConflicts[errUrl].push(id);\n            } else if (!skipNew) {\n                errUrlMap[errUrl] = id;\n            }\n        }\n\n        for (id in registry) {\n            if (hasProp(registry, id) && id.indexOf('_@r') !== 0) {\n                hasUndefined = true;\n                mod = getOwn(registry, id);\n                idParts = id.split('!');\n                pluginId = idParts[0];\n\n                if (id.indexOf('_unnormalized') === -1 && mod && mod.enabled) {\n                    populateErrUrlMap(id, mod.map.url);\n                }\n\n                //Look for plugins that did not call load()\n                //But skip plugin IDs that were already inlined and called\n                //define() with a name.\n                if (!hasProp(layer.modulesWithNames, id) && idParts.length > 1) {\n                    if (falseProp(failedPluginMap, pluginId)) {\n                        failedPluginIds.push(pluginId);\n                    }\n                    pluginResources = failedPluginMap[pluginId];\n                    if (!pluginResources) {\n                        pluginResources = failedPluginMap[pluginId] = [];\n                    }\n                    pluginResources.push(id + (mod.error ? ': ' + mod.error : ''));\n                }\n            }\n        }\n\n        // If have some modules that are not defined/stuck in the registry,\n        // then check defined modules for URL overlap.\n        if (hasUndefined) {\n            for (id in defined) {\n                if (hasProp(defined, id) && id.indexOf('!') === -1) {\n                    populateErrUrlMap(id, require.toUrl(id) + '.js', true);\n                }\n            }\n        }\n\n        if (errIds.length || failedPluginIds.length) {\n            if (failedPluginIds.length) {\n                errMessage += 'Loader plugin' +\n                    (failedPluginIds.length === 1 ? '' : 's') +\n                    ' did not call ' +\n                    'the load callback in the build:\\n' +\n                    failedPluginIds.map(function (pluginId) {\n                        var pluginResources = failedPluginMap[pluginId];\n                        return pluginId + ':\\n  ' + pluginResources.join('\\n  ');\n                    }).join('\\n') + '\\n';\n            }\n            errMessage += 'Module loading did not complete for: ' + errIds.join(', ');\n\n            if (hasErrUrl) {\n                errMessage += '\\nThe following modules share the same URL. This ' +\n                              'could be a misconfiguration if that URL only has ' +\n                              'one anonymous module in it:';\n                for (prop in errUrlConflicts) {\n                    if (hasProp(errUrlConflicts, prop)) {\n                        errMessage += '\\n' + prop + ': ' +\n                                      errUrlConflicts[prop].join(', ');\n                    }\n                }\n            }\n            throw new Error(errMessage);\n        }\n    };\n\n    build.createOverrideConfig = function (config, override) {\n        var cfg = copyConfig(config),\n            oride = copyConfig(override);\n\n        lang.eachProp(oride, function (value, prop) {\n            if (hasProp(build.objProps, prop)) {\n                //An object property, merge keys. Start a new object\n                //so that source object in config does not get modified.\n                cfg[prop] = {};\n                lang.mixin(cfg[prop], config[prop], true);\n                lang.mixin(cfg[prop], override[prop], true);\n            } else {\n                cfg[prop] = override[prop];\n            }\n        });\n\n        return cfg;\n    };\n\n    /**\n     * Uses the module build config object to create an flattened version\n     * of the module, with deep dependencies included.\n     *\n     * @param {Object} module the module object from the build config info.\n     *\n     * @param {Object} layer the layer object returned from build.traceDependencies.\n     *\n     * @param {Object} the build config object.\n     *\n     * @returns {Object} with two properties: \"text\", the text of the flattened\n     * module, and \"buildText\", a string of text representing which files were\n     * included in the flattened module text.\n     */\n    build.flattenModule = function (module, layer, config) {\n        var fileContents, sourceMapGenerator,\n            sourceMapBase,\n            buildFileContents = '';\n\n        return prim().start(function () {\n            var reqIndex, currContents, fileForSourceMap,\n                moduleName, shim, packageName,\n                parts, builder, writeApi,\n                namespace, namespaceWithDot, stubModulesByName,\n                context = layer.context,\n                onLayerEnds = [],\n                onLayerEndAdded = {},\n                pkgsMainMap = {};\n\n            //Use override settings, particularly for pragmas\n            //Do this before the var readings since it reads config values.\n            if (module.override) {\n                config = build.createOverrideConfig(config, module.override);\n            }\n\n            namespace = config.namespace || '';\n            namespaceWithDot = namespace ? namespace + '.' : '';\n            stubModulesByName = (module.stubModules && module.stubModules._byName) || {};\n\n            //Start build output for the module.\n            module.onCompleteData = {\n                name: module.name,\n                path: (config.dir ? module._buildPath.replace(config.dir, \"\") : module._buildPath),\n                included: []\n            };\n\n            buildFileContents += \"\\n\" +\n                                  module.onCompleteData.path +\n                                 \"\\n----------------\\n\";\n\n            //If there was an existing file with require in it, hoist to the top.\n            if (layer.existingRequireUrl) {\n                reqIndex = layer.buildFilePaths.indexOf(layer.existingRequireUrl);\n                if (reqIndex !== -1) {\n                    layer.buildFilePaths.splice(reqIndex, 1);\n                    layer.buildFilePaths.unshift(layer.existingRequireUrl);\n                }\n            }\n\n            if (config.generateSourceMaps) {\n                sourceMapBase = config.dir || config.baseUrl;\n                if (module._buildPath === 'FUNCTION') {\n                    fileForSourceMap = (module.name || module.include[0] || 'FUNCTION') + '.build.js';\n                } else if (config.out) {\n                    fileForSourceMap = module._buildPath.split('/').pop();\n                } else {\n                    fileForSourceMap = module._buildPath.replace(sourceMapBase, '');\n                }\n                sourceMapGenerator = new SourceMapGenerator({\n                    file: fileForSourceMap\n                });\n            }\n\n            //Create a reverse lookup for packages main module IDs to their package\n            //names, useful for knowing when to write out define() package main ID\n            //adapters.\n            lang.eachProp(layer.context.config.pkgs, function(value, prop) {\n                pkgsMainMap[value] = prop;\n            });\n\n            //Write the built module to disk, and build up the build output.\n            fileContents = \"\";\n            if (config.wrap && config.wrap.__startMap) {\n                config.wrap.__startMap.forEach(function (wrapFunction) {\n                    fileContents = wrapFunction(fileContents, config, sourceMapGenerator);\n                });\n            }\n\n            return prim.serial(layer.buildFilePaths.map(function (path) {\n                return function () {\n                    var singleContents = '';\n\n                    moduleName = layer.buildFileToModule[path];\n\n                    //If the moduleName is a package main, then hold on to the\n                    //packageName in case an adapter needs to be written.\n                    packageName = getOwn(pkgsMainMap, moduleName);\n\n                    return prim().start(function () {\n                        //Figure out if the module is a result of a build plugin, and if so,\n                        //then delegate to that plugin.\n                        parts = context.makeModuleMap(moduleName);\n                        builder = parts.prefix && getOwn(context.defined, parts.prefix);\n                        if (builder) {\n                            if (builder.onLayerEnd && falseProp(onLayerEndAdded, parts.prefix)) {\n                                onLayerEnds.push(builder);\n                                onLayerEndAdded[parts.prefix] = true;\n                            }\n\n                            if (builder.write) {\n                                writeApi = function (input) {\n                                    singleContents += \"\\n\" + addSemiColon(input, config);\n                                    if (config.onBuildWrite) {\n                                        singleContents = config.onBuildWrite(moduleName, path, singleContents);\n                                    }\n                                };\n                                writeApi.asModule = function (moduleName, input) {\n                                    singleContents += \"\\n\" +\n                                        addSemiColon(build.toTransport(namespace, moduleName, path, input, layer, {\n                                            useSourceUrl: layer.context.config.useSourceUrl\n                                        }), config);\n                                    if (config.onBuildWrite) {\n                                        singleContents = config.onBuildWrite(moduleName, path, singleContents);\n                                    }\n                                };\n\n                                builder.write(parts.prefix, parts.name, writeApi, {\n                                    name: module.onCompleteData.name,\n                                    path: module.onCompleteData.path\n                                });\n                            }\n                            return;\n                        } else {\n                            return prim().start(function () {\n                                if (hasProp(stubModulesByName, moduleName)) {\n                                    //Just want to insert a simple module definition instead\n                                    //of the source module. Useful for plugins that inline\n                                    //all their resources.\n                                    if (hasProp(layer.context.plugins, moduleName)) {\n                                        //Slightly different content for plugins, to indicate\n                                        //that dynamic loading will not work.\n                                        return 'define({load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});';\n                                    } else {\n                                        return 'define({});';\n                                    }\n                                } else {\n                                    return require._cacheReadAsync(path);\n                                }\n                            }).then(function (text) {\n                                var hasPackageName;\n\n                                currContents = text;\n\n                                if (config.cjsTranslate &&\n                                    (!config.shim || !lang.hasProp(config.shim, moduleName))) {\n                                    currContents = commonJs.convert(path, currContents);\n                                }\n\n                                if (config.onBuildRead) {\n                                    currContents = config.onBuildRead(moduleName, path, currContents);\n                                }\n\n                                if (packageName) {\n                                    hasPackageName = (packageName === parse.getNamedDefine(currContents));\n                                }\n\n                                if (namespace) {\n                                    currContents = pragma.namespace(currContents, namespace);\n                                }\n\n                                currContents = build.toTransport(namespace, moduleName, path, currContents, layer, {\n                                    useSourceUrl: config.useSourceUrl\n                                });\n\n                                if (packageName && !hasPackageName) {\n                                    currContents = addSemiColon(currContents, config) + '\\n';\n                                    currContents += namespaceWithDot + \"define('\" +\n                                                    packageName + \"', ['\" + moduleName +\n                                                    \"'], function (main) { return main; });\\n\";\n                                }\n\n                                if (config.onBuildWrite) {\n                                    currContents = config.onBuildWrite(moduleName, path, currContents);\n                                }\n\n                                //Semicolon is for files that are not well formed when\n                                //concatenated with other content.\n                                singleContents += addSemiColon(currContents, config);\n                            });\n                        }\n                    }).then(function () {\n                        var shimDeps, shortPath = path.replace(config.dir, \"\");\n\n                        module.onCompleteData.included.push(shortPath);\n                        buildFileContents += shortPath + \"\\n\";\n\n                        //Some files may not have declared a require module, and if so,\n                        //put in a placeholder call so the require does not try to load them\n                        //after the module is processed.\n                        //If we have a name, but no defined module, then add in the placeholder.\n                        if (moduleName && falseProp(layer.modulesWithNames, moduleName) && !config.skipModuleInsertion) {\n                            shim = config.shim && (getOwn(config.shim, moduleName) || (packageName && getOwn(config.shim, packageName)));\n                            if (shim) {\n                                shimDeps = lang.isArray(shim) ? shim : shim.deps;\n                                if (config.wrapShim) {\n\n                                    singleContents = '(function(root) {\\n' +\n                                                     namespaceWithDot + 'define(\"' + moduleName + '\", ' +\n                                                     (shimDeps && shimDeps.length ?\n                                                            build.makeJsArrayString(shimDeps) + ', ' : '[], ') +\n                                                    'function() {\\n' +\n                                                    '  return (function() {\\n' +\n                                                             singleContents +\n                                                             // Start with a \\n in case last line is a comment\n                                                             // in the singleContents, like a sourceURL comment.\n                                                             '\\n' + (shim.exportsFn ? shim.exportsFn() : '') +\n                                                             '\\n' +\n                                                    '  }).apply(root, arguments);\\n' +\n                                                    '});\\n' +\n                                                    '}(this));\\n';\n                                } else {\n                                    singleContents += '\\n' + namespaceWithDot + 'define(\"' + moduleName + '\", ' +\n                                                     (shimDeps && shimDeps.length ?\n                                                            build.makeJsArrayString(shimDeps) + ', ' : '') +\n                                                     (shim.exportsFn ? shim.exportsFn() : 'function(){}') +\n                                                     ');\\n';\n                                }\n                            } else {\n                                singleContents += '\\n' + namespaceWithDot + 'define(\"' + moduleName + '\", function(){});\\n';\n                            }\n                        }\n\n                        //Add line break at end of file, instead of at beginning,\n                        //so source map line numbers stay correct, but still allow\n                        //for some space separation between files in case ASI issues\n                        //for concatenation would cause an error otherwise.\n                        singleContents += '\\n';\n\n                        //Add to the source map and to the final contents\n                        fileContents = appendToFileContents(fileContents, singleContents, path, config, module,\n                                                            sourceMapGenerator);\n                    });\n                };\n            })).then(function () {\n                if (onLayerEnds.length) {\n                    onLayerEnds.forEach(function (builder, index) {\n                        var path;\n                        if (typeof module.out === 'string') {\n                            path = module.out;\n                        } else if (typeof module._buildPath === 'string') {\n                            path = module._buildPath;\n                        }\n                        builder.onLayerEnd(function (input) {\n                            fileContents =\n                                appendToFileContents(fileContents, \"\\n\" + addSemiColon(input, config),\n                                                     'onLayerEnd' + index + '.js', config, module, sourceMapGenerator);\n                        }, {\n                            name: module.name,\n                            path: path\n                        });\n                    });\n                }\n\n                if (module.create) {\n                    //The ID is for a created layer. Write out\n                    //a module definition for it in case the\n                    //built file is used with enforceDefine\n                    //(#432)\n                    fileContents =\n                        appendToFileContents(fileContents, '\\n' + namespaceWithDot + 'define(\"' + module.name +\n                                                           '\", function(){});\\n', 'module-create.js', config, module,\n                                             sourceMapGenerator);\n                }\n\n                //Add a require at the end to kick start module execution, if that\n                //was desired. Usually this is only specified when using small shim\n                //loaders like almond.\n                if (module.insertRequire) {\n                    fileContents =\n                        appendToFileContents(fileContents, '\\n' + namespaceWithDot + 'require([\"' + module.insertRequire.join('\", \"') +\n                                                           '\"]);\\n', 'module-insertRequire.js', config, module,\n                                             sourceMapGenerator);\n                }\n            });\n        }).then(function () {\n            if (config.wrap && config.wrap.__endMap) {\n                config.wrap.__endMap.forEach(function (wrapFunction) {\n                    fileContents = wrapFunction(fileContents, config, sourceMapGenerator);\n                });\n            }\n            return {\n                text: fileContents,\n                buildText: buildFileContents,\n                sourceMap: sourceMapGenerator ?\n                              JSON.stringify(sourceMapGenerator.toJSON(), null, '  ') :\n                              undefined\n            };\n        });\n    };\n\n    //Converts an JS array of strings to a string representation.\n    //Not using JSON.stringify() for Rhino's sake.\n    build.makeJsArrayString = function (ary) {\n        return '[\"' + ary.map(function (item) {\n            //Escape any double quotes, backslashes\n            return lang.jsEscape(item);\n        }).join('\",\"') + '\"]';\n    };\n\n    build.toTransport = function (namespace, moduleName, path, contents, layer, options) {\n        var baseUrl = layer && layer.context.config.baseUrl;\n\n        function onFound(info) {\n            //Only mark this module as having a name if not a named module,\n            //or if a named module and the name matches expectations.\n            if (layer && (info.needsId || info.foundId === moduleName)) {\n                layer.modulesWithNames[moduleName] = true;\n            }\n        }\n\n        //Convert path to be a local one to the baseUrl, useful for\n        //useSourceUrl.\n        if (baseUrl) {\n            path = path.replace(baseUrl, '');\n        }\n\n        return transform.toTransport(namespace, moduleName, path, contents, onFound, options);\n    };\n\n    return build;\n});\n\n    }\n\n\n    /**\n     * Sets the default baseUrl for requirejs to be directory of top level\n     * script.\n     */\n    function setBaseUrl(fileName) {\n        //Use the file name's directory as the baseUrl if available.\n        dir = fileName.replace(/\\\\/g, '/');\n        if (dir.indexOf('/') !== -1) {\n            dir = dir.split('/');\n            dir.pop();\n            dir = dir.join('/');\n            //Make sure dir is JS-escaped, since it will be part of a JS string.\n            exec(\"require({baseUrl: '\" + dir.replace(/[\\\\\"']/g, '\\\\$&') + \"'});\");\n        }\n    }\n\n    function createRjsApi() {\n        //Create a method that will run the optimzer given an object\n        //config.\n        requirejs.optimize = function (config, callback, errback) {\n            if (!loadedOptimizedLib) {\n                loadLib();\n                loadedOptimizedLib = true;\n            }\n\n            //Create the function that will be called once build modules\n            //have been loaded.\n            var runBuild = function (build, logger, quit) {\n                //Make sure config has a log level, and if not,\n                //make it \"silent\" by default.\n                config.logLevel = config.hasOwnProperty('logLevel') ?\n                                  config.logLevel : logger.SILENT;\n\n                //Reset build internals first in case this is part\n                //of a long-running server process that could have\n                //exceptioned out in a bad state. It is only defined\n                //after the first call though.\n                if (requirejs._buildReset) {\n                    requirejs._buildReset();\n                    requirejs._cacheReset();\n                }\n\n                function done(result) {\n                    //And clean up, in case something else triggers\n                    //a build in another pathway.\n                    if (requirejs._buildReset) {\n                        requirejs._buildReset();\n                        requirejs._cacheReset();\n                    }\n\n                    // Ensure errors get propagated to the errback\n                    if (result instanceof Error) {\n                      throw result;\n                    }\n\n                    return result;\n                }\n\n                errback = errback || function (err) {\n                    // Using console here since logger may have\n                    // turned off error logging. Since quit is\n                    // called want to be sure a message is printed.\n                    console.log(err);\n                    quit(1);\n                };\n\n                build(config).then(done, done).then(callback, errback);\n            };\n\n            requirejs({\n                context: 'build'\n            }, ['build', 'logger', 'env!env/quit'], runBuild);\n        };\n\n        requirejs.tools = {\n            useLib: function (contextName, callback) {\n                if (!callback) {\n                    callback = contextName;\n                    contextName = 'uselib';\n                }\n\n                if (!useLibLoaded[contextName]) {\n                    loadLib();\n                    useLibLoaded[contextName] = true;\n                }\n\n                var req = requirejs({\n                    context: contextName\n                });\n\n                req(['build'], function () {\n                    callback(req);\n                });\n            }\n        };\n\n        requirejs.define = define;\n    }\n\n    //If in Node, and included via a require('requirejs'), just export and\n    //THROW IT ON THE GROUND!\n    if (env === 'node' && reqMain !== module) {\n        setBaseUrl(path.resolve(reqMain ? reqMain.filename : '.'));\n\n        createRjsApi();\n\n        module.exports = requirejs;\n        return;\n    } else if (env === 'browser') {\n        //Only option is to use the API.\n        setBaseUrl(location.href);\n        createRjsApi();\n        return;\n    } else if ((env === 'rhino' || env === 'xpconnect') &&\n            //User sets up requirejsAsLib variable to indicate it is loaded\n            //via load() to be used as a library.\n            typeof requirejsAsLib !== 'undefined' && requirejsAsLib) {\n        //This script is loaded via rhino's load() method, expose the\n        //API and get out.\n        setBaseUrl(fileName);\n        createRjsApi();\n        return;\n    }\n\n    if (commandOption === 'o') {\n        //Do the optimizer work.\n        loadLib();\n\n        /*\n * Create a build.js file that has the build options you want and pass that\n * build file to this file to do the build. See example.build.js for more information.\n */\n\n/*jslint strict: false, nomen: false */\n/*global require: false */\n\nrequire({\n    baseUrl: require.s.contexts._.config.baseUrl,\n    //Use a separate context than the default context so that the\n    //build can use the default context.\n    context: 'build',\n    catchError: {\n        define: true\n    }\n},       ['env!env/args', 'env!env/quit', 'logger', 'build'],\nfunction (args, quit, logger, build) {\n    build(args).then(function () {}, function (err) {\n        logger.error(err);\n        quit(1);\n    });\n});\n\n\n    } else if (commandOption === 'v') {\n        console.log('r.js: ' + version +\n                    ', RequireJS: ' + this.requirejsVars.require.version +\n                    ', UglifyJS: 2.8.29');\n    } else if (commandOption === 'convert') {\n        loadLib();\n\n        this.requirejsVars.require(['env!env/args', 'commonJs', 'env!env/print'],\n            function (args, commonJs, print) {\n\n                var srcDir, outDir;\n                srcDir = args[0];\n                outDir = args[1];\n\n                if (!srcDir || !outDir) {\n                    print('Usage: path/to/commonjs/modules output/dir');\n                    return;\n                }\n\n                commonJs.convertDir(args[0], args[1]);\n            });\n    } else {\n        //Just run an app\n\n        //Load the bundled libraries for use in the app.\n        if (commandOption === 'lib') {\n            loadLib();\n        }\n\n        setBaseUrl(fileName);\n\n        if (exists(fileName)) {\n            exec(readFile(fileName), fileName);\n        } else {\n            showHelp();\n        }\n    }\n\n}((typeof console !== 'undefined' ? console : undefined),\n    (typeof Packages !== 'undefined' || (typeof window === 'undefined' &&\n        typeof Components !== 'undefined' && Components.interfaces) ?\n        Array.prototype.slice.call(arguments, 0) : []),\n    (typeof readFile !== 'undefined' ? readFile : undefined)));\n"]},"metadata":{},"sourceType":"script"}